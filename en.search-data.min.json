[{"id":0,"href":"/OpenBBTerminal/terminal/common/qa/","title":"Introduction to the Quantitative Analysis Menu","parent":"Common Menus","content":"Quantitative analysis (QA) in finance is an approach that emphasizes mathematical and statistical analysis to help determine the value of a financial asset, such as a stock or option. The ultimate goal of financial quantitative analysis is to use quantifiable statistics and metrics to assist investors in making profitable investment decisions. Quantitative analysis is different from qualitative analysis, which looks at factors such as how companies are structured, the makeup of their management teams, and what their strengths and weaknesses are.\nThe Quantitative Analysis menu is a common menu to three asset classes:\nCrypto Forex Stocks How to use the Quantitative Analysis Menu Enter the menu, through one of the asset classes listed above, by entering qa in the Terminal. The ticker that is loaded before entering the menu will determine the timeframe for the analysis. To alter it, use the load function and pick a new --start and --end for the observation window. The QA functions target a specified column of the data. By default, this is returns. Use the pick command to chose a new target column.\nThe menu is divided into five categories of functions:\n Statistics Plots Rolling Metrics Risk Other  A summary of exportable statistics is displayed with the command, summary. The example here shows $APPL.\nA simple line chart for the target column as a time-series is called with the line command.\nOptional arguments to this command allows the user to draw and annotate on the chart.\n2022 Aug 08, 12:14 /stocks/qa/ $ line -h usage: line [--log] [-d] [--ml ML] [--ms MS] [-h] [--export EXPORT] Show line plot of selected data and allow to draw lines or highlight specific datetimes. options: --log Plot with y on log scale (default: False) -d, --draw Draw lines and annotate on the plot (default: False) --ml ML Draw vertical line markers to highlight certain events (default: ) --ms MS Draw scatter markers to highlight certain events (default: ) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about line' to access the related guide. 2022 Aug 08, 12:20 /stocks/qa/ $ pick high 2022 Aug 08, 12:20 /stocks/qa/ $ line --draw Click twice for annotation. Close window to keep using terminal. Annotation: Lower Highs Compare the beta between the loaded asset and another, using the -r flag to deviate from the defaulted comparison, $SPY.\n2022 Aug 08, 12:34 /stocks/qa/ $ beta -r MSFT Loading Daily MSFT stock with starting period 2019-08-05 for analysis. Most outputs are equipped with an --export flag, allowing the user to save the tables as a CSV, JSON, or XLSX file. The exports can then be imported into other menus like Econometrics. Additional information on each specific command is displayed by attaching -h to it.\nExamples Box and Whisker plots for monthly and yearly scales:\n2022 Aug 08, 12:47 /stocks/qa/ $ bw 2022 Aug 08, 12:47 /stocks/qa/ $ bw -y Pick logret for rate of change to the returns of the asset:\n2022 Aug 08, 12:47 /stocks/qa/ $ pick logret 2022 Aug 08, 12:51 /stocks/qa/ $ bw -y decompose shows a visual representation of trend and seasonality.\nskew shows the asymmetric distribution over a specified window (default of 14).\nskew -w 5 Changing the window to five takes out some of the smoothness:\nSharpe Ratio over time, sh:\ncdf calls the cumulative distribution function. Apple over the long term exhibits a steep curve.\nCompared with Apple, Amazon is a more gently sloping s-curve.\ncapm shows the stock\u0026rsquo;s risk against the market\u0026rsquo;s. $AAPL carries the risk of whatever happens to the markets, happens to the stock.\n2022 Aug 08, 13:51 /stocks/qa/ $ capm Beta: 1.15 Systematic Risk: 46.40% Unsystematic Risk: 53.60% Read more about this subject on Wikipedia: https://en.wikipedia.org/wiki/Quantitative_analysis_(finance)\nBack to the Getting Started Guide\n"},{"id":1,"href":"/OpenBBTerminal/terminal/stocks/fa/","title":"Introduction to the Fundamental Analysis Menu","parent":"Introduction to Stocks","content":"The Fundamental Analysis menu is a set of tools for measuring a company\u0026rsquo;s intrinsic value, relative to the market price. Functions within this menu are generally microeconomic factors. The purpose is to harness data reported in financial statements and estimate the tangible value of a share. Revenue of companies with a long public history are easier to forecast, and the consensus of many analysts will indicate the level of confidence in future expectations. When people refer to \u0026ldquo;P/E ratios\u0026rdquo;, \u0026ldquo;multiples\u0026rdquo;, or \u0026ldquo;institutional holders\u0026rdquo;, they are speaking of fundamentals. When people say, \u0026ldquo;\u0026hellip;this stock is detached from its fundamentals!\u0026rdquo;, they are talking about the balance sheet. In addition to these features, there are screeners to compare fundamentals across groups of companies.\nThere are three API tokens (free) required to use every feature in this menu:\n FMP Polygon Alpha Vantage  Set the obtained tokens in the terminal with the /keys menu. Refer to the Getting Started Guide for more information about this.\nHow to use the Fundamental Analysis Menu Enter the submenu from the Stocks Menu, with a ticker loaded.\nSome commands offer interpretations of the data, but, the majority are statements reported to the SEC. The data command is a table of basic statistics, including price.\n(🦋) /stocks/fa/ $ data Ticker Screener ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Values ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Company │ Smith \u0026amp; Wesson Brands, Inc. │ ├────────────────────┼──────────────────────────────┤ │ Sector │ Industrials │ ├────────────────────┼──────────────────────────────┤ │ Industry │ Aerospace \u0026amp; Defense │ ├────────────────────┼──────────────────────────────┤ │ Country │ USA │ ├────────────────────┼──────────────────────────────┤ │ Website │ https://www.smith-wesson.com │ ├────────────────────┼──────────────────────────────┤ │ P/E │ 2.65 │ ├────────────────────┼──────────────────────────────┤ │ EPS (ttm) │ 4.95 │ ├────────────────────┼──────────────────────────────┤ │ Insider Own │ 0.90% │ ├────────────────────┼──────────────────────────────┤ │ Shs Outstand │ 46.76M │ ├────────────────────┼──────────────────────────────┤ │ Perf Week │ -9.53% │ ├────────────────────┼──────────────────────────────┤ │ Market Cap │ 601.03M │ ├────────────────────┼──────────────────────────────┤ │ Forward P/E │ 5.77 │ ├────────────────────┼──────────────────────────────┤ │ EPS next Y │ 2.27 │ ├────────────────────┼──────────────────────────────┤ │ Insider Trans │ 0.08% │ ├────────────────────┼──────────────────────────────┤ │ Shs Float │ 44.50M │ ├────────────────────┼──────────────────────────────┤ │ Perf Month │ -6.43% │ ├────────────────────┼──────────────────────────────┤ │ Income │ 247.30M │ ├────────────────────┼──────────────────────────────┤ │ PEG │ 0.18 │ ├────────────────────┼──────────────────────────────┤ │ EPS next Q │ 0.69 │ ├────────────────────┼──────────────────────────────┤ │ Inst Own │ 58.20% │ ├────────────────────┼──────────────────────────────┤ │ Short Float │ 5.95% │ ├────────────────────┼──────────────────────────────┤ │ Perf Quarter │ -20.36% │ ├────────────────────┼──────────────────────────────┤ │ Sales │ 1.01B │ ├────────────────────┼──────────────────────────────┤ │ P/S │ 0.60 │ ├────────────────────┼──────────────────────────────┤ │ EPS this Y │ 774.90% │ ├────────────────────┼──────────────────────────────┤ │ Inst Trans │ 1.24% │ ├────────────────────┼──────────────────────────────┤ │ Short Ratio │ 3.33 │ ├────────────────────┼──────────────────────────────┤ │ Perf Half Y │ -23.17% │ ├────────────────────┼──────────────────────────────┤ │ Book/sh │ 6.98 │ ├────────────────────┼──────────────────────────────┤ │ P/B │ 1.88 │ ├────────────────────┼──────────────────────────────┤ │ EPS growth next Y │ -44.70% │ ├────────────────────┼──────────────────────────────┤ │ ROA │ 51.70% │ ├────────────────────┼──────────────────────────────┤ │ Target Price │ 21.67 │ ├────────────────────┼──────────────────────────────┤ │ Perf Year │ -54.61% │ ├────────────────────┼──────────────────────────────┤ │ Cash/sh │ 2.34 │ ├────────────────────┼──────────────────────────────┤ │ P/C │ 5.60 │ ├────────────────────┼──────────────────────────────┤ │ EPS next 5Y │ 15.00% │ ├────────────────────┼──────────────────────────────┤ │ ROE │ 79.70% │ ├────────────────────┼──────────────────────────────┤ │ 52W Range │ 13.17 - 39.61 │ ├────────────────────┼──────────────────────────────┤ │ Perf YTD │ -26.40% │ ├────────────────────┼──────────────────────────────┤ │ Dividend │ 0.32 │ ├────────────────────┼──────────────────────────────┤ │ P/FCF │ 3.03 │ ├────────────────────┼──────────────────────────────┤ │ EPS past 5Y │ 21.20% │ ├────────────────────┼──────────────────────────────┤ │ ROI │ 80.10% │ ├────────────────────┼──────────────────────────────┤ ...continued... analysis reads SEC filings with NLP and extracts the most important statements.\n(🦋) /stocks/fa/ $ analysis DISCUSSION AND ANALYSIS: Other products and services revenue decreased $874,000, or 3.9%, from the prior year comparable period, primarily because of decreased sales of component parts and handcuffs, partially offset by an increase in sales for business-to-business services. Cash provided by operating activities was $105.4 million for the six months ended October 31, 2021 compared with $138.1 million of cash generated for the six months ended October 31, 2020. We recorded capital expenditures of $10.1 million for the six months ended October 31, 2021, $4.9 million lower than the prior year comparable period, which included machinery and equipment utilized to increase capacity. Financing Activities Cash used in financing activities was $48.8 million for the six months ended October 31, 2021 compared with $188.7 million for the six months ended October 31, 2020. During the six months ending October 31, 2021, we paid $505,500 in principal payments relating to this finance lease. With the completion of the Separation on August 24, 2020, we entered into a sublease for 59.0% of this facility under the same terms as the master lease. Selling, marketing, and distribution expenses decreased $191,000, primarily as a result of decreased compensation-related expenses and lower spending on targeted customer promotions, partially offset by increased marketing related expenses and increased travel and entertainment costs. This is primarily due to lower spending on capacity increases offset by new product development and repair and replacement of equipment. Additionally, as it relates to the Relocation, we expect to incur capital expenditures in connection with the construction and equipping of the new facility in an aggregate amount of not less than $120.0 million on or before December 31, 2025. The following table sets forth certain cash flow information for the six months ended October 31, 2021 and 2020 (dollars in thousands): Operating Activities On an annual basis, operating activities generally represent the principal source of our cash flow. The revolving line provides for availability for general corporate purposes, with borrowings to bear interest at either the Base Rate or LIBOR rate, plus an applicable margin based on our consolidated leverage ratio, as of October 31, 2021. In response to a Springing Lien Triggering Event (as defined in the credit agreement), we would be required to enter into certain documents that create in favor of TD Bank, N. A., as administrative agent, and the lenders party to such documents as legal, valid, and enforceable first priority lien on the collateral described therein. warnings uses Sean Seah\u0026rsquo;s signals to highlight certain of qualities a business.\n(🦋) /stocks/fa/ $ warnings Sean Seah Warnings ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ 2017 ┃ 2018 ┃ 2019 ┃ 2020 ┃ 2021 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ EPS (Basic) │ 2.29 │ 0.37 │ 0.34 │ 1.11 │ 4.62 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Net Income │ 127850000 │ 20130000 │ 18410000 │ 27650000 │ 243570000 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Interest Expense │ 8580000 │ 11170000 │ 9350000 │ 11630000 │ 3920000 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ EBITDA │ 253030000 │ 78790000 │ 101910000 │ 85990000 │ 358720000 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Total Shareholders' Equity │ 393160000 │ 422150000 │ 444440000 │ 387120000 │ 266380000 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Liabilities \u0026amp; Shareholders' Equity │ 788040000 │ 745060000 │ 766790000 │ 729520000 │ 446390000 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Long-Term Debt │ 210660000 │ 202300000 │ 194830000 │ 199040000 │ 42420000 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ ROE │ 0.33 │ 0.05 │ 0.04 │ 0.07 │ 0.91 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Interest Coverage Ratio │ 29.49 │ 7.05 │ 10.9 │ 7.39 │ 91.51 │ ├────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ ROA │ 0.16 │ 0.03 │ 0.02 │ 0.04 │ 0.55 │ └────────────────────────────────────┴────────────┴────────────┴────────────┴────────────┴────────────┘ Warnings: No consistent historical earnings per share NOT consistently high return on equity NOT consistently high return on assets 5x Net Income \u0026lt; Long-Term Debt Historical market cap (mktcap) is a different way to look at a company\u0026rsquo;s value over time. It can be useful for smoothing a profile where the number of outstanding shares is dynamic.\nThere are optional arguments for every command, attach the -h argument to show the help dialogue.\nThe FMP Submenu This submenu utilizes the Financial Modeling Prep API exclusively. The information provided here may seem redundant at first glance; however, consulting a diverse set of sources will lead to better-informed decisions.\nenterprise displays the components of the enterprise value.\n(🦋) /stocks/fa/fmp/ $ enterprise SWBI Enterprise ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ 2021 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ Symbol │ SWBI │ ├─────────────────────────────────┼───────────┤ │ Stock price │ 21.260 │ ├─────────────────────────────────┼───────────┤ │ Number of shares │ 54.613 M │ ├─────────────────────────────────┼───────────┤ │ Market capitalization │ 1.161 B │ ├─────────────────────────────────┼───────────┤ │ Add total debt │ 41.182 M │ ├─────────────────────────────────┼───────────┤ │ Minus cash and cash equivalents │ 113.017 M │ ├─────────────────────────────────┼───────────┤ │ Enterprise value │ 1.089 B │ └─────────────────────────────────┴───────────┘ Use growth to focus on the rate of change.\n(🦋) /stocks/fa/fmp/ $ growth SWBI Growth ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ 2021 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━┩ │ Period │ FY │ ├──────────────────────────────────────────────┼────────┤ │ Revenue growth │ 0.561 │ ├──────────────────────────────────────────────┼────────┤ │ Gross profit growth │ 0.913 │ ├──────────────────────────────────────────────┼────────┤ │ Ebitgrowth │ 7.547 │ ├──────────────────────────────────────────────┼────────┤ │ Operating income growth │ 7.547 │ ├──────────────────────────────────────────────┼────────┤ │ Net income growth │ 5.116 │ ├──────────────────────────────────────────────┼────────┤ │ Epsgrowth │ 5.162 │ ├──────────────────────────────────────────────┼────────┤ │ Epsdiluted growth │ 5.099 │ ├──────────────────────────────────────────────┼────────┤ │ Weighted average shares growth │ -0.007 │ ├──────────────────────────────────────────────┼────────┤ │ Weighted average shares diluted growth │ 0.007 │ ├──────────────────────────────────────────────┼────────┤ │ Dividendsper share growth │ 0 │ ├──────────────────────────────────────────────┼────────┤ │ Operating cash flow growth │ 2.321 │ ├──────────────────────────────────────────────┼────────┤ │ Free cash flow growth │ 2.648 │ ├──────────────────────────────────────────────┼────────┤ │ Ten y revenue growth per share │ 1.997 │ ├──────────────────────────────────────────────┼────────┤ │ Five y revenue growth per share │ 0.469 │ ├──────────────────────────────────────────────┼────────┤ │ Three y revenue growth per share │ 0.728 │ ├──────────────────────────────────────────────┼────────┤ ...continued... Examples cal will show the upcoming earnings date, and the averages of same-period past-performance.\n(🦋) /stocks/fa/ $ cal SWBI Calendar Earnings ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ Earnings Date ┃ Earnings Average ┃ Earnings Low ┃ Earnings High ┃ Revenue Average ┃ Revenue Low ┃ Revenue High ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ 06/23/2022 │ 0.690 │ 0.640 │ 0.730 │ 179.850 M │ 176.840 M │ 185.700 M │ └───────────────┴──────────────────┴──────────────┴───────────────┴─────────────────┴─────────────┴──────────────┘ dupont is a chart detailing the components of a company\u0026rsquo;s return on equity.\nDiscounted cash flow statements are popular as a revenue/value forecasting tool. dcf will automatically prepare one as a spreadsheet, where the factors can be modified.\nStock splits are an important part of the historical price-per-share. While they are supposed to be market cap neutral, underlying fundamentals will drive the corporate actions.\nSometimes a company must do a reverse-split to save its listing from collapsing share prices.\nUse the command shrs to see a quick breakdown of the ownership and major shareholders.\n(🦋) /stocks/fa/ $ shrs SWBI Major Holders ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ 2.22% │ Percentage of Shares Held by All Insider │ ├────────┼───────────────────────────────────────────┤ │ 58.25% │ Percentage of Shares Held by Institutions │ ├────────┼───────────────────────────────────────────┤ │ 59.57% │ Percentage of Float Held by Institutions │ ├────────┼───────────────────────────────────────────┤ │ 293 │ Number of Institutions Holding Shares │ └────────┴───────────────────────────────────────────┘ SWBI Institutional Holders ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┓ ┃ Holder ┃ Shares ┃ Date Reported ┃ Stake ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━┩ │ Blackrock Inc. │ 3.779 M │ 2022-03-30 │ 8.30 % │ 57.171 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Vanguard Group, Inc. (The) │ 3.519 M │ 2022-03-30 │ 7.73 % │ 53.245 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Renaissance Technologies, LLC │ 2.721 M │ 2022-03-30 │ 5.98 % │ 41.174 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Dimensional Fund Advisors LP │ 1.947 M │ 2022-03-30 │ 4.28 % │ 29.463 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ State Street Corporation │ 891.078 K │ 2022-03-30 │ 1.96 % │ 13.482 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Geode Capital Management, LLC │ 837.121 K │ 2022-03-30 │ 1.84 % │ 12.666 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Prudential Financial, Inc. │ 713.909 K │ 2022-03-30 │ 1.57 % │ 10.801 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ First Trust Advisors LP │ 559.992 K │ 2022-03-30 │ 1.23 % │ 8.473 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Charles Schwab Investment Management, Inc. │ 553.310 K │ 2022-03-30 │ 1.22 % │ 8.372 M │ ├────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Jupiter Asset Management Limited │ 486.853 K │ 2022-03-30 │ 1.07 % │ 7.366 M │ └────────────────────────────────────────────┴───────────┴───────────────┴────────┴──────────┘ SWBI Mutual Fund Holders ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┓ ┃ Holder ┃ Shares ┃ Date Reported ┃ Stake ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━┩ │ Vanguard Total Stock Market Index Fund │ 1.366 M │ 2022-03-30 │ 3.00 % │ 20.664 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ iShares Russell 2000 ETF │ 1.025 M │ 2022-04-29 │ 2.25 % │ 14.079 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Vanguard Extended Market Index Fund │ 635.273 K │ 2022-03-30 │ 1.40 % │ 9.612 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Vanguard Small-Cap Index Fund │ 611.300 K │ 2022-03-30 │ 1.34 % │ 9.249 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ iShares U.S. Aerospace \u0026amp; Defense ETF │ 592.471 K │ 2022-05-30 │ 1.30 % │ 9.171 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ First Trust SMID Cap Rising Dividend Achievers ETF │ 588.837 K │ 2022-05-30 │ 1.29 % │ 9.115 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ iShares Russell 2000 Growth ETF │ 413.637 K │ 2022-05-30 │ 0.91 % │ 6.403 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Vanguard Small Cap Value Index Fund │ 393.738 K │ 2022-03-30 │ 0.87 % │ 5.957 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ DFA U.S. Small Cap Series │ 388.776 K │ 2022-01-30 │ 0.85 % │ 6.640 M │ ├────────────────────────────────────────────────────┼───────────┼───────────────┼────────┼──────────┤ │ Fidelity Small Cap Index Fund │ 359.342 K │ 2022-03-30 │ 0.79 % │ 5.437 M │ └────────────────────────────────────────────────────┴───────────┴───────────────┴────────┴──────────┘ Financial statements default to yearly reports, adding -q will flag for quarterly statements with -l n being the number of quarters to show.\nThe consistent delivery of dividends that increase over time is usually a good sign for investors. Mature companies with predictable revenue like utilities and regional banks, but also funds, pay regular dividends. divs will show the sixteen most recent dividend payments and the date of payment as a table. divs -p will display a chart of the complete dividend history. The graph below shows the dividend history of the SPDR Select Energy Sector Fund, XLE.\nTo play a demonstration of this menu in the Terminal first, acquire and enter the three API keys named near the top of this page, then run exe fa_demo.openbb from the main menu.\nBack to the Stocks Menu Guide\n"},{"id":2,"href":"/OpenBBTerminal/terminal/common/ta/","title":"Introduction to the Technical Analysis Menu","parent":"Common Menus","content":"The Technical Analysis menu offers the user a suite of tools for analyzing the technical components of an asset\u0026rsquo;s trading history. The menu can be found in most wings of the Terminal:\n Crypto Stocks ETF ForEx  The commands are divided by categories that define their purpose for general-use:\n Overlap - Moving averages Momentum - Oscillating signals Trend - Directional strength Volatility - Width of the price bands Volume - Singling out volume Custom - Fibonacci retracements  All commands in this menu will rely on the interval and window chosen when loading an asset for analysis. Refer to the directory tree on the left side of the page for information on individual commands. To get a better understanding of what these features are, and the formulas behind them, a number of sources should be consulted; but, a good starting point is Investopedia.\nHow to use the Technical Analysis Menu To begin, enter the menu from one of the menus listed above by entering ta.\nChoose a beginning and end date to see a volume-weighted average price chart of the loaded ticker. vwap --start 2022-01-01 --end 2022-06-17\nThe Fibonacci retracements are drawn with fib\nSee the on-balance volume for the time-period loaded.\nThe help dialogue for any feature is printed by attaching -h to the command.\nExamples recom \u0026amp; summary are commands available only with a stock loaded as the asset. summary is a text description of the technical conditions.\n(🦋) /stocks/ta/ $ summary MSFT price has changed 1.29% in the last 3 days and 1.09% yesterday. RSI is less than 30 and the indicator is pointing downwards. Asset is in the oversold area. MACD is in the Bearish area and the histogram is moving upwards. MSFT price is trading below the 200-day SMA line and the SMA is trending down. The asset price is between the Middle and the Lower Bollinger Bands. recom projects buy \u0026amp; sell signals for the short-term.\nBollinger Bands with a 1-minute resolution for AMZN - bbands\nThe Accumulation/Distribution line of AMZN - ad\nTo play a demonstration of this menu in the OpenBB Terminal run, exe ta_demo.openbb, from the main menu.\nBack to the Introduction to Stocks.\n"},{"id":3,"href":"/OpenBBTerminal/terminal/stocks/scr/","title":"Introduction to the Stock Screener","parent":"Introduction to Stocks","content":"The Stock Screener is a diverse tool for discovery. Screeners are typically deployed in the preliminary phase of research; they provide creative methods for finding individual companies meeting the criteria of the investment thesis. There are categories of statistics to use as metrics to sort the criteria defined in the preset file. The preset files are .ini files stored locally in the application folder: ~\\Applications\\OpenBB\\openbb_terminal\\stocks\\screener\\presets\\ and they can be modified in any text editor. Create custom presets and share them with the world!\nGet to the Stock Screener from the Stocks menu by typing scr and then pressing enter\nHow to use the Stock Screener The default preset is top_gainers. Use the commands view and set to select a new one. The file in the presets folder, template.ini, is a blank slate for creating something fresh. Modify individual parameters within the different presets to get more precision from a starting point. To get started, simply choose one of the categories to scour, like technical.\nThe columns can be sorted with the optional argument -s, and autocomplete will present a list of choices.\nTo see a description of each preset, use view, and autocomplete will allow the user to scroll presets with the arrow keys to set the choice.\nUnexpected results can be obtained through combining presets with the category of screen.\nExamples Using the modified_dremin preset and the financial category, then sorting for return-on-investment.\nSetting the preset to short_squeeze_scan and scanning with the ownership category.\nset triangle_ascending, show techincal \u0026amp; overview\nEnter exe stock_screener_demo.openbb from the main menu to play a demonstration of the Stock Screener in the Terminal.\nBack to the Introduction Guide to the Stocks Menu\n"},{"id":4,"href":"/OpenBBTerminal/terminal/stocks/ins/","title":"Introduction to the Insider Trading Menu","parent":"Introduction to Stocks","content":"The Insider Trading Menu has two general purposes:\n A stock screener for SEC Form 4 filings. Researching individual companies for executive and director transactions.  Navigate to the Insider Trading submenu from the stocks menu by typing ins and pressing enter. The features in this menu function only for companies registered with the SEC, that also trade in public markets.\nHow to use the Insider Trading Menu The menu is contains three groups of functions for:\n Setting, viewing presets for the filter, and screening. Using with individual stocks. Filtering all submitted SEC Form 4 records by defined metrics.  The last of these groups encompasses the majority of commands in the Insider Trading submenu. They are for scanning the entire market based on the description listed next to the command.\nlcb - Latest cluster buys:\nWith the --export argument attached, data from this menu can be exported as CSV, JSON, or XLSX files.\nlit - Latest insider trades from all filings:\ntispm - Top insider sales from the last month:\nview will list the available presets to use as a screener. The screener uses .ini files which can be modified by the user to create custom presets. Find them in the local installation folder, under: ~/OpenBB/openbb_terminal/stocks/insider/presets/. The default preset is whales, which targets trades over $500K in the last two weeks. Other included presets are for scanning individual industries as a group.\nThe set command is used to select a preset. Autocomplete will assist the user and the arrow keys can be used to make a choice. Use the file template.ini to build a custom preset. Changes made to an existing .ini file will be effective the next time the filter command is run.\nfilter will screen based on the selected preset.\nWith a ticker loaded the stats, act, and lins commands are available.\nExamples Using the Retail-Trade preset:\nUsing the Guided-Missiles preset:\nact shows recent trading activity plotted with the price:\nThe latest purchases from insiders of penny stock companies:\nRun exe insider_demo.openbb, from the Main Menu, to play a demonstration of the features in the OpenBB Terminal.\nBack to: Introduction to Stocks\n"},{"id":5,"href":"/OpenBBTerminal/terminal/stocks/options/pricing/","title":"Introduction to the Options Pricing Submenu","parent":"Introduction to the Options Menu","content":"This set of features is for composing hypothetical outcomes through user-defined inputs. There are two columns of inputs:\n price - the price for the underlying at the close on expiration. probability - the statistical probability of the outcome, where 1 = 100% \u0026amp; probability always = 1.  The Pricing submenu is accessible after selecting an expiration date for the options chain. Type, pricing, and press enter for access.\nHow to use the Pricing Submenu Use the add command to build the list, and use the rmv command to take away any entries.\nshow will print a table of the inputs. Multiple price points can be added, assuming that probability always sums at 100%.\nExamples Adding the optional argument, -p, will calculate the puts in the chain.\nRemoving the risk-free rate variable makes a substantial difference to the calculated value of an option. With monetary policy on the move, this is an important variable to consider as financial conditions change.\nRFR as 0 for call options\nBack to Introduction to the Options Menu\n"},{"id":6,"href":"/OpenBBTerminal/terminal/stocks/options/","title":"Introduction to the Options Menu","parent":"Introduction to Stocks","content":"The Options menu provides the user with a comprehensive set of tools for analyzing equity options. This guide provides an overview of the menu and demonstrates commands in context. Using this menu correctly will require understanding terminology and math specific to the asset class. Wikipedia is a great resource for definitions and for learning about the mechanics of derivatives, read it here. These are complex, leveraged, financial instruments requiring specialized knoweledge and a different frame-of-mind than the approach of an equities long-only investor. Always conduct thorough due diligence.\nSubmenus Available At the bottom of the menu, and near the top, there are items prefaced with \u0026gt;. Like everywhere else in the OpenBB Terminal, this indicates the presence of a submenu.\n  screen is a dedicated options screener that uses .ini files from the local installation folder /OpenBBTerminal/openbb_terminal/stocks/options/presets/. Refer to the Options Screener Guide here.\n  pricing is another method for calculating options prices. See the guide for this submenu here.\n  hedge is a group of features for calculating a delta-neutral position. The guide for this submenu is located here.\n  How to use the Options Menu Navigate to the menu by typing options, from the Stocks menu, and then pressing enter. Alternatively, absolute path navigation can jump straight there, from anywhere. /stocks/options\nMarket Coverage and Data Sources At the time of writing, OpenBB is able to provide coverage only for US-listed equity and ETF options. While not officially supported, some additional markets and index options may be accessible with yFinance as the source. Coverage will be added as the product grows to incorporate more community contributions but, for now, it is safe to generalize equity options as referring to US-listed companies on a major exchange and are priced in $USD.\n By default, the Terminal loads a ticker using Tradier as the source. It\u0026rsquo;s not perfect but the price is right. Sign up for a free developer account and then enter that token using the keys function. Alternatively, there is a choice to use yFinance data sets by attaching the argument as shown below. Help dialogues are displayed for any command by adding -h to the string. It is worth noting that this load command is different than the load command elsewhere.\n(🦋) /stocks/options/ $ load -h usage: load [-t TICKER] [--source {tradier,yf}] [-h] Load a ticker into option menu optional arguments: -t TICKER, --ticker TICKER Stock ticker (default: None) --source {tradier ,yf} Tradier or Yahoo Finance (default: tr) Source to get option expirations from (default: None) -h, --help show this help message (default: False) Having the working foundation of knowledge will make most commands, as pictured above, somewhat intuitive. -h is attachable to any command to print the help dialogue in the Terminal. Refer to the user documentation for details on any individual feature. Browse the commands on the left side of the page to read about any particular command.\nExamples To begin, a ticker must be loaded with an expiration date selected. Enter these commands to display the list of expiration dates for AAPL options chains.\n(🦋) /stocks/options/ $ load aapl (🦋) /stocks/options/ $ exp Available expiry dates ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Identifier ┃ Date ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 2022-05-20 │ ├────────────┼────────────┤ │ 1 │ 2022-05-27 │ ├────────────┼────────────┤ │ 2 │ 2022-06-03 │ ├────────────┼────────────┤ │ 3 │ 2022-06-10 │ ├────────────┼────────────┤ │ 4 │ 2022-06-17 │ ├────────────┼────────────┤ │ 5 │ 2022-06-24 │ ├────────────┼────────────┤ │ 6 │ 2022-07-01 │ ├────────────┼────────────┤ │ 7 │ 2022-07-15 │ ├────────────┼────────────┤ │ 8 │ 2022-08-19 │ ├────────────┼────────────┤ │ 9 │ 2022-09-16 │ ├────────────┼────────────┤ │ 10 │ 2022-10-21 │ ├────────────┼────────────┤ │ 11 │ 2022-11-18 │ ├────────────┼────────────┤ │ 12 │ 2022-12-16 │ ├────────────┼────────────┤ │ 13 │ 2023-01-20 │ ├────────────┼────────────┤ │ 14 │ 2023-03-17 │ ├────────────┼────────────┤ │ 15 │ 2023-06-16 │ ├────────────┼────────────┤ │ 16 │ 2023-09-15 │ ├────────────┼────────────┤ │ 17 │ 2024-01-19 │ ├────────────┼────────────┤ │ 18 │ 2024-06-21 │ └────────────┴────────────┘ Choose an expiration date with the corresponding Identifier value on the left.\n(🦋) /stocks/options/ $ exp 16 Expiration set to 2023-09-15 Setting the chain for analysis will change the text colour at the bottom of the Options menu. These commands require loaded data.\nThe info command displays a table of notable statistics.\n(🦋) /stocks/options/ $ info Options Information ┏━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Info ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Implied Volatility │ 38.07% ( -1.48%) │ ├───────────────────────┼─────────────────────────┤ │ Historical Volatility │ 42.90% │ ├───────────────────────┼─────────────────────────┤ │ IV Percentile │ 95% │ ├───────────────────────┼─────────────────────────┤ │ IV Rank │ 78.41% │ ├───────────────────────┼─────────────────────────┤ │ IV High │ 43.37% on 04/26/22 │ ├───────────────────────┼─────────────────────────┤ │ IV Low │ 18.80% on 06/11/21 │ ├───────────────────────┼─────────────────────────┤ │ Put/Call Vol Ratio │ 0.81 │ ├───────────────────────┼─────────────────────────┤ │ Today's Volume │ 2,045,793 │ ├───────────────────────┼─────────────────────────┤ │ Volume Avg (30-Day) │ 1,293,501 │ ├───────────────────────┼─────────────────────────┤ │ Put/Call OI Ratio │ 0.88 │ ├───────────────────────┼─────────────────────────┤ │ Today's Open Interest │ 8,226,541 │ ├───────────────────────┼─────────────────────────┤ │ Open Int (30-Day) │ 7,576,733 │ └───────────────────────┴─────────────────────────┘ An adjustable-period put/call ratio chart is called according to the timeline selected by the user.\n Length of 180 days:\n  (🦋) /stocks/options/ $ pcr 180  Length of 90 days:\n  (🦋) /stocks/options/ $ pcr 90  Length of 30 days:\n  (🦋) /stocks/options/ $ pcr 30  Length of 10 days:\n  (🦋) /stocks/options/ $ pcr 10 The chain\u0026rsquo;s open interest and current volume can be visualized with, voi\n(🦋) /stocks/options/ $ voi The chains command will display pricing, volume, open interest, and greeks data as a snapshot.\n(🦋) /stocks/options/ $ chains Narrow the focus with min/max filters:\n(🦋) /stocks/options/ $ chains -m 50 -M 100 Additional Greeks are accessible through the command, greeks\n(🦋) /stocks/options/ $ greeks See the effects of monetary policy by adjusting for the risk-free rate of return, and factor in dividend payments.\nInvestopedia\n\u0026quot;Credit spreads naturally carry a positive theta, meaning they benefit from the passage of time.\u0026quot; (🦋) /stocks/options/ $ greeks -d 0.67 -r 1 -m 50 -M 200 -a Greeks for Apple Sep/23 calls, using a RFR of 1% and dividend yield of 0.67%\nbinom will calculate options values using binomial pricing models.\nDisplay a probabilities distribution chart using the optional argument --plot\n(🦋) /stocks/options/ $ binom --plot Visualize the volume of puts and calls in a chain with vol\n(🦋) /stocks/options/ $ vol -m 0 -M 250 Plot the open interest in a similar fashion with oi\n(🦋) /stocks/options/ $ oi Historical OHLC pricing for individual contracts can be viewed with hist\n(🦋) /stocks/options/ $ hist -p -s 70 Plot the hisotorical greek data with, grhist\n(🦋) /stocks/options/ $ grhist -s 70 -p -g rho plot gives the user flexibility to chart different variables.\n(🦋) /stocks/options/ $ plot -p -x ltd -y s Show the volatility surface of the entire chain using the command, vsurf\n(🦋) /stocks/options/ $ vsurf Additional Resources for Equity Options Introduction to the Options Screener\nIntroduction to the Options Hedge Menu\nInvestopedia\u0026rsquo;s Options Basics Tutorial\n"},{"id":7,"href":"/OpenBBTerminal/terminal/stocks/options/hedge/","title":"Introduction to the Hedge Submenu","parent":"Introduction to the Options Menu","content":"The Hedge menu is designed to help the user calculate positions within the selected expiration chain to be directionally neutral. It is worth reviewing reference material, such as Wikipedia or Investopedia, before using this feature set.\nEnter the submenu after choosing the desired expiration date by using the command, hedge, from the Options menu.\nHow to use the Hedge Submenu The first step is to pick the underlying position for the calculation. Scroll the list populated by autocomplete, or type in the choice.\nThe strike prices for puts and calls are shown with the list command. Use this table to add or remove options from the calculation.\nAdd the first option with the corresponding index number for the strike price, attaching flags for a put and for short, -s \u0026amp; -p.\nThe rmv command removes added options. With an underlying position and two positions added, sop will display the results based on the inputs provided.\nplot will display an options payoff chart, using the provided values.\nExamples Substituting Option A for a different trade.\nSubstuting Option B from the same example above.\nMoving Option B down one strike.\nBack to: Introduction To Options\n"},{"id":8,"href":"/OpenBBTerminal/terminal/stocks/gov/","title":"Introduction to the Government Menu","parent":"Introduction to Stocks","content":"The features in this menu are intended to show the reported trades of elected officials, lobbyist activity, awarded contracts, and general spending of the United States Treasury Department. This menu only covers the USA, or companies that trade on US exchanges. The information in this menu is compiled by QuiverQuant.\nA ticker is not required to enter the menu; navigate there from anywhere in the terminal with absolute path jumping: /stocks/gov\nHow to use the Government Menu The menu is divided into two sections. Features under the Explore: do not depend on individual tickers, while the commands listed under Ticker: do. Entering lasttrades will return a table with the five most recent days of reported trades made by Congress members.\nlasttrades senate \u0026amp; lasttrades house will other elected officials.\ntoplobbying brings up a bar graph of recent big spenders on K Street, that are listed on-exchange. The optional arguments l, --raw \u0026amp; --export changes the number of companies returned, shows a table of the raw data, or exports the data to a file.\nThe trivial spending by government can be tracked with the command, lastcontracts. Screwdrivers, furniture, bath towels; keep tabs on where those tax dollars are spent.\nload a specific ticker to activate the lower features.\nExamples Microsoft is a favourite in Washington; gtrades shows the bullish or bearish tendencies of elected officials over time.\nA table of this chart, with representatives' names, is called by adding the --raw flag to the command string.\nA breakdown of single-issue items the company is lobbying for will be printed by the command, lobbying:\n(🦋) /stocks/gov/ $ lobbying 2022-05-31: MICROSOFT CORP $30000 Cascadia High Speed Rail Funding opportunities. High-skilled immigration reform Energy efficiency; climate change issues and sustainability Cyber Security, including protecting elections Competition policy; supply chain issues. Workforce development issues; skilling; H.R. 1735, To provide a temporary safe harbor for publishers of online content to collectively negotiate with dominant online platforms regarding the terms on which content may be distributed. Broadband connectivity; artificial intelligence. Computer science education Privacy--intelligence and surveillance. 2022-05-26: MICROSOFT CORPORATION $50000 Tax reform ECPA, CS for Al, STEM, TV White Spaces, Ariband, Rural Broadband Warrants, Surveillance EPCA, Cyber Security Cyber Security, Bulk Data collection, Surveillance, ECPA, Lawful Access High Skilled immigration, Immigration reform, DACA 2022-05-13: MICROSOFT $15000 Issues related to potential VISA reform. The role of technology in defense. Innovations ability to strengthen national security. Broadband connectivity and access. Defense technology issues. 2022-05-02: CORNERSTONE GOVERNMENT AFFAIRS OBO MICROSOFT CORPORATION $0 2022-04-20: MICROSOFT CORPORATION $70000 S.1260, United States Innovation and Competition Act of 2021, Workforce training issues H.R.4521, America COMPETES Act of 2022, Workforce training issues Workforce Innovation and Opportunity Act, Workforce training issues Cyber Security Work Force S.1260, United States Innovation and Competition Act of 2021, Computer Science Education H.R.4521, America COMPETES Act of 2022, Computer Science Education Workforce issues, generally Computer Science Education 2022-04-20: MICROSOFT CORPORATION $0 2022-04-20: MICROSOFT CORPORATION $0 2022-04-20: MICROSOFT CORPORATION $50000 Privacy; broadband infrastructure adoption and deployment; trade; sustainability education; H.R. John Lewis Voting Rights Advancement Act; Cybersecurity; NDAA; criminal justice reform. 2022-04-20: MICROSOFT CORPORATION $30000 Monitor possible legislation to provide state tax relief for employees stranded outside their home state by COVID. Monitor postal reform. Monitor issues relating to trade agreements. Monitor cybersecurity legislation. Monitor privacy oversight issues. Monitor issues relating to use of TV white space spectrum. Monitor H1-B Visas. Monitor issues relating to high-skilled immigration. Monitor software piracy, counterfeiting, and protection of intellectual property rights. Monitor patent reform. Competitiveness in the online advertising and software markets. Competitiveness and the high tech sector. Monitor issues related to government access to customer data. Monitor Cloud computing issues. Monitor STEM education legislation. Monitor issues relating to data breach legislation and data breaches. Monitor issues relating to artificial intelligence. Monitor issues relating to facial recognition technology. Monitor issues relating election security technology. Monitor issues relating to Section 230 of the Communications Decency Act. 2022-04-20: MICROSOFT CORPORATION $0 The consistency of quarterly contract awards over time is reflected in a chart requested by the command, histcont\nThe ten most purchased and sold stocks amongst Senate Representatives, topsells senate \u0026amp; topbuys senate:\nTo play a demonstration in the OpenBB Terminal of the features presented in this guide, execute the routine file, gov_demo.openbb, from the Home Menu.\nBack to the Introduction to Stocks Guide.\n"},{"id":9,"href":"/OpenBBTerminal/terminal/stocks/dd/","title":"Introduction to the Due Diligence Menu","parent":"Introduction to Stocks","content":"The Due Diligence submenu, located within the Stocks menu, is primarily for supplementing fundamental analysis with information such as:\n Analyst ratings and price targets over time Earnings estimates SEC filings Business-to-business customers and suppliers What kind of trades, if any, ARK is involved in with the loaded ticker.  To use all features in this menu, two (free) API keys must be obtained. Refer to the Getting Started Guide for instructions on storing API keys in the Terminal.\n rating: FMP - Financial Modeling Prep rot: Finnhub  Entering the submenu requires having a ticker loaded from the Stocks menu. With a stock selected, type dd into the command line and press enter.\nHow to use the Due Diligence Menu With the same company, as loaded above, sec -l 20 prints a table of the last twenty SEC filings from the company, and provides a link to a hosted document on MarketWatch.\npt displays a chart of historical adjusted closing prices and price targets. pt --raw prints a table, pt --export xlsx exports a spreadsheet, while pt -l [n] limits the number of price targets to return to n.\nA new ticker can be loaded directly from the Due Diligence submenu; for example, load tsla\nExamples With $TSLA loaded, arktrades -l 20, shows the last twenty trades across all ARK funds.\nExport the history of $HOOD trades for further analysis. arktrades --export xlsx\nest displays futures earnings estimates.\nanalyst\nAlways do your own Due Diligence! To run a demo in the OpenBB Terminal of the features discussed here, launch the routine from the Main Menu by entering: exe routines/dd_demo.openbb in the command line and hitting enter. Click here to go back to Stocks.\n"},{"id":10,"href":"/OpenBBTerminal/terminal/stocks/disc/","title":"Introduction to Stocks Discovery","parent":"Introduction to Stocks","content":"The set of features within the Stocks Discovery submenu provides tools for discovering trade setups, for following trends, and for staying up with current events. Enter the menu from the stocks menu by typing, disc, and pressing, ENTER (⏎). Absolute path jumping is possible from anywhere, to anywhere. For example, jumping from the Portfolio Optimization submenu to the Stocks Discovery submenu:\n\nTo use all commands in the Discovery menu, the following (free) API keys are required:\n Quandl Finnhub  See the Getting Started Guide for setting API keys in the OpenBB Terminal.\nHow to use    The help dialogue, for any command, is displayed by attaching, -h, to the string; i.e., divcal -h. This menu will be one of the easiest to get comfortable with a command-line interface. All outputs from commands in this menu are text and tables. There are no charts or images generated. Exports, where available, can be formatted as csv, json, or xlsx files. Watch this short demonstration of all features in this menu:\n\nExamples    The dividend calendar can show any single date.\n(🦋) /stocks/disc/ $ divcal -d 2022-06-02 -l 25 \nSee Cathie Wood\u0026rsquo;s trades and sort by different fields such as Fund, weighting, buy-only, or sell-only.\n\nCheck the upcoming earnings schedule using, upcoming:\n\nBrowse the news by category from Seeking Alpha with cnews:\n\n"},{"id":11,"href":"/OpenBBTerminal/terminal/stocks/ca/","title":"Introduction to Comparison Analysis","parent":"Introduction to Stocks","content":"The Comparison Analysis menu provides the user with tools for:\n searching and populating a list of companies that are similar to the loaded ticker. building a correlation matrix. comparing the price and volume history of multiple companies. comparing financial statements, technical performance, and ownership statistics of otherwise similar companies. comparing sentiment of similar companies. building a list of companies to use features from the Portfolio Optimization menu.  To use all features in this menu, the following API keys (free) must be obtained by the user:\n Finnhub get --source Finnhub Polygon get --source Polygon  It is not necessary to load a ticker from the stocks menu to use these features. Enter the Comparison Analysis submenu by typing ca and pressing ENTER (⏎).\n\nHow to use    To add a primary ticker, or to swap it for another, enter ticker AMZN. The command has three sources, use: get --source Finnhub, get --source Polygon and get to access the different sources. Sources may return different results.\n(🦋) /stocks/ca/ $ get [Finviz] Similar Companies: WMT, BIG, BJ, COST, DG, DLTR, OLLI, PSMT, TGT, TUEM (🦋) /stocks/ca/ $ get --source Polygon [Polygon] Similar Companies: WMT, AMZN, COST, EBAY, DLTR, KSS, JCP, TGT, M, DG (🦋) /stocks/ca/ $ get --source Finnhub [Finnhub] Similar Companies: WMT, COST, BJ, PSMT Using any of these commands will automatically populate the list of similar companies for analysis. Furthermore, add \u0026amp; rmv allows the user to make modifications, or create a list from scratch.\n\nTo show a correlation matrix, use the hcorr command. The start dates can be modified, which changes the results, to show correlation over different periods. For example, obtain a one year correlation matrix with hcorr:\n\nOr, by adjusting the date, it is possible to define a correlation matrix with a different time horizon, e.g hcorr -s 2022-01-01:\n\nThe list of similar companies can be compared by a number of fundamental metrics.\nvaluation displays earnings and valuation multiples. \nperformance compares technical performance of similar companies: \nsentiment is a chart from Finbrain that shows sentiment over the last ten days. \nThis list of similar companies can be imported directly to the Portfolio Optimization menu by using the command, po. \nExamples    The correlation matrix can also be used in other ways, like measuring sectors or asset classes. The chart below is a daily, price-normalized, comparison of S\u0026amp;P, NASDAQ, and BTC futures.\n(🦋) /stocks/ca/ $ ticker F (🦋) /stocks/ca/ $ historical -n \nThis is a chart of the NASDAQ 100 Index, and three different futures contracts that are trading against it.\n(🦋) /stocks/ca/ $ set ^NDX,NQH23.CME,NQZ22.CME,NQ=F [Custom] Similar Companies: ^NDX, NQH23.CME, NQZ22.CME, NQ=F (🦋) /stocks/ca/ $ historical \nCompare financial statements of the ten largest US banks.\n(🦋) /stocks/ca/ $ set C,USB,WFC,JPM,TD,GS,PNC,TFC,BAC,COF [Custom] Similar Companies: C, USB, WFC, JPM, TD, COF, PNC, TFC, BAC, GS (🦋) /stocks/ca/ $ cashflow \nCompare the income statements.\n(🦋) /stocks/ca/ $ income \nTo run a demonstration of the commands presented here, in the OpenBB Terminal, run this command from the home menu: exe routines/comparison_demo.openbb\n"},{"id":12,"href":"/OpenBBTerminal/terminal/common/ba/","title":"Introduction to the Behavioural Analysis","parent":"Common Menus","content":"The Behavioural Analysis menu offers the user tools for gauging the overall public sentiment of a company online. The complexity of the tools range from message board scrapers to deep learning algorithms for financial analysis and prediction. Sentiment is particularly useful for momentum trading strategies, discovery, and general fundamental research. Navigate into the menu from the Stocks menu by entering, ba; or, using absolute paths from anywhere in the Terminal: /stocks/ba\n\nHow to use    The commands with Light Blue text, representing commands, do not require a ticker, faded commands will turn light blue when there is a ticker loaded.\n(🦋) /stocks/ba/ $ load gme Loading Daily GME stock with starting period 2019-05-20 for analysis. Datetime: 2022 May 23 12:13 Timezone: America/New_York Currency: USD Market: CLOSED Company: GameStop Corporation (🦋) /stocks/ba/ $ ? \nSome data sources will require a valid API key, which can be obtained for free and then set using the Keys menu. To use all the features in this menu, obtain free API keys from these providers:\n Finnhub\n Twitter\n Reddit\n Sentiment Investor\n  See the Getting Started Guide for help setting API keys in the Terminal.\nExamples    As with every command, using the -h argument displays the help dialogue. Running the headlines command returns the following:\n(🦋) /stocks/ba/ $ headlines \nAlternatively, running the snews command returns the following:\n(🦋) /stocks/ba/ $ snews \nThe Reddit functions will return popular tickers and posts, or measure sentiment for a particular stock. An example would be by looking at the threads that pop up on /r/wallstreetbets, famous for the GameStop short squeeze:\n(🦋) /stocks/ba/ $ wsb 2022-05-23 10:00:12 - Daily Discussion Thread for May 23, 2022 https://old.reddit.com/r/wallstreetbets/comments/uvwq8z/daily_discussion_thread_for_may_23_2022/ Reddit Submission ┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ Subreddit ┃ Flair ┃ Score ┃ # Comments ┃ Upvote % ┃ Awards ┃ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ wallstreetbets │ Daily Discussion │ 195 │ 9168 │ 88% │ 3 Silver │ │ │ │ │ │ │ 2 Helpful │ │ │ │ │ │ │ 1 Wholesome │ │ │ │ │ │ │ 1 Got the │ └────────────────┴──────────────────┴───────┴────────────┴──────────┴─────────────┘ 2022-05-21 11:34:21 - Most Anticipated Earnings Releases for the week beginning May 23rd, 2022 https://old.reddit.com/r/wallstreetbets/comments/uul9fs/most_anticipated_earnings_releases_for_the_week/ Reddit Submission ┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓ ┃ Subreddit ┃ Flair ┃ Score ┃ # Comments ┃ Upvote % ┃ Awards ┃ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩ │ wallstreetbets │ Earnings Thread │ 960 │ 1325 │ 97% │ 1 Silver │ │ │ │ │ │ │ 5 Helpful │ │ │ │ │ │ │ 3 Wholesome │ │ │ │ │ │ │ 1 Take My Energy │ │ │ │ │ │ │ 1 Sne │ └────────────────┴─────────────────┴───────┴────────────┴──────────┴──────────────────┘ \u0026lt;continues\u0026gt; The Behavioural Analysis menu also has the ability to scan for sentiment on multiple platforms including Twitter and Google with sentiment, infer and queries.\n(🦋) /stocks/ba/ $ sentiment -c From 2022-05-23 retrieving 360 tweets (15 tweets/hour) From 2022-05-22 retrieving 360 tweets (15 tweets/hour) From 2022-05-21 retrieving 360 tweets (15 tweets/hour) From 2022-05-20 retrieving 360 tweets (15 tweets/hour) From 2022-05-19 retrieving 360 tweets (15 tweets/hour) From 2022-05-18 retrieving 360 tweets (15 tweets/hour) From 2022-05-17 retrieving 360 tweets (15 tweets/hour) (🦋) /stocks/ba/ $ infer From: 2022-05-23 18:21:12 To: 2022-05-23 18:30:36 100 tweets were analyzed. Frequency of approx 1 tweet every 6 seconds. The summed compound sentiment of GME is: 18.42 The average compound sentiment of GME is: 0.18 Of the last 100 tweets, 41.00 % had a higher positive sentiment Of the last 100 tweets, 19.00 % had a higher negative sentiment (🦋) /stocks/ba/ $ queries Top GME's related queries ┏━━━━━━━━━━━━━━━━━┳━━━━━━━┓ ┃ query ┃ value ┃ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━┩ │ stock gme │ 100% │ ├─────────────────┼───────┤ │ amc │ 29% │ ├─────────────────┼───────┤ │ amc stock │ 24% │ ├─────────────────┼───────┤ │ gme price │ 23% │ ├─────────────────┼───────┤ │ gme stock price │ 14% │ ├─────────────────┼───────┤ │ gme share │ 7% │ ├─────────────────┼───────┤ │ gme share price │ 6% │ ├─────────────────┼───────┤ │ reddit │ 6% │ ├─────────────────┼───────┤ │ gme reddit │ 6% │ ├─────────────────┼───────┤ │ bb │ 5% │ └─────────────────┴───────┘ The sentiment command returns the following:\n\nMore advanced techniques can also be applied by using tools from Sentiment Investor that analyzes millions of messages to show the most talked about stocks by hour. This has the ability to show the most trending tickers with trend and historical sentiment data with hist.\n(🦋) /stocks/ba/ $ trend Most trending stocks at 2022-05-23 00:00 ┏━━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━┳━━━━━━┓ ┃ TICKER ┃ TOTAL ┃ LIKES ┃ RHI ┃ AHI ┃ ┡━━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━╇━━━━━━┩ │ SPY │ 89.00 │ 43.00 │ 1.22 │ 1.26 │ ├────────┼───────┼────────┼──────┼──────┤ │ AMC │ 80.00 │ 155.00 │ 1.07 │ 1.18 │ ├────────┼───────┼────────┼──────┼──────┤ │ TSLA │ 80.00 │ 78.00 │ 1.07 │ 1.34 │ ├────────┼───────┼────────┼──────┼──────┤ │ BTC │ 62.00 │ 74.00 │ 1.14 │ 1.09 │ ├────────┼───────┼────────┼──────┼──────┤ │ NIO │ 50.00 │ 14.00 │ 1.17 │ 1.15 │ ├────────┼───────┼────────┼──────┼──────┤ │ AAPL │ 28.00 │ 4.00 │ 0.66 │ 0.75 │ ├────────┼───────┼────────┼──────┼──────┤ │ AMD │ 26.00 │ 59.00 │ 0.57 │ 0.61 │ ├────────┼───────┼────────┼──────┼──────┤ │ NVAX │ 13.00 │ 4.00 │ 0.47 │ 0.40 │ ├────────┼───────┼────────┼──────┼──────┤ │ NVDA │ 12.00 │ 11.00 │ 0.45 │ 0.47 │ ├────────┼───────┼────────┼──────┼──────┤ │ DIS │ 12.00 │ 1.00 │ 0.69 │ 0.44 │ └────────┴───────┴────────┴──────┴──────┘ (🦋) /stocks/ba/ $ hist -s 2022-05-01 \nInspired by the Twitter user, @cramertracker, the final two features follow (CNBC Talking Head) Jim Cramer stock recommendations as satire that rings true.\n(🦋) /stocks/ba/ $ jcdr Jim Cramer Recommendations for 05/19 ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Company ┃ Symbol ┃ Price ┃ LastPrice ┃ Change (%) ┃ Recommendation ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ Apple │ AAPL │ 137.35 │ 142.38 │ 3.53 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ AeroVironment │ AVAV │ 85.35 │ 85.49 │ 0.16 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ Alibaba │ BABA │ 87.69 │ 87.04 │ -0.75 │ Sell │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ Constellation Energy │ CEG │ 57.23 │ 56.92 │ -0.54 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ Costco │ COST │ 422.93 │ 427.93 │ 1.17 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ DraftKings │ DKNG │ 14.15 │ 13.89 │ -1.87 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ Lockheed Martin │ LMT │ 425.62 │ 433.71 │ 1.87 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ Cloudflare │ NET │ 58.00 │ 56.92 │ -1.90 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ Northrop Grumman │ NOC │ 448.50 │ 456.57 │ 1.77 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ NVIDIA │ NVDA │ 171.24 │ 168.29 │ -1.75 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ Palo Alto Networks │ PANW │ 436.37 │ 502.69 │ 13.19 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ PLBY Group │ PLBY │ 9.06 │ 9.26 │ 2.16 │ Sell │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ Raytheon Technologies │ RTX │ 90.25 │ 91.87 │ 1.76 │ Buy │ ├────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┤ │ SoFi Technologies │ SOFI │ 7.75 │ 7.30 │ -6.16 │ Buy │ └────────────────────────┴────────┴────────┴───────────┴────────────┴────────────────┘ \n"},{"id":13,"href":"/OpenBBTerminal/terminal/stocks/th/","title":"Introduction to Trading Hours","parent":"Introduction to Stocks","content":"This set of features is for checking the operating status of markets globally. To access the Trading Hours features, enter th from the Stocks menu. Alternatively, a user can access the submenu with absolute path navigation from anywhere in the Terminal: /stocks/th\n\nHow to use    A symbol is not required to be loaded. Once in the Trading Hours menu, the operation is simple. Choose from: open, closed, all or exchange.\nBelow, examples are given what these commands display, note that the tables are purposely cut off to keep the introduction compact.\n(🦋) /stocks/th/ $ open Open markets ┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ name ┃ short_name ┃ ┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ FRA │ Frankfurt Stock Exchange │ F │ ├─────┼───────────────────────────────────┼────────────┤ │ STU │ Börse Stuttgart │ SG │ ├─────┼───────────────────────────────────┼────────────┤ │ MUN │ Börse München │ MU │ ├─────┼───────────────────────────────────┼────────────┤ │ DUS │ Börse Düsseldorf │ DU │ ├─────┼───────────────────────────────────┼────────────┤ │ MEX │ Bolsa Mexicana de Valores │ MX │ ├─────┼───────────────────────────────────┼────────────┤ │ FKA │ Frankfurt Stock Exchange │ F │ ├─────┼───────────────────────────────────┼────────────┤ │ NYQ │ New York Stock Exchange │ NYSE │ ├─────┼───────────────────────────────────┼────────────┤ │ VAN │ TSX Venture Exchange │ V │ ├─────┼───────────────────────────────────┼────────────┤ \u0026lt;continues\u0026gt; (🦋) /stocks/th/ $ closed Closed markets ┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ name ┃ short_name ┃ ┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ SHZ │ Shenzen Stock Exchange │ SHZE │ ├─────┼──────────────────────────────────┼────────────┤ │ KSC │ Korea Exchange │ KRX │ ├─────┼──────────────────────────────────┼────────────┤ │ KOE │ Korea Exchange │ KRX │ ├─────┼──────────────────────────────────┼────────────┤ │ HKG │ Hong Kong Stock Exchange │ HKEX │ ├─────┼──────────────────────────────────┼────────────┤ │ KLS │ Bursa Malaysia │ KLSE │ ├─────┼──────────────────────────────────┼────────────┤ │ ENX │ Euronext │ NX │ ├─────┼──────────────────────────────────┼────────────┤ │ TWO │ Taipei Exchange │ TWO │ ├─────┼──────────────────────────────────┼────────────┤ │ HAM │ Hamburger Börse │ HM │ ├─────┼──────────────────────────────────┼────────────┤ │ TW │ Taiwan Stock Exchange │ TWSE │ ├─────┼──────────────────────────────────┼────────────┤ \u0026lt;continues\u0026gt; (🦋) /stocks/th/ $ all World markets ┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━┓ ┃ ┃ name ┃ short_name ┃ open ┃ ┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━┩ │ SHZ │ Shenzen Stock Exchange │ SHZE │ False │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ KSC │ Korea Exchange │ KRX │ False │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ KOE │ Korea Exchange │ KRX │ False │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ HKG │ Hong Kong Stock Exchange │ HKEX │ False │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ KLS │ Bursa Malaysia │ KLSE │ False │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ FRA │ Frankfurt Stock Exchange │ F │ True │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ STU │ Börse Stuttgart │ SG │ True │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ ENX │ Euronext │ NX │ False │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ TWO │ Taipei Exchange │ TWO │ False │ ├─────┼───────────────────────────────────┼────────────┼───────┤ │ HAM │ Hamburger Börse │ HM │ False │ ├─────┼───────────────────────────────────┼────────────┼───────┤ \u0026lt;continues\u0026gt; Lastly, exchange shows the status of a single venue.\n\nExamples    Below an example is given for a symbol and whether that market is open. By calling exchange you can obtain more information about the exchange (e.g. enter BO)\n(🦋) /stocks/th/ $ symbol RY.TO Selected symbol Symbol: RY.TO Name: ROYAL BANK OF CANADA Market open: False (🦋) /stocks/th/ $ symbol FB2.L Selected symbol Symbol: FB2.L Name: LEVERAGE SHARES PUBLIC LIMITED Market open: False (🦋) /stocks/th/ $ exchange BO ┏━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ BSE ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ name │ BSE │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ short_name │ BO │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ website │ https://www.bseindia.com/static/markets/equity/EQReports/tra_trading.aspx │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ market_open │ 09:15:00 │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ market_close │ 15:30:00 │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ lunchbreak_start │ None │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ lunchbreak_end │ None │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ opening_auction_start │ None │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ opening_auction_end │ None │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ closing_auction_start │ None │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ closing_auction_end │ None │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ timezone │ Asia/Kolkata │ ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ flag │ 🇮🇳 ├───────────────────────┼───────────────────────────────────────────────────────────────────────────┤ │ open │ False │ └───────────────────────┴───────────────────────────────────────────────────────────────────────────┘ "},{"id":14,"href":"/OpenBBTerminal/terminal/stocks/options/screen/","title":"Introduction to the Options Screener","parent":"Introduction to the Options Menu","content":"The OpenBB options screener is a versatile discovery tool for an options trader. It is powered by the Open Source Community: https://github.com/Tyruiop/syncretism - go give this repository a star!\nThe screener makes use of presets (.ini files) that are stored locally in the OpenBB installation folder.\n~/Applications/OpenBB/openbb_terminal/stocks/options/presets/\nThe file named template.ini is a blank slate and ready for experimentation. There are nearly infinite ways to configure an options search, so customize one and then share it with us on social media! Have a look at the available fields:\n# Author of preset: OpenBB Terminal # Description: This is just a sample. The user that adds the preset can add a description for what type of stocks these filters are being used. [FILTER] # tickers [string]: a list of space or comma separated tickers to restrict or exclude them from the query. # E.g. \u0026quot;GME\u0026quot; or for multiples \u0026quot;AMC\u0026quot;,\u0026quot;BB\u0026quot;,\u0026quot;GME\u0026quot;. tickers = # exclude [true|false]: if true, then tickers are excluded. If false, the search is restricted to these tickers. exclude = # min-diff [int]: minimum difference in percentage between strike and stock price. min-diff = # max-diff [int]: maximum difference in percentage between strike and stock price. max-diff = # itm [bool]: select in the money options. itm = true # otm [bool]: select out of the money options. otm = true # min-ask-bid [float]: minimum spread between bid and ask. min-ask-bid = # max-ask-bid [float]: maximum spread between bid and ask. max-ask-bid = # min-exp [int]: minimum days until expiration. min-exp = # max-exp [int]: maximum days until expiration. max-exp = # min-price [float]: minimum option premium. min-price = # max-price [float]: maximum option premium. max-price = #min-strike [float]: minimum option strike. min-strike = #max-strike [float]: maximum option strike. max-strike = # calls [true|false]: select call options. calls = true # puts [true|false]: select put options. puts = true # stock [true|false]: select normal stocks. stock = # etf [true|false]: select etf options. etf = # min-sto [float]: minimum option price / stock price ratio. min-sto = # max-sto [float]: maximum option price / stock price ratio. max-sto = # min-yield [float]: minimum premium / strike price ratio. min-yield = # max-yield [float]: maximum premium / strike price ratio. max-yield = # min-myield [float]: minimum yield per month until expiration date. min-myield = # max-myield [float]: maximum yield per month until expiration date. max-myield = # min-delta [float]: minimum delta greek. min-delta = # max-delta [float]: maximum delta greek. max-delta = # min-gamma [float]: minimum gamma greek. min-gamma = # max-gamma [float]: maximum gamma greek. max-gamma = # min-theta [float]: minimum theta greek. min-theta = # max-theta [float]: maximum theta greek. max-theta = # min-vega [float]: minimum vega greek. min-vega = # max-vega [float]: maximum vega greek. max-vega = #min-iv [float]: minimum implied volatility. min-iv = #max-iv [float]: maximum implied volatility. max-iv = #min-oi [float]: minimum open interest. min-oi = #max-oi[float]: maximum open interest max-oi = #min-volume [float]: minimum volume. min-volume = #max-volume [float]: maximum volume. max-volume = #min-voi [float]: minimum volume / oi ratio. min-voi = #max-voi [float]: maximum volume / oi ratio. max-voi = # min-cap [float]: minimum market capitalization (in billions USD). min-cap = # max-cap [float]: maximum market capitalization (in billions USD). max-cap = # order-by [default: e_desc]: how to order results, possible values: # e_desc, e_asc: expiration, descending / ascending. # iv_desc, iv_asc: implied volatility, descending / ascending. # lp_desc, lp_asc: lastprice, descending / ascending. # md_desc, md_asc: current stock price, descending / ascending. order-by = # limit [int]: number of results (max 50). limit = # active [true|false]: if set to true, restricts to options for which volume, open interest, ask, and bid are all \u0026gt; 0. active = # [float|int] deviation from the 20 day average min-price-20d = max-price-20d = min-volume-20d = max-volume-20d = min-iv-20d = max-iv-20d = min-delta-20d = max-delta-20d = min-gamma-20d = max-gamma-20d = min-theta-20d = max-theta-20d = min-vega-20d = max-vega-20d = min-rho-20d = max-rho-20d = # [float|int] deviation from the 100 day average min-price-100d = max-price-100d = min-volume-100d = max-volume-100d = min-iv-100d = max-iv-100d = min-delta-100d = max-delta-100d = min-gamma-100d = max-gamma-100d = min-theta-100d = max-theta-100d = min-vega-100d = max-vega-100d = min-rho-100d = max-rho-100d =  How to use the Options Screener The commands set and view will show the filters present. The command reads the contents of the preset file every time the command is called, which makes changes fast and easy; simply open it in a text editor.\n(🦋) /stocks/options/screen/ $ set TSLA_Calls_90Days (🦋) /stocks/options/screen/ $ view TSLA_Calls_90Days - FILTER - tickers : \u0026quot;TSLA\u0026quot; exclude : false itm : true otm : true min-exp : 3 max-exp : 90 calls : true puts : true stock : true etf : true min-delta : 0.30 max-delta : 0.65 order-by : \u0026quot;oi_desc\u0026quot; active : true The columns for the output of the screener have been abbreviated to be:\nCS: Contract Symbol; S: Symbol, T: Option Type; Str: Strike; Exp v: Expiration; IV: Implied Volatility; LP: Last Price; B: Bid; A: Ask; V: Volume; OI: Open Interest; Y: Yield; MY: Monthly Yield; SMP: Regular Market Price; SMDL: Regular Market Day Low; SMDH: Regular Market Day High; LU: Last Trade Date; LC: Last Crawl; ITM: In The Money; PC: Price Change; PB: Price-to-book. The default number of results returned is 10, add the -l flag with the number of desired results to change.\nExamples Using the preset, \u0026ldquo;3DTE_Degenerate\u0026rdquo;:\nUsing the preset, \u0026ldquo;SPY_ATM_POOTS\u0026rdquo;:\nThe video below shows the process for building an options screener preset. Any simple text editor will work to make changes. Build a preset and share it with OpenBB on social media!\nBack to: Introduction To Options Guide\n"},{"id":15,"href":"/OpenBBTerminal/SDK/alt/covid/global_cases/","title":"Global Cases","parent":"covid","content":"Get underlying data    alt.covid.global_cases(country: str) -\u0026gt; pandas.core.frame.DataFrame    Get historical cases for given country\nParameters ---------- country: str Country to search for Returns ------- pd.DataFrame Dataframe of historical cases  "},{"id":16,"href":"/OpenBBTerminal/SDK/alt/covid/global_deaths/","title":"Global Deaths","parent":"covid","content":"Get underlying data    alt.covid.global_deaths(country: str) -\u0026gt; pandas.core.frame.DataFrame    Get historical deaths for given country\nParameters ---------- country: str Country to search for Returns ------- pd.DataFrame Dataframe of historical deaths  "},{"id":17,"href":"/OpenBBTerminal/SDK/alt/covid/ov/","title":"Ov","parent":"covid","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    alt.covid.ov(country, limit: int = 100) -\u0026gt; pandas.core.frame.DataFrame    Get historical cases and deaths by country\nParameters ---------- country: str Country to get data for limit: int Number of raw data to show  Getting charts    alt.covid.ov(country, raw: bool = False, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, plot: bool = True, chart=True) -\u0026gt; None    Show historical cases and deaths by country\nParameters ---------- country: str Country to get data for raw: bool Flag to display raw data limit: int Number of raw data to show export: str Format to export data plot: bool Flag to display historical plot  "},{"id":18,"href":"/OpenBBTerminal/SDK/alt/covid/slopes/","title":"Slopes","parent":"covid","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    alt.covid.slopes(days_back: int = 30, limit: int = 50, threshold: int = 10000, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Load cases and find slope over period\nParameters ---------- days_back: int Number of historical days to consider limit: int Number of rows to show threshold: int Threshold for total number of cases ascend: bool Flag to sort in ascending order Returns ------- pd.DataFrame Dataframe containing slopes  Getting charts    alt.covid.slopes(days_back: int = 30, limit: int = 10, threshold: int = 10000, ascend: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Parameters ---------- days_back: int Number of historical days to get slope for limit: int Number to show in table ascend: bool Flag to sort in ascending order threshold: int Threshold for total cases over period export : str Format to export data  "},{"id":19,"href":"/OpenBBTerminal/SDK/alt/covid/stat/","title":"Stat","parent":"covid","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    alt.covid.stat(country, stat: str = \u0026lsquo;cases\u0026rsquo;, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Show historical cases and deaths by country\nParameters ---------- country: str Country to get data for stat: str Statistic to get. Either \u0026quot;cases\u0026quot;, \u0026quot;deaths\u0026quot; or \u0026quot;rates\u0026quot; limit: int Number of raw data to show  Getting charts    alt.covid.stat(country, stat: str = \u0026lsquo;cases\u0026rsquo;, raw: bool = False, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, plot: bool = True, chart=True) -\u0026gt; None    Show historical cases and deaths by country\nParameters ---------- country: str Country to get data for stat: str Statistic to get. Either \u0026quot;cases\u0026quot;, \u0026quot;deaths\u0026quot; or \u0026quot;rates\u0026quot; raw: bool Flag to display raw data limit: int Number of raw data to show export: str Format to export data plot : bool Flag to plot data  "},{"id":20,"href":"/OpenBBTerminal/SDK/alt/oss/_make_request/","title":"Make Request","parent":"oss","content":"Get underlying data    alt.oss._make_request(url: str) -\u0026gt; Optional[bs4.BeautifulSoup]    Helper method to scrap\nParameters ---------- url : str url to scrape Returns ------- BeautifulSoup object  "},{"id":21,"href":"/OpenBBTerminal/SDK/alt/oss/_retry_session/","title":"Retry Session","parent":"oss","content":"Get underlying data    alt.oss._retry_session(url: str, retries: int = 3, backoff_factor: float = 1.0) -\u0026gt; requests.sessions.Session    Helper methods that retries to make request\nParameters ---------- url: str Url to mount a session retries: int How many retries backoff_factor: float Backoff schema - time periods between retry Returns ------- requests.Session Mounted session  "},{"id":22,"href":"/OpenBBTerminal/SDK/alt/oss/github_data/","title":"Github Data","parent":"oss","content":"Get underlying data    alt.oss.github_data(url: str, **kwargs)    Get repository stats\nParameters ---------- url: str github api endpoint params: dict params to pass to api endpoint Returns ------- dict with data  "},{"id":23,"href":"/OpenBBTerminal/SDK/alt/oss/history/","title":"History","parent":"oss","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    alt.oss.history(repo: str)    Get repository star history\nParameters ---------- repo : str Repo to search for Format: org/repo, e.g., openbb-finance/openbbterminal Returns ------- pd.DataFrame - Columns: Date, Stars  Getting charts    alt.oss.history(repo: str, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display repo summary [Source: https://api.github.com]\nParameters ---------- repo : str Repository to display star history. Format: org/repo, e.g., openbb-finance/openbbterminal export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":24,"href":"/OpenBBTerminal/SDK/alt/oss/ross/","title":"Ross","parent":"oss","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    alt.oss.ross() -\u0026gt; pandas.core.frame.DataFrame    Get startups from ROSS index [Source: https://runacap.com/]\nParameters ---------- Returns ------- pandas.DataFrame: list of startups  Getting charts    alt.oss.ross(limit: int = 10, sortby: str = \u0026lsquo;Stars AGR [%]\u0026rsquo;, ascend: bool = False, show_chart: bool = False, show_growth: bool = True, chart_type: str = \u0026lsquo;stars\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display list of startups from ross index [Source: https://runacap.com/]\nParameters ---------- limit: int Number of startups to search sortby: str Key by which to sort data. Default: Stars AGR [%] ascend: bool Flag to sort data descending show_chart: bool Flag to show chart with startups show_growth: bool Flag to show growth line chart chart_type: str Chart type {stars,forks} export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":25,"href":"/OpenBBTerminal/SDK/alt/oss/search/","title":"Search","parent":"oss","content":"Get underlying data    alt.oss.search(sortby: str = \u0026lsquo;stars\u0026rsquo;, page: int = 1, categories: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Get repos sorted by stars or forks. Can be filtered by categories\nParameters ---------- sortby : str Sort repos by {stars, forks} categories : str Check for repo categories. If more than one separate with a comma: e.g., finance,investment. Default: None page : int Page number to get repos Returns ------- pd.DataFrame with list of repos  "},{"id":26,"href":"/OpenBBTerminal/SDK/alt/oss/summary/","title":"Summary","parent":"oss","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    alt.oss.summary(repo: str) -\u0026gt; pandas.core.frame.DataFrame    Get repository summary\nParameters ---------- repo : str Repo to search for Format: org/repo, e.g., openbb-finance/openbbterminal Returns ------- pd.DataFrame - Columns: Metric, Value  Getting charts    alt.oss.summary(repo: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display repo summary [Source: https://api.github.com]\nParameters ---------- repo : str Repository to display summary. Format: org/repo, e.g., openbb-finance/openbbterminal export : str Export dataframe data to csv,json,xlsx file  "},{"id":27,"href":"/OpenBBTerminal/SDK/alt/oss/top/","title":"Top","parent":"oss","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    alt.oss.top(sortby: str, limit: int = 50, categories: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Get repos sorted by stars or forks. Can be filtered by categories\nParameters ---------- sortby : str Sort repos by {stars, forks} categories : str Check for repo categories. If more than one separate with a comma: e.g., finance,investment. Default: None limit : int Number of repos to search for Returns ------- pd.DataFrame with list of repos  Getting charts    alt.oss.top(sortby: str, categories: str = \u0026lsquo;\u0026rsquo;, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display repo summary [Source: https://api.github.com]\nParameters ---------- sortby : str Sort repos by {stars, forks} categories : str Check for repo categories. If more than one separate with a comma: e.g., finance,investment. Default: None limit : int Number of repos to look at export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":28,"href":"/OpenBBTerminal/SDK/common/news/","title":"News","parent":"common","content":"Get underlying data    common.news(term: str = \u0026lsquo;\u0026rsquo;, sources: str = \u0026lsquo;bloomberg.com\u0026rsquo;, sort: str = \u0026lsquo;published\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get news for a given term and source. [Source: Feedparser]\nParameters ---------- term : str term to search on the news articles sources: str sources to exclusively show news from sort: str the column to sort by Returns ---------- articles : dict term to search on the news articles  "},{"id":29,"href":"/OpenBBTerminal/SDK/common/qa/bw/","title":"Bw","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.bw(data: pandas.core.frame.DataFrame, target: str, symbol: str = \u0026lsquo;\u0026rsquo;, yearly: bool = True, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None) -\u0026gt; None    Show box and whisker plots\nParameters ---------- symbol : str Name of dataset data : pd.DataFrame Dataframe to look at target : str Data column to look at yearly : bool Flag to indicate yearly accumulation external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  Getting charts    common.qa.bw(data: pandas.core.frame.DataFrame, target: str, symbol: str = \u0026lsquo;\u0026rsquo;, yearly: bool = True, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Show box and whisker plots\nParameters ---------- symbol : str Name of dataset data : pd.DataFrame Dataframe to look at target : str Data column to look at yearly : bool Flag to indicate yearly accumulation external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":30,"href":"/OpenBBTerminal/SDK/common/qa/calculate_adjusted_var/","title":"Calculate Adjusted Var","parent":"qa","content":"Get underlying data    common.qa.calculate_adjusted_var(kurtosis: float, skew: float, ndp: float, std: float, mean: float) -\u0026gt; float    Calculates VaR, which is adjusted for skew and kurtosis (Cornish-Fischer-Expansion)\nParameters ---------- kurtosis: float kurtosis of data skew: float skew of data ndp: float normal distribution percentage number (99% -\u0026gt; -2.326) std: float standard deviation of data mean: float mean of data Returns ------- float Real adjusted VaR  "},{"id":31,"href":"/OpenBBTerminal/SDK/common/qa/decompose/","title":"Decompose","parent":"qa","content":"Get underlying data    common.qa.decompose(data: pandas.core.frame.DataFrame, multiplicative: bool = False) -\u0026gt; Tuple[Any, pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Perform seasonal decomposition\nParameters ---------- data : pd.DataFrame Dataframe of targeted data multiplicative : bool Boolean to indicate multiplication instead of addition Returns ------- result: Any Result of statsmodels seasonal_decompose cycle: pd.DataFrame Filtered cycle trend: pd.DataFrame Filtered Trend  "},{"id":32,"href":"/OpenBBTerminal/SDK/common/qa/es/","title":"Es","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.es(data: pandas.core.frame.DataFrame, use_mean: bool = False, distribution: str = \u0026lsquo;normal\u0026rsquo;, percentile: Union[float, int] = 99.9, portfolio: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Gets Expected Shortfall for specified stock dataframe\nParameters ---------- data: pd.DataFrame Data dataframe use_mean: bool If one should use the data mean for calculation distribution: str Type of distribution, options: laplace, student_t, normal percentile: Union[float,int] VaR percentile portfolio: bool If the data is a portfolio Returns ------- list list of ES list list of historical ES  Getting charts    common.qa.es(data: pandas.core.frame.DataFrame, symbol: str = \u0026lsquo;\u0026rsquo;, use_mean: bool = False, distribution: str = \u0026lsquo;normal\u0026rsquo;, percentile: float = 99.9, portfolio: bool = False, chart=True) -\u0026gt; None    Displays expected shortfall\nParameters ---------- data: pd.DataFrame Data dataframe use_mean: if one should use the data mean return symbol: str name of the data distribution: str choose distribution to use: logistic, laplace, normal percentile: int es percentile portfolio: bool If the data is a portfolio  "},{"id":33,"href":"/OpenBBTerminal/SDK/common/qa/kurtosis/","title":"Kurtosis","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.kurtosis(data: pandas.core.frame.DataFrame, window: int = 14) -\u0026gt; pandas.core.frame.DataFrame    Kurtosis Indicator\nParameters ---------- data: pd.DataFrame Dataframe of targeted data window: int Length of window Returns ------- df_kurt : pd.DataFrame Dataframe of rolling kurtosis  Getting charts    common.qa.kurtosis(symbol: str, data: pandas.core.frame.DataFrame, target: str, window: int = 14, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    View rolling kurtosis\nParameters ---------- symbol: str Ticker data: pd.DataFrame Dataframe of stock prices target: str Column in data to look at window: int Length of window export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":34,"href":"/OpenBBTerminal/SDK/common/qa/normality/","title":"Normality","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.normality(data: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    Look at the distribution of returns and generate statistics on the relation to the normal curve. This function calculates skew and kurtosis (the third and fourth moments) and performs both a Jarque-Bera and Shapiro Wilk test to determine if data is normally distributed. Parameters ---------- data : pd.DataFrame Dataframe of targeted data Returns ------- pd.DataFrame Dataframe containing statistics of normality  Getting charts    common.qa.normality(data: pandas.core.frame.DataFrame, target: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    View normality statistics\nParameters ---------- data : pd.DataFrame DataFrame target : str Column in data to look at export : str Format to export data  "},{"id":35,"href":"/OpenBBTerminal/SDK/common/qa/omega/","title":"Omega","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.omega(data: pandas.core.frame.DataFrame, threshold_start: float = 0, threshold_end: float = 1.5) -\u0026gt; pandas.core.frame.DataFrame    Get the omega series\n   Parameters     data: pd.DataFrame   stock dataframe   threshold_start: float   annualized target return threshold start of plotted threshold range   threshold_end: float   annualized target return threshold end of plotted threshold range    Getting charts    common.qa.omega(data: pandas.core.frame.DataFrame, threshold_start: float = 0, threshold_end: float = 1.5, chart=True) -\u0026gt; None    Displays the omega ratio\n   Parameters     data: pd.DataFrame   stock dataframe   threshold_start: float   annualized target return threshold start of plotted threshold range   threshold_end: float   annualized target return threshold end of plotted threshold range    "},{"id":36,"href":"/OpenBBTerminal/SDK/common/qa/quantile/","title":"Quantile","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.quantile(data: pandas.core.frame.DataFrame, window: int = 14, quantile_pct: float = 0.5) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Overlay Median \u0026amp; Quantile\nParameters ---------- data: pd.DataFrame Dataframe of targeted data window : int Length of window quantile_pct: float Quantile to display Returns ------- df_med : pd.DataFrame Dataframe of median prices over window df_quantile : pd.DataFrame Dataframe of gievn quantile prices over window  Getting charts    common.qa.quantile(data: pandas.core.frame.DataFrame, target: str, symbol: str = \u0026lsquo;\u0026rsquo;, window: int = 14, quantile: float = 0.5, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    View rolling quantile\nParameters ---------- data: pd.DataFrame Dataframe target: str Column in data to look at symbol : str Stock ticker window : int Length of window quantile: float Quantile to get export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":37,"href":"/OpenBBTerminal/SDK/common/qa/rolling/","title":"Rolling","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.rolling(data: pandas.core.frame.DataFrame, window: int = 14) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Return rolling mean and standard deviation\nParameters ---------- data: pd.DataFrame Dataframe of target data window: int Length of rolling window Returns ------- pd.DataFrame: Dataframe of rolling mean pd.DataFrame: Dataframe of rolling standard deviation  Getting charts    common.qa.rolling(data: pandas.core.frame.DataFrame, target: str, symbol: str = \u0026lsquo;\u0026rsquo;, window: int = 14, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    View mean std deviation\nParameters ---------- data: pd.DataFrame Dataframe target: str Column in data to look at symbol : str Stock ticker window : int Length of window export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":38,"href":"/OpenBBTerminal/SDK/common/qa/sharpe/","title":"Sharpe","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.sharpe(data: pandas.core.frame.DataFrame, rfr: float = 0, window: float = 252) -\u0026gt; pandas.core.frame.DataFrame    Calculates the sharpe ratio\n   Parameters     data: pd.DataFrame   selected dataframe column   rfr: float   risk free rate   window: float   length of the rolling window    Returns ------- sharpe: pd.DataFrame sharpe ratio  Getting charts    common.qa.sharpe(data: pandas.core.frame.DataFrame, rfr: float = 0, window: float = 252, chart=True) -\u0026gt; None    Calculates the sharpe ratio\n   Parameters     data: pd.DataFrame   selected dataframe column   rfr: float   risk free rate   window: float   length of the rolling window    "},{"id":39,"href":"/OpenBBTerminal/SDK/common/qa/skew/","title":"Skew","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.skew(data: pandas.core.frame.DataFrame, window: int = 14) -\u0026gt; pandas.core.frame.DataFrame    Skewness Indicator\nParameters ---------- data: pd.DataFrame Dataframe of targeted data window : int Length of window Returns ------- data_skew : pd.DataFrame Dataframe of rolling skew  Getting charts    common.qa.skew(symbol: str, data: pandas.core.frame.DataFrame, target: str, window: int = 14, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    View rolling skew\nParameters ---------- symbol: str Stock ticker data: pd.DataFrame Dataframe target: str Column in data to look at window: int Length of window export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":40,"href":"/OpenBBTerminal/SDK/common/qa/sortino/","title":"Sortino","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.sortino(data: pandas.core.frame.DataFrame, target_return: float = 0, window: float = 252, adjusted: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Calculates the sortino ratio\n   Parameters     data: pd.DataFrame   selected dataframe   target_return: float   target return of the asset   window: float   length of the rolling window   adjusted: bool   adjust the sortino ratio    Returns ------- sortino: pd.DataFrame sortino ratio  Getting charts    common.qa.sortino(data: pandas.core.frame.DataFrame, target_return: float, window: float, adjusted: bool, chart=True) -\u0026gt; None    Displays the sortino ratio\n   Parameters     data: pd.DataFrame   selected dataframe   target_return: float   target return of the asset   window: float   length of the rolling window   adjusted: bool   adjust the sortino ratio    "},{"id":41,"href":"/OpenBBTerminal/SDK/common/qa/spread/","title":"Spread","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.spread(data: pandas.core.frame.DataFrame, window: int = 14) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Standard Deviation and Variance\nParameters ---------- data: pd.DataFrame DataFrame of targeted data window: int Length of window Returns ------- df_sd: pd.DataFrame Dataframe of rolling standard deviation df_var: pd.DataFrame Dataframe of rolling standard deviation  Getting charts    common.qa.spread(data: pandas.core.frame.DataFrame, target: str, symbol: str = \u0026lsquo;\u0026rsquo;, window: int = 14, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    View rolling spread\nParameters ---------- data: pd.DataFrame Dataframe target: str Column in data to look at target: str Column in data to look at symbol : str Stock ticker window : int Length of window export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (3 axes are expected in the list), by default None  "},{"id":42,"href":"/OpenBBTerminal/SDK/common/qa/summary/","title":"Summary","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.summary(data: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    Print summary statistics\nParameters ---------- data : pd.DataFrame Dataframe to get summary statistics for Returns ------- summary : pd.DataFrame Summary statistics  Getting charts    common.qa.summary(data: pandas.core.frame.DataFrame, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Show summary statistics\nParameters ---------- data : pd.DataFrame DataFrame to get statistics of export : str Format to export data  "},{"id":43,"href":"/OpenBBTerminal/SDK/common/qa/unitroot/","title":"Unitroot","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.unitroot(data: pandas.core.frame.DataFrame, fuller_reg: str = \u0026lsquo;c\u0026rsquo;, kpss_reg: str = \u0026lsquo;c\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Calculate test statistics for unit roots\nParameters ---------- data : pd.DataFrame DataFrame of target variable fuller_reg : str Type of regression of ADF test. Can be ‘c’,’ct’,’ctt’,’nc’ 'c' - Constant and t - trend order kpss_reg : str Type of regression for KPSS test. Can be ‘c’,’ct' Returns ------- pd.DataFrame Dataframe with results of ADF test and KPSS test  Getting charts    common.qa.unitroot(data: pandas.core.frame.DataFrame, target: str, fuller_reg: str = \u0026lsquo;c\u0026rsquo;, kpss_reg: str = \u0026lsquo;c\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Show unit root test calculations\nParameters ---------- data : pd.DataFrame DataFrame target : str Column of data to look at fuller_reg : str Type of regression of ADF test. Can be ‘c’,’ct’,’ctt’,’nc’ 'c' - Constant and t - trend order kpss_reg : str Type of regression for KPSS test. Can be ‘c’,’ct' export : str Format for exporting data  "},{"id":44,"href":"/OpenBBTerminal/SDK/common/qa/var/","title":"Var","parent":"qa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.qa.var(data: pandas.core.frame.DataFrame, use_mean: bool = False, adjusted_var: bool = False, student_t: bool = False, percentile: Union[int, float] = 99.9, portfolio: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Gets value at risk for specified stock dataframe\nParameters ---------- data: pd.DataFrame Data dataframe use_mean: bool If one should use the data mean for calculation adjusted_var: bool If one should return VaR adjusted for skew and kurtosis student_t: bool If one should use the student-t distribution percentile: Union[int,float] VaR percentile portfolio: bool If the data is a portfolio Returns ------- list list of VaR list list of historical VaR  Getting charts    common.qa.var(data: pandas.core.frame.DataFrame, symbol: str = \u0026lsquo;\u0026rsquo;, use_mean: bool = False, adjusted_var: bool = False, student_t: bool = False, percentile: float = 99.9, data_range: int = 0, portfolio: bool = False, chart=True) -\u0026gt; None    Displays VaR of dataframe\nParameters ---------- data: pd.Dataframe Data dataframe use_mean: bool if one should use the data mean return symbol: str name of the data adjusted_var: bool if one should have VaR adjusted for skew and kurtosis (Cornish-Fisher-Expansion) student_t: bool If one should use the student-t distribution percentile: int var percentile data_range: int Number of rows you want to use VaR over portfolio: bool If the data is a portfolio  "},{"id":45,"href":"/OpenBBTerminal/SDK/common/ta/ad/","title":"Ad","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.ad(data: pandas.core.frame.DataFrame, use_open: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Calculate AD technical indicator\nParameters ---------- data : pd.DataFrame Dataframe of prices with OHLC and Volume use_open : bool Whether to use open prices Returns ------- pd.DataFrame Dataframe with technical indicator  Getting charts    common.ta.ad(data: pandas.core.frame.DataFrame, use_open: bool = False, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot AD technical indicator\nParameters ---------- data : pd.DataFrame Dataframe of ohlc prices use_open : bool Whether to use open prices in calculation symbol : str Ticker symbol export: str Format to export data as external_axes : Optional[List[plt.Axes]], optional External axes (3 axes are expected in the list), by default None  "},{"id":46,"href":"/OpenBBTerminal/SDK/common/ta/adosc/","title":"Adosc","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.adosc(data: pandas.core.frame.DataFrame, use_open: bool = False, fast: int = 3, slow: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Calculate AD oscillator technical indicator\nParameters ---------- data : pd.DataFrame Dataframe of OHLC prices use_open : bool Whether to use open prices fast: int Fast value slow: int Slow value Returns ------- pd.DataFrame Dataframe with technical indicator  Getting charts    common.ta.adosc(data: pandas.core.frame.DataFrame, fast: int = 3, slow: int = 10, use_open: bool = False, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display AD Osc Indicator\nParameters ---------- data : pd.DataFrame Dataframe of ohlc prices use_open : bool Whether to use open prices in calculation fast: int Length of fast window slow : int Length of slow window symbol : str Stock ticker export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (3 axes are expected in the list), by default None  "},{"id":47,"href":"/OpenBBTerminal/SDK/common/ta/adx/","title":"Adx","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.adx(high_values: pandas.core.series.Series, low_values: pandas.core.series.Series, close_values: pandas.core.series.Series, window: int = 14, scalar: int = 100, drift: int = 1)    ADX technical indicator\nParameters ---------- high_values: pd.Series High prices low_values: pd.Series Low prices close_values: pd.Series close prices window: int Length of window scalar: int Scalar variable drift: int Drift variable Returns ------- pd.DataFrame DataFrame with adx indicator  Getting charts    common.ta.adx(data: pandas.core.frame.DataFrame, window: int = 14, scalar: int = 100, drift: int = 1, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot ADX indicator\nParameters ---------- data : pd.DataFrame Dataframe with OHLC price data window : int Length of window scalar : int Scalar variable drift : int Drift variable symbol : str Ticker export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":48,"href":"/OpenBBTerminal/SDK/common/ta/aroon/","title":"Aroon","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.aroon(high_values: pandas.core.series.Series, low_values: pandas.core.series.Series, window: int = 25, scalar: int = 100) -\u0026gt; pandas.core.frame.DataFrame    Aroon technical indicator\nParameters ---------- high_values: pd.Series High prices low_values: pd.Series Low prices window : int Length of window scalar : int Scalar variable Returns ------- pd.DataFrame DataFrame with aroon indicator  Getting charts    common.ta.aroon(data: pandas.core.frame.DataFrame, window: int = 25, scalar: int = 100, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot Aroon indicator\nParameters ---------- data: pd.DataFrame Dataframe with OHLC price data window: int Length of window symbol: str Ticker scalar: int Scalar variable export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (3 axes are expected in the list), by default None  "},{"id":49,"href":"/OpenBBTerminal/SDK/common/ta/atr/","title":"Atr","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.atr(high_prices: pandas.core.series.Series, low_prices: pandas.core.series.Series, close_prices: pandas.core.series.Series, window: int = 14, mamode: str = \u0026lsquo;ema\u0026rsquo;, offset: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Average True Range\nParameters ---------- high_prices : pd.DataFrame High prices low_prices : pd.DataFrame Low prices close_prices : pd.DataFrame Close prices window : int Length of window mamode: str Type of filter offset : int Offset value Returns ------- pd.DataFrame Dataframe of atr  Getting charts    common.ta.atr(data: pandas.core.frame.DataFrame, symbol: str = \u0026lsquo;\u0026rsquo;, window: int = 14, mamode: str = \u0026lsquo;sma\u0026rsquo;, offset: int = 0, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Show ATR\nParameters ---------- data : pd.DataFrame Dataframe of ohlc prices symbol : str Ticker symbol window : int Length of window to calculate upper channel export : str Format of export file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":50,"href":"/OpenBBTerminal/SDK/common/ta/bbands/","title":"Bbands","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.bbands(close_values: pandas.core.series.Series, window: int = 15, n_std: float = 2, mamode: str = \u0026lsquo;ema\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Calculate Bollinger Bands\nParameters ---------- close_values : pd.DataFrame DataFrame of sclose prices window : int Length of window to calculate BB n_std : float Number of standard deviations to show mamode : str Method of calculating average Returns ------- df_ta: pd.DataFrame Dataframe of bollinger band data  Getting charts    common.ta.bbands(data: pandas.core.frame.DataFrame, symbol: str = \u0026lsquo;\u0026rsquo;, window: int = 15, n_std: float = 2, mamode: str = \u0026lsquo;sma\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Show bollinger bands\nParameters ---------- data : pd.DataFrame Dataframe of ohlc prices symbol : str Ticker symbol window : int Length of window to calculate BB n_std : float Number of standard deviations to show mamode : str Method of calculating average export : str Format of export file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":51,"href":"/OpenBBTerminal/SDK/common/ta/cci/","title":"Cci","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.cci(data: pandas.core.frame.DataFrame, window: int = 14, scalar: float = 0.0015) -\u0026gt; pandas.core.frame.DataFrame    Commodity channel index\nParameters ---------- high_vals: pd.Series High values low_values: pd.Series Low values close-values: pd.Series Close values window: int Length of window scalar: float Scalar variable Returns ---------- pd.DataFrame Dataframe of technical indicator  Getting charts    common.ta.cci(data: pandas.core.frame.DataFrame, window: int = 14, scalar: float = 0.0015, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display CCI Indicator\nParameters ---------- data : pd.DataFrame Dataframe of OHLC window : int Length of window scalar : float Scalar variable symbol : str Stock ticker export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":52,"href":"/OpenBBTerminal/SDK/common/ta/cg/","title":"Cg","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.cg(values: pandas.core.series.Series, window: int) -\u0026gt; pandas.core.frame.DataFrame    Center of gravity\nParameters ---------- values: pd.DataFrame Data to use with close being titled values window: int Length for indicator window Returns ---------- pd.DataFrame Dataframe of technical indicator  Getting charts    common.ta.cg(data: pandas.core.series.Series, window: int = 14, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display center of gravity Indicator\nParameters ---------- data : pd.Series Series of values window : int Length of window symbol : str Stock ticker export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":53,"href":"/OpenBBTerminal/SDK/common/ta/donchian/","title":"Donchian","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.donchian(high_prices: pandas.core.series.Series, low_prices: pandas.core.series.Series, upper_length: int = 20, lower_length: int = 20) -\u0026gt; pandas.core.frame.DataFrame    Calculate Donchian Channels\nParameters ---------- high_prices : pd.DataFrame High prices low_prices : pd.DataFrame Low prices upper_length : int Length of window to calculate upper channel lower_length : int Length of window to calculate lower channel Returns ------- pd.DataFrame Dataframe of upper and lower channels  Getting charts    common.ta.donchian(data: pandas.core.frame.DataFrame, symbol: str = \u0026lsquo;\u0026rsquo;, upper_length: int = 20, lower_length: int = 20, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Show donchian channels\nParameters ---------- data : pd.DataFrame Dataframe of ohlc prices symbol : str Ticker symbol upper_length : int Length of window to calculate upper channel lower_length : int Length of window to calculate lower channel export : str Format of export file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":54,"href":"/OpenBBTerminal/SDK/common/ta/ema/","title":"Ema","parent":"ta","content":"Get underlying data    common.ta.ema(data: pandas.core.frame.DataFrame, length: int = 50, offset: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Gets exponential moving average (EMA) for stock\nParameters ---------- data: pd.DataFrame Dataframe of dates and prices length: int Length of EMA window offset: int Length of offset Returns ---------- pd.DataFrame Dataframe containing prices and EMA  "},{"id":55,"href":"/OpenBBTerminal/SDK/common/ta/fib/","title":"Fib","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.fib(data: pandas.core.frame.DataFrame, limit: int = 120, start_date: Any = None, end_date: Any = None) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas._libs.tslibs.timestamps.Timestamp, pandas._libs.tslibs.timestamps.Timestamp, float, float]    Calculate Fibonacci levels\nParameters ---------- data : pd.DataFrame Dataframe of prices limit : int Days to look back for retracement start_date : Any Custom start date for retracement end_date : Any Custom end date for retracement Returns ------- df : pd.DataFrame Dataframe of fib levels min_date: pd.Timestamp Date of min point max_date: pd.Timestamp: Date of max point min_pr: float Price at min point max_pr: float Price at max point  Getting charts    common.ta.fib(data: pandas.core.frame.DataFrame, limit: int = 120, start_date: Optional[str] = None, end_date: Optional[str] = None, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Calculate fibonacci retracement levels\nParameters ---------- data: pd.DataFrame OHLC data limit: int Days to lookback start_date: Optional[str, None] User picked date for starting retracement end_date: Optional[str, None] User picked date for ending retracement symbol: str Ticker symbol export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":56,"href":"/OpenBBTerminal/SDK/common/ta/fisher/","title":"Fisher","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.fisher(high_vals: pandas.core.series.Series, low_vals: pandas.core.series.Series, window: int = 14) -\u0026gt; pandas.core.frame.DataFrame    Fisher Transform\nParameters ---------- high_vals: pd.Series High values low_vals: pd.Series Low values window: int Length for indicator window Returns ---------- df_ta: pd.DataFrame Dataframe of technical indicator  Getting charts    common.ta.fisher(data: pandas.core.frame.DataFrame, window: int = 14, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display Fisher Indicator\nParameters ---------- data : pd.DataFrame Dataframe of OHLC prices window : int Length of window symbol : str Ticker string export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (3 axes are expected in the list), by default None  "},{"id":57,"href":"/OpenBBTerminal/SDK/common/ta/hma/","title":"Hma","parent":"ta","content":"Get underlying data    common.ta.hma(data: pandas.core.frame.DataFrame, length: int = 50, offset: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Gets hull moving average (HMA) for stock\nParameters ---------- data: pd.DataFrame Dataframe of dates and prices length: int Length of SMA window offset: int Length of offset Returns ---------- df_ta: pd.DataFrame Dataframe containing prices and HMA  "},{"id":58,"href":"/OpenBBTerminal/SDK/common/ta/kc/","title":"Kc","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.kc(high_prices: pandas.core.series.Series, low_prices: pandas.core.series.Series, close_prices: pandas.core.series.Series, window: int = 20, scalar: float = 2, mamode: str = \u0026lsquo;ema\u0026rsquo;, offset: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Keltner Channels\nParameters ---------- high_prices : pd.DataFrame High prices low_prices : pd.DataFrame Low prices close_prices : pd.DataFrame Close prices window : int Length of window scalar: float Scalar value mamode: str Type of filter offset : int Offset value Returns ------- pd.DataFrame Dataframe of rolling kc  Getting charts    common.ta.kc(data: pandas.core.frame.DataFrame, window: int = 20, scalar: float = 2, mamode: str = \u0026lsquo;ema\u0026rsquo;, offset: int = 0, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    View Keltner Channels Indicator\nParameters ---------- data: pd.DataFrame Dataframe of ohlc prices window: int Length of window scalar: float Scalar value mamode: str Type of filter offset: int Offset value symbol: str Ticker symbol export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":59,"href":"/OpenBBTerminal/SDK/common/ta/ma/","title":"Ma","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.ma(data: pandas.core.series.Series, window: List[int] = None, offset: int = 0, ma_type: str = \u0026lsquo;EMA\u0026rsquo;, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None) -\u0026gt; None    Plots MA technical indicator\nParameters ---------- data: pd.Series Series of prices window: List[int] Length of EMA window offset: int Offset variable ma_type: str Type of moving average. Either \u0026quot;EMA\u0026quot; \u0026quot;ZLMA\u0026quot; or \u0026quot;SMA\u0026quot; symbol: str Ticker export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  Getting charts    common.ta.ma(data: pandas.core.series.Series, window: List[int] = None, offset: int = 0, ma_type: str = \u0026lsquo;EMA\u0026rsquo;, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Plots MA technical indicator\nParameters ---------- data: pd.Series Series of prices window: List[int] Length of EMA window offset: int Offset variable ma_type: str Type of moving average. Either \u0026quot;EMA\u0026quot; \u0026quot;ZLMA\u0026quot; or \u0026quot;SMA\u0026quot; symbol: str Ticker export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":60,"href":"/OpenBBTerminal/SDK/common/ta/macd/","title":"Macd","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.macd(values: pandas.core.frame.DataFrame, n_fast: int = 12, n_slow: int = 26, n_signal: int = 9) -\u0026gt; pandas.core.frame.DataFrame    Moving average convergence divergence\nParameters ---------- values: pd.Series Values for calculation n_fast : int Fast period n_slow : int Slow period n_signal : int Signal period Returns ---------- pd.DataFrame Dataframe of technical indicator  Getting charts    common.ta.macd(data: pandas.core.series.Series, n_fast: int = 12, n_slow: int = 26, n_signal: int = 9, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot MACD signal\nParameters ---------- data : pd.Series Values to input n_fast : int Fast period n_slow : int Slow period n_signal : int Signal period symbol : str Stock ticker export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":61,"href":"/OpenBBTerminal/SDK/common/ta/obv/","title":"Obv","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.obv(data: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    On Balance Volume\nParameters ---------- data: pd.DataFrame Dataframe of OHLC prices Returns ------- pd.DataFrame Dataframe with technical indicator  Getting charts    common.ta.obv(data: pandas.core.frame.DataFrame, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot OBV technical indicator\nParameters ---------- data : pd.DataFrame Dataframe of ohlc prices symbol : str Ticker export: str Format to export data as external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":62,"href":"/OpenBBTerminal/SDK/common/ta/rsi/","title":"Rsi","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.rsi(values: pandas.core.series.Series, window: int = 14, scalar: float = 100, drift: int = 1) -\u0026gt; pandas.core.frame.DataFrame    Relative strength index\nParameters ---------- values: pd.Series Dataframe of prices window: int Length of window scalar: float Scalar variable drift: int Drift variable Returns ---------- pd.DataFrame Dataframe of technical indicator  Getting charts    common.ta.rsi(data: pandas.core.series.Series, window: int = 14, scalar: float = 100.0, drift: int = 1, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display RSI Indicator\nParameters ---------- data : pd.Series Values to input window : int Length of window scalar : float Scalar variable drift : int Drift variable symbol : str Stock ticker export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":63,"href":"/OpenBBTerminal/SDK/common/ta/sma/","title":"Sma","parent":"ta","content":"Get underlying data    common.ta.sma(data: pandas.core.frame.DataFrame, length: int = 50, offset: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Gets simple moving average (EMA) for stock\n Parameters ---------- data: pd.DataFrame Dataframe of dates and prices length: int Length of SMA window offset: int Length of offset Returns ---------- pd.DataFrame Dataframe containing prices and SMA  "},{"id":64,"href":"/OpenBBTerminal/SDK/common/ta/stoch/","title":"Stoch","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.stoch(high_vals: pandas.core.series.Series, low_vals: pandas.core.series.Series, close_vals: pandas.core.series.Series, fastkperiod: int = 14, slowdperiod: int = 3, slowkperiod: int = 3)    Stochastic oscillator\nParameters ---------- high_vals: pd.Series High values low_vals: pd.Series Low values close-vals: pd.Series Close values fastkperiod : int Fast k period slowdperiod : int Slow d period slowkperiod : int Slow k period Returns ---------- pd.DataFrame Dataframe of technical indicator  Getting charts    common.ta.stoch(data: pandas.core.frame.DataFrame, fastkperiod: int = 14, slowdperiod: int = 3, slowkperiod: int = 3, symbol: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Plot stochastic oscillator signal\nParameters ---------- data : pd.DataFrame Dataframe of OHLC prices fastkperiod : int Fast k period slowdperiod : int Slow d period slowkperiod : int Slow k period symbol : str Stock ticker symbol export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (3 axes are expected in the list), by default None  "},{"id":65,"href":"/OpenBBTerminal/SDK/common/ta/vwap/","title":"Vwap","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    common.ta.vwap(data: pandas.core.frame.DataFrame, offset: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Gets volume weighted average price (VWAP)\nParameters ---------- data: pd.DataFrame Dataframe of dates and prices offset: int Length of offset Returns ---------- df_vwap: pd.DataFrame Dataframe with VWAP data  Getting charts    common.ta.vwap(data: pandas.core.frame.DataFrame, symbol: str = \u0026lsquo;\u0026rsquo;, start_date: str = None, end_date: str = None, offset: int = 0, interval: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plots VWMA technical indicator\nParameters ---------- data : pd.DataFrame Dataframe of OHLC prices symbol : str Ticker offset : int Offset variable start_date: datetime Start date to get data from with end_date: datetime End date to get data from with interval : str Interval of data export : str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (3 axes are expected in the list), by default None  "},{"id":66,"href":"/OpenBBTerminal/SDK/common/ta/wma/","title":"Wma","parent":"ta","content":"Get underlying data    common.ta.wma(data: pandas.core.frame.DataFrame, length: int = 50, offset: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Gets weighted moving average (WMA) for stock\nParameters ---------- data: pd.DataFrame Dataframe of dates and prices length: int Length of SMA window offset: int Length of offset Returns ---------- df_ta: pd.DataFrame Dataframe containing prices and WMA  "},{"id":67,"href":"/OpenBBTerminal/SDK/common/ta/zlma/","title":"Zlma","parent":"ta","content":"Get underlying data    common.ta.zlma(data: pandas.core.frame.DataFrame, length: int = 50, offset: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Gets zero-lagged exponential moving average (ZLEMA) for stock\nParameters ---------- data: pd.DataFrame Dataframe of dates and prices length: int Length of EMA window offset: int Length of offset Returns ---------- df_ta: pd.DataFrame Dataframe containing prices and EMA  "},{"id":68,"href":"/OpenBBTerminal/SDK/crypto/candles/","title":"Candles","parent":"crypto","content":"Get underlying data    crypto.candles(candles_df: \u0026lsquo;pd.DataFrame\u0026rsquo;, volume: \u0026lsquo;bool\u0026rsquo; = True, ylabel: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, title: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, external_axes: \u0026lsquo;list[plt.Axes] | None\u0026rsquo; = None, yscale: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;linear\u0026rsquo;) -\u0026gt; \u0026lsquo;None\u0026rsquo;    Plot candle chart from dataframe. [Source: Binance]\nParameters ---------- candles_df: pd.DataFrame Dataframe containing time and OHLCV volume: bool If volume data shall be plotted, by default True ylabel: str Y-label of the graph, by default \u0026quot;\u0026quot; title: str Title of graph, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None yscale : str Scaling for y axis. Either linear or log  "},{"id":69,"href":"/OpenBBTerminal/SDK/crypto/chart/","title":"Chart","parent":"crypto","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.chart(prices_df: \u0026lsquo;pd.DataFrame\u0026rsquo;, to_symbol: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, from_symbol: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, source: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, exchange: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, interval: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, external_axes: \u0026lsquo;list[plt.Axes] | None\u0026rsquo; = None, yscale: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;linear\u0026rsquo;) -\u0026gt; \u0026lsquo;None\u0026rsquo;    Load data for Technical Analysis\nParameters ---------- prices_df: pd.DataFrame Cryptocurrency to_symbol: str Coin (only used for chart title), by default \u0026quot;\u0026quot; from_symbol: str Currency (only used for chart title), by default \u0026quot;\u0026quot; yscale: str Scale for y axis of plot Either linear or log  Getting charts    crypto.chart(prices_df: \u0026lsquo;pd.DataFrame\u0026rsquo;, to_symbol: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, from_symbol: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, source: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, exchange: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, interval: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;\u0026rsquo;, external_axes: \u0026lsquo;list[plt.Axes] | None\u0026rsquo; = None, yscale: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;linear\u0026rsquo;, chart=True) -\u0026gt; \u0026lsquo;None\u0026rsquo;    Load data for Technical Analysis\nParameters ---------- prices_df: pd.DataFrame Cryptocurrency to_symbol: str Coin (only used for chart title), by default \u0026quot;\u0026quot; from_symbol: str Currency (only used for chart title), by default \u0026quot;\u0026quot; yscale: str Scale for y axis of plot Either linear or log  "},{"id":70,"href":"/OpenBBTerminal/SDK/crypto/dd/active/","title":"Active","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.active(symbol: str, interval: str = \u0026lsquo;24h\u0026rsquo;, start_date: int = 1262300400, end_date: int = 1666777200) -\u0026gt; pandas.core.frame.DataFrame    Returns active addresses of a certain symbol [Source: https://glassnode.com]\nParameters ---------- symbol : str Asset to search active addresses (e.g., BTC) start_date : int Initial date timestamp (e.g., 1_614_556_800) end_date : int End date timestamp (e.g., 1_614_556_800) interval : str Interval frequency (e.g., 24h) Returns ------- pd.DataFrame active addresses over time  Getting charts    crypto.dd.active(symbol: str, start_date: int = 1577836800, end_date: int = 1609459200, interval: str = \u0026lsquo;24h\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display active addresses of a certain symbol over time [Source: https://glassnode.org]\nParameters ---------- symbol : str Asset to search active addresses (e.g., BTC) start_date : int Initial date timestamp (e.g., 1_614_556_800) end_date : int End date timestamp (e.g., 1_614_556_800) interval : str Interval frequency (possible values are: 24h, 1w, 1month) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":71,"href":"/OpenBBTerminal/SDK/crypto/dd/all_binance_trading_pairs/","title":"All Binance Trading Pairs","parent":"dd","content":"Get underlying data    crypto.dd.all_binance_trading_pairs() -\u0026gt; pandas.core.frame.DataFrame    Returns all available pairs on Binance in DataFrame format. DataFrame has 3 columns symbol, baseAsset, quoteAsset example row: ETHBTC | ETH | BTC [Source: Binance]\nReturns ------- pd.DataFrame All available pairs on Binance Columns: symbol, baseAsset, quoteAsset  "},{"id":72,"href":"/OpenBBTerminal/SDK/crypto/dd/balance/","title":"Balance","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.balance(from_symbol: str, to_symbol: str = \u0026lsquo;USDT\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get account holdings for asset. [Source: Binance]\nParameters ---------- from_symbol: str Cryptocurrency to_symbol: str Cryptocurrency Returns ------- pd.DataFrame Dataframe with account holdings for an asset  Getting charts    crypto.dd.balance(from_symbol: str, to_symbol: str = \u0026lsquo;USDT\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get account holdings for asset. [Source: Binance]\nParameters ---------- from_symbol: str Cryptocurrency to_symbol: str Cryptocurrency export: str Export dataframe data to csv,json,xlsx  "},{"id":73,"href":"/OpenBBTerminal/SDK/crypto/dd/basic/","title":"Basic","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.basic(symbol: str = \u0026lsquo;btc-bitcoin\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Basic coin information [Source: CoinPaprika]\nParameters ---------- symbol: str Coin id Returns ------- pd.DataFrame Metric, Value  Getting charts    crypto.dd.basic(symbol: str = \u0026lsquo;BTC\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get basic information for coin. Like: name, symbol, rank, type, description, platform, proof_type, contract, tags, parent. [Source: CoinPaprika]\nParameters ---------- symbol: str Cryptocurrency symbol (e.g. BTC) export: str Export dataframe data to csv,json,xlsx  "},{"id":74,"href":"/OpenBBTerminal/SDK/crypto/dd/binance_available_quotes_for_each_coin/","title":"Binance Available Quotes for Each Coin","parent":"dd","content":"Get underlying data    crypto.dd.binance_available_quotes_for_each_coin() -\u0026gt; dict    Helper methods that for every coin available on Binance add all quote assets. [Source: Binance]\nReturns ------- dict: All quote assets for given coin {'ETH' : ['BTC', 'USDT' ...], 'UNI' : ['ETH', 'BTC','BUSD', ...]  "},{"id":75,"href":"/OpenBBTerminal/SDK/crypto/dd/book/","title":"Book","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.book(from_symbol: str, limit: int = 100, to_symbol: str = \u0026lsquo;USDT\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get order book for currency. [Source: Binance]\nParameters ---------- from_symbol: str Cryptocurrency symbol limit: int Limit parameter. Adjusts the weight to_symbol: str Quote currency (what to view coin vs) Returns ------- pd.DataFrame Dataframe containing orderbook  Getting charts    crypto.dd.book(from_symbol: str, limit: int = 100, to_symbol: str = \u0026lsquo;USDT\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Get order book for currency. [Source: Binance]\nParameters ---------- from_symbol: str Cryptocurrency symbol limit: int Limit parameter. Adjusts the weight to_symbol: str Quote currency (what to view coin vs) export: str Export dataframe data to csv,json,xlsx external_axes : Optional[List[plt.Axes]] External axes (1 axis is expected in the list), by default None  "},{"id":76,"href":"/OpenBBTerminal/SDK/crypto/dd/btcrb/","title":"Btcrb","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.btcrb(start_date: str = \u0026lsquo;2010-01-01\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;)    Get bitcoin price data [Price data from source: https://glassnode.com] [Inspired by: https://blockchaincenter.net]\nParameters ---------- start_date : str Initial date, format YYYY-MM-DD end_date : str Final date, format YYYY-MM-DD  Getting charts    crypto.dd.btcrb(start_date: str = \u0026lsquo;2010-01-01\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Displays bitcoin rainbow chart [Price data from source: https://glassnode.com] [Inspired by: https://blockchaincenter.net]\nParameters ---------- start_date : int Initial date, format YYYY-MM-DD end_date : int Final date, format YYYY-MM-DD export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":77,"href":"/OpenBBTerminal/SDK/crypto/dd/candles/","title":"Candles","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.candles(symbol: str, interval: str = \u0026lsquo;24h\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get candles for chosen trading pair and time interval. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH interval: str Time interval. One from 1min, 5min ,15min, 1hour, 6hour, 24hour Returns ------- pd.DataFrame Candles for chosen trading pair.  Getting charts    crypto.dd.candles(symbol: str, interval: str = \u0026lsquo;24h\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get candles for chosen trading pair and time interval. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH interval: str Time interval. One from 1m, 5m ,15m, 1h, 6h, 24h export : str Export dataframe data to csv,json,xlsx file  "},{"id":78,"href":"/OpenBBTerminal/SDK/crypto/dd/cbbook/","title":"Cbbook","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.cbbook(symbol: str) -\u0026gt; Tuple[numpy.ndarray, numpy.ndarray, str, dict]    Get orders book for chosen trading pair. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH Returns ------- Tuple[np.array, np.array, str, dict] array with bid prices, order sizes and cumulative order sizes array with ask prices, order sizes and cumulative order sizes trading pair dict with raw data  Getting charts    crypto.dd.cbbook(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Displays a list of available currency pairs for trading. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":79,"href":"/OpenBBTerminal/SDK/crypto/dd/change/","title":"Change","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.change(symbol: str, exchange: str = \u0026lsquo;binance\u0026rsquo;, start_date: int = 1262300400, end_date: int = 1666777200) -\u0026gt; pandas.core.frame.DataFrame    Returns 30d change of the supply held in exchange wallets of a certain symbol. [Source: https://glassnode.com]\nParameters ---------- symbol : str Asset symbol to search supply (e.g., BTC) exchange : str Exchange to check net position change (e.g., binance) start_date : int Initial date timestamp (e.g., 1_614_556_800) end_date : int End date timestamp (e.g., 1_614_556_800) Returns ------- pd.DataFrame supply change in exchange wallets of a certain symbol over time  Getting charts    crypto.dd.change(symbol: str, exchange: str = \u0026lsquo;binance\u0026rsquo;, start_date: int = 1577836800, end_date: int = 1609459200, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display 30d change of the supply held in exchange wallets. [Source: https://glassnode.org]\nParameters ---------- symbol : str Asset to search active addresses (e.g., BTC) exchange : str Exchange to check net position change (possible values are: aggregated, binance, bittrex, coinex, gate.io, gemini, huobi, kucoin, poloniex, bibox, bigone, bitfinex, hitbtc, kraken, okex, bithumb, zb.com, cobinhood, bitmex, bitstamp, coinbase, coincheck, luno) start_date : int Initial date timestamp (e.g., 1_614_556_800) end_date : int End date timestamp (e.g., 1_614_556_800) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":80,"href":"/OpenBBTerminal/SDK/crypto/dd/check_valid_binance_str/","title":"Check Valid Binance Str","parent":"dd","content":"Get underlying data    crypto.dd.check_valid_binance_str(symbol: str) -\u0026gt; str    Check if symbol is in defined binance. [Source: Bin\n"},{"id":81,"href":"/OpenBBTerminal/SDK/crypto/dd/close/","title":"Close","parent":"dd","content":"Get underlying data    crypto.dd.close(symbol: str, start_date: str = \u0026lsquo;2010-01-01\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, print_errors: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Returns the price of a cryptocurrency [Source: https://glassnode.com]\nParameters ---------- symbol : str Crypto to check close price (BTC or ETH) start_date : str Initial date, format YYYY-MM-DD end_date : str Final date, format YYYY-MM-DD print_errors: bool Flag to print errors. Default: True Returns ------- pd.DataFrame price over time  "},{"id":82,"href":"/OpenBBTerminal/SDK/crypto/dd/coin/","title":"Coin","parent":"dd","content":"Get underlying data    crypto.dd.coin(symbol: str = \u0026lsquo;eth-ethereum\u0026rsquo;) -\u0026gt; dict    Get coin by id [Source: CoinPaprika]\nParameters ---------- symbol: str id of coin from coinpaprika e.g. Ethereum - \u0026gt; 'eth-ethereum' Returns ------- dict Coin response  "},{"id":83,"href":"/OpenBBTerminal/SDK/crypto/dd/coin_market_chart/","title":"Coin Market Chart","parent":"dd","content":"Get underlying data    crypto.dd.coin_market_chart(symbol: str = \u0026lsquo;\u0026rsquo;, vs_currency: str = \u0026lsquo;usd\u0026rsquo;, days: int = 30, **kwargs: Any) -\u0026gt; pandas.core.frame.DataFrame    Get prices for given coin. [Source: CoinGecko]\nParameters ---------- vs_currency: str currency vs which display data days: int number of days to display the data kwargs Returns ------- pandas.DataFrame Prices for given coin Columns: time, price, currency  "},{"id":84,"href":"/OpenBBTerminal/SDK/crypto/dd/eb/","title":"Eb","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.eb(symbol: str, exchange: str = \u0026lsquo;binance\u0026rsquo;, start_date: int = 1262300400, end_date: int = 1666777200) -\u0026gt; pandas.core.frame.DataFrame    Returns the total amount of coins held on exchange addresses in units and percentage. [Source: https://glassnode.com]\nParameters ---------- symbol : str Asset to search active addresses (e.g., BTC) exchange : str Exchange to check net position change (e.g., binance) start_date : int Initial date timestamp (e.g., 1_614_556_800) end_date : int End date timestamp (e.g., 1_614_556_800) Returns ------- pd.DataFrame total amount of coins in units/percentage and symbol price over time  Getting charts    crypto.dd.eb(symbol: str, exchange: str = \u0026lsquo;binance\u0026rsquo;, start_date: int = 1577836800, end_date: int = 1609459200, percentage: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display total amount of coins held on exchange addresses in units and percentage. [Source: https://glassnode.org]\nParameters ---------- symbol : str Asset to search active addresses (e.g., BTC) exchange : str Exchange to check net position change (possible values are: aggregated, binance, bittrex, coinex, gate.io, gemini, huobi, kucoin, poloniex, bibox, bigone, bitfinex, hitbtc, kraken, okex, bithumb, zb.com, cobinhood, bitmex, bitstamp, coinbase, coincheck, luno) start_date : int Initial date timestamp (e.g., 1_614_556_800) end_date : int End date timestamp (e.g., 1_614_556_800) percentage : bool Show percentage instead of stacked value. export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":85,"href":"/OpenBBTerminal/SDK/crypto/dd/events/","title":"Events","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.events(symbol: str = \u0026lsquo;eth-ethereum\u0026rsquo;, sortby=\u0026lsquo;date\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get all events related to given coin like conferences, start date of futures trading etc. [Source: CoinPaprika]\nExample of response from API: .. code-block:: json { \u0026quot;id\u0026quot;: \u0026quot;17398-cme-april-first-trade\u0026quot;, \u0026quot;date\u0026quot;: \u0026quot;2018-04-02T00:00:00Z\u0026quot;, \u0026quot;date_to\u0026quot;: \u0026quot;string\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;CME: April First Trade\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;First trade of Bitcoin futures contract for April 2018.\u0026quot;, \u0026quot;is_conference\u0026quot;: false, \u0026quot;link\u0026quot;: \u0026quot;http://www.cmegroup.com/trading/equity-index/us-index/bitcoin_product_calendar_futures.html\u0026quot;, \u0026quot;proof_image_link\u0026quot;: \u0026quot;https://static.coinpaprika.com/storage/cdn/event_images/16635.jpg\u0026quot; } Parameters ---------- symbol: str id of coin from coinpaprika e.g. Ethereum - \u0026gt; 'eth-ethereum' sortby: str Key by which to sort data. Every column name is valid (see for possible values: https://api.coinpaprika.com/docs#tag/Coins/paths/~1coins~1%7Bcoin_id%7D~1events/get). ascend: bool Flag to sort data ascending Returns ------- pandas.DataFrame Events found for given coin Columns: id, date , date_to, name, description, is_conference, link, proof_image_link  Getting charts    crypto.dd.events(symbol: str = \u0026lsquo;BTC\u0026rsquo;, limit: int = 10, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = False, links: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get all events for given coin id. [Source: CoinPaprika]\nParameters ---------- symbol: str Cryptocurrency symbol (e.g. BTC) limit: int Number of records to display sortby: str Key by which to sort data. Every column name is valid (see for possible values: https://api.coinpaprika.com/docs#tag/Coins/paths/~1coins~1%7Bcoin_id%7D~1events/get). ascend: bool Flag to sort data ascending links: bool Flag to display urls export : str Export dataframe data to csv,json,xlsx file  "},{"id":86,"href":"/OpenBBTerminal/SDK/crypto/dd/ex/","title":"Ex","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.ex(symbol: str = \u0026lsquo;eth-ethereum\u0026rsquo;, sortby: str = \u0026lsquo;adjusted_volume_24h_share\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get all exchanges for given coin id. [Source: CoinPaprika]\nParameters ---------- symbol: str Identifier of Coin from CoinPaprika sortby: str Key by which to sort data. Every column name is valid (see for possible values: https://api.coinpaprika.com/v1). ascend: bool Flag to sort data ascending Returns ------- pandas.DataFrame All exchanges for given coin Columns: id, name, adjusted_volume_24h_share, fiats  Getting charts    crypto.dd.ex(symbol: str = \u0026lsquo;btc\u0026rsquo;, limit: int = 10, sortby: str = \u0026lsquo;adjusted_volume_24h_share\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get all exchanges for given coin id. [Source: CoinPaprika]\nParameters ---------- symbol: str Cryptocurrency symbol (e.g. BTC) limit: int Number of records to display sortby: str Key by which to sort data. Every column name is valid (see for possible values: https://api.coinpaprika.com/v1). ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file  "},{"id":87,"href":"/OpenBBTerminal/SDK/crypto/dd/exchanges/","title":"Exchanges","parent":"dd","content":"Get underlying data    crypto.dd.exchanges()    Helper method to get all the exchanges supported by ccxt [Source: https://docs.ccxt.com/en/latest/manual.html]\nParameters ---------- Returns ------- List[str] list of all the exchanges supported by ccxt  "},{"id":88,"href":"/OpenBBTerminal/SDK/crypto/dd/fr/","title":"Fr","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.fr(symbol: str) -\u0026gt; Tuple[str, pandas.core.frame.DataFrame, pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Returns coin fundraising [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check fundraising Returns ------- str launch summary pd.DataFrame Sales rounds pd.DataFrame Treasury Accounts pd.DataFrame Metric Value launch details  Getting charts    crypto.dd.fr(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display coin fundraising [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check coin fundraising export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":89,"href":"/OpenBBTerminal/SDK/crypto/dd/get_mt/","title":"Get Mt","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.get_mt(only_free: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Returns available messari timeseries [Source: https://messari.io/]\nParameters ---------- only_free : bool Display only timeseries available for free Returns ------- pd.DataFrame available timeseries  Getting charts    crypto.dd.get_mt(limit: int = 10, query: str = \u0026lsquo;\u0026rsquo;, only_free: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display messari timeseries list [Source: https://messari.io/]\nParameters ---------- limit : int number to show query : str Query to search across all messari timeseries only_free : bool Display only timeseries available for free export : str Export dataframe data to csv,json,xlsx file  "},{"id":90,"href":"/OpenBBTerminal/SDK/crypto/dd/gh/","title":"Gh","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.gh(symbol: str, dev_activity: bool = False, interval: str = \u0026lsquo;1d\u0026rsquo;, start_date: str = \u0026lsquo;2021-10-26T11:40:00Z\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26T11:40:00Z\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Returns a list of developer activity for a given coin and time interval.\n[Source: https://santiment.net/] Parameters ---------- symbol : str Crypto symbol to check github activity dev_activity: bool Whether to filter only for development activity start_date : int Initial date like string (e.g., 2021-10-01) end_date : int End date like string (e.g., 2021-10-01) interval : str Interval frequency (e.g., 1d) Returns ------- pd.DataFrame developer activity over time  Getting charts    crypto.dd.gh(symbol: str, start_date: str = \u0026lsquo;2021-10-26T11:40:00Z\u0026rsquo;, dev_activity: bool = False, end_date: str = \u0026lsquo;2022-10-26T11:40:00Z\u0026rsquo;, interval: str = \u0026lsquo;1d\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Returns a list of github activity for a given coin and time interval.\n[Source: https://santiment.net/] Parameters ---------- symbol : str Crypto symbol to check github activity dev_activity: bool Whether to filter only for development activity start_date : int Initial date like string (e.g., 2021-10-01) end_date : int End date like string (e.g., 2021-10-01) interval : str Interval frequency (some possible values are: 1h, 1d, 1w) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":91,"href":"/OpenBBTerminal/SDK/crypto/dd/gov/","title":"Gov","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.gov(symbol: str) -\u0026gt; Tuple[str, pandas.core.frame.DataFrame]    Returns coin governance [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check governance Returns ------- str governance summary pd.DataFrame Metric Value with governance details  Getting charts    crypto.dd.gov(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display coin governance [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check coin governance export : str Export dataframe data to csv,json,xlsx file  "},{"id":92,"href":"/OpenBBTerminal/SDK/crypto/dd/headlines/","title":"Headlines","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.headlines(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Gets Sentiment analysis provided by FinBrain\u0026rsquo;s API [Source: finbrain]\nParameters ---------- symbol : str Ticker symbol to get the sentiment analysis from Returns ------- DataFrame() Empty if there was an issue with data retrieval  Getting charts    crypto.dd.headlines(symbol: str, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Sentiment analysis from FinBrain for Cryptocurrencies\nFinBrain collects the news headlines from 15+ major financial news sources on a daily basis and analyzes them to generate sentiment scores for more than 4500 US stocks. FinBrain Technologies develops deep learning algorithms for financial analysis and prediction, which currently serves traders from more than 150 countries all around the world. [Source: https://finbrain.tech] Parameters ---------- symbol: str Cryptocurrency raw : False Display raw table data export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":93,"href":"/OpenBBTerminal/SDK/crypto/dd/inv/","title":"Inv","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.inv(symbol: str) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Returns coin investors [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check investors Returns ------- pd.DataFrame individuals pd.DataFrame organizations  Getting charts    crypto.dd.inv(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display coin investors [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check coin investors export : str Export dataframe data to csv,json,xlsx file  "},{"id":94,"href":"/OpenBBTerminal/SDK/crypto/dd/links/","title":"Links","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.links(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Returns asset\u0026rsquo;s links [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check links Returns ------- pd.DataFrame asset links  Getting charts    crypto.dd.links(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display coin links [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check links export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":95,"href":"/OpenBBTerminal/SDK/crypto/dd/mcapdom/","title":"Mcapdom","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.mcapdom(symbol: str, interval: str = \u0026lsquo;1d\u0026rsquo;, start_date: str = \u0026lsquo;2021-10-26\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Returns market dominance of a coin over time [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check market cap dominance interval : str Interval frequency (possible values are: 5m, 15m, 30m, 1h, 1d, 1w) start_date : int Initial date like string (e.g., 2021-10-01) end_date : int End date like string (e.g., 2021-10-01) Returns ------- pd.DataFrame market dominance percentage over time  Getting charts    crypto.dd.mcapdom(symbol: str, start_date: str = \u0026lsquo;2021-10-26\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, interval: str = \u0026lsquo;1d\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display market dominance of a coin over time [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check market cap dominance start_date : int Initial date like string (e.g., 2021-10-01) end_date : int End date like string (e.g., 2021-10-01) interval : str Interval frequency (possible values are: 5m, 15m, 30m, 1h, 1d, 1w) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":96,"href":"/OpenBBTerminal/SDK/crypto/dd/mkt/","title":"Mkt","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.mkt(symbol: str = \u0026lsquo;eth-ethereum\u0026rsquo;, quotes: str = \u0026lsquo;USD\u0026rsquo;, sortby: str = \u0026lsquo;pct_volume_share\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    All markets for given coin and currency [Source: CoinPaprika]\nParameters ---------- symbol: str Coin Parpika identifier of coin e.g. eth-ethereum quotes: str Comma separated list of quotes to return. Example: quotes=USD,BTC Allowed values: BTC, ETH, USD, EUR, PLN, KRW, GBP, CAD, JPY, RUB, TRY, NZD, AUD, CHF, UAH, HKD, SGD, NGN, PHP, MXN, BRL, THB, CLP, CNY, CZK, DKK, HUF, IDR, ILS, INR, MYR, NOK, PKR, SEK, TWD, ZAR, VND, BOB, COP, PEN, ARS, ISK sortby: str Key by which to sort data. Every column name is valid (see for possible values: https://api.coinpaprika.com/v1). ascend: bool Flag to sort data ascending Returns ------- pandas.DataFrame All markets for given coin and currency  Getting charts    crypto.dd.mkt(from_symbol: str = \u0026lsquo;BTC\u0026rsquo;, to_symbol: str = \u0026lsquo;USD\u0026rsquo;, limit: int = 20, sortby: str = \u0026lsquo;pct_volume_share\u0026rsquo;, ascend: bool = True, links: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get all markets for given coin id. [Source: CoinPaprika]\nParameters ---------- from_symbol: str Cryptocurrency symbol (e.g. BTC) to_symbol: str Quoted currency limit: int Number of records to display sortby: str Key by which to sort data. Every column name is valid (see for possible values: https://api.coinpaprika.com/v1). ascend: bool Flag to sort data ascending links: bool Flag to display urls export : str Export dataframe data to csv,json,xlsx file  "},{"id":97,"href":"/OpenBBTerminal/SDK/crypto/dd/mt/","title":"Mt","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.mt(symbol: str, timeseries_id: str, interval: str = \u0026lsquo;1d\u0026rsquo;, start_date: str = \u0026lsquo;2021-10-26\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;) -\u0026gt; Tuple[pandas.core.frame.DataFrame, str]    Returns messari timeseries [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check messari timeseries timeseries_id : str Messari timeserie id interval : str Interval frequency (possible values are: 5m, 15m, 30m, 1h, 1d, 1w) start : int Initial date like string (e.g., 2021-10-01) end : int End date like string (e.g., 2021-10-01) Returns ------- pd.DataFrame messari timeserie over time str timeserie title  Getting charts    crypto.dd.mt(symbol: str, timeseries_id: str, start_date: str = \u0026lsquo;2021-10-26\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, interval: str = \u0026lsquo;1d\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display messari timeseries [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check market cap dominance timeseries_id: str Obtained by api.crypto.dd.get_mt command start_date : int Initial date like string (e.g., 2021-10-01) end_date : int End date like string (e.g., 2021-10-01) interval : str Interval frequency (possible values are: 5m, 15m, 30m, 1h, 1d, 1w) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":98,"href":"/OpenBBTerminal/SDK/crypto/dd/news/","title":"News","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.news(limit: int = 60, post_kind: str = \u0026lsquo;news\u0026rsquo;, filter_: Optional[str] = None, region: str = \u0026lsquo;en\u0026rsquo;, source: Optional[str] = None, symbol: Optional[str] = None, sortby: str = \u0026lsquo;published_at\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get recent posts from CryptoPanic news aggregator platform. [Source: https://cryptopanic.com/]\nParameters ---------- limit: int number of news to fetch post_kind: str Filter by category of news. Available values: news or media. filter_: Optional[str] Filter by kind of news. One from list: rising|hot|bullish|bearish|important|saved|lol region: str Filter news by regions. Available regions are: en (English), de (Deutsch), nl (Dutch), es (Español), fr (Français), it (Italiano), pt (Português), ru (Русский) sortby: str Key to sort by. ascend: bool Sort in ascend order. Returns ------- pd.DataFrame DataFrame with recent news from different sources filtered by provided parameters.  Getting charts    crypto.dd.news(post_kind: str = \u0026lsquo;news\u0026rsquo;, region: str = \u0026lsquo;en\u0026rsquo;, filter_: Optional[str] = None, source: Optional[str] = None, symbol: Optional[str] = None, limit: int = 25, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display recent posts from CryptoPanic news aggregator platform. [Source: https://cryptopanic.com/]\nParameters ---------- limit: int number of news to display post_kind: str Filter by category of news. Available values: news or media. filter_: Optional[str] Filter by kind of news. One from list: rising|hot|bullish|bearish|important|saved|lol region: str Filter news by regions. Available regions are: en (English), de (Deutsch), nl (Dutch), es (Español), fr (Français), it (Italiano), pt (Português), ru (Русский) ascend: bool Sort in ascending order. export : str Export dataframe data to csv,json,xlsx file  "},{"id":99,"href":"/OpenBBTerminal/SDK/crypto/dd/nonzero/","title":"Nonzero","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.nonzero(symbol: str, start_date: int = 1262300400, end_date: int = 1666777200) -\u0026gt; pandas.core.frame.DataFrame    Returns addresses with non-zero balance of a certain symbol [Source: https://glassnode.com]\nParameters ---------- symbol : str Asset to search (e.g., BTC) start_date : int Initial date timestamp (e.g., 1_577_836_800) end_date : int End date timestamp (e.g., 1_609_459_200) Returns ------- pd.DataFrame addresses with non-zero balances  Getting charts    crypto.dd.nonzero(symbol: str, start_date: int = 1577836800, end_date: int = 1609459200, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display addresses with non-zero balance of a certain symbol [Source: https://glassnode.org]\nParameters ---------- symbol : str Asset to search (e.g., BTC) start_date : int Initial date timestamp (e.g., 1_577_836_800) end_date : int End date timestamp (e.g., 1_609_459_200) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":100,"href":"/OpenBBTerminal/SDK/crypto/dd/ohlc_historical/","title":"Ohlc Historical","parent":"dd","content":"Get underlying data    crypto.dd.ohlc_historical(symbol: str = \u0026lsquo;eth-ethereum\u0026rsquo;, quotes: str = \u0026lsquo;USD\u0026rsquo;, days: int = 90) -\u0026gt; pandas.core.frame.DataFrame    Open/High/Low/Close values with volume and market_cap. [Source: CoinPaprika] Request example: https://api.coinpaprika.com/v1/coins/btc-bitcoin/ohlcv/historical?start=2019-01-01\u0026amp;end=2019-01-20 if the last day is current day it can an change with every request until actual close of the day at 23:59:59 Parameters ---------- symbol: str Paprika coin identifier e.g. eth-ethereum quotes: str returned data quote (available values: usd btc) days: int time range for chart in days. Maximum 365 Returns ------- pandas.DataFrame Open/High/Low/Close values with volume and market_cap.  "},{"id":101,"href":"/OpenBBTerminal/SDK/crypto/dd/oi/","title":"Oi","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.oi(symbol: str, interval: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Returns open interest by exchange for a certain symbol [Source: https://coinglass.github.io/API-Reference/]\nParameters ---------- symbol : str Crypto Symbol to search open interest futures (e.g., BTC) interval : int Frequency (possible values are: 0 for ALL, 2 for 1H, 1 for 4H, 4 for 12H), by default 0 Returns ------- pd.DataFrame open interest by exchange and price  Getting charts    crypto.dd.oi(symbol: str, interval: int = 0, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays open interest by exchange for a certain cryptocurrency [Source: https://coinglass.github.io/API-Reference/]\nParameters ---------- symbol : str Crypto symbol to search open interest (e.g., BTC) interval : int Frequency (possible values are: 0 for ALL, 2 for 1H, 1 for 4H, 4 for 12H), by default 0 export : str Export dataframe data to csv,json,xlsx  "},{"id":102,"href":"/OpenBBTerminal/SDK/crypto/dd/pi/","title":"Pi","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.pi(symbol: str) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame, pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Returns coin product info [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check product info Returns ------- pd.DataFrame Metric, Value with project and technology details pd.DataFrame coin public repos pd.DataFrame coin audits pd.DataFrame coin known exploits/vulns  Getting charts    crypto.dd.pi(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display project info [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check project info export : str Export dataframe data to csv,json,xlsx file  "},{"id":103,"href":"/OpenBBTerminal/SDK/crypto/dd/pr/","title":"Pr","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.pr(main_coin: str, to_symbol: Optional[str] = None, limit: Optional[int] = None, price: Optional[int] = None) -\u0026gt; pandas.core.frame.DataFrame    Fetch data to calculate potential returns of a certain coin. [Source: CoinGecko]\nParameters ---------- main_coin : str Coin loaded to check potential returns for (e.g., algorand) to_symbol : str | None Coin to compare main_coin with (e.g., bitcoin) limit : int | None Number of coins with highest market cap to compare main_coin with (e.g., 5) price Target price of main_coin to check potential returns (e.g., 5) Returns ------- pd.DataFrame Potential returns data Columns: Coin, Current Price, Target Coin, Potential Price, Potential Market Cap ($), Change (%)  Getting charts    crypto.dd.pr(to_symbol: str, from_symbol: Optional[str] = None, limit: Optional[int] = None, price: Optional[int] = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays potential returns of a certain coin. [Source: CoinGecko]\nParameters ---------- to_symbol : str Coin loaded to check potential returns for (e.g., algorand) from_symbol : str | None Coin to compare main_coin with (e.g., bitcoin) limit : int | None Number of coins with highest market cap to compare main_coin with (e.g., 5) price Target price of main_coin to check potential returns (e.g., 5) export : str Export dataframe data to csv,json,xlsx file  "},{"id":104,"href":"/OpenBBTerminal/SDK/crypto/dd/ps/","title":"Ps","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.ps(symbol: str = \u0026lsquo;btc-bitcoin\u0026rsquo;, quotes: str = \u0026lsquo;USD\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get all most important ticker related information for given coin id [Source: CoinPaprika]\n.. code-block:: json { \u0026quot;id\u0026quot;: \u0026quot;btc-bitcoin\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;Bitcoin\u0026quot;, \u0026quot;symbol\u0026quot;: \u0026quot;BTC\u0026quot;, \u0026quot;rank\u0026quot;: 1, \u0026quot;circulating_supply\u0026quot;: 17007062, \u0026quot;total_supply\u0026quot;: 17007062, \u0026quot;max_supply\u0026quot;: 21000000, \u0026quot;beta_value\u0026quot;: 0.735327, \u0026quot;first_data_at\u0026quot;: \u0026quot;2010-11-14T07:20:41Z\u0026quot;, \u0026quot;last_updated\u0026quot;: \u0026quot;2018-11-14T07:20:41Z\u0026quot;, \u0026quot;quotes\u0026quot;: { \u0026quot;USD\u0026quot;: { \u0026quot;price\u0026quot;: 5162.15941296, \u0026quot;volume_24h\u0026quot;: 7304207651.1585, \u0026quot;volume_24h_change_24h\u0026quot;: -2.5, \u0026quot;market_cap\u0026quot;: 91094433242, \u0026quot;market_cap_change_24h\u0026quot;: 1.6, \u0026quot;percent_change_15m\u0026quot;: 0, \u0026quot;percent_change_30m\u0026quot;: 0, \u0026quot;percent_change_1h\u0026quot;: 0, \u0026quot;percent_change_6h\u0026quot;: 0, \u0026quot;percent_change_12h\u0026quot;: -0.09, \u0026quot;percent_change_24h\u0026quot;: 1.59, \u0026quot;percent_change_7d\u0026quot;: 0.28, \u0026quot;percent_change_30d\u0026quot;: 27.39, \u0026quot;percent_change_1y\u0026quot;: -37.99, \u0026quot;ath_price\u0026quot;: 20089, \u0026quot;ath_date\u0026quot;: \u0026quot;2017-12-17T12:19:00Z\u0026quot;, \u0026quot;percent_from_price_ath\u0026quot;: -74.3 } } } Parameters ---------- symbol: str Id of coin from CoinPaprika quotes: str Comma separated quotes to return e.g quotes = USD, BTC Returns ------- pandas.DataFrame Most important ticker related information Columns: Metric, Value  Getting charts    crypto.dd.ps(from_symbol: str = \u0026lsquo;BTC\u0026rsquo;, to_symbol: str = \u0026lsquo;USD\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get ticker information for single coin [Source: CoinPaprika]\nParameters ---------- from_symbol: str Cryptocurrency symbol (e.g. BTC) to_symbol: str Quoted currency export: str Export dataframe data to csv,json,xlsx  "},{"id":105,"href":"/OpenBBTerminal/SDK/crypto/dd/rm/","title":"Rm","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.rm(symbol: str, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Returns coin roadmap [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check roadmap ascend: bool reverse order Returns ------- pd.DataFrame roadmap  Getting charts    crypto.dd.rm(symbol: str, ascend: bool = True, limit: int = 5, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display coin roadmap [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check roadmap ascend: bool reverse order limit : int number to show export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":106,"href":"/OpenBBTerminal/SDK/crypto/dd/show_available_pairs_for_given_symbol/","title":"Show Available Pairs for Given Symbol","parent":"dd","content":"Get underlying data    crypto.dd.show_available_pairs_for_given_symbol(symbol: str = \u0026lsquo;ETH\u0026rsquo;) -\u0026gt; Tuple[str, list]    "},{"id":107,"href":"/OpenBBTerminal/SDK/crypto/dd/stats/","title":"Stats","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.stats(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get 24 hr stats for the product. Volume is in base currency units. Open, high and low are in quote currency units. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH Returns ------- pd.DataFrame 24h stats for chosen trading pair  Getting charts    crypto.dd.stats(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get 24 hr stats for the product. Volume is in base currency units. Open, high and low are in quote currency units. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH export : str Export dataframe data to csv,json,xlsx file  "},{"id":108,"href":"/OpenBBTerminal/SDK/crypto/dd/team/","title":"Team","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.team(symbol: str) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Returns coin team [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check team Returns ------- pd.DataFrame individuals pd.DataFrame organizations  Getting charts    crypto.dd.team(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display coin team [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check coin team export : str Export dataframe data to csv,json,xlsx file  "},{"id":109,"href":"/OpenBBTerminal/SDK/crypto/dd/tk/","title":"Tk","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.tk(symbol: str, coingecko_id: str) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Returns coin tokenomics [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check tokenomics coingecko_id : str ID from coingecko Returns ------- pd.DataFrame Metric Value tokenomics pd.DataFrame Circulating supply overtime  Getting charts    crypto.dd.tk(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display coin tokenomics [Source: https://messari.io/]\nParameters ---------- symbol : str Crypto symbol to check tokenomics export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":110,"href":"/OpenBBTerminal/SDK/crypto/dd/tokenomics/","title":"Tokenomics","parent":"dd","content":"Get underlying data    crypto.dd.tokenomics(symbol: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Get tokenomics for given coin. [Source: CoinGecko]\nParameters ---------- symbol: str coin symbol to check tokenomics Returns ------- pandas.DataFrame Metric, Value with tokenomics  "},{"id":111,"href":"/OpenBBTerminal/SDK/crypto/dd/trades/","title":"Trades","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.trades(symbol: str, limit: int = 1000, side: Optional[Any] = None) -\u0026gt; pandas.core.frame.DataFrame    Get last N trades for chosen trading pair. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH limit: int Last \u0026lt;limit\u0026gt; of trades. Maximum is 1000. side: str You can chose either sell or buy side. If side is not set then all trades will be displayed. Returns ------- pd.DataFrame Last N trades for chosen trading pairs.  Getting charts    crypto.dd.trades(symbol: str, limit: int = 20, side: Optional[str] = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display last N trades for chosen trading pair. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH limit: int Last \u0026lt;limit\u0026gt; of trades. Maximum is 1000. side: Optional[str] You can chose either sell or buy side. If side is not set then all trades will be displayed. export : str Export dataframe data to csv,json,xlsx file  "},{"id":112,"href":"/OpenBBTerminal/SDK/crypto/dd/trading_pair_info/","title":"Trading Pair Info","parent":"dd","content":"Get underlying data    crypto.dd.trading_pair_info(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get information about chosen trading pair. [Source: Coinbase]\nParameters ---------- symbol: str Trading pair of coins on Coinbase e.g ETH-USDT or UNI-ETH Returns ------- pd.DataFrame Basic information about given trading pair  "},{"id":113,"href":"/OpenBBTerminal/SDK/crypto/dd/trading_pairs/","title":"Trading Pairs","parent":"dd","content":"Get underlying data    crypto.dd.trading_pairs() -\u0026gt; List[dict]    Helper method that return all trading pairs on binance. Methods ause this data for input for e.g building dataframe with all coins, or to build dict of all trading pairs. [Source: Binance]\nReturns ------- List[dict] list of dictionaries in format: [ {'symbol': 'ETHBTC', 'status': 'TRADING', 'baseAsset': 'ETH', 'baseAssetPrecision': 8, 'quoteAsset': 'BTC', 'quotePrecision': 8, 'quoteAssetPrecision': 8, 'baseCommissionPrecision': 8, 'quoteCommissionPrecision': 8, 'orderTypes': ['LIMIT', 'LIMIT_MAKER', 'MARKET', 'STOP_LOSS_LIMIT', 'TAKE_PROFIT_LIMIT'], 'icebergAllowed': True, 'ocoAllowed': True, 'quoteOrderQtyMarketAllowed': True, 'isSpotTradingAllowed': True, 'isMarginTradingAllowed': True, 'filters': [{'filterType': 'PRICE_FILTER', 'minPrice': '0.00000100', 'maxPrice': '922327.00000000', 'tickSize': '0.00000100'}, {'filterType': 'PERCENT_PRICE', 'multiplierUp': '5', 'multiplierDown': '0.2', 'avgPriceMins': 5}, {'filterType': 'LOT_SIZE', 'minQty': '0.00100000', 'maxQty': '100000.00000000', 'stepSize': '0.00100000'}, {'filterType': 'MIN_NOTIONAL', 'minNotional': '0.00010000', 'applyToMarket': True, 'avgPriceMins': 5}, {'filterType': 'ICEBERG_PARTS', 'limit': 10}, {'filterType': 'MARKET_LOT_SIZE', 'minQty': '0.00000000', 'maxQty': '930.49505347', 'stepSize': '0.00000000'}, {'filterType': 'MAX_NUM_ORDERS', 'maxNumOrders': 200}, {'filterType': 'MAX_NUM_ALGO_ORDERS', 'maxNumAlgoOrders': 5}], 'permissions': ['SPOT', 'MARGIN']}, ... ]  "},{"id":114,"href":"/OpenBBTerminal/SDK/crypto/dd/twitter/","title":"Twitter","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.dd.twitter(symbol: str = \u0026lsquo;eth-ethereum\u0026rsquo;, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get twitter timeline for given coin id. Not more than last 50 tweets [Source: CoinPaprika]\nParameters ---------- symbol: str id of coin from coinpaprika e.g. Ethereum - \u0026gt; 'eth-ethereum' sortby: str Key by which to sort data. Every column name is valid (see for possible values: https://api.coinpaprika.com/docs#tag/Coins/paths/~1coins~1%7Bcoin_id%7D~1twitter/get). ascend: bool Flag to sort data descending Returns ------- pandas.DataFrame Twitter timeline for given coin. Columns: date, user_name, status, retweet_count, like_count  Getting charts    crypto.dd.twitter(symbol: str = \u0026lsquo;BTC\u0026rsquo;, limit: int = 10, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get twitter timeline for given coin id. Not more than last 50 tweets [Source: CoinPaprika]\nParameters ---------- symbol: str Cryptocurrency symbol (e.g. BTC) limit: int Number of records to display sortby: str Key by which to sort data. Every column name is valid (see for possible values: https://api.coinpaprika.com/docs#tag/Coins/paths/~1coins~1%7Bcoin_id%7D~1twitter/get). ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file  "},{"id":115,"href":"/OpenBBTerminal/SDK/crypto/defi/anchor_data/","title":"Anchor Data","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.anchor_data(address: str = \u0026lsquo;') -\u0026gt; Tuple[Any, Any, str]    Returns anchor protocol earnings data of a certain terra address [Source: https://cryptosaurio.com/]\nParameters ---------- address : str Terra address. Valid terra addresses start with 'terra' Returns ------- Tuple: - pandas.DataFrame: Earnings over time in UST - pandas.DataFrame: History of transactions - str: Overall statistics  Getting charts    crypto.defi.anchor_data(address: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, show_transactions: bool = False, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Displays anchor protocol earnings data of a certain terra address [Source: https://cryptosaurio.com/]\nParameters ---------- asset : str Terra asset {ust,luna,sdt} address : str Terra address. Valid terra addresses start with 'terra' show_transactions : bool Flag to show history of transactions in Anchor protocol for address. Default False export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":116,"href":"/OpenBBTerminal/SDK/crypto/defi/aterra/","title":"Aterra","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.aterra(asset: str = \u0026lsquo;ust\u0026rsquo;, address: str = \u0026lsquo;terra1tmnqgvg567ypvsvk6rwsga3srp7e3lg6u0elp8\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Returns historical data of an asset in a certain terra address [Source: https://terra.engineer/]\nParameters ---------- asset : str Terra asset {ust,luna,sdt} address : str Terra address. Valid terra addresses start with 'terra' Returns ------- pd.DataFrame historical data  Getting charts    crypto.defi.aterra(asset: str = \u0026lsquo;\u0026rsquo;, address: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Displays the 30-day history of specified asset in terra address [Source: https://terra.engineer/]\nParameters ---------- asset : str Terra asset {ust,luna,sdt} address : str Terra address. Valid terra addresses start with 'terra' export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":117,"href":"/OpenBBTerminal/SDK/crypto/defi/ayr/","title":"Ayr","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.ayr() -\u0026gt; pandas.core.frame.DataFrame    Displays the 30-day history of the Anchor Yield Reserve. [Source: https://terra.engineer/]\nReturns ---------- pd.DataFrame Dataframe containing historical data  Getting charts    crypto.defi.ayr(export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Displays the 30-day history of the Anchor Yield Reserve. [Source: https://terra.engineer/]\nParameters ---------- export : str Export dataframe data to csv,json,xlsx file, by default False external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":118,"href":"/OpenBBTerminal/SDK/crypto/defi/dpi/","title":"Dpi","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.dpi(sortby: str = \u0026lsquo;TVL_$\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Scrapes data from DeFi Pulse with all DeFi Pulse crypto protocols. [Source: https://defipulse.com/]\nReturns ------- pd.DataFrame List of DeFi Pulse protocols.  Getting charts    crypto.defi.dpi(limit: int = 10, sortby: str = \u0026lsquo;TVL_$\u0026rsquo;, ascend: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays all DeFi Pulse crypto protocols. [Source: https://defipulse.com/]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data (Possible values are: \u0026quot;Rank\u0026quot;, \u0026quot;Name\u0026quot;, \u0026quot;Chain\u0026quot;, \u0026quot;Sector\u0026quot;, \u0026quot;30D_Users\u0026quot;, \u0026quot;TVL_$\u0026quot;, \u0026quot;1_Day_%\u0026quot;), by default TVL ascend: bool Flag to sort data ascending, by default False export : str Export dataframe data to csv,json,xlsx file, by default False  "},{"id":119,"href":"/OpenBBTerminal/SDK/crypto/defi/dtvl/","title":"Dtvl","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.dtvl(protocol: str) -\u0026gt; pandas.core.frame.DataFrame    Returns information about historical tvl of a defi protocol. [Source: https://docs.llama.fi/api]\nReturns ------- pd.DataFrame Historical tvl  Getting charts    crypto.defi.dtvl(dapps: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Displays historical TVL of different dApps [Source: https://docs.llama.fi/api]\nParameters ---------- dapps: str dApps to search historical TVL. Should be split by , e.g.: anchor,sushiswap,pancakeswap export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":120,"href":"/OpenBBTerminal/SDK/crypto/defi/gacc/","title":"Gacc","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.gacc(cumulative: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get terra blockchain account growth history [Source: https://fcd.terra.dev/swagger]\nParameters ---------- cumulative: bool distinguish between periodical and cumulative account growth data Returns ------- pd.DataFrame historical data of accounts growth  Getting charts    crypto.defi.gacc(kind: str = \u0026lsquo;total\u0026rsquo;, cumulative: bool = False, limit: int = 90, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display terra blockchain account growth history [Source: https://fcd.terra.dev/swagger]\nParameters ---------- limit: int Number of records to display kind: str display total account count or active account count. One from list [active, total] cumulative: bool Flag to show cumulative or discrete values. For active accounts only discrete value are available. export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":121,"href":"/OpenBBTerminal/SDK/crypto/defi/gdapps/","title":"Gdapps","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.gdapps(limit: int = 50) -\u0026gt; pandas.core.frame.DataFrame    Display top dApps (in terms of TVL) grouped by chain. [Source: https://docs.llama.fi/api]\nParameters ---------- limit: int Number of top dApps to display Returns ------- pd.DataFrame Information about DeFi protocols grouped by chain  Getting charts    crypto.defi.gdapps(limit: int = 50, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display top dApps (in terms of TVL) grouped by chain. [Source: https://docs.llama.fi/api]\nParameters ---------- num: int Number of top dApps to display export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":122,"href":"/OpenBBTerminal/SDK/crypto/defi/gov_proposals/","title":"Gov Proposals","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.gov_proposals(status: str = \u0026lsquo;\u0026rsquo;, sortby: str = \u0026lsquo;id\u0026rsquo;, ascend: bool = True, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get terra blockchain governance proposals list [Source: https://fcd.terra.dev/swagger]\nParameters ---------- status: str status of proposal, one from list: ['Voting','Deposit','Passed','Rejected'] sortby: str Key by which to sort data ascend: bool Flag to sort data ascending limit: int Number of records to display Returns ------- pd.DataFrame Terra blockchain governance proposals list  Getting charts    crypto.defi.gov_proposals(limit: int = 10, status: str = \u0026lsquo;all\u0026rsquo;, sortby: str = \u0026lsquo;id\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display terra blockchain governance proposals list [Source: https://fcd.terra.dev/swagger]\nParameters ---------- limit: int Number of records to display status: str status of proposal, one from list: ['Voting','Deposit','Passed','Rejected'] sortby: str Key by which to sort data ascend: bool Flag to sort data ascend export : str Export dataframe data to csv,json,xlsx file  "},{"id":123,"href":"/OpenBBTerminal/SDK/crypto/defi/ldapps/","title":"Ldapps","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.ldapps(limit: int = 100) -\u0026gt; pandas.core.frame.DataFrame    Returns information about listed DeFi protocols, their current TVL and changes to it in the last hour/day/week. [Source: https://docs.llama.fi/api]\nParameters ---------- limit: int The number of dApps to display Returns ------- pd.DataFrame Information about DeFi protocols  Getting charts    crypto.defi.ldapps(limit: int, sortby: str, ascend: bool = False, description: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display information about listed DeFi protocols, their current TVL and changes to it in the last hour/day/week. [Source: https://docs.llama.fi/api]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending description: bool Flag to display description of protocol export : str Export dataframe data to csv,json,xlsx file  "},{"id":124,"href":"/OpenBBTerminal/SDK/crypto/defi/luna_supply/","title":"Luna Supply","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.luna_supply(supply_type: str = \u0026lsquo;lunaSupplyChallengeStats\u0026rsquo;, days: int = 30) -\u0026gt; pandas.core.frame.DataFrame    Get supply history of the Terra ecosystem\nSource: [Smartstake.io] Parameters ---------- supply_type: str Supply type to unpack json days: int Day count to fetch data Returns ------- pd.DataFrame Dataframe of supply history data  Getting charts    crypto.defi.luna_supply(days: int = 30, export: str = \u0026lsquo;\u0026rsquo;, supply_type: str = \u0026lsquo;lunaSupplyChallengeStats\u0026rsquo;, limit: int = 5, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display Luna circulating supply stats\nParameters ---------- days: int Number of days supply_type: str Supply type to unpack json export: str Export type limit: int Number of results display on the terminal Default: 5 external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None Returns None -------  "},{"id":125,"href":"/OpenBBTerminal/SDK/crypto/defi/newsletters/","title":"Newsletters","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.newsletters() -\u0026gt; pandas.core.frame.DataFrame    Scrape all substack newsletters from url list. [Source: substack.com]\nReturns ------- pd.DataFrame DataFrame with recent news from most popular DeFi related newsletters.  Getting charts    crypto.defi.newsletters(limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display DeFi related substack newsletters. [Source: substack.com]\nParameters ---------- limit: int Number of records to display export : str Export dataframe data to csv,json,xlsx file  "},{"id":126,"href":"/OpenBBTerminal/SDK/crypto/defi/pairs/","title":"Pairs","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.pairs(last_days: int = 14, min_volume: int = 100, min_liquidity: int = 0, min_tx: int = 100) -\u0026gt; pandas.core.frame.DataFrame    Get lastly added trade-able pairs on Uniswap with parameters like: * number of days the pair has been active, * minimum trading volume, * minimum liquidity, * number of transactions.\n[Source: https://thegraph.com/en/] Parameters ---------- last_days: int How many days back to look for added pairs. min_volume: int Minimum volume min_liquidity: int Minimum liquidity min_tx: int Minimum number of transactions done in given pool. Returns ------- pd.DataFrame Lastly added pairs on Uniswap DEX.  Getting charts    crypto.defi.pairs(limit: int = 20, days: int = 7, min_volume: int = 20, min_liquidity: int = 0, min_tx: int = 100, sortby: str = \u0026lsquo;created\u0026rsquo;, ascend: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays Lastly added pairs on Uniswap DEX. [Source: https://thegraph.com/en/]\nParameters ---------- limit: int Number of records to display days: int Number of days the pair has been active, min_volume: int Minimum trading volume, min_liquidity: int Minimum liquidity min_tx: int Minimum number of transactions sortby: str Key by which to sort data ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":127,"href":"/OpenBBTerminal/SDK/crypto/defi/pools/","title":"Pools","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.pools() -\u0026gt; pandas.core.frame.DataFrame    Get uniswap pools by volume. [Source: https://thegraph.com/en/]\nReturns ------- pd.DataFrame Trade-able pairs listed on Uniswap by top volume.  Getting charts    crypto.defi.pools(limit: int = 20, sortby: str = \u0026lsquo;volumeUSD\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays uniswap pools by volume. [Source: https://thegraph.com/en/]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data. The table can be sorted by every of its columns (see https://bit.ly/3ORagr1 then press ctrl-enter or execute the query). ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":128,"href":"/OpenBBTerminal/SDK/crypto/defi/sinfo/","title":"Sinfo","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.sinfo(address: str = \u0026lsquo;') -\u0026gt; Tuple[pandas.core.frame.DataFrame, str]    Get staking info for provided terra account [Source: https://fcd.terra.dev/swagger]\nParameters ---------- address: str terra blockchain address e.g. terra1jvwelvs7rdk6j3mqdztq5tya99w8lxk6l9hcqg Returns ------- Tuple[pd.DataFrame, str]: luna delegations and summary report for given address  Getting charts    crypto.defi.sinfo(address: str = \u0026lsquo;\u0026rsquo;, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display staking info for provided terra account address [Source: https://fcd.terra.dev/swagger]\nParameters ---------- address: str terra blockchain address e.g. terra1jvwelvs7rdk6j3mqdztq5tya99w8lxk6l9hcqg limit: int Number of records to display export : str Export dataframe data to csv,json,xlsx file  "},{"id":129,"href":"/OpenBBTerminal/SDK/crypto/defi/sratio/","title":"Sratio","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.sratio(limit: int = 200)    Get terra blockchain staking ratio history [Source: https://fcd.terra.dev/swagger]\nParameters ---------- limit: int The number of ratios to show Returns ------- pd.DataFrame historical staking ratio  Getting charts    crypto.defi.sratio(limit: int = 90, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display terra blockchain staking ratio history [Source: https://fcd.terra.dev/v1]\nParameters ---------- limit: int Number of records to display export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":130,"href":"/OpenBBTerminal/SDK/crypto/defi/sreturn/","title":"Sreturn","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.sreturn(limit: int = 200)    Get terra blockchain staking returns history [Source: https://fcd.terra.dev/v1]\nParameters ---------- limit: int The number of returns to show Returns ------- pd.DataFrame historical staking returns  Getting charts    crypto.defi.sreturn(limit: int = 90, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display terra blockchain staking returns history [Source: https://fcd.terra.dev/swagger]\nParameters ---------- limit: int Number of records to display export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":131,"href":"/OpenBBTerminal/SDK/crypto/defi/stats/","title":"Stats","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.stats() -\u0026gt; pandas.core.frame.DataFrame    Get base statistics about Uniswap DEX. [Source: https://thegraph.com/en/]\nuniswapFactory id: 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f - ethereum address on which Uniswap Factory smart contract was deployed. The factory contract is deployed once from the off-chain source code, and it contains functions that make it possible to create exchange contracts for any ERC20 token that does not already have one. It also functions as a registry of ERC20 tokens that have been added to the system, and the exchange with which they are associated. More: https://docs.uniswap.org/protocol/V1/guides/connect-to-uniswap We use 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f address to fetch all smart contracts that were created with usage of this factory. Returns ------- pd.DataFrame Uniswap DEX statistics like liquidity, volume, number of pairs, number of transactions.  Getting charts    crypto.defi.stats(export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays base statistics about Uniswap DEX. [Source: https://thegraph.com/en/] [Source: https://thegraph.com/en/]\nParameters ---------- export : str Export dataframe data to csv,json,xlsx file  "},{"id":132,"href":"/OpenBBTerminal/SDK/crypto/defi/stvl/","title":"Stvl","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.stvl() -\u0026gt; pandas.core.frame.DataFrame    Returns historical values of the total sum of TVLs from all listed protocols. [Source: https://docs.llama.fi/api]\nReturns ------- pd.DataFrame Historical values of total sum of Total Value Locked from all listed protocols.  Getting charts    crypto.defi.stvl(limit: int = 5, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Displays historical values of the total sum of TVLs from all listed protocols. [Source: https://docs.llama.fi/api]\nParameters ---------- limit: int Number of records to display, by default 5 export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":133,"href":"/OpenBBTerminal/SDK/crypto/defi/swaps/","title":"Swaps","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.swaps(limit: int = 100) -\u0026gt; pandas.core.frame.DataFrame    Get the last 100 swaps done on Uniswap [Source: https://thegraph.com/en/]\nParameters ------- limit: int Number of swaps to return. Maximum possible number: 1000. Returns ------- pd.DataFrame Last 100 swaps on Uniswap  Getting charts    crypto.defi.swaps(limit: int = 10, sortby: str = \u0026lsquo;timestamp\u0026rsquo;, ascend: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays last swaps done on Uniswap [Source: https://thegraph.com/en/]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data. The table can be sorted by every of its columns (see https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2). ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":134,"href":"/OpenBBTerminal/SDK/crypto/defi/tokens/","title":"Tokens","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.tokens(skip: int = 0, limit: int = 100, sortby: str = \u0026lsquo;index\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get list of tokens trade-able on Uniswap DEX. [Source: https://thegraph.com/en/]\nParameters ---------- skip: int Skip n number of records. limit: int Show n number of records. sortby: str The column to sort by ascend: bool Whether to sort in ascending order Returns ------- pd.DataFrame Uniswap tokens with trading volume, transaction count, liquidity.  Getting charts    crypto.defi.tokens(skip: int = 0, limit: int = 20, sortby: str = \u0026lsquo;index\u0026rsquo;, ascend: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays tokens trade-able on Uniswap DEX. [Source: https://thegraph.com/en/]\nParameters ---------- skip: int Number of records to skip limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":135,"href":"/OpenBBTerminal/SDK/crypto/defi/validators/","title":"Validators","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.validators(sortby: str = \u0026lsquo;votingPower\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get information about terra validators [Source: https://fcd.terra.dev/swagger]\nParameters ----------- sortby: str Key by which to sort data. Choose from: validatorName, tokensAmount, votingPower, commissionRate, status, uptime ascend: bool Flag to sort data descending Returns ------- pd.DataFrame terra validators details  Getting charts    crypto.defi.validators(limit: int = 10, sortby: str = \u0026lsquo;votingPower\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display information about terra validators [Source: https://fcd.terra.dev/swagger]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data. Choose from: validatorName, tokensAmount, votingPower, commissionRate, status, uptime ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":136,"href":"/OpenBBTerminal/SDK/crypto/defi/vaults/","title":"Vaults","parent":"defi","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.defi.vaults(chain: Optional[str] = None, protocol: Optional[str] = None, kind: Optional[str] = None, ascend: bool = True, sortby: str = \u0026lsquo;apy\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get DeFi Vaults Information. DeFi Vaults are pools of funds with an assigned strategy which main goal is to maximize returns of its crypto assets. [Source: https://coindix.com/]\nParameters ---------- chain: str Blockchain - one from list [ 'ethereum', 'polygon', 'avalanche', 'bsc', 'terra', 'fantom', 'moonriver', 'celo', 'heco', 'okex', 'cronos', 'arbitrum', 'eth', 'harmony', 'fuse', 'defichain', 'solana', 'optimism' ] protocol: str DeFi protocol - one from list: [ 'aave', 'acryptos', 'alpaca', 'anchor', 'autofarm', 'balancer', 'bancor', 'beefy', 'belt', 'compound', 'convex', 'cream', 'curve', 'defichain', 'geist', 'lido', 'liquity', 'mirror', 'pancakeswap', 'raydium', 'sushi', 'tarot', 'traderjoe', 'tulip', 'ubeswap', 'uniswap', 'venus', 'yearn' ] kind: str Kind/type of vault - one from list: ['lp','single','noimploss','stable'] Returns ------- pd.DataFrame Top 100 DeFi Vaults for given chain/protocol sorted by APY.  Getting charts    crypto.defi.vaults(chain: Optional[str] = None, protocol: Optional[str] = None, kind: Optional[str] = None, limit: int = 10, sortby: str = \u0026lsquo;apy\u0026rsquo;, ascend: bool = True, link: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display Top DeFi Vaults - pools of funds with an assigned strategy which main goal is to maximize returns of its crypto assets. [Source: https://coindix.com/]\nParameters ---------- chain: str Blockchain - one from list [ 'ethereum', 'polygon', 'avalanche', 'bsc', 'terra', 'fantom', 'moonriver', 'celo', 'heco', 'okex', 'cronos', 'arbitrum', 'eth', 'harmony', 'fuse', 'defichain', 'solana', 'optimism' ] protocol: str DeFi protocol - one from list: [ 'aave', 'acryptos', 'alpaca', 'anchor', 'autofarm', 'balancer', 'bancor', 'beefy', 'belt', 'compound', 'convex', 'cream', 'curve', 'defichain', 'geist', 'lido', 'liquity', 'mirror', 'pancakeswap', 'raydium', 'sushi', 'tarot', 'traderjoe', 'tulip', 'ubeswap', 'uniswap', 'venus', 'yearn' ] kind: str Kind/type of vault - one from list: ['lp','single','noimploss','stable'] limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending link: bool Flag to show links export : str Export dataframe data to csv,json,xlsx file  "},{"id":137,"href":"/OpenBBTerminal/SDK/crypto/disc/categories_keys/","title":"Categories Keys","parent":"disc","content":"Get underlying data    crypto.disc.categories_keys() -\u0026gt; List[str]    "},{"id":138,"href":"/OpenBBTerminal/SDK/crypto/disc/cmctop/","title":"Cmctop","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.cmctop(sortby: str = \u0026lsquo;CMC_Rank\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Shows top n coins. [Source: CoinMarketCap]\nParameters ---------- sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to Coin Market Cap:s API documentation, see: https://coinmarketcap.com/api/documentation/v1/#operation/getV1CryptocurrencyListingsLatest ascend: bool Whether to sort ascending or descending Returns ------- pd.DataFrame Top coin on CoinMarketCap  Getting charts    crypto.disc.cmctop(limit: int = 15, sortby: str = \u0026lsquo;CMC_Rank\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows top n coins. [Source: CoinMarketCap]\nParameters ---------- limit: int Number of records to display sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to Coin Market Cap:s API documentation, see: https://coinmarketcap.com/api/documentation/v1/#operation/getV1CryptocurrencyListingsLatest ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file  "},{"id":139,"href":"/OpenBBTerminal/SDK/crypto/disc/coin_list/","title":"Coin List","parent":"disc","content":"Get underlying data    crypto.disc.coin_list() -\u0026gt; pandas.core.frame.DataFrame    Get list of coins available on CoinGecko [Source: CoinGecko]\nReturns ------- pandas.DataFrame Coins available on CoinGecko Columns: id, symbol, name  "},{"id":140,"href":"/OpenBBTerminal/SDK/crypto/disc/coins/","title":"Coins","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.coins(limit: int = 250, category: str = \u0026lsquo;\u0026rsquo;, sortby=\u0026lsquo;Symbol\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get N coins from CoinGecko [Source: CoinGecko]\nParameters ---------- limit: int Number of top coins to grab from CoinGecko sortby: str Key to sort data Returns ------- pandas.DataFrame N coins  Getting charts    crypto.disc.coins(category: str, limit: int = 250, sortby: str = \u0026lsquo;Symbol\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display top coins [Source: CoinGecko]\nParameters ---------- category: str If no category is passed it will search for all coins. (E.g., smart-contract-platform) limit: int Number of records to display sortby: str Key to sort data export : str Export dataframe data to csv,json,xlsx file  "},{"id":141,"href":"/OpenBBTerminal/SDK/crypto/disc/coins_for_given_exchange/","title":"Coins for Given Exchange","parent":"disc","content":"Get underlying data    crypto.disc.coins_for_given_exchange(exchange_id: str = \u0026lsquo;binance\u0026rsquo;, page: int = 1) -\u0026gt; dict    Helper method to get all coins available on binance exchange [Source: CoinGecko]\nParameters ---------- exchange_id: str id of exchange page: int number of page. One page contains 100 records Returns ------- dict dictionary with all trading pairs on binance  "},{"id":142,"href":"/OpenBBTerminal/SDK/crypto/disc/cpsearch/","title":"Cpsearch","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.cpsearch(query: str, category: Optional[Any] = None, modifier: Optional[Any] = None, sortby: str = \u0026lsquo;id\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Search CoinPaprika. [Source: CoinPaprika]\nParameters ---------- query: str phrase for search category: Optional[Any] one or more categories (comma separated) to search. Available options: currencies|exchanges|icos|people|tags Default: currencies,exchanges,icos,people,tags modifier: Optional[Any] set modifier for search results. Available options: symbol_search - search only by symbol (works for currencies only) sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to API documentation (see https://api.coinpaprika.com/docs#tag/Tools/paths/~1search/get) ascend: bool Flag to sort data descending Returns ------- pandas.DataFrame Search Results Columns: Metric, Value  Getting charts    crypto.disc.cpsearch(query: str, category: str = \u0026lsquo;all\u0026rsquo;, limit: int = 10, sortby: str = \u0026lsquo;id\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Search over CoinPaprika. [Source: CoinPaprika]\nParameters ---------- query: str Search query category: str Categories to search: currencies|exchanges|icos|people|tags|all. Default: all limit: int Number of records to display sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to API documentation (see https://api.coinpaprika.com/docs#tag/Tools/paths/~1search/get) ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":143,"href":"/OpenBBTerminal/SDK/crypto/disc/gainers/","title":"Gainers","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.gainers(interval: str = \u0026lsquo;1h\u0026rsquo;, limit: int = 50, sortby: str = \u0026lsquo;market_cap_rank\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Shows Largest Gainers - coins which gain the most in given period. [Source: CoinGecko]\nParameters ---------- interval: str Time interval by which data is displayed. One from [1h, 24h, 7d, 14d, 30d, 60d, 1y] limit: int Number of records to display sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to API documentation (see /coins/markets in https://www.coingecko.com/en/api/documentation) Returns ------- pd.DataFrame Top Gainers - coins which gain most in price in given period of time. Columns: Symbol, Name, Volume, Price, %Change_{interval}, Url  Getting charts    crypto.disc.gainers(interval: str = \u0026lsquo;1h\u0026rsquo;, limit: int = 20, sortby: str = \u0026lsquo;market_cap_rank\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows Largest Gainers - coins which gain the most in given period. [Source: CoinGecko]\nParameters ---------- interval: str Time period by which data is displayed. One from [1h, 24h, 7d, 14d, 30d, 60d, 1y] limit: int Number of records to display sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to API documentation (see /coins/markets in https://www.coingecko.com/en/api/documentation) export : str Export dataframe data to csv,json,xlsx file  "},{"id":144,"href":"/OpenBBTerminal/SDK/crypto/disc/gainers_or_losers/","title":"Gainers or Losers","parent":"disc","content":"Get underlying data    crypto.disc.gainers_or_losers(limit: int = 20, interval: str = \u0026lsquo;1h\u0026rsquo;, typ: str = \u0026lsquo;gainers\u0026rsquo;, sortby: str = \u0026lsquo;market_cap\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Returns data about top gainers - coins which gain the most in given period and top losers - coins that lost the most in given period of time. [Source: CoinGecko]\nParameters ---------- top: int Num of coins to get sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to API documentation (see /coins/markets in https://www.coingecko.com/en/api/documentation) interval: str One from {14d,1h,1y,200d,24h,30d,7d} typ: str Either \u0026quot;gainers\u0026quot; or \u0026quot;losers\u0026quot; Returns ------- pandas.DataFrame Top Gainers / Top Losers - coins which gain/lost most in price in given period of time. Columns: Symbol, Name, Volume, Price, %Change_{interval}, Url  "},{"id":145,"href":"/OpenBBTerminal/SDK/crypto/disc/losers/","title":"Losers","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.losers(interval: str = \u0026lsquo;1h\u0026rsquo;, limit: int = 50, sortby: str = \u0026lsquo;market_cap_rank\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Shows Largest Losers - coins which lose the most in given period. [Source: CoinGecko]\nParameters ---------- interval: str Time interval by which data is displayed. One from [1h, 24h, 7d, 14d, 30d, 60d, 1y] limit: int Number of records to display sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to API documentation (see /coins/markets in https://www.coingecko.com/en/api/documentation) Returns ------- pd.DataFrame Top Losers - coins which lost most in price in given period of time. Columns: Symbol, Name, Volume, Price, %Change_{interval}, Url  Getting charts    crypto.disc.losers(interval: str = \u0026lsquo;1h\u0026rsquo;, limit: int = 20, export: str = \u0026lsquo;\u0026rsquo;, sortby: str = \u0026lsquo;Market Cap Rank\u0026rsquo;, chart=True) -\u0026gt; None    Shows Largest Losers - coins which lost the most in given period of time. [Source: CoinGecko]\nParameters ---------- interval: str Time period by which data is displayed. One from [1h, 24h, 7d, 14d, 30d, 60d, 1y] limit: int Number of records to display sortby: str Key to sort data. The table can be sorted by every of its columns. Refer to API documentation (see /coins/markets in https://www.coingecko.com/en/api/documentation) export : str Export dataframe data to csv,json,xlsx file  "},{"id":146,"href":"/OpenBBTerminal/SDK/crypto/disc/top_dapps/","title":"Top Dapps","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.top_dapps(sortby: str = \u0026lsquo;\u0026rsquo;, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get top decentralized applications by daily volume and users [Source: https://dappradar.com/]\nParameters ---------- sortby: str Key by which to sort data Returns ------- pd.DataFrame Top decentralized exchanges. Columns: Name, Category, Protocols, Daily Users, Daily Volume [$]  Getting charts    crypto.disc.top_dapps(limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, sortby: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays top decentralized exchanges [Source: https://dappradar.com/]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data export : str Export dataframe data to csv,json,xlsx file  "},{"id":147,"href":"/OpenBBTerminal/SDK/crypto/disc/top_dexes/","title":"Top Dexes","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.top_dexes(sortby: str = \u0026lsquo;\u0026rsquo;, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get top dexes by daily volume and users [Source: https://dappradar.com/]\nParameters ---------- sortby: str Key by which to sort data Returns ------- pd.DataFrame Top decentralized exchanges. Columns: Name, Daily Users, Daily Volume [$]  Getting charts    crypto.disc.top_dexes(limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, sortby: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays top decentralized exchanges [Source: https://dappradar.com/]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data export : str Export dataframe data to csv,json,xlsx file  "},{"id":148,"href":"/OpenBBTerminal/SDK/crypto/disc/top_games/","title":"Top Games","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.top_games(sortby: str = \u0026lsquo;\u0026rsquo;, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get top blockchain games by daily volume and users [Source: https://dappradar.com/]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data Returns ------- pd.DataFrame Top blockchain games. Columns: Name, Daily Users, Daily Volume [$]  Getting charts    crypto.disc.top_games(limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, sortby: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays top blockchain games [Source: https://dappradar.com/]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data export : str Export dataframe data to csv,json,xlsx file  "},{"id":149,"href":"/OpenBBTerminal/SDK/crypto/disc/top_nfts/","title":"Top Nfts","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.top_nfts(sortby: str = \u0026lsquo;\u0026rsquo;, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get top nft collections [Source: https://dappradar.com/]\nParameters ---------- sortby: str Key by which to sort data Returns ------- pd.DataFrame NFTs Columns: Name, Protocols, Floor Price [$], Avg Price [$], Market Cap [$], Volume [$]  Getting charts    crypto.disc.top_nfts(limit: int = 10, sortby: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays top nft collections [Source: https://dappradar.com/]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data export : str Export dataframe data to csv,json,xlsx file  "},{"id":150,"href":"/OpenBBTerminal/SDK/crypto/disc/trending/","title":"Trending","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.disc.trending() -\u0026gt; pandas.core.frame.DataFrame    Returns trending coins [Source: CoinGecko]\nParameters ---------- Returns ------- pandas.DataFrame: Trending Coins  Getting charts    crypto.disc.trending(export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display trending coins [Source: CoinGecko]\nParameters ---------- export : str Export dataframe data to csv,json,xlsx file  "},{"id":151,"href":"/OpenBBTerminal/SDK/crypto/find/","title":"Find","parent":"crypto","content":"Get underlying data    crypto.find(query: \u0026lsquo;str\u0026rsquo;, source: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;CoinGecko\u0026rsquo;, key: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;symbol\u0026rsquo;, limit: \u0026lsquo;int\u0026rsquo; = 10, export: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;') -\u0026gt; \u0026lsquo;None\u0026rsquo;    Find similar coin by coin name,symbol or id.\nIf you don't know exact name or id of the Coin at CoinGecko CoinPaprika, Binance or Coinbase you use this command to display coins with similar name, symbol or id to your search query. Example: coin name is something like \u0026quot;polka\u0026quot;. So I can try: find -c polka -k name -t 25 It will search for coin that has similar name to polka and display top 25 matches. -c, --coin stands for coin - you provide here your search query -k, --key it's a searching key. You can search by symbol, id or name of coin -t, --top it displays top N number of records. Parameters ---------- query: str Cryptocurrency source: str Data source of coins. CoinGecko (cg) or CoinPaprika (cp) or Binance (bin), Coinbase (cb) key: str Searching key (symbol, id, name) limit: int Number of records to display export : str Export dataframe data to csv,json,xlsx file  "},{"id":152,"href":"/OpenBBTerminal/SDK/crypto/load/","title":"Load","parent":"crypto","content":"Get underlying data    crypto.load(symbol: \u0026lsquo;str\u0026rsquo;, start_date: \u0026lsquo;datetime\u0026rsquo; = datetime.datetime(2019, 10, 22, 11, 40, 0, 303083), interval: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;1440\u0026rsquo;, exchange: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;binance\u0026rsquo;, vs_currency: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;usdt\u0026rsquo;, end_date: \u0026lsquo;datetime\u0026rsquo; = datetime.datetime(2022, 10, 26, 11, 40, 0, 303103), source: \u0026lsquo;str\u0026rsquo; = \u0026lsquo;CCXT\u0026rsquo;) -\u0026gt; \u0026lsquo;pd.DataFrame\u0026rsquo;    Load crypto currency to get data for.\nParameters ---------- symbol: str Coin to get start_date: datetime The datetime to start at interval: str The interval between data points in minutes. Choose from: 1, 15, 30, 60, 240, 1440, 10080, 43200 exchange: str: The exchange to get data from. vs_currency: str Quote Currency (Defaults to usdt) end_date: datetime The datetime to end at source: str The source of the data Choose from: CCXT, CoinGecko, YahooFinance Returns ------- pd.DataFrame Dataframe consisting of price and volume data  "},{"id":153,"href":"/OpenBBTerminal/SDK/crypto/nft/stats/","title":"Stats","parent":"nft","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.nft.stats(slug: str) -\u0026gt; pandas.core.frame.DataFrame    Get stats of a nft collection [Source: opensea.io]\nParameters ------- slug : str Opensea collection slug. If the name of the collection is Mutant Ape Yacht Club the slug is mutant-ape-yacht-club Returns ------- pd.DataFrame collection stats  Getting charts    crypto.nft.stats(slug: str, export: str, chart=True)    Display collection stats. [Source: opensea.io]\nParameters ---------- slug: str Opensea collection slug. If the name of the collection is Mutant Ape Yacht Club the slug is mutant-ape-yacht-club export : str Export dataframe data to csv,json,xlsx file  "},{"id":154,"href":"/OpenBBTerminal/SDK/crypto/onchain/baas/","title":"Baas","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.baas(symbol: str = \u0026lsquo;WETH\u0026rsquo;, to_symbol: str = \u0026lsquo;USDT\u0026rsquo;, limit: int = 30, sortby: str = \u0026lsquo;tradeAmount\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get an average bid and ask prices, average spread for given crypto pair for chosen time period. [Source: https://graphql.bitquery.io/]\nParameters ---------- limit: int Last n days to query data symbol: str ERC20 token symbol to_symbol: str Quoted currency. sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pd.DataFrame Average bid and ask prices, spread for given crypto pair for chosen time period  Getting charts    crypto.onchain.baas(symbol=\u0026lsquo;ETH\u0026rsquo;, to_symbol=\u0026lsquo;USDC\u0026rsquo;, days: int = 10, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display an average bid and ask prices, average spread for given crypto pair for chosen time period. [Source: https://graphql.bitquery.io/]\nParameters ---------- days: int Last n days to query data symbol: str ERC20 token symbol to_symbol: str Quoted currency. sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file Returns ------- pd.DataFrame Average bid and ask prices, spread for given crypto pair for chosen time period  "},{"id":155,"href":"/OpenBBTerminal/SDK/crypto/onchain/balance/","title":"Balance","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.balance(address: str, sortby: str = \u0026lsquo;index\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get info about tokens on you ethereum blockchain balance. Eth balance, balance of all tokens which have name and symbol. [Source: Ethplorer]\nParameters ---------- address: str Blockchain balance e.g. 0x3cD751E6b0078Be393132286c442345e5DC49699 sortby: str Key to sort by. ascend: str Sort in descending order. Returns ------- pd.DataFrame: DataFrame with list of tokens and their balances.  Getting charts    crypto.onchain.balance(address: str, limit: int = 15, sortby: str = \u0026lsquo;index\u0026rsquo;, ascend: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display info about tokens for given ethereum blockchain balance e.g. ETH balance, balance of all tokens with name and symbol. [Source: Ethplorer]\nParameters ---------- address: str Ethereum balance. limit: int Limit of transactions. Maximum 100 sortby: str Key to sort by. ascend: str Sort in descending order. export : str Export dataframe data to csv,json,xlsx file  "},{"id":156,"href":"/OpenBBTerminal/SDK/crypto/onchain/btc_supply/","title":"Btc Supply","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.btc_supply() -\u0026gt; pandas.core.frame.DataFrame    Returns BTC circulating supply [Source: https://api.blockchain.info/]\nReturns ------- pd.DataFrame BTC circulating supply  Getting charts    crypto.onchain.btc_supply(start_date: int = 1262300400, end_date: int = 1666777200, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Returns BTC circulating supply [Source: https://api.blockchain.info/]\nParameters ---------- start_date : int Initial date timestamp (e.g., 1_609_459_200) until : int End date timestamp (e.g., 1_641_588_030) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":157,"href":"/OpenBBTerminal/SDK/crypto/onchain/btc_transac/","title":"Btc Transac","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.btc_transac() -\u0026gt; pandas.core.frame.DataFrame    Returns BTC confirmed transactions [Source: https://api.blockchain.info/]\nReturns ------- pd.DataFrame BTC confirmed transactions  Getting charts    crypto.onchain.btc_transac(start_date: int = 1262300400, end_date: int = 1666777200, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Returns BTC confirmed transactions [Source: https://api.blockchain.info/]\nParameters ---------- since : int Initial date timestamp (e.g., 1_609_459_200) until : int End date timestamp (e.g., 1_641_588_030) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":158,"href":"/OpenBBTerminal/SDK/crypto/onchain/dex_trades_monthly/","title":"Dex Trades Monthly","parent":"onchain","content":"Get underlying data    crypto.onchain.dex_trades_monthly(trade_amount_currency: str = \u0026lsquo;USD\u0026rsquo;, limit: int = 90, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get list of trades on Decentralized Exchanges monthly aggregated. [Source: https://graphql.bitquery.io/]\nParameters ---------- trade_amount_currency: str Currency of displayed trade amount. Default: USD limit: int Last n days to query data. Maximum 365 (bigger numbers can cause timeouts on server side) ascend: bool Flag to sort data ascending Returns ------- pd.DataFrame Trades on Decentralized Exchanges monthly aggregated  "},{"id":159,"href":"/OpenBBTerminal/SDK/crypto/onchain/dvcp/","title":"Dvcp","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.dvcp(limit: int = 100, symbol: str = \u0026lsquo;UNI\u0026rsquo;, to_symbol: str = \u0026lsquo;USDT\u0026rsquo;, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get daily volume for given pair [Source: https://graphql.bitquery.io/]\nParameters ------- limit: int Last n days to query data symbol: str ERC20 token symbol to_symbol: str Quote currency. sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pd.DataFrame Daily volume for given pair  Getting charts    crypto.onchain.dvcp(symbol: str = \u0026lsquo;WBTC\u0026rsquo;, to_symbol: str = \u0026lsquo;USDT\u0026rsquo;, limit: int = 20, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display daily volume for given pair [Source: https://graphql.bitquery.io/]\nParameters ---------- symbol: str ERC20 token symbol or address to_symbol: str Quote currency. limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file Returns ------- pd.DataFrame Token volume on different decentralized exchanges  "},{"id":160,"href":"/OpenBBTerminal/SDK/crypto/onchain/erc20_tokens/","title":"Erc20 Tokens","parent":"onchain","content":"Get underlying data    crypto.onchain.erc20_tokens() -\u0026gt; pandas.core.frame.DataFrame    Helper method that loads ~1500 most traded erc20 token. [Source: json file]\nReturns ------- pd.DataFrame ERC20 tokens with address, symbol and name  "},{"id":161,"href":"/OpenBBTerminal/SDK/crypto/onchain/gwei/","title":"Gwei","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.gwei() -\u0026gt; pandas.core.frame.DataFrame    Returns the most recent Ethereum gas fees in gwei [Source: https://ethgasstation.info]\nParameters ---------- Returns ------- pd.DataFrame four gas fees and durations (fees for slow, average, fast and fastest transactions in gwei and its average durations in seconds)  Getting charts    crypto.onchain.gwei(export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Current gwei fees [Source: https://ethgasstation.info]\nParameters ---------- export : str Export dataframe data to csv,json,xlsx file  "},{"id":162,"href":"/OpenBBTerminal/SDK/crypto/onchain/hist/","title":"Hist","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.hist(address, sortby: str = \u0026lsquo;timestamp\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get information about balance historical transactions. [Source: Ethplorer]\nParameters ---------- address: str Blockchain balance e.g. 0x3cD751E6b0078Be393132286c442345e5DC49699 sortby: str Key to sort by. ascend: str Sort in ascending order. Returns ------- pd.DataFrame: DataFrame with balance historical transactions (last 100)  Getting charts    crypto.onchain.hist(address: str, limit: int = 10, sortby: str = \u0026lsquo;timestamp\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display information about balance historical transactions. [Source: Ethplorer]\nParameters ---------- address: str Ethereum blockchain balance e.g. 0x3cD751E6b0078Be393132286c442345e5DC49699 limit: int Limit of transactions. Maximum 100 sortby: str Key to sort by. ascend: str Sort in ascending order. export : str Export dataframe data to csv,json,xlsx file  "},{"id":163,"href":"/OpenBBTerminal/SDK/crypto/onchain/holders/","title":"Holders","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.holders(address, sortby: str = \u0026lsquo;balance\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get info about top token holders. [Source: Ethplorer]\nParameters ---------- address: str Token balance e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 sortby: str Key to sort by. ascend: str Sort in descending order. Returns ------- pd.DataFrame: DataFrame with list of top token holders.  Getting charts    crypto.onchain.holders(address: str, limit: int = 10, sortby: str = \u0026lsquo;balance\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display info about top ERC20 token holders. [Source: Ethplorer]\nParameters ---------- address: str Token balance e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 limit: int Limit of transactions. Maximum 100 sortby: str Key to sort by. ascend: str Sort in descending order. export : str Export dataframe data to csv,json,xlsx file  "},{"id":164,"href":"/OpenBBTerminal/SDK/crypto/onchain/hr/","title":"Hr","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.hr(symbol: str, interval: str = \u0026lsquo;24h\u0026rsquo;, start_date: int = 1288345200, end_date: int = 1666777200) -\u0026gt; pandas.core.frame.DataFrame    Returns dataframe with mean hashrate of btc or eth blockchain and symbol price [Source: https://glassnode.com]\nParameters ---------- symbol : str Blockchain to check hashrate (BTC or ETH) start_date : int Initial date timestamp (e.g., 1_614_556_800) end_date : int End date timestamp (e.g., 1_614_556_800) interval : str Interval frequency (e.g., 24h) Returns ------- pd.DataFrame mean hashrate and symbol price over time  Getting charts    crypto.onchain.hr(symbol: str, start_date: int = 1635241200, end_date: int = 1666777200, interval: str = \u0026lsquo;24h\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Display dataframe with mean hashrate of btc or eth blockchain and symbol price. [Source: https://glassnode.org]\nParameters ---------- symbol : str Blockchain to check mean hashrate (BTC or ETH) start_date : int Initial date timestamp (e.g., 1_614_556_800) end_date : int End date timestamp (e.g., 1_614_556_800) interval : str Interval frequency (possible values are: 24, 1w, 1month) export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":165,"href":"/OpenBBTerminal/SDK/crypto/onchain/info/","title":"Info","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.info(address) -\u0026gt; pandas.core.frame.DataFrame    Get info about ERC20 token. [Source: Ethplorer]\nParameters ---------- address: str Token balance e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 Returns ------- pd.DataFrame: DataFrame with information about provided ERC20 token.  Getting charts    crypto.onchain.info(address: str, social: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display info about ERC20 token. [Source: Ethplorer]\nParameters ---------- address: str Token balance e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 social: bool Flag to display social media links export : str Export dataframe data to csv,json,xlsx file  "},{"id":166,"href":"/OpenBBTerminal/SDK/crypto/onchain/lt/","title":"Lt","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.lt(trade_amount_currency: str = \u0026lsquo;USD\u0026rsquo;, limit: int = 90, sortby: str = \u0026lsquo;tradeAmount\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get trades on Decentralized Exchanges aggregated by DEX [Source: https://graphql.bitquery.io/]\nParameters ---------- trade_amount_currency: str Currency of displayed trade amount. Default: USD limit: int Last n days to query data. Maximum 365 (bigger numbers can cause timeouts on server side) sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pd.DataFrame Trades on Decentralized Exchanges aggregated by DEX  Getting charts    crypto.onchain.lt(trade_amount_currency: str = \u0026lsquo;USD\u0026rsquo;, kind: str = \u0026lsquo;dex\u0026rsquo;, limit: int = 20, days: int = 90, sortby: str = \u0026lsquo;tradeAmount\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Trades on Decentralized Exchanges aggregated by DEX or Month [Source: https://graphql.bitquery.io/]\nParameters ---------- kind: str Aggregate trades by dex or time trade_amount_currency: str Currency of displayed trade amount. Default: USD limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending days: int Last n days to query data. Maximum 365 (bigger numbers can cause timeouts on server side) export : str Export dataframe data to csv,json,xlsx file  "},{"id":167,"href":"/OpenBBTerminal/SDK/crypto/onchain/prices/","title":"Prices","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.prices(address, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get token historical prices with volume and market cap, and average price. [Source: Ethplorer]\nParameters ---------- address: str Token e.g. 0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8 sortby: str Key to sort by. ascend: str Sort in descending order. Returns ------- pd.DataFrame: DataFrame with token historical prices.  Getting charts    crypto.onchain.prices(address: str, limit: int = 30, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display token historical prices with volume and market cap, and average price. [Source: Ethplorer]\nParameters ---------- address: str Token balance e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 limit: int Limit of transactions. Maximum 100 sortby: str Key to sort by. ascend: str Sort in descending order. export : str Export dataframe data to csv,json,xlsx file  "},{"id":168,"href":"/OpenBBTerminal/SDK/crypto/onchain/query_graph/","title":"Query Graph","parent":"onchain","content":"Get underlying data    crypto.onchain.query_graph(url: str, query: str) -\u0026gt; dict    Helper methods for querying graphql api. [Source: https://bitquery.io/]\nParameters ---------- url: str Endpoint url query: str Graphql query Returns ------- dict: Dictionary with response data  "},{"id":169,"href":"/OpenBBTerminal/SDK/crypto/onchain/th/","title":"Th","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.th(address, sortby: str = \u0026lsquo;timestamp\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get info about token historical transactions. [Source: Ethplorer]\nParameters ---------- address: str Token e.g. 0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8 sortby: str Key to sort by. ascend: str Sort in descending order. Returns ------- pd.DataFrame: DataFrame with token historical transactions.  Getting charts    crypto.onchain.th(address: str, limit: int = 10, sortby: str = \u0026lsquo;timestamp\u0026rsquo;, ascend: bool = False, hash_: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display info about token history. [Source: Ethplorer]\nParameters ---------- address: str Token balance e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 limit: int Limit of transactions. Maximum 100 sortby: str Key to sort by. ascend: str Sort in descending order. hash_: bool, Flag to show transaction hash. export : str Export dataframe data to csv,json,xlsx file  "},{"id":170,"href":"/OpenBBTerminal/SDK/crypto/onchain/token_decimals/","title":"Token Decimals","parent":"onchain","content":"Get underlying data    crypto.onchain.token_decimals(address: str) -\u0026gt; Optional[int]    Helper methods that gets token decimals number. [Source: Ethplorer]\nParameters ---------- address: str Blockchain balance e.g. 0x1f9840a85d5af5bf1d1762f925bdaddc4201f984 Returns ------- pd.DataFrame: DataFrame with list of tokens and their balances.  "},{"id":171,"href":"/OpenBBTerminal/SDK/crypto/onchain/top/","title":"Top","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.top(sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get top 50 tokens. [Source: Ethplorer]\nReturns ------- pd.DataFrame: DataFrame with list of top 50 tokens.  Getting charts    crypto.onchain.top(limit: int = 15, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display top ERC20 tokens [Source: Ethplorer]\nParameters ---------- limit: int Limit of transactions. Maximum 100 sortby: str Key to sort by. ascend: str Sort in descending order. export : str Export dataframe data to csv,json,xlsx file  "},{"id":172,"href":"/OpenBBTerminal/SDK/crypto/onchain/ttcp/","title":"Ttcp","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.ttcp(network: str = \u0026lsquo;ethereum\u0026rsquo;, exchange: str = \u0026lsquo;Uniswap\u0026rsquo;, limit: int = 90, sortby: str = \u0026lsquo;tradeAmount\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get most traded crypto pairs on given decentralized exchange in chosen time period. [Source: https://graphql.bitquery.io/]\nParameters ---------- network: str EVM network. One from list: bsc (binance smart chain), ethereum or matic exchange: Decentralized exchange name limit: Number of days taken into calculation account. sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns -------  Getting charts    crypto.onchain.ttcp(exchange=\u0026lsquo;Uniswap\u0026rsquo;, days: int = 10, limit: int = 10, sortby: str = \u0026lsquo;tradeAmount\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display most traded crypto pairs on given decentralized exchange in chosen time period. [Source: https://graphql.bitquery.io/]\nParameters ---------- exchange: Decentralized exchange name days: Number of days taken into calculation account. sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file Returns ------- pd.DataFrame Most traded crypto pairs on given decentralized exchange in chosen time period.  "},{"id":173,"href":"/OpenBBTerminal/SDK/crypto/onchain/tv/","title":"Tv","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.tv(symbol: str = \u0026lsquo;UNI\u0026rsquo;, trade_amount_currency: str = \u0026lsquo;USD\u0026rsquo;, sortby: str = \u0026lsquo;tradeAmount\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get token volume on different Decentralized Exchanges. [Source: https://graphql.bitquery.io/]\nParameters ---------- symbol: str ERC20 token symbol. trade_amount_currency: str Currency to display trade amount in. sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pd.DataFrame Token volume on Decentralized Exchanges  Getting charts    crypto.onchain.tv(symbol: str = \u0026lsquo;WBTC\u0026rsquo;, trade_amount_currency: str = \u0026lsquo;USD\u0026rsquo;, limit: int = 10, sortby: str = \u0026lsquo;tradeAmount\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display token volume on different Decentralized Exchanges. [Source: https://graphql.bitquery.io/]\nParameters ---------- symbol: str ERC20 token symbol or address trade_amount_currency: str Currency of displayed trade amount. Default: USD limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file Returns ------- pd.DataFrame Token volume on different decentralized exchanges  "},{"id":174,"href":"/OpenBBTerminal/SDK/crypto/onchain/tx/","title":"Tx","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.tx(tx_hash) -\u0026gt; pandas.core.frame.DataFrame    Get info about transaction. [Source: Ethplorer]\nParameters ---------- tx_hash: str Transaction hash e.g. 0x9dc7b43ad4288c624fdd236b2ecb9f2b81c93e706b2ffd1d19b112c1df7849e6 Returns ------- pd.DataFrame: DataFrame with information about ERC20 token transaction.  Getting charts    crypto.onchain.tx(tx_hash: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display info about transaction. [Source: Ethplorer]\nParameters ---------- tx_hash: str Transaction hash e.g. 0x9dc7b43ad4288c624fdd236b2ecb9f2b81c93e706b2ffd1d19b112c1df7849e6 export : str Export dataframe data to csv,json,xlsx file  "},{"id":175,"href":"/OpenBBTerminal/SDK/crypto/onchain/ueat/","title":"Ueat","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.ueat(interval: str = \u0026lsquo;day\u0026rsquo;, limit: int = 90, sortby: str = \u0026lsquo;tradeAmount\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get number of unique ethereum addresses which made a transaction in given time interval.\nParameters ---------- interval: str Time interval in which count unique ethereum addresses which made transaction. day, month or week. limit: int Number of records for data query. sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pd.DataFrame Unique ethereum addresses which made a transaction  Getting charts    crypto.onchain.ueat(interval: str = \u0026lsquo;days\u0026rsquo;, limit: int = 10, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display number of unique ethereum addresses which made a transaction in given time interval [Source: https://graphql.bitquery.io/]\nParameters ---------- interval: str Time interval in which ethereum address made transaction. month, week or day limit: int Number of records to display. It's calculated base on provided interval. If interval is month then calculation is made in the way: limit * 30 = time period, in case if interval is set to week, then time period is calculated as limit * 7. For better user experience maximum time period in days is equal to 90. sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file Returns ------- pd.DataFrame Number of unique ethereum addresses which made a transaction in given time interval  "},{"id":176,"href":"/OpenBBTerminal/SDK/crypto/onchain/whales/","title":"Whales","parent":"onchain","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.onchain.whales(min_value: int = 800000, limit: int = 100, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Whale Alert\u0026rsquo;s API allows you to retrieve live and historical transaction data from major blockchains. Supported blockchain: Bitcoin, Ethereum, Ripple, NEO, EOS, Stellar and Tron. [Source: https://docs.whale-alert.io/]\nParameters ---------- min_value: int Minimum value of trade to track. limit: int Limit of transactions. Max 100 sortby: str Key to sort by. ascend: str Sort in ascending order. Returns ------- pd.DataFrame Crypto wales transactions  Getting charts    crypto.onchain.whales(min_value: int = 800000, limit: int = 100, sortby: str = \u0026lsquo;date\u0026rsquo;, ascend: bool = False, show_address: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display huge value transactions from major blockchains. [Source: https://docs.whale-alert.io/]\nParameters ---------- min_value: int Minimum value of trade to track. limit: int Limit of transactions. Maximum 100 sortby: str Key to sort by. ascend: str Sort in ascending order. show_address: bool Flag to show addresses of transactions. export : str Export dataframe data to csv,json,xlsx file  "},{"id":177,"href":"/OpenBBTerminal/SDK/crypto/ov/altindex/","title":"Altindex","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.altindex(period: int = 30, start_date: int = 1262300400, end_date: int = 1666777200) -\u0026gt; pandas.core.frame.DataFrame    Get altcoin index overtime [Source: https://blockchaincenter.net]\nParameters ---------- period: int Number of days {30,90,365} to check performance of coins and calculate the altcoin index. E.g., 365 checks yearly performance, 90 will check seasonal performance (90 days), 30 will check monthly performance (30 days). start_date : int Initial date timestamp (e.g., 1_609_459_200) end_date : int End date timestamp (e.g., 1_641_588_030) Returns ------- pandas.DataFrame: Date, Value (Altcoin Index)  Getting charts    crypto.ov.altindex(period: int = 365, start_date: int = 1262300400, end_date: int = 1666777200, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Displays altcoin index overtime [Source: https://blockchaincenter.net]\nParameters ---------- start_date : int Initial date timestamp (e.g., 1_609_459_200) end_date : int End date timestamp (e.g., 1_641_588_030) period: int Number of days to check the performance of coins and calculate the altcoin index. E.g., 365 will check yearly performance , 90 will check seasonal performance (90 days), 30 will check monthly performance (30 days). export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":178,"href":"/OpenBBTerminal/SDK/crypto/ov/cbpairs/","title":"Cbpairs","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cbpairs(limit: int = 50, sortby: str = \u0026lsquo;quote_increment\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get a list of available currency pairs for trading. [Source: Coinbase]\nbase_min_size - min order size base_max_size - max order size min_market_funds - min funds allowed in a market order. max_market_funds - max funds allowed in a market order. Parameters ---------- limit: int Top n of pairs sortby: str Key to sortby data ascend: bool Sort descending flag Returns ------- pd.DataFrame Available trading pairs on Coinbase  Getting charts    crypto.ov.cbpairs(limit: int = 20, sortby: str = \u0026lsquo;quote_increment\u0026rsquo;, ascend: bool = True, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays a list of available currency pairs for trading. [Source: Coinbase]\nParameters ---------- limit: int Top n of pairs sortby: str Key to sortby data ascend: bool Sort ascending flag export : str Export dataframe data to csv,json,xlsx file  "},{"id":179,"href":"/OpenBBTerminal/SDK/crypto/ov/cgcategories/","title":"Cgcategories","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cgcategories(sort_filter: str = \u0026lsquo;market_cap_desc\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Returns top crypto categories [Source: CoinGecko]\nReturns ------- pandas.DataFrame Rank, Name, Change_1h, Change_7d, Market_Cap, Volume_24h,Coins, Url  Getting charts    crypto.ov.cgcategories(sortby: str = \u0026lsquo;market_cap_desc\u0026rsquo;, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, pie: bool = False, chart=True) -\u0026gt; None    Shows top cryptocurrency categories by market capitalization\nThe cryptocurrency category ranking is based on market capitalization. [Source: CoinGecko] Parameters ---------- sortby: str Key by which to sort data limit: int Number of records to display export: str Export dataframe data to csv,json,xlsx file pie: bool Whether to show the pie chart  "},{"id":180,"href":"/OpenBBTerminal/SDK/crypto/ov/cgdefi/","title":"Cgdefi","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cgdefi() -\u0026gt; pandas.core.frame.DataFrame    Get global statistics about Decentralized Finances [Source: CoinGecko]\nReturns ------- pandas.DataFrame Metric, Value  Getting charts    crypto.ov.cgdefi(export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows global statistics about Decentralized Finances. [Source: CoinGecko]\nParameters ---------- export : str Export dataframe data to csv,json,xlsx file  "},{"id":181,"href":"/OpenBBTerminal/SDK/crypto/ov/cgderivatives/","title":"Cgderivatives","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cgderivatives(sortby: str = \u0026lsquo;Rank\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get list of crypto derivatives from CoinGecko API [Source: CoinGecko]\nParameters ---------- sortby: str Key by which to sort data ascend: bool Flag to sort data descending Returns ------- pandas.DataFrame Rank, Market, Symbol, Price, Pct_Change_24h, Contract_Type, Basis, Spread, Funding_Rate, Volume_24h,  Getting charts    crypto.ov.cgderivatives(sortby: str = \u0026lsquo;Rank\u0026rsquo;, ascend: bool = False, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows list of crypto derivatives. [Source: CoinGecko]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":182,"href":"/OpenBBTerminal/SDK/crypto/ov/cgexrates/","title":"Cgexrates","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cgexrates(sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get list of crypto, fiats, commodity exchange rates from CoinGecko API [Source: CoinGecko]\nParameters ---------- sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pandas.DataFrame Index, Name, Unit, Value, Type  Getting charts    crypto.ov.cgexrates(sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = False, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows list of crypto, fiats, commodity exchange rates. [Source: CoinGecko]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file  "},{"id":183,"href":"/OpenBBTerminal/SDK/crypto/ov/cgglobal/","title":"Cgglobal","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cgglobal() -\u0026gt; pandas.core.frame.DataFrame    Get global statistics about crypto markets from CoinGecko API like: Market_Cap, Volume, Market_Cap_Percentage\n[Source: CoinGecko] Returns ------- pandas.DataFrame Market_Cap, Volume, Market_Cap_Percentage  Getting charts    crypto.ov.cgglobal(pie: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows global statistics about crypto. [Source: CoinGecko] - market cap change - number of markets - icos - number of active crypto - market_cap_pct\nParameters ---------- pie: bool Whether to show a pie chart export : str Export dataframe data to csv,json,xlsx file  "},{"id":184,"href":"/OpenBBTerminal/SDK/crypto/ov/cghm/","title":"Cghm","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cghm(limit: int = 250, category: str = \u0026lsquo;\u0026rsquo;, sortby=\u0026lsquo;Symbol\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get N coins from CoinGecko [Source: CoinGecko]\nParameters ---------- limit: int Number of top coins to grab from CoinGecko sortby: str Key to sort data Returns ------- pandas.DataFrame N coins  Getting charts    crypto.ov.cghm(category: str = \u0026lsquo;\u0026rsquo;, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Shows cryptocurrencies heatmap [Source: CoinGecko]\nParameters ---------- caterogy: str Category (e.g., stablecoins). Empty for no category (default: ) limit: int Number of top cryptocurrencies to display export: str Export dataframe data to csv,json,xlsx external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":185,"href":"/OpenBBTerminal/SDK/crypto/ov/cghold/","title":"Cghold","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cghold(endpoint: str = \u0026lsquo;bitcoin\u0026rsquo;) -\u0026gt; List[Any]    Returns public companies that holds ethereum or bitcoin [Source: CoinGecko]\nParameters ---------- endpoint : str \u0026quot;bitcoin\u0026quot; or \u0026quot;ethereum\u0026quot; Returns ------- List: - str: Overall statistics - pandas.DataFrame: Companies holding crypto  Getting charts    crypto.ov.cghold(symbol: str, show_bar: bool = False, export: str = \u0026lsquo;\u0026rsquo;, limit: int = 15, chart=True) -\u0026gt; None    Shows overview of public companies that holds ethereum or bitcoin. [Source: CoinGecko]\nParameters ---------- symbol: str Cryptocurrency: ethereum or bitcoin show_bar : bool Whether to show a bar graph for the data export: str Export dataframe data to csv,json,xlsx limit: int The number of rows to show  "},{"id":186,"href":"/OpenBBTerminal/SDK/crypto/ov/cgindexes/","title":"Cgindexes","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cgindexes(sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get list of crypto indexes from CoinGecko API [Source: CoinGecko]\nReturns ------- pandas.DataFrame Name, Id, Market, Last, MultiAsset sortby: str Key by which to sort data ascend: bool Flag to sort data descending  Getting charts    crypto.ov.cgindexes(sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = True, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows list of crypto indexes. [Source: CoinGecko]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":187,"href":"/OpenBBTerminal/SDK/crypto/ov/cgproducts/","title":"Cgproducts","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cgproducts(sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get list of financial products from CoinGecko API\nParameters ---------- sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pandas.DataFrame Rank, Platform, Identifier, Supply_Rate, Borrow_Rate  Getting charts    crypto.ov.cgproducts(sortby: str = \u0026lsquo;Platform\u0026rsquo;, ascend: bool = False, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows list of financial products. [Source: CoinGecko]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending export : str Export dataframe data to csv,json,xlsx file  "},{"id":188,"href":"/OpenBBTerminal/SDK/crypto/ov/cgstables/","title":"Cgstables","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cgstables(limit: int = 20, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Returns top stable coins [Source: CoinGecko]\nParameters ---------- limit: int How many rows to show sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pandas.DataFrame Rank, Name, Symbol, Price, Change_24h, Exchanges, Market_Cap, Change_30d, Url  Getting charts    crypto.ov.cgstables(limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = False, pie: bool = False, chart=True) -\u0026gt; None    Shows stablecoins data [Source: CoinGecko]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file pie : bool Whether to show a pie chart  "},{"id":189,"href":"/OpenBBTerminal/SDK/crypto/ov/cpcontracts/","title":"Cpcontracts","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cpcontracts(platform_id: str = \u0026lsquo;eth-ethereum\u0026rsquo;, sortby: str = \u0026lsquo;active\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Gets all contract addresses for given platform [Source: CoinPaprika]\n   Parameters     platform_id: str   Blockchain platform like eth-ethereum   sortby: str   Key by which to sort data   ascend: bool   Flag to sort data ascend    Returns ------- pandas.DataFrame id, type, active  Getting charts    crypto.ov.cpcontracts(symbol: str, sortby: str = \u0026lsquo;active\u0026rsquo;, ascend: bool = True, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Gets all contract addresses for given platform. [Source: CoinPaprika]\nParameters ---------- platform: str Blockchain platform like eth-ethereum limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file  "},{"id":190,"href":"/OpenBBTerminal/SDK/crypto/ov/cpexchanges/","title":"Cpexchanges","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cpexchanges(symbols: str = \u0026lsquo;USD\u0026rsquo;, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    List exchanges from CoinPaprika API [Source: CoinPaprika] Parameters ---------- symbols: str Comma separated quotes to return e.g quotes=USD,BTC sortby: str Key by which to sort data ascend: bool Flag to sort data ascend Returns ------- pandas.DataFrame rank, name, currencies, markets, fiats, confidence_score, reported_volume_24h, reported_volume_7d ,reported_volume_30d, sessions_per_month,  Getting charts    crypto.ov.cpexchanges(symbol: str, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = True, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    List exchanges from CoinPaprika API. [Source: CoinPaprika]\nParameters ---------- currency: str Quoted currency limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending links: bool Flag to display urls export : str Export dataframe data to csv,json,xlsx file  "},{"id":191,"href":"/OpenBBTerminal/SDK/crypto/ov/cpexmarkets/","title":"Cpexmarkets","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cpexmarkets(exchange_id: str = \u0026lsquo;binance\u0026rsquo;, symbols: str = \u0026lsquo;USD\u0026rsquo;, sortby: str = \u0026lsquo;pair\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    List markets by exchange ID [Source: CoinPaprika]\nParameters ---------- exchange_id: str identifier of exchange e.g for Binance Exchange -\u0026gt; binance symbols: str Comma separated quotes to return e.g quotes=USD,BTC sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pandas.DataFrame pair, base_currency_name, quote_currency_name, market_url, category, reported_volume_24h_share, trust_score,  Getting charts    crypto.ov.cpexmarkets(exchange: str = \u0026lsquo;binance\u0026rsquo;, sortby: str = \u0026lsquo;pair\u0026rsquo;, ascend: bool = True, limit: int = 15, links: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Get all markets for given exchange [Source: CoinPaprika]\nParameters ---------- exchange: str Exchange identifier e.g Binance limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending links: bool Flag to display urls export : str Export dataframe data to csv,json,xlsx file  "},{"id":192,"href":"/OpenBBTerminal/SDK/crypto/ov/cpglobal/","title":"Cpglobal","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cpglobal() -\u0026gt; pandas.core.frame.DataFrame    Return data frame with most important global crypto statistics like: market_cap_usd, volume_24h_usd, bitcoin_dominance_percentage, cryptocurrencies_number, market_cap_ath_value, market_cap_ath_date, volume_24h_ath_value, volume_24h_ath_date, market_cap_change_24h, volume_24h_change_24h, last_updated. [Source: CoinPaprika]\nReturns ------- pandas.DataFrame Most important global crypto statistics Metric, Value  Getting charts    crypto.ov.cpglobal(export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Return data frame with most important global crypto statistics like: market_cap_usd, volume_24h_usd, bitcoin_dominance_percentage, cryptocurrencies_number, market_cap_ath_value, market_cap_ath_date, volume_24h_ath_value, volume_24h_ath_date, market_cap_change_24h, volume_24h_change_24h, last_updated [Source: CoinPaprika]\nParameters ---------- export : str Export dataframe data to csv,json,xlsx file  "},{"id":193,"href":"/OpenBBTerminal/SDK/crypto/ov/cpinfo/","title":"Cpinfo","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cpinfo(symbols: str = \u0026lsquo;USD\u0026rsquo;, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Returns basic coin information for all coins from CoinPaprika API [Source: CoinPaprika]\nParameters ---------- symbols: str Comma separated quotes to return e.g quotes=USD,BTC sortby: str Key by which to sort data ascend: bool Flag to sort data descending Returns ------- pandas.DataFrame rank, name, symbol, price, volume_24h, circulating_supply, total_supply, max_supply, market_cap, beta_value, ath_price,  Getting charts    crypto.ov.cpinfo(symbol: str, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = True, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays basic coin information for all coins from CoinPaprika API. [Source: CoinPaprika]\nParameters ---------- symbol: str Quoted currency limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending links: bool Flag to display urls export : str Export dataframe data to csv,json,xlsx file  "},{"id":194,"href":"/OpenBBTerminal/SDK/crypto/ov/cpmarkets/","title":"Cpmarkets","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cpmarkets(symbols: str = \u0026lsquo;USD\u0026rsquo;, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Returns basic coin information for all coins from CoinPaprika API [Source: CoinPaprika]\nParameters ---------- symbols: str Comma separated quotes to return e.g quotes=USD,BTC sortby: str Key by which to sort data ascend: bool Flag to sort data ascend Returns ------- pandas.DataFrame rank, name, symbol, price, volume_24h, mcap_change_24h, pct_change_1h, pct_change_24h, ath_price, pct_from_ath,  Getting charts    crypto.ov.cpmarkets(symbol: str, sortby: str = \u0026lsquo;rank\u0026rsquo;, ascend: bool = True, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Displays basic market information for all coins from CoinPaprika API. [Source: CoinPaprika]\nParameters ---------- symbol: str Quoted currency limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending links: bool Flag to display urls export : str Export dataframe data to csv,json,xlsx file  "},{"id":195,"href":"/OpenBBTerminal/SDK/crypto/ov/cpplatforms/","title":"Cpplatforms","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cpplatforms() -\u0026gt; pandas.core.frame.DataFrame    List all smart contract platforms like ethereum, solana, cosmos, polkadot, kusama \u0026hellip; [Source: CoinPaprika]\nReturns ------- pandas.DataFrame index, platform_id  Getting charts    crypto.ov.cpplatforms(export: str, chart=True) -\u0026gt; None    List all smart contract platforms like ethereum, solana, cosmos, polkadot, kusama. [Source: CoinPaprika]\nParameters ---------- export : str Export dataframe data to csv,json,xlsx file  "},{"id":196,"href":"/OpenBBTerminal/SDK/crypto/ov/cr/","title":"Cr","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.cr(rate_type: str = \u0026lsquo;borrow\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Returns crypto {borrow,supply} interest rates for cryptocurrencies across several platforms [Source: https://loanscan.io/]\nParameters ---------- rate_type : str Interest rate type: {borrow, supply}. Default: supply Returns ------- pandas.DataFrame: crypto interest rates per platform  Getting charts    crypto.ov.cr(symbols: str, platforms: str, rate_type: str = \u0026lsquo;borrow\u0026rsquo;, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Displays crypto {borrow,supply} interest rates for cryptocurrencies across several platforms [Source: https://loanscan.io/]\nParameters ---------- rate_type: str Interest rate type: {borrow, supply}. Default: supply symbols: str Crypto separated by commas. Default: BTC,ETH,USDT,USDC platforms: str Platforms separated by commas. Default: BlockFi,Ledn,SwissBorg,Youhodler limit: int Number of records to show export : str Export dataframe data to csv,json,xlsx file  "},{"id":197,"href":"/OpenBBTerminal/SDK/crypto/ov/crypto_hack/","title":"Crypto Hack","parent":"ov","content":"Get underlying data    crypto.ov.crypto_hack(slug: str) -\u0026gt; Optional[str]    Get crypto hack [Source: https://rekt.news]\nParameters ---------- slug: str slug of crypto hack Returns ------- pandas.DataFrame: Hacks with columns {Platform,Date,Amount [$],Audited,URL}  "},{"id":198,"href":"/OpenBBTerminal/SDK/crypto/ov/crypto_hack_slugs/","title":"Crypto Hack Slugs","parent":"ov","content":"Get underlying data    crypto.ov.crypto_hack_slugs() -\u0026gt; List[str]    Get all crypto hack slugs [Source: https://rekt.news]\n   Returns     List[str]:   List with slugs    "},{"id":199,"href":"/OpenBBTerminal/SDK/crypto/ov/crypto_hacks/","title":"Crypto Hacks","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.crypto_hacks(sortby: str = \u0026lsquo;Platform\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get major crypto-related hacks [Source: https://rekt.news]\nParameters ---------- sortby: str Key by which to sort data {Platform,Date,Amount [$],Audit,Slug,URL} ascend Flag to sort data ascending Returns ------- pandas.DataFrame: Hacks with columns {Platform,Date,Amount [$],Audited,Slug,URL}  Getting charts    crypto.ov.crypto_hacks(limit: int = 15, sortby: str = \u0026lsquo;Platform\u0026rsquo;, ascend: bool = False, slug: str = \u0026lsquo;polyntwork-rekt\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display list of major crypto-related hacks. If slug is passed individual crypto hack is displayed instead of list of crypto hacks [Source: https://rekt.news]\nParameters ---------- slug: str Crypto hack slug to check (e.g., polynetwork-rekt) limit: int Number of hacks to search sortby: str Key by which to sort data {Platform,Date,Amount [$],Audit,Slug,URL} ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file  "},{"id":200,"href":"/OpenBBTerminal/SDK/crypto/ov/ewf/","title":"Ewf","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.ewf() -\u0026gt; pandas.core.frame.DataFrame    Scrapes exchange withdrawal fees [Source: https://withdrawalfees.com/]\nParameters ---------- Returns ------- pandas.DataFrame: Exchange, Coins, Lowest, Average, Median, Highest  Getting charts    crypto.ov.ewf(export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Exchange withdrawal fees [Source: https://withdrawalfees.com/]\nParameters ---------- export : str Export dataframe data to csv,json,xlsx file  "},{"id":201,"href":"/OpenBBTerminal/SDK/crypto/ov/exchanges/","title":"Exchanges","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.exchanges(sortby: str = \u0026lsquo;name\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get list of top exchanges from CoinGecko API [Source: CoinGecko]\nParameters ---------- sortby: str Key by which to sort data ascend: bool Flag to sort data descending Returns ------- pandas.DataFrame Trust_Score, Id, Name, Country, Year_Established, Trade_Volume_24h_BTC, Url  Getting charts    crypto.ov.exchanges(sortby: str = \u0026lsquo;name\u0026rsquo;, ascend: bool = False, limit: int = 15, links: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows list of top exchanges from CoinGecko. [Source: CoinGecko]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data descending links: bool Flag to display urls export : str Export dataframe data to csv,json,xlsx file  "},{"id":202,"href":"/OpenBBTerminal/SDK/crypto/ov/global_info/","title":"Global Info","parent":"ov","content":"Get underlying data    crypto.ov.global_info() -\u0026gt; pandas.core.frame.DataFrame    Get global statistics about crypto from CoinGecko API like: - market cap change - number of markets - icos - number of active crypto\n[Source: CoinGecko] Returns ------- pandas.DataFrame Metric, Value  "},{"id":203,"href":"/OpenBBTerminal/SDK/crypto/ov/list_of_coins/","title":"List of Coins","parent":"ov","content":"Get underlying data    crypto.ov.list_of_coins() -\u0026gt; pandas.core.frame.DataFrame    Get list of all available coins on CoinPaprika [Source: CoinPaprika]\nReturns ------- pandas.DataFrame Available coins on CoinPaprika rank, id, name, symbol, type  "},{"id":204,"href":"/OpenBBTerminal/SDK/crypto/ov/news/","title":"News","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.news(limit: int = 60, post_kind: str = \u0026lsquo;news\u0026rsquo;, filter_: Optional[str] = None, region: str = \u0026lsquo;en\u0026rsquo;, source: Optional[str] = None, symbol: Optional[str] = None, sortby: str = \u0026lsquo;published_at\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get recent posts from CryptoPanic news aggregator platform. [Source: https://cryptopanic.com/]\nParameters ---------- limit: int number of news to fetch post_kind: str Filter by category of news. Available values: news or media. filter_: Optional[str] Filter by kind of news. One from list: rising|hot|bullish|bearish|important|saved|lol region: str Filter news by regions. Available regions are: en (English), de (Deutsch), nl (Dutch), es (Español), fr (Français), it (Italiano), pt (Português), ru (Русский) sortby: str Key to sort by. ascend: bool Sort in ascend order. Returns ------- pd.DataFrame DataFrame with recent news from different sources filtered by provided parameters.  Getting charts    crypto.ov.news(post_kind: str = \u0026lsquo;news\u0026rsquo;, region: str = \u0026lsquo;en\u0026rsquo;, filter_: Optional[str] = None, limit: int = 25, sortby: str = \u0026lsquo;published_at\u0026rsquo;, ascend: bool = False, links: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display recent posts from CryptoPanic news aggregator platform. [Source: https://cryptopanic.com/]\nParameters ---------- limit: int number of news to display post_kind: str Filter by category of news. Available values: news or media. filter_: Optional[str] Filter by kind of news. One from list: rising|hot|bullish|bearish|important|saved|lol region: str Filter news by regions. Available regions are: en (English), de (Deutsch), nl (Dutch), es (Español), fr (Français), it (Italiano), pt (Português), ru (Русский) sortby: str Key to sort by. ascend: bool Sort in ascending order. links: bool Show urls for news export : str Export dataframe data to csv,json,xlsx file  "},{"id":205,"href":"/OpenBBTerminal/SDK/crypto/ov/platforms/","title":"Platforms","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.platforms(sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get list of financial platforms from CoinGecko API [Source: CoinGecko]\nParameter ---------- sortby: str Key by which to sort data ascend: bool Flag to sort data ascending Returns ------- pandas.DataFrame Rank, Name, Category, Centralized, Url  Getting charts    crypto.ov.platforms(sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = True, limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Shows list of financial platforms. [Source: CoinGecko]\nParameters ---------- limit: int Number of records to display sortby: str Key by which to sort data ascend: bool Flag to sort data ascending export : str Export dataframe data to csv,json,xlsx file  "},{"id":206,"href":"/OpenBBTerminal/SDK/crypto/ov/wf/","title":"Wf","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.wf(limit: int = 100) -\u0026gt; pandas.core.frame.DataFrame    Scrapes top coins withdrawal fees [Source: https://withdrawalfees.com/]\nParameters ---------- limit: int Number of coins to search, by default n=100, one page has 100 coins, so 1 page is scraped. Returns ------- pandas.DataFrame: Coin, Lowest, Average, Median, Highest, Exchanges Compared  Getting charts    crypto.ov.wf(limit: int = 15, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Top coins withdrawal fees [Source: https://withdrawalfees.com/]\nParameters ---------- limit: int Number of coins to search export : str Export dataframe data to csv,json,xlsx file  "},{"id":207,"href":"/OpenBBTerminal/SDK/crypto/ov/wfpe/","title":"Wfpe","parent":"ov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.ov.wfpe(symbol: str) -\u0026gt; List[Any]    Scrapes coin withdrawal fees per exchange [Source: https://withdrawalfees.com/]\nParameters ---------- symbol: str Coin to check withdrawal fees. By default bitcoin Returns ------- List: - str: Overall statistics (exchanges, lowest, average and median) - pandas.DataFrame: Exchange, Withdrawal Fee, Minimum Withdrawal Amount  Getting charts    crypto.ov.wfpe(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Coin withdrawal fees per exchange [Source: https://withdrawalfees.com/]\nParameters ---------- symbol: str Coin to check withdrawal fees export : str Export dataframe data to csv,json,xlsx file  "},{"id":208,"href":"/OpenBBTerminal/SDK/crypto/tools/apy/","title":"Apy","parent":"tools","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.tools.apy(apr: float, compounding_times: int) -\u0026gt; Tuple[pandas.core.frame.DataFrame, str]    Converts apr into apy\nParameters ---------- apr: float value in percentage compounding_times: int number of compounded periods in a year Returns ------- Tuple: - pd.DataFrame: dataframe with results - str: narrative version of results  Getting charts    crypto.tools.apy(apr: float, compounding_times: int, narrative: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Displays APY value converted from APR\nParameters ---------- apr: float value in percentage compounding_times: int number of compounded periods in a year narrative: str display narrative version instead of dataframe export : str Export dataframe data to csv,json,xlsx file Returns -------  "},{"id":209,"href":"/OpenBBTerminal/SDK/crypto/tools/il/","title":"Il","parent":"tools","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    crypto.tools.il(price_changeA: float, price_changeB: float, proportion: float, initial_pool_value: float) -\u0026gt; Tuple[pandas.core.frame.DataFrame, str]    Calculates Impermanent Loss in a custom liquidity pool\nParameters ---------- price_changeA: float price change of crypto A in percentage price_changeB: float price change of crypto B in percentage proportion: float percentage of first token in pool initial_pool_value: float initial value that pool contains Returns ------- Tuple: - pd.DataFrame: dataframe with results - str: narrative version of results  Getting charts    crypto.tools.il(price_changeA: int, price_changeB: int, proportion: int, initial_pool_value: int, narrative: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Displays Impermanent Loss in a custom liquidity pool\nParameters ---------- price_changeA: float price change of crypto A in percentage price_changeB: float price change of crypto B in percentage proportion: float percentage of first token in pool initial_pool_value: float initial value that pool contains narrative: str display narrative version instead of dataframe export : str Export dataframe data to csv,json,xlsx file Returns -------  "},{"id":210,"href":"/OpenBBTerminal/SDK/econometrics/bgod/","title":"Bgod","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.bgod(model: pandas.core.frame.DataFrame, lags: int = 3) -\u0026gt; tuple    Calculate test statistics for autocorrelation\nParameters ---------- model : OLS Model Model containing residual values. lags : int The amount of lags. Returns ------- Test results from the Breusch-Godfrey Test  Getting charts    econometrics.bgod(model: pandas.core.frame.DataFrame, lags: int = 3, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Show Breusch-Godfrey autocorrelation test\nParameters ---------- model : OLS Model Model containing residual values. lags : int The amount of lags included. export : str Format to export data  "},{"id":211,"href":"/OpenBBTerminal/SDK/econometrics/bols/","title":"Bols","parent":"econometrics","content":"Get underlying data    econometrics.bols(regression_variables: List[Tuple], data: Dict[str, pandas.core.frame.DataFrame]) -\u0026gt; Tuple[pandas.core.frame.DataFrame, Any, List[Any], Any]    The between estimator is an alternative, usually less efficient estimator, can can be used to estimate model parameters. It is particular simple since it first computes the time averages of y and x and then runs a simple regression using these averages. [Source: LinearModels]\nParameters ---------- regression_variables : list The regressions variables entered where the first variable is the dependent variable. data : dict A dictionary containing the datasets. Returns ------- The dataset used, the dependent variable, the independent variable and the Between OLS model.  "},{"id":212,"href":"/OpenBBTerminal/SDK/econometrics/bpag/","title":"Bpag","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.bpag(model: pandas.core.frame.DataFrame) -\u0026gt; tuple    Calculate test statistics for heteroscedasticity\nParameters ---------- model : OLS Model Model containing residual values. Returns ------- Test results from the Breusch-Pagan Test  Getting charts    econometrics.bpag(model: pandas.core.frame.DataFrame, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Show Breusch-Pagan heteroscedasticity test\nParameters ---------- model : OLS Model Model containing residual values. export : str Format to export data  "},{"id":213,"href":"/OpenBBTerminal/SDK/econometrics/clean/","title":"Clean","parent":"econometrics","content":"Get underlying data    econometrics.clean(dataset: pandas.core.frame.DataFrame, fill: str = \u0026lsquo;\u0026rsquo;, drop: str = \u0026lsquo;\u0026rsquo;, limit: Optional[int] = None) -\u0026gt; pandas.core.frame.DataFrame    Clean up NaNs from the dataset\nParameters ---------- dataset : pd.DataFrame The dataset you wish to clean fill : str The method of filling NaNs. Choose from: rfill, cfill, rbfill, cbfill, rffill, cffill drop : str The method of dropping NaNs. Choose from: rdrop, cdrop limit : int The maximum limit you wish to apply that can be forward or backward filled Returns ------- pd.DataFrame: Dataframe with cleaned up data  "},{"id":214,"href":"/OpenBBTerminal/SDK/econometrics/coint/","title":"Coint","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.coint(dependent_series, independent_series)    Estimates long-run and short-run cointegration relationship for series y and x and apply the two-step Engle \u0026amp; Granger test for cointegration.\nUses a 2-step process to first estimate coefficients for the long-run relationship y_t = c + gamma * x_t + z_t and then the short-term relationship, y_t - y_(t-1) = alpha * z_(t-1) + epsilon_t, with z the found residuals of the first equation. Then tests cointegration by Dickey-Fuller phi=1 vs phi \u0026lt; 1 in z_t = phi * z_(t-1) + eta_t If this implies phi \u0026lt; 1, the z series is stationary is concluded to be stationary, and thus the series y and x are concluded to be cointegrated. Parameters ---------- dependent_series : pd.Series The first time series of the pair to analyse. independent_series : pd.Series The second time series of the pair to analyse. Returns ------- c : float The constant term in the long-run relationship y_t = c + gamma * x_t + z_t. This describes the static shift of y with respect to gamma * x. gamma : float The gamma term in the long-run relationship y_t = c + gamma * x_t + z_t. This describes the ratio between the const-shifted y and x. alpha : float The alpha term in the short-run relationship y_t - y_(t-1) = alpha * z_(t-1) + epsilon. This gives an indication of the strength of the error correction toward the long-run mean. z : pd.Series Series of residuals z_t from the long-run relationship y_t = c + gamma * x_t + z_t, representing the value of the error correction term. dfstat : float The Dickey Fuller test-statistic for phi = 1 vs phi \u0026lt; 1 in the second equation. A more negative value implies the existence of stronger cointegration. pvalue : float The p-value corresponding to the Dickey Fuller test-statistic. A lower value implies stronger rejection of no-cointegration, thus stronger evidence of cointegration.  Getting charts    econometrics.coint(datasets: Union[pandas.core.frame.DataFrame, Dict[str, pandas.core.series.Series]], significant: bool = False, plot: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[axes]] = None, chart=True)    Estimates long-run and short-run cointegration relationship for series y and x and apply the two-step Engle \u0026amp; Granger test for cointegration.\nUses a 2-step process to first estimate coefficients for the long-run relationship y_t = c + gamma * x_t + z_t and then the short-term relationship, y_t - y_(t-1) = alpha * z_(t-1) + epsilon_t, with z the found residuals of the first equation. Then tests co-integration with the Dickey-Fuller phi=1 vs phi \u0026lt; 1 in z_t = phi * z_(t-1) + eta_t If this implies phi \u0026lt; 1, the z series is stationary is concluded to be stationary, and thus the series y and x are concluded to be cointegrated. Parameters ---------- datasets: Union[pd.DataFrame, Dict[str, pd.Series]] All time series to perform co-integration tests on. significant: float Show only companies that have p-values lower than this percentage plot: bool Whether you wish to plot the z-values of all pairs. export : str Format to export data external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":215,"href":"/OpenBBTerminal/SDK/econometrics/comparison/","title":"Comparison","parent":"econometrics","content":"Get underlying data    econometrics.comparison(regressions, export: str = \u0026lsquo;')    Compare regression results between Panel Data regressions.\nParameters ---------- regressions : Dict Dictionary with regression results. export : str Format to export data Returns ------- Returns a PanelModelComparison which shows an overview of the different regression results.  "},{"id":216,"href":"/OpenBBTerminal/SDK/econometrics/dwat/","title":"Dwat","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.dwat(residual: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    Calculate test statistics for Durbing Watson autocorrelation\nParameters ---------- residual : OLS Model Model containing residual values. Returns ------- Test statistic of the Durbin Watson test.  Getting charts    econometrics.dwat(dependent_variable: pandas.core.series.Series, residual: pandas.core.frame.DataFrame, plot: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[axes]] = None, chart=True)    Show Durbin-Watson autocorrelation tests\nParameters ---------- dependent_variable : pd.Series The dependent variable. residual : OLS Model The residual of an OLS model. plot : bool Whether to plot the residuals export : str Format to export data external_axes: Optional[List[plt.axes]] External axes to plot on  "},{"id":217,"href":"/OpenBBTerminal/SDK/econometrics/fdols/","title":"Fdols","parent":"econometrics","content":"Get underlying data    econometrics.fdols(regression_variables: List[Tuple], data: Dict[str, pandas.core.frame.DataFrame]) -\u0026gt; Tuple[pandas.core.frame.DataFrame, Any, List[Any], Any]    First differencing is an alternative to using fixed effects when there might be correlation. When using first differences, time-invariant variables must be excluded. Additionally, only one linear time-trending variable can be included since this will look like a constant. This variable will soak up all time-trends in the data, and so interpretations of these variable can be challenging. [Source: LinearModels]\nParameters ---------- regression_variables : list The regressions variables entered where the first variable is the dependent variable. data : dict A dictionary containing the datasets. Returns ------- The dataset used, the dependent variable, the independent variable and the OLS model.  "},{"id":218,"href":"/OpenBBTerminal/SDK/econometrics/fe/","title":"Fe","parent":"econometrics","content":"Get underlying data    econometrics.fe(regression_variables: List[Tuple], data: Dict[str, pandas.core.frame.DataFrame], entity_effects: bool = False, time_effects: bool = False) -\u0026gt; Tuple[pandas.core.frame.DataFrame, Any, List[Any], Any]    When effects are correlated with the regressors the RE and BE estimators are not consistent. The usual solution is to use Fixed Effects which are called entity_effects when applied to entities and time_effects when applied to the time dimension. [Source: LinearModels]\nParameters ---------- regression_variables : list The regressions variables entered where the first variable is the dependent variable. data : dict A dictionary containing the datasets. entity_effects : bool Whether to include entity effects time_effects : bool Whether to include time effects Returns ------- The dataset used, the dependent variable, the independent variable and the OLS model.  "},{"id":219,"href":"/OpenBBTerminal/SDK/econometrics/get_regression_data/","title":"Get Regression Data","parent":"econometrics","content":"Get underlying data    econometrics.get_regression_data(regression_variables: List[tuple], data: Dict[str, pandas.core.frame.DataFrame], regression_type: str = \u0026lsquo;') -\u0026gt; Tuple[pandas.core.frame.DataFrame, Any, List[Any]]    This function creates a DataFrame with the required regression data as well sets up the dependent and independent variables.\nParameters ---------- regression_variables : list The regressions variables entered where the first variable is the dependent variable. data : dict A dictionary containing the datasets. regression_type: str The type of regression that is executed. Returns ------- The dataset used, the dependent variable, the independent variable and the OLS model.  "},{"id":220,"href":"/OpenBBTerminal/SDK/econometrics/granger/","title":"Granger","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.granger(dependent_series, independent_series, lags)    Calculate granger tests\nParameters ---------- dependent_series: Series The series you want to test Granger Causality for. independent_series: Series The series that you want to test whether it Granger-causes time_series_y lags : int The amount of lags for the Granger test. By default, this is set to 3.  Getting charts    econometrics.granger(dependent_series: pandas.core.series.Series, independent_series: pandas.core.series.Series, lags: int = 3, confidence_level: float = 0.05, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Show granger tests\nParameters ---------- dependent_series: Series The series you want to test Granger Causality for. independent_series: Series The series that you want to test whether it Granger-causes dependent_series lags : int The amount of lags for the Granger test. By default, this is set to 3. confidence_level: float The confidence level you wish to use. By default, this is set to 0.05. export : str Format to export data  "},{"id":221,"href":"/OpenBBTerminal/SDK/econometrics/load/","title":"Load","parent":"econometrics","content":"Get underlying data    econometrics.load(file: str, file_types: Optional[List[str]] = None, data_files: Optional[Dict[Any, Any]] = None, data_examples: Optional[Dict[Any, Any]] = None) -\u0026gt; pandas.core.frame.DataFrame    Load custom file into dataframe.\nParameters ---------- file: str Path to file file_types: list Supported file types data_files: dict Contains all available data files within the Export folder data_examples: dict Contains all available examples from Statsmodels Returns ------- pd.DataFrame: Dataframe with custom data  "},{"id":222,"href":"/OpenBBTerminal/SDK/econometrics/norm/","title":"Norm","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.norm(data: pandas.core.series.Series) -\u0026gt; pandas.core.frame.DataFrame    The distribution of returns and generate statistics on the relation to the normal curve. This function calculates skew and kurtosis (the third and fourth moments) and performs both a Jarque-Bera and Shapiro Wilk test to determine if data is normally distributed. Parameters ---------- data : pd.Series A series or column of a DataFrame to test normality for Returns ------- pd.DataFrame Dataframe containing statistics of normality  Getting charts    econometrics.norm(data: pandas.core.series.Series, dataset: str = \u0026lsquo;\u0026rsquo;, column: str = \u0026lsquo;\u0026rsquo;, plot: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[axes]] = None, chart=True)    Determine the normality of a timeseries.\nParameters ---------- data: pd.Series Series of custom data dataset: str Dataset name column: str Column for y data plot : bool Whether you wish to plot a histogram export: str Format to export data. external_axes: Optional[List[plt.axes]] External axes to plot on  "},{"id":223,"href":"/OpenBBTerminal/SDK/econometrics/ols/","title":"Ols","parent":"econometrics","content":"Get underlying data    econometrics.ols(regression_variables: List[Tuple], data: Dict[str, pandas.core.frame.DataFrame], show_regression: bool = True, export: str = \u0026lsquo;') -\u0026gt; Tuple[pandas.core.frame.DataFrame, Any, List[Any], Any]    Performs an OLS regression on timeseries data. [Source: Statsmodels]\nParameters ---------- regression_variables : list The regressions variables entered where the first variable is the dependent variable. data : dict A dictionary containing the datasets. show_regression: bool Whether to show the regression results table. export: str Format to export data Returns ------- The dataset used, the dependent variable, the independent variable and the OLS model.  "},{"id":224,"href":"/OpenBBTerminal/SDK/econometrics/options/","title":"Options","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.options(datasets: Dict[str, pandas.core.frame.DataFrame], dataset_name: str = \u0026lsquo;') -\u0026gt; Dict[Union[str, Any], pandas.core.frame.DataFrame]    Obtain columns-dataset combinations from loaded in datasets that can be used in other commands\nParameters ---------- datasets: dict The available datasets. dataset_name: str The dataset you wish to show the options for. Returns ------- option_tables: dict A dictionary with a DataFrame for each option. With dataset_name set, only shows one options table.  Getting charts    econometrics.options(datasets: Dict[str, pandas.core.frame.DataFrame], dataset_name: str = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Plot custom data\nParameters ---------- datasets: dict The loaded in datasets dataset_name: str The name of the dataset you wish to show options for export: str Format to export image  "},{"id":225,"href":"/OpenBBTerminal/SDK/econometrics/panel/","title":"Panel","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.panel(regression_type: str, regression_variables: List[Tuple], data: Dict[str, pandas.core.frame.DataFrame], entity_effects: bool = False, time_effects: bool = False) -\u0026gt; Tuple[pandas.core.frame.DataFrame, Any, List[Any], Any]    Based on the regression type, this function decides what regression to run.\nParameters ---------- regression_type: str The type of regression you wish to execute. regression_variables : list The regressions variables entered where the first variable is the dependent variable. data : dict A dictionary containing the datasets. entity_effects: bool Whether to apply Fixed Effects on entities. time_effects: bool Whether to apply Fixed Effects on time. Returns ------- The dataset used, the dependent variable, the independent variable and the regression model.  Getting charts    econometrics.panel(data: Dict[str, pandas.core.frame.DataFrame], regression_variables: List[Tuple], regression_type: str = \u0026lsquo;OLS\u0026rsquo;, entity_effects: bool = False, time_effects: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Based on the regression type, this function decides what regression to run.\nParameters ---------- data : dict A dictionary containing the datasets. regression_variables : list The regressions variables entered where the first variable is the dependent variable. each column/dataset combination. regression_type: str The type of regression you wish to execute. Choose from: OLS, POLS, RE, BOLS, FE entity_effects: bool Whether to apply Fixed Effects on entities. time_effects: bool Whether to apply Fixed Effects on time. export : str Format to export data Returns ------- The dataset used, the dependent variable, the independent variable and the regression model.  "},{"id":226,"href":"/OpenBBTerminal/SDK/econometrics/pols/","title":"Pols","parent":"econometrics","content":"Get underlying data    econometrics.pols(regression_variables: List[Tuple], data: Dict[str, pandas.core.frame.DataFrame]) -\u0026gt; Tuple[pandas.core.frame.DataFrame, Any, List[Any], Any]    PooledOLS is just plain OLS that understands that various panel data structures. It is useful as a base model. [Source: LinearModels]\nParameters ---------- regression_variables : list The regressions variables entered where the first variable is the dependent variable. data : dict A dictionary containing the datasets. Returns ------- The dataset used, the dependent variable, the independent variable and the Pooled OLS model.  "},{"id":227,"href":"/OpenBBTerminal/SDK/econometrics/re/","title":"Re","parent":"econometrics","content":"Get underlying data    econometrics.re(regression_variables: List[Tuple], data: Dict[str, pandas.core.frame.DataFrame]) -\u0026gt; Tuple[pandas.core.frame.DataFrame, Any, List[Any], Any]    The random effects model is virtually identical to the pooled OLS model except that is accounts for the structure of the model and so is more efficient. Random effects uses a quasi-demeaning strategy which subtracts the time average of the within entity values to account for the common shock. [Source: LinearModels]\nParameters ---------- regression_variables : list The regressions variables entered where the first variable is the dependent variable. data : dict A dictionary containing the datasets. Returns ------- The dataset used, the dependent variable, the independent variable and the RandomEffects model.  "},{"id":228,"href":"/OpenBBTerminal/SDK/econometrics/root/","title":"Root","parent":"econometrics","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    econometrics.root(data: pandas.core.series.Series, fuller_reg: str = \u0026lsquo;c\u0026rsquo;, kpss_reg: str = \u0026lsquo;c\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Calculate test statistics for unit roots\nParameters ---------- data : pd.Series Series or column of DataFrame of target variable fuller_reg : str Type of regression of ADF test kpss_reg : str Type of regression for KPSS test Returns ------- pd.DataFrame Dataframe with results of ADF test and KPSS test  Getting charts    econometrics.root(data: pandas.core.series.Series, dataset: str = \u0026lsquo;\u0026rsquo;, column: str = \u0026lsquo;\u0026rsquo;, fuller_reg: str = \u0026lsquo;c\u0026rsquo;, kpss_reg: str = \u0026lsquo;c\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Determine the normality of a timeseries.\nParameters ---------- data : pd.Series Series of target variable dataset: str Name of the dataset column: str Name of the column fuller_reg : str Type of regression of ADF test. Choose c, ct, ctt, or nc kpss_reg : str Type of regression for KPSS test. Choose c or ct export: str Format to export data.  "},{"id":229,"href":"/OpenBBTerminal/SDK/economy/available_indices/","title":"Available Indices","parent":"economy","content":"Get underlying data    economy.available_indices() -\u0026gt; dict    Get available indices\nReturns: dict: dictionary with available indices and respective detail  "},{"id":230,"href":"/OpenBBTerminal/SDK/economy/bigmac/","title":"Bigmac","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.bigmac(country_codes: List[str] = None) -\u0026gt; pandas.core.frame.DataFrame    Display Big Mac Index for given countries\nParameters ---------- country_codes : List[str] List of country codes (ISO-3 letter country code). Codes available through economy.country_codes(). Returns ------- pd.DataFrame Dataframe with Big Mac indices converted to USD equivalent.  Getting charts    economy.bigmac(country_codes: List[str] = None, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display Big Mac Index for given countries\nParameters ---------- country_codes : List[str] List of country codes (ISO-3 letter country code). Codes available through economy.country_codes(). raw : bool, optional Flag to display raw data, by default False export : str, optional Format data, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":231,"href":"/OpenBBTerminal/SDK/economy/country_codes/","title":"Country Codes","parent":"economy","content":"Get underlying data    economy.country_codes() -\u0026gt; List[str]    Get available country codes for Bigmac index\nReturns ------- List[str] List of ISO-3 letter country codes.  "},{"id":232,"href":"/OpenBBTerminal/SDK/economy/cpi/","title":"Cpi","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.cpi(interval: str = \u0026rsquo;m', start_year: int = 2010) -\u0026gt; pandas.core.frame.DataFrame    Get Consumer Price Index from Alpha Vantage\nParameters ---------- interval : str Interval for data. Either \u0026quot;m\u0026quot; or \u0026quot;s\u0026quot; for monthly or semiannual start_year : int, optional Start year for plot, by default 2010 Returns ------- pd.DataFrame Dataframe of CPI  Getting charts    economy.cpi(interval: str = \u0026rsquo;m', start_year: int = 2010, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display US consumer price index (CPI) from AlphaVantage\nParameters ---------- interval : str Interval for GDP. Either \u0026quot;m\u0026quot; or \u0026quot;s\u0026quot; start_year : int, optional Start year for plot, by default 2010 raw : bool, optional Flag to show raw data, by default False export : str, optional Format to export data, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":233,"href":"/OpenBBTerminal/SDK/economy/currencies/","title":"Currencies","parent":"economy","content":"Get underlying data    economy.currencies() -\u0026gt; pandas.core.frame.DataFrame    Scrape data for global currencies\nReturns ------- currencies: pd.DataFrame Dataframe containing name, price, net change and percent change  "},{"id":234,"href":"/OpenBBTerminal/SDK/economy/events/","title":"Events","parent":"economy","content":"Get underlying data    economy.events(country: str = \u0026lsquo;all\u0026rsquo;, importance: str = \u0026lsquo;\u0026rsquo;, category: str = \u0026lsquo;\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, limit=100) -\u0026gt; Tuple[pandas.core.frame.DataFrame, str]    Get economic calendar [Source: Investing.com]\nParameters ---------- country: str Country selected. List of available countries is accessible through get_events_countries(). importance: str Importance selected from high, medium, low or all category: str Event category. List of available categories is accessible through get_events_categories(). start_date: datetime.date First date to get events. end_date: datetime.date Last date to get events. Returns ------- Tuple[pd.DataFrame, str] Economic calendar Dataframe and detail string about country/time zone.  "},{"id":235,"href":"/OpenBBTerminal/SDK/economy/fred_ids/","title":"Fred IDS","parent":"economy","content":"Get underlying data    economy.fred_ids(search_query: str, limit: int = -1) -\u0026gt; pandas.core.frame.DataFrame    Get Series IDs. [Source: FRED]\n   Parameters     search_query : str   Text query to search on fred series notes database   limit : int   Maximum number of series IDs to output   Returns   \u0026mdash;\u0026mdash;\u0026mdash;-   pd.Dataframe   Dataframe with series IDs and titles    "},{"id":236,"href":"/OpenBBTerminal/SDK/economy/fred_notes/","title":"Fred Notes","parent":"economy","content":"Get underlying data    economy.fred_notes(search_query: str, limit: int = -1) -\u0026gt; pandas.core.frame.DataFrame    Get series notes. [Source: FRED]\n   Parameters     search_query : str   Text query to search on fred series notes database   limit : int   Maximum number of series notes to display   Returns   \u0026mdash;\u0026mdash;\u0026mdash;-   pd.DataFrame   DataFrame of matched series    "},{"id":237,"href":"/OpenBBTerminal/SDK/economy/fred_series/","title":"Fred Series","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.fred_series(series_ids: List[str], start_date: str = None, end_date: str = None) -\u0026gt; pandas.core.frame.DataFrame    Get Series data. [Source: FRED]\n   Parameters     series_ids : List[str]   Series ID to get data from   start_date : str   Start date to get data from, format yyyy-mm-dd   end_date : str   End data to get from, format yyyy-mm-dd    Returns ---------- pd.DataFrame Series data  Getting charts    economy.fred_series(series_ids: List[str], start_date: str = None, end_date: str = None, limit: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display (multiple) series from https://fred.stlouisfed.org. [Source: FRED]\nParameters ---------- series_ids : List[str] FRED Series ID from https://fred.stlouisfed.org. For multiple series use: series1,series2,series3 start_date : str Starting date (YYYY-MM-DD) of data end_date : str Ending date (YYYY-MM-DD) of data limit : int Number of data points to display. raw : bool Output only raw data export : str Export data to csv,json,xlsx or png,jpg,pdf,svg file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":238,"href":"/OpenBBTerminal/SDK/economy/fred_yield_curve/","title":"Fred Yield Curve","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.fred_yield_curve(date: datetime.datetime = None) -\u0026gt; Tuple[pandas.core.frame.DataFrame, datetime.datetime]    Gets yield curve data from FRED\nParameters ---------- date: datetime Date to get curve for. If None, gets most recent date Returns ------- pd.DataFrame: Dataframe of yields and maturities str Date for which the yield curve is obtained  Getting charts    economy.fred_yield_curve(date: datetime.datetime = None, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display yield curve based on US Treasury rates for a specified date.\nParameters ---------- date: datetime Date to get yield curve for external_axes: Optional[List[plt.Axes]] External axes to plot data on  "},{"id":239,"href":"/OpenBBTerminal/SDK/economy/future/","title":"Future","parent":"economy","content":"Get underlying data    economy.future(future_type: str = \u0026lsquo;Indices\u0026rsquo;, sortby: str = \u0026lsquo;ticker\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get futures data. [Source: Finviz]\nParameters ---------- future_type : str From the following: Indices, Energy, Metals, Meats, Grains, Softs, Bonds, Currencies sortby : str Column to sort by ascend : bool Flag to sort in ascending order Returns ---------- pd.Dataframe Indices, Energy, Metals, Meats, Grains, Softs, Bonds, Currencies  "},{"id":240,"href":"/OpenBBTerminal/SDK/economy/futures/","title":"Futures","parent":"economy","content":"Get underlying data    economy.futures() -\u0026gt; pandas.core.frame.DataFrame    Scrape data for top commodities\nReturns ------- commodities: pd.DataFrame Dataframe containing name, price, net change and percent change  "},{"id":241,"href":"/OpenBBTerminal/SDK/economy/gdp/","title":"Gdp","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.gdp(interval: str = \u0026lsquo;q\u0026rsquo;, start_year: int = 2010) -\u0026gt; pandas.core.frame.DataFrame    Get annual or quarterly Real GDP for US\nParameters ---------- interval : str, optional Interval for GDP, by default \u0026quot;a\u0026quot; for annual, by default \u0026quot;q\u0026quot; start_year : int, optional Start year for plot, by default 2010 Returns ------- pd.DataFrame Dataframe of GDP  Getting charts    economy.gdp(interval: str = \u0026lsquo;q\u0026rsquo;, start_year: int = 2010, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display US GDP from AlphaVantage\nParameters ---------- interval : str Interval for GDP. Either \u0026quot;a\u0026quot; or \u0026quot;q\u0026quot;, by default \u0026quot;q\u0026quot; start_year : int, optional Start year for plot, by default 2010 raw : bool, optional Flag to show raw data, by default False export : str, optional Format to export data, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":242,"href":"/OpenBBTerminal/SDK/economy/gdpc/","title":"Gdpc","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.gdpc(start_year: int = 2010) -\u0026gt; pandas.core.frame.DataFrame    Real GDP per Capita for United States\nParameters ---------- start_year : int, optional Start year for plot, by default 2010 Returns ------- pd.DataFrame DataFrame of GDP per Capita  Getting charts    economy.gdpc(start_year: int = 2010, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display US GDP per Capita from AlphaVantage\nParameters ---------- start_year : int, optional Start year for plot, by default 2010 raw : bool, optional Flag to show raw data, by default False export : str, optional Format to export data, by default external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":243,"href":"/OpenBBTerminal/SDK/economy/get_events_countries/","title":"Get Events Countries","parent":"economy","content":"Get underlying data    economy.get_events_countries() -\u0026gt; list    Get available countries for events command.\nReturns: list: List of available countries.  "},{"id":244,"href":"/OpenBBTerminal/SDK/economy/get_ycrv_countries/","title":"Get Ycrv Countries","parent":"economy","content":"Get underlying data    economy.get_ycrv_countries() -\u0026gt; list    Get available countries for ycrv command.\nReturns: list: List of available countries.  "},{"id":245,"href":"/OpenBBTerminal/SDK/economy/glbonds/","title":"Glbonds","parent":"economy","content":"Get underlying data    economy.glbonds() -\u0026gt; pandas.core.frame.DataFrame    Scrape data for global bonds\nReturns ------- bonds: pd.DataFrame Dataframe containing name, coupon rate, yield and change in yield  "},{"id":246,"href":"/OpenBBTerminal/SDK/economy/index/","title":"Index","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.index(indices: list, interval: str = \u0026lsquo;1d\u0026rsquo;, start_date: int = None, end_date: int = None, column: str = \u0026lsquo;Adj Close\u0026rsquo;, returns: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get data on selected indices over time [Source: Yahoo Finance]\n   Parameters     indices: list   A list of indices to get data. Available indices can be accessed through economy.available_indices().   interval: str   Valid intervals: 1m,2m,5m,15m,30m,60m,90m,1h,1d,5d,1wk,1mo,3mo   Intraday data cannot extend last 60 days   start_date : str   The starting date, format \u0026ldquo;YEAR-MONTH-DAY\u0026rdquo;, i.e. 2010-12-31.   end_date : str   The end date, format \u0026ldquo;YEAR-MONTH-DAY\u0026rdquo;, i.e. 2020-06-05.   column : str   Which column to load in, by default this is the Adjusted Close.   returns: bool   Flag to show cumulative returns on index   Returns   \u0026mdash;\u0026mdash;\u0026mdash;-   pd.Dataframe   Dataframe with historical data on selected indices.    Getting charts    economy.index(indices: list, interval: str = \u0026lsquo;1d\u0026rsquo;, start_date: int = None, end_date: int = None, column: str = \u0026lsquo;Adj Close\u0026rsquo;, returns: bool = False, raw: bool = False, external_axes: Optional[List[axes]] = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Load (and show) the selected indices over time [Source: Yahoo Finance]\n   Parameters     indices: list   A list of indices you wish to load (and plot).   Available indices can be accessed through economy.available_indices().   interval: str   Valid intervals: 1m,2m,5m,15m,30m,60m,90m,1h,1d,5d,1wk,1mo,3mo   Intraday data cannot extend last 60 days   start_date : str   The starting date, format \u0026ldquo;YEAR-MONTH-DAY\u0026rdquo;, i.e. 2010-12-31.   end_date : str   The end date, format \u0026ldquo;YEAR-MONTH-DAY\u0026rdquo;, i.e. 2020-06-05.   column : str   Which column to load in, by default this is the Adjusted Close.   returns: bool   Flag to show cumulative returns on index   raw : bool   Whether to display the raw output.   external_axes: Optional[List[plt.axes]]   External axes to plot on   export : str   Export data to csv,json,xlsx or png,jpg,pdf,svg file   Returns   \u0026mdash;\u0026mdash;\u0026mdash;-   Plots the Series.    "},{"id":247,"href":"/OpenBBTerminal/SDK/economy/indices/","title":"Indices","parent":"economy","content":"Get underlying data    economy.indices() -\u0026gt; pandas.core.frame.DataFrame    Get the top US indices\nReturns ------- indices: pd.DataFrame Dataframe containing name, price, net change and percent change  "},{"id":248,"href":"/OpenBBTerminal/SDK/economy/inf/","title":"Inf","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.inf(start_year: int = 2010) -\u0026gt; pandas.core.frame.DataFrame    Get historical Inflation for United States from AlphaVantage\nParameters ---------- start_year : int, optional Start year for plot, by default 2010 Returns ------- pd.DataFrame DataFrame of inflation rates  Getting charts    economy.inf(start_year: int = 2010, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display US Inflation from AlphaVantage\nParameters ---------- start_year : int, optional Start year for plot, by default 2010 raw : bool, optional Flag to show raw data, by default False export : str, optional Format to export data, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":249,"href":"/OpenBBTerminal/SDK/economy/macro/","title":"Macro","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.macro(parameters: list = None, countries: list = None, transform: str = \u0026lsquo;\u0026rsquo;, start_date: str = \u0026lsquo;1900-01-01\u0026rsquo;, end_date=datetime.date(2022, 10, 26), symbol: str = \u0026lsquo;') -\u0026gt; Tuple[Any, Dict[Any, Dict[Any, Any]], str]    This functions groups the data queried from the EconDB database [Source: EconDB]\nParameters ---------- parameters: list The type of data you wish to download. Available parameters can be accessed through economy.macro_parameters(). countries : list The selected country or countries. Available countries can be accessed through economy.macro_countries(). transform : str The selected transform. Available transforms can be accessed through get_macro_transform(). start_date : str The starting date, format \u0026quot;YEAR-MONTH-DAY\u0026quot;, i.e. 2010-12-31. end_date : str The end date, format \u0026quot;YEAR-MONTH-DAY\u0026quot;, i.e. 2020-06-05. symbol : str In what currency you wish to convert all values. Returns ---------- pd.DataFrame A DataFrame with the requested macro data of all chosen countries Dictionary A dictionary containing the units of each country's parameter (e.g. EUR) str Denomination which can be Trillions, Billions, Millions, Thousands  Getting charts    economy.macro(parameters: list = None, countries: list = None, transform: str = \u0026lsquo;\u0026rsquo;, start_date: str = \u0026lsquo;1900-01-01\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, symbol: str = \u0026lsquo;\u0026rsquo;, raw: bool = False, external_axes: Optional[List[axes]] = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Show the received macro data about a company [Source: EconDB]\nParameters ---------- parameters: list The type of data you wish to display. Available parameters can be accessed through get_macro_parameters(). countries : list The selected country or countries. Available countries can be accessed through get_macro_countries(). transform : str select data transformation from: '' - no transformation 'TPOP' - total percentage change on period, 'TOYA' - total percentage since 1 year ago, 'TUSD' - level USD, 'TPGP' - Percentage of GDP, 'TNOR' - Start = 100 start_date : str The starting date, format \u0026quot;YEAR-MONTH-DAY\u0026quot;, i.e. 2010-12-31. end_date : str The end date, format \u0026quot;YEAR-MONTH-DAY\u0026quot;, i.e. 2020-06-05. symbol : str In what currency you wish to convert all values. raw : bool Whether to display the raw output. external_axes: Optional[List[plt.axes]] External axes to plot on export : str Export data to csv,json,xlsx or png,jpg,pdf,svg file Returns ---------- Plots the Series.  "},{"id":250,"href":"/OpenBBTerminal/SDK/economy/macro_countries/","title":"Macro Countries","parent":"economy","content":"Get underlying data    economy.macro_countries() -\u0026gt; Dict[str, str]    This function returns the available countries and respective currencies.\nReturns ---------- Dict[str, str] A dictionary with the available countries and respective currencies.  "},{"id":251,"href":"/OpenBBTerminal/SDK/economy/macro_parameters/","title":"Macro Parameters","parent":"economy","content":"Get underlying data    economy.macro_parameters() -\u0026gt; Dict[str, Dict[str, str]]    This function returns the available macro parameters with detail.\nReturns ---------- Dict[str, Dict[str, str]] A dictionary with the available macro parameters.  "},{"id":252,"href":"/OpenBBTerminal/SDK/economy/overview/","title":"Overview","parent":"economy","content":"Get underlying data    economy.overview() -\u0026gt; pandas.core.frame.DataFrame    Scrape data for market overview\nReturns ------- overview: pd.DataFrame Dataframe containing name, price, net change and percent change  "},{"id":253,"href":"/OpenBBTerminal/SDK/economy/perfmap/","title":"Perfmap","parent":"economy","content":"Get underlying data    economy.perfmap(period: str = \u0026lsquo;1d\u0026rsquo;, map_filter: str = \u0026lsquo;sp500\u0026rsquo;)    Opens Finviz map website in a browser. [Source: Finviz]\nParameters ---------- period : str Performance period. Available periods are 1d, 1w, 1m, 3m, 6m, 1y. scope : str Map filter. Available map filters are sp500, world, full, etf.  "},{"id":254,"href":"/OpenBBTerminal/SDK/economy/performance/","title":"Performance","parent":"economy","content":"Get underlying data    economy.performance(group: str = \u0026lsquo;sector\u0026rsquo;, sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get group (sectors, industry or country) performance data. [Source: Finviz]\nParameters ---------- group : str Group by category. Available groups can be accessed through get_groups(). sortby : str Column to sort by ascend : bool Flag to sort in ascending order Returns ---------- pd.DataFrame dataframe with performance data  "},{"id":255,"href":"/OpenBBTerminal/SDK/economy/rtps/","title":"Rtps","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.rtps() -\u0026gt; pandas.core.frame.DataFrame    Get real-time performance sector data\nReturns ---------- df_sectors : pd.Dataframe Real-time performance data  Getting charts    economy.rtps(raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display Real-Time Performance sector. [Source: AlphaVantage]\nParameters ---------- raw : bool Output only raw data export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":256,"href":"/OpenBBTerminal/SDK/economy/search_index/","title":"Search Index","parent":"economy","content":"Get underlying data    economy.search_index(keyword: list, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Search indices by keyword. [Source: FinanceDatabase]\n   Parameters     keyword: list   The keyword you wish to search for. This can include spaces.   limit: int   The amount of views you want to show, by default this is set to 10.   Returns   \u0026mdash;\u0026mdash;\u0026mdash;-   pd.Dataframe   Dataframe with the available options.    "},{"id":257,"href":"/OpenBBTerminal/SDK/economy/spectrum/","title":"Spectrum","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.spectrum(group: str = \u0026lsquo;sector\u0026rsquo;)    Get group (sectors, industry or country) valuation/performance data. [Source: Finviz]\nParameters ---------- group : str Group by category. Available groups can be accessed through get_groups().  Getting charts    economy.spectrum(group: str = \u0026lsquo;sector\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display finviz spectrum in system viewer [Source: Finviz]\nParameters ---------- group: str Group by category. Available groups can be accessed through get_groups(). export: str Format to export data  "},{"id":258,"href":"/OpenBBTerminal/SDK/economy/spread/","title":"Spread","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.spread(countries: Union[str, List[str]] = \u0026lsquo;G7\u0026rsquo;, maturity: str = \u0026lsquo;10Y\u0026rsquo;, change: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get spread matrix. [Source: Investing.com]\nParameters ---------- countries: Union[str, List[str]] Countries or group of countries. List of available countries is accessible through get_ycrv_countries(). maturity: str Maturity to get data. By default 10Y. change: bool Flag to use 1 day change or not. By default False. Returns ------- pd.DataFrame Spread matrix.  Getting charts    economy.spread(countries: Union[str, List[str]] = \u0026lsquo;G7\u0026rsquo;, maturity: str = \u0026lsquo;10Y\u0026rsquo;, change: bool = False, color: str = \u0026lsquo;openbb\u0026rsquo;, raw: bool = False, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display spread matrix. [Source: Investing.com]\nParameters ---------- countries: Union[str, List[str]] Countries or group of countries. List of available countries is accessible through get_ycrv_countries(). maturity: str Maturity to get data. By default 10Y. change: bool Flag to use 1 day change or not. By default False. color: str Color theme to use on heatmap, from rgb, binary or openbb By default, openbb. raw : bool Output only raw data. export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":259,"href":"/OpenBBTerminal/SDK/economy/treasury/","title":"Treasury","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.treasury(instruments: list = None, maturities: list = None, frequency: str = \u0026lsquo;monthly\u0026rsquo;, start_date: str = \u0026lsquo;1900-01-01\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get U.S. Treasury rates [Source: EconDB]\nParameters ---------- instruments: list Type(s) of treasuries, nominal, inflation-adjusted (long term average) or secondary market. Available options can be accessed through economy.treasury_maturities(). maturities : list Treasury maturities to get. Available options can be accessed through economy.treasury_maturities(). frequency : str Frequency of the data, this can be annually, monthly, weekly or daily. start_date : str Starting date, format \u0026quot;YEAR-MONTH-DAY\u0026quot;, i.e. 2010-12-31. end_date : str End date, format \u0026quot;YEAR-MONTH-DAY\u0026quot;, i.e. 2020-06-05. Returns ---------- treasury_data: pd.Dataframe Holds data of the selected types and maturities  Getting charts    economy.treasury(instruments: list = None, maturities: list = None, frequency: str = \u0026lsquo;monthly\u0026rsquo;, start_date: str = \u0026lsquo;1900-01-01\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, raw: bool = False, external_axes: Optional[List[axes]] = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display U.S. Treasury rates [Source: EconDB]\nParameters ---------- instruments: list Type(s) of treasuries, nominal, inflation-adjusted or secondary market. Available options can be accessed through economy.treasury_maturities(). maturities : list Treasury maturities to display. Available options can be accessed through economy.treasury_maturities(). frequency : str Frequency of the data, this can be daily, weekly, monthly or annually start_date : str Starting date, format \u0026quot;YEAR-MONTH-DAY\u0026quot;, i.e. 2010-12-31. end_date : str End date, format \u0026quot;YEAR-MONTH-DAY\u0026quot;, i.e. 2020-06-05. raw : bool Whether to display the raw output. external_axes: Optional[List[plt.axes]] External axes to plot on export : str Export data to csv,json,xlsx or png,jpg,pdf,svg file Returns ---------- Plots the Treasury Series.  "},{"id":260,"href":"/OpenBBTerminal/SDK/economy/treasury_maturities/","title":"Treasury Maturities","parent":"economy","content":"Get underlying data    economy.treasury_maturities() -\u0026gt; pandas.core.frame.DataFrame    Get treasury maturity options [Source: EconDB]\nReturns ---------- df: pd.DataFrame Contains the name of the instruments and a string containing all options.  "},{"id":261,"href":"/OpenBBTerminal/SDK/economy/tyld/","title":"Tyld","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.tyld(interval: str = \u0026rsquo;m', maturity: str = \u0026lsquo;10y\u0026rsquo;, start_date: str = \u0026lsquo;2010-01-01\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get historical yield for a given maturity\nParameters ---------- interval : str Interval for data. Can be \u0026quot;d\u0026quot;,\u0026quot;w\u0026quot;,\u0026quot;m\u0026quot; for daily, weekly or monthly, by default \u0026quot;m\u0026quot; start_date: str Start date for data. Should be in YYYY-MM-DD format, by default \u0026quot;2010-01-01\u0026quot; maturity : str Maturity timeline. Can be \u0026quot;3mo\u0026quot;,\u0026quot;5y\u0026quot;,\u0026quot;10y\u0026quot; or \u0026quot;30y\u0026quot;, by default \u0026quot;10y\u0026quot; Returns ------- pd.DataFrame Dataframe of historical yields  Getting charts    economy.tyld(interval: str = \u0026rsquo;m', maturity: str = \u0026lsquo;10y\u0026rsquo;, start_date: str = \u0026lsquo;2010-01-01\u0026rsquo;, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display historical treasury yield for given maturity\nParameters ---------- interval : str Interval for data. Can be \u0026quot;d\u0026quot;,\u0026quot;w\u0026quot;,\u0026quot;m\u0026quot; for daily, weekly or monthly, by default \u0026quot;m\u0026quot; maturity : str Maturity timeline. Can be \u0026quot;3mo\u0026quot;,\u0026quot;5y\u0026quot;,\u0026quot;10y\u0026quot; or \u0026quot;30y\u0026quot;, by default \u0026quot;10y\u0026quot; start_date: str Start date for data. Should be in YYYY-MM-DD format, by default \u0026quot;2010-01-01\u0026quot; raw : bool, optional Flag to display raw data, by default False export : str, optional Format to export data, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":262,"href":"/OpenBBTerminal/SDK/economy/unemp/","title":"Unemp","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.unemp(start_year: int = 2010) -\u0026gt; pandas.core.frame.DataFrame    Get historical unemployment for United States\nParameters ---------- start_year : int, optional Start year for plot, by default 2010 Returns ------- pd.DataFrame Dataframe of historical yields  Getting charts    economy.unemp(start_year: int = 2010, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display US unemployment AlphaVantage\nParameters ---------- start_year : int, optional Start year for plot, by default 2010 raw : bool, optional Flag to show raw data, by default False export : str, optional Format to export data, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":263,"href":"/OpenBBTerminal/SDK/economy/usbonds/","title":"Usbonds","parent":"economy","content":"Get underlying data    economy.usbonds() -\u0026gt; pandas.core.frame.DataFrame    Scrape data for us bonds\nReturns ------- bonds: pd.DataFrame Dataframe containing name, coupon rate, yield and change in yield  "},{"id":264,"href":"/OpenBBTerminal/SDK/economy/valuation/","title":"Valuation","parent":"economy","content":"Get underlying data    economy.valuation(group: str = \u0026lsquo;sector\u0026rsquo;, sortby: str = \u0026lsquo;Name\u0026rsquo;, ascend: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get group (sectors, industry or country) valuation data. [Source: Finviz]\nParameters ---------- group : str Group by category. Available groups can be accessed through get_groups(). sortby : str Column to sort by ascend : bool Flag to sort in ascending order Returns ---------- pd.DataFrame dataframe with valuation/performance data  "},{"id":265,"href":"/OpenBBTerminal/SDK/economy/ycrv/","title":"Ycrv","parent":"economy","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    economy.ycrv(country: str = \u0026lsquo;United States\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get yield curve for specified country. [Source: Investing.com]\nParameters ---------- country: str Country to display yield curve. List of available countries is accessible through get_ycrv_countries(). Returns ------- pd.DataFrame Country yield curve  Getting charts    economy.ycrv(country: str = \u0026lsquo;United States\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display yield curve for specified country. [Source: Investing.com]\nParameters ---------- country: str Country to display yield curve. List of available countries is accessible through get_ycrv_countries(). export : str Export dataframe data to csv,json,xlsx file  "},{"id":266,"href":"/OpenBBTerminal/SDK/etf/candle/","title":"Candle","parent":"etf","content":"Get underlying data    etf.candle(symbol: str, data: pandas.core.frame.DataFrame = None, use_matplotlib: bool = True, intraday: bool = False, add_trend: bool = False, ma: Optional[Iterable[int]] = None, asset_type: str = \u0026lsquo;\u0026rsquo;, start_date: datetime.datetime = datetime.datetime(2019, 10, 22, 11, 39, 59, 858379), interval: int = 1440, end_date: datetime.datetime = datetime.datetime(2022, 10, 26, 11, 39, 59, 858399), prepost: bool = False, source: str = \u0026lsquo;YahooFinance\u0026rsquo;, iexrange: str = \u0026lsquo;ytd\u0026rsquo;, weekly: bool = False, monthly: bool = False, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, raw: bool = False, yscale: str = \u0026lsquo;linear\u0026rsquo;)    Shows candle plot of loaded ticker. [Source: Yahoo Finance, IEX Cloud or Alpha Vantage]\nParameters ---------- symbol: str Ticker name data: pd.DataFrame Stock dataframe use_matplotlib: bool Flag to use matplotlib instead of interactive plotly chart intraday: bool Flag for intraday data for plotly range breaks add_trend: bool Flag to add high and low trends to chart ma: Tuple[int] Moving averages to add to the candle asset_type_: str String to include in title external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None asset_type_: str String to include in title start_date: datetime Start date to get data from with interval: int Interval (in minutes) to get data 1, 5, 15, 30, 60 or 1440 end_date: datetime End date to get data from with prepost: bool Pre and After hours data source: str Source of data extracted iexrange: str Timeframe to get IEX data. weekly: bool Flag to get weekly data monthly: bool Flag to get monthly data raw : bool, optional Flag to display raw data, by default False yscale: str Linear or log for yscale  "},{"id":267,"href":"/OpenBBTerminal/SDK/etf/disc/mover/","title":"Mover","parent":"disc","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.disc.mover(sort_type: str = \u0026lsquo;gainers\u0026rsquo;, export: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Scrape data for top etf movers. Parameters ---------- sort_type: str Data to get. Can be \u0026quot;gainers\u0026quot;, \u0026quot;decliners\u0026quot; or \u0026quot;active\u0026quot; Returns ------- etfmovers: pd.DataFrame Datafame containing the name, price, change and the volume of the etf  Getting charts    etf.disc.mover(sort_type: str = \u0026lsquo;gainers\u0026rsquo;, limit: int = 10, export='', chart=True)     Show top ETF movers from wsj.com Parameters ---------- sort_type: str What to show. Either Gainers, Decliners or Activity limit: int Number of etfs to show export: str Format to export data  "},{"id":268,"href":"/OpenBBTerminal/SDK/etf/etf_by_category/","title":"Etf by Category","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.etf_by_category(category: str) -\u0026gt; Dict    Return a selection of ETFs based on category filtered by total assets. [Source: Finance Database]\nParameters ---------- category: str Search by category to find ETFs matching the criteria. Returns ---------- data : Dict Dictionary with ETFs that match a certain description  Getting charts    etf.etf_by_category(category: str, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display a selection of ETFs based on a category filtered by total assets. [Source: Finance Database]\nParameters ---------- description: str Search by description to find ETFs matching the criteria. limit: int Limit of ETFs to display export: str Type of format to export data  "},{"id":269,"href":"/OpenBBTerminal/SDK/etf/etf_by_name/","title":"Etf by Name","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.etf_by_name(name_to_search: str) -\u0026gt; pandas.core.frame.DataFrame    Get an ETF symbol and name based on ETF string to search. [Source: StockAnalysis]\nParameters ---------- name_to_search: str ETF name to match Returns ------- df: pd.Dataframe Dataframe with symbols and names  Getting charts    etf.etf_by_name(name: str, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display ETFs matching search string. [Source: StockAnalysis]\nParameters ---------- name: str String being matched limit: int Limit of ETFs to display export: str Export to given file type  "},{"id":270,"href":"/OpenBBTerminal/SDK/etf/holdings/","title":"Holdings","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.holdings(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get ETF holdings\nParameters ---------- symbol: str Symbol to get holdings for Returns ------- df: pd.DataFrame Dataframe of holdings  Getting charts    etf.holdings(symbol: str, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Parameters ---------- symbol: str ETF symbol to show holdings for limit: int Number of holdings to show export: str Format to export data  "},{"id":271,"href":"/OpenBBTerminal/SDK/etf/ld/","title":"Ld","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.ld(description: str) -\u0026gt; Dict    Return a selection of ETFs based on description filtered by total assets. [Source: Finance Database]\nParameters ---------- description: str Search by description to find ETFs matching the criteria. Returns ---------- data : Dict Dictionary with ETFs that match a certain description  Getting charts    etf.ld(description: str, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display a selection of ETFs based on description filtered by total assets. [Source: Finance Database]\nParameters ---------- description: str Search by description to find ETFs matching the criteria. limit: int Limit of ETFs to display export: str Type of format to export data  "},{"id":272,"href":"/OpenBBTerminal/SDK/etf/ln/","title":"Ln","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.ln(name: str) -\u0026gt; Dict    Return a selection of ETFs based on name filtered by total assets. [Source: Finance Database]\nParameters ---------- name: str Search by name to find ETFs matching the criteria. Returns ---------- data : Dict Dictionary with ETFs that match a certain name  Getting charts    etf.ln(name: str, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display a selection of ETFs based on name filtered by total assets. [Source: Finance Database]\nParameters ---------- name: str Search by name to find ETFs matching the criteria. limit: int Limit of ETFs to display export: str Type of format to export data  "},{"id":273,"href":"/OpenBBTerminal/SDK/etf/load/","title":"Load","parent":"etf","content":"Get underlying data    etf.load(symbol: str, start_date: datetime.datetime = None, interval: int = 1440, end_date: datetime.datetime = None, prepost: bool = False, source: str = \u0026lsquo;YahooFinance\u0026rsquo;, iexrange: str = \u0026lsquo;ytd\u0026rsquo;, weekly: bool = False, monthly: bool = False)    Load a symbol to perform analysis using the string above as a template. Optional arguments and their descriptions are listed above. The default source is, yFinance (https://pypi.org/project/yfinance/). Other sources: - AlphaVantage (https://www.alphavantage.co/documentation/) - IEX Cloud (https://iexcloud.io/docs/api/) - Eod Historical Data (https://eodhistoricaldata.com/financial-apis/) Please note that certain analytical features are exclusive to the specific source. To load a symbol from an exchange outside of the NYSE/NASDAQ default, use yFinance as the source and add the corresponding exchange to the end of the symbol. i.e. ‘BNS.TO’. Note this may be possible with other paid sources check their docs. BNS is a dual-listed stock, there are separate options chains and order books for each listing. Opportunities for arbitrage may arise from momentary pricing discrepancies between listings with a dynamic exchange rate as a second order opportunity in ForEx spreads. Find the full list of supported exchanges here: https://help.yahoo.com/kb/exchanges-data-providers-yahoo-finance-sln2310.html Certain analytical features, such as VWAP, require the ticker to be loaded as intraday using the ‘-i x’ argument. When encountering this error, simply reload the symbol using the interval argument. i.e. ‘load -t BNS -s YYYY-MM-DD -i 1 -p’ loads one-minute intervals, including Pre/After Market data, using the default source, yFinance. Certain features, such as the Prediction menu, require the symbol to be loaded as daily and not intraday. Parameters ---------- symbol: str Ticker to get data start_date: datetime Start date to get data from with interval: int Interval (in minutes) to get data 1, 5, 15, 30, 60 or 1440 end_date: datetime End date to get data from with prepost: bool Pre and After hours data source: str Source of data extracted iexrange: str Timeframe to get IEX data. weekly: bool Flag to get weekly data monthly: bool Flag to get monthly data Returns ------- df_stock_candidate: pd.DataFrame Dataframe of data  "},{"id":274,"href":"/OpenBBTerminal/SDK/etf/news/","title":"News","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.news(query: str, limit: int = 10, start_date: str = \u0026lsquo;2022-10-19\u0026rsquo;, show_newest: bool = True, sources: str = \u0026lsquo;') -\u0026gt; List[Tuple[Any, Any]]    Get news for a given term. [Source: NewsAPI]\nParameters ---------- query : str term to search on the news articles start_date: str date to start searching articles from formatted YYYY-MM-DD show_newest: bool flag to show newest articles first sources: str sources to exclusively show news from Returns ---------- tables : List[Tuple] List of tuples containing news df in first index and dict containing title of news df  Getting charts    etf.news(query: str, limit: int = 3, start_date: str = \u0026lsquo;2022-10-19\u0026rsquo;, show_newest: bool = True, sources: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; None    Display news for a given term. [Source: NewsAPI]\nParameters ---------- query : str term to search on the news articles start_date: str date to start searching articles from formatted YYYY-MM-DD limit : int number of articles to display show_newest: bool flag to show newest articles first sources: str sources to exclusively show news from export : str Export dataframe data to csv,json,xlsx file  "},{"id":275,"href":"/OpenBBTerminal/SDK/etf/overview/","title":"Overview","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.overview(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get overview data for selected etf\nParameters ---------- etf_symbol : str Etf symbol to get overview for Returns ---------- df : pd.DataFrame Dataframe of stock overview data  Getting charts    etf.overview(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Print etf overview information\nParameters ---------- symbol:str ETF symbols to display overview for export:str Format to export data  "},{"id":276,"href":"/OpenBBTerminal/SDK/etf/scr/screen/","title":"Screen","parent":"scr","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.scr.screen(preset: str)    Screens the etfs pulled from my repo (https://github.com/jmaslek/etf_scraper), which is updated hourly through the market day Parameters ---------- preset: str Screener to use from presets Returns ---------- df : pd.DataFrame Screened dataframe  Getting charts    etf.scr.screen(preset: str, num_to_show: int, sortby: str, ascend: bool, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display screener output\nParameters ---------- preset: str Preset to use num_to_show: int Number of etfs to show sortby: str Column to sort by ascend: bool Ascend when sorted export: str Output format of export  "},{"id":277,"href":"/OpenBBTerminal/SDK/etf/summary/","title":"Summary","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.summary(name: str) -\u0026gt; str    Return summary description of ETF. [Source: Yahoo Finance]\nParameters ---------- name: str ETF name Returns ---------- str Summary description of the ETF  Getting charts    etf.summary(name: str, chart=True)    Display ETF description summary. [Source: Yahoo Finance]\nParameters ---------- name: str ETF name  "},{"id":278,"href":"/OpenBBTerminal/SDK/etf/symbols/","title":"Symbols","parent":"etf","content":"Get underlying data    etf.symbols() -\u0026gt; Tuple[List[str], List[str]]    Gets all etf names and symbols\nReturns ------- etf_symbols: List[str]: List of all available etf symbols etf_names: List[str] List of all available etf names  "},{"id":279,"href":"/OpenBBTerminal/SDK/etf/weights/","title":"Weights","parent":"etf","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    etf.weights(name: str) -\u0026gt; Dict    Return sector weightings allocation of ETF. [Source: Yahoo Finance]\nParameters ---------- name: str ETF name Returns ---------- Dict Dictionary with sector weightings allocation  Getting charts    etf.weights(name: str, raw: bool = False, min_pct_to_display: float = 5, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display sector weightings allocation of ETF. [Source: Yahoo Finance]\nParameters ---------- name: str ETF name raw: bool Display sector weighting allocation min_pct_to_display: float Minimum percentage to display sector export: str Type of format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":280,"href":"/OpenBBTerminal/SDK/forecast/atr/","title":"Atr","parent":"forecast","content":"Get underlying data    forecast.atr(dataset: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    Calculate the Average True Range of a variable based on a a specific stock ticker.  "},{"id":281,"href":"/OpenBBTerminal/SDK/forecast/brnn/","title":"Brnn","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.brnn(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 5, train_split: float = 0.85, past_covariates: str = None, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, model_type: str = \u0026lsquo;LSTM\u0026rsquo;, n_rnn_layers: int = 1, dropout: float = 0.0, batch_size: int = 32, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;brnn_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True) -\u0026gt; Tuple[list[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], Optional[float], Any]    Performs Block RNN forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. model_type (str, optional): Either a string specifying the RNN module type (\u0026quot;RNN\u0026quot;, \u0026quot;LSTM\u0026quot; or \u0026quot;GRU\u0026quot;). Defaults to \u0026quot;LSTM\u0026quot;. n_rnn_layers (int, optional): Number of layers in the RNN module. Defaults to 1. dropout (float, optional): Fraction of neurons afected by Dropout. Defaults to 0.0. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. Returns: list[TimeSeries] Adjusted Data series list[TimeSeries] Historical forecast by best RNN model list[TimeSeries] list of Predictions Optional[float] Mean average precision error Any Best BRNN Model  Getting charts    forecast.brnn(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, model_type: str = \u0026lsquo;LSTM\u0026rsquo;, n_rnn_layers: int = 1, dropout: float = 0.0, batch_size: int = 16, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;rnn_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display BRNN forecast\nParameters ---------- data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. model_type (str, optional): Either a string specifying the RNN module type (\u0026quot;RNN\u0026quot;, \u0026quot;LSTM\u0026quot; or \u0026quot;GRU\u0026quot;). Defaults to \u0026quot;LSTM\u0026quot;. n_rnn_layers (int, optional): Number of layers in the RNN module. Defaults to 1. dropout (float, optional): Fraction of neurons afected by Dropout. Defaults to 0.0. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 101. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":282,"href":"/OpenBBTerminal/SDK/forecast/clean/","title":"Clean","parent":"forecast","content":"Get underlying data    forecast.clean(dataset: pandas.core.frame.DataFrame, fill: Optional[str] = None, drop: Optional[str] = None, limit: Optional[int] = None) -\u0026gt; pandas.core.frame.DataFrame    Clean up NaNs from the dataset\nParameters ---------- dataset : pd.DataFrame The dataset you wish to clean fill : Optional[str] The method of filling NaNs drop : Optional[str] The method of dropping NaNs limit : Optional[int] The maximum limit you wish to apply that can be forward or backward filled Returns ------- pd.DataFrame: Dataframe with cleaned up data  "},{"id":283,"href":"/OpenBBTerminal/SDK/forecast/combine/","title":"Combine","parent":"forecast","content":"Get underlying data    forecast.combine(df1: pandas.core.frame.DataFrame, df2: pandas.core.frame.DataFrame, column: str, dataset: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Adds the given column of df2 to df1\nParameters ---------- df1: pd.DataFrame The dataframe to add a column to df2: pd.DataFrame The dataframe to lose a column column: str The column to transfer dataset: str A name for df2 (shows in name of new column) Returns ---------- data: pd.DataFrame The new dataframe  "},{"id":284,"href":"/OpenBBTerminal/SDK/forecast/corr/","title":"Corr","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.corr(df: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    Returns correlation for a given df\nParameters ---------- df: pd.DataFrame The df to produce statistics for Returns ---------- df: pd.DataFrame The df with the new data  Getting charts    forecast.corr(dataset: pandas.core.frame.DataFrame, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[axes]] = None, chart=True)    Plot correlation coefficients for dataset features\nParameters ---------- dataset : pd.DataFrame The dataset fore calculating correlation coefficients export: str Format to export image external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":285,"href":"/OpenBBTerminal/SDK/forecast/delete/","title":"Delete","parent":"forecast","content":"Get underlying data    forecast.delete(df: pandas.core.frame.DataFrame, column: str) -\u0026gt; None    "},{"id":286,"href":"/OpenBBTerminal/SDK/forecast/delta/","title":"Delta","parent":"forecast","content":"Get underlying data    forecast.delta(dataset: pandas.core.frame.DataFrame, target_column: str = \u0026lsquo;close\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Calculate the %change of a variable based on a specific column  "},{"id":287,"href":"/OpenBBTerminal/SDK/forecast/desc/","title":"Desc","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.desc(df: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    Returns statistics for a given df\nParameters ---------- df: pd.DataFrame The df to produce statistics for Returns ---------- df: pd.DataFrame The df with the new data  Getting charts    forecast.desc(data: pandas.core.frame.DataFrame, name: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    "},{"id":288,"href":"/OpenBBTerminal/SDK/forecast/ema/","title":"Ema","parent":"forecast","content":"Get underlying data    forecast.ema(dataset: pandas.core.frame.DataFrame, target_column: str = \u0026lsquo;close\u0026rsquo;, period: int = 10) -\u0026gt; pandas.core.frame.DataFrame    A moving average provides an indication of the trend of the price movement by cut down the amount of \u0026ldquo;noise\u0026rdquo; on a price chart.\nParameters ---------- dataset : pd.DataFrame The dataset you wish to clean target_column : str The column you wish to add the EMA to period : int Time Span Returns ------- pd.DataFrame: Dataframe with added EMA column  "},{"id":289,"href":"/OpenBBTerminal/SDK/forecast/expo/","title":"Expo","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.expo(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, trend: str = \u0026lsquo;A\u0026rsquo;, seasonal: str = \u0026lsquo;A\u0026rsquo;, seasonal_periods: int = 7, dampen: str = \u0026lsquo;F\u0026rsquo;, n_predict: int = 30, start_window: float = 0.85, forecast_horizon: int = 5) -\u0026gt; Tuple[list[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], Optional[float], Any]    Performs Probabilistic Exponential Smoothing forecasting This is a wrapper around statsmodels Holt-Winters' Exponential Smoothing; we refer to this link for the original and more complete documentation of the parameters.\nhttps://unit8co.github.io/darts/generated_api/darts.models.forecasting.exponential_smoothing.html?highlight=exponential Parameters ---------- data : Union[pd.Series, np.ndarray] Input data. target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. trend: str Trend component. One of [N, A, M] Defaults to ADDITIVE. seasonal: str Seasonal component. One of [N, A, M] Defaults to ADDITIVE. seasonal_periods: int Number of seasonal periods in a year (7 for daily data) If not set, inferred from frequency of the series. dampen: str Dampen the function n_predict: int Number of days to forecast start_window: float Size of sliding window from start of timeseries and onwards forecast_horizon: int Number of days to forecast when backtesting and retraining historical Returns ------- list[float] Adjusted Data series list[float] List of historical fcast values list[float] List of predicted fcast values Optional[float] precision Any Fit Prob. Expo model object.  Getting charts    forecast.expo(data: Union[pandas.core.frame.DataFrame, pandas.core.series.Series], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, trend: str = \u0026lsquo;A\u0026rsquo;, seasonal: str = \u0026lsquo;A\u0026rsquo;, seasonal_periods: int = 7, dampen: str = \u0026lsquo;F\u0026rsquo;, n_predict: int = 30, start_window: float = 0.85, forecast_horizon: int = 5, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display Probabilistic Exponential Smoothing forecast\nParameters ---------- data : Union[pd.Series, np.array] Data to forecast dataset_name str The name of the ticker to be predicted target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. trend: str Trend component. One of [N, A, M] Defaults to ADDITIVE. seasonal: str Seasonal component. One of [N, A, M] Defaults to ADDITIVE. seasonal_periods: int Number of seasonal periods in a year If not set, inferred from frequency of the series. dampen: str Dampen the function n_predict: int Number of days to forecast start_window: float Size of sliding window from start of timeseries and onwards forecast_horizon: int Number of days to forecast when backtesting and retraining historical export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":290,"href":"/OpenBBTerminal/SDK/forecast/export/","title":"Export","parent":"forecast","content":"Get underlying data    forecast.export(data: pandas.core.frame.DataFrame, export: str, name: str = \u0026lsquo;') -\u0026gt; None    "},{"id":291,"href":"/OpenBBTerminal/SDK/forecast/linregr/","title":"Linregr","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.linregr(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, output_chunk_length: int = 5, lags: Union[int, List[int]] = 14, random_state: Optional[int] = None) -\u0026gt; Tuple[List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], float, Any]    Perform Linear Regression Forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 1. lags (int, list) lagged target values to predict the next time step random_state (int, optional): The state for the model Returns: List[TimeSeries] Adjusted Data series List[TimeSeries] Historical forecast by best RNN model List[TimeSeries] list of Predictions float Mean average precision error Any Best Linear Regression Model  Getting charts    forecast.linregr(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, output_chunk_length: int = 1, lags: Union[int, List[int]] = 72, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, explainability_raw: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display Linear Regression Forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. target_col (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 1. lags (int, list) lagged target values to predict the next time step export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":292,"href":"/OpenBBTerminal/SDK/forecast/load/","title":"Load","parent":"forecast","content":"Get underlying data    forecast.load(file: str, file_types: Optional[List[str]] = None, data_files: Optional[Dict[Any, Any]] = None, add_extension: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Load custom file into dataframe.\nParameters ---------- file: str Path to file file_types: list Supported file types data_files: dict Contains all available data files within the Export folder add_extension: Takes a file name and tries loading with csv or xlsx extension Returns ------- pd.DataFrame: Dataframe with custom data  "},{"id":293,"href":"/OpenBBTerminal/SDK/forecast/mom/","title":"Mom","parent":"forecast","content":"Get underlying data    forecast.mom(dataset: pandas.core.frame.DataFrame, target_column: str = \u0026lsquo;close\u0026rsquo;, period: int = 10) -\u0026gt; pandas.core.frame.DataFrame    A momentum oscillator, which measures the percentage change between the current value and the n period past value.\nParameters ---------- dataset : pd.DataFrame The dataset you wish to calculate with target_column : str The column you wish to add the MOM to period : int Time Span Returns ------- pd.DataFrame: Dataframe with added MOM column  "},{"id":294,"href":"/OpenBBTerminal/SDK/forecast/nbeats/","title":"Nbeats","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.nbeats(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, num_stacks: int = 10, num_blocks: int = 3, num_layers: int = 4, layer_widths: int = 512, batch_size: int = 800, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;nbeats_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True) -\u0026gt; Tuple[List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], Optional[float], Any]    Perform NBEATS Forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. num_stacks (int, optional): The number of stacks that make up the whole model. Defaults to 10. num_blocks (int, optional): The number of blocks making up every stack. Defaults to 3. num_layers (int, optional): The number of fully connected layers preceding the final forking layers in each block of every stack. Defaults to 4. layer_widths (int, optional): Determines the number of neurons that make up each fully connected layer in each block of every stack. Defaults to 512. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. Returns: List[TimeSeries] Adjusted Data series List[TimeSeries] Historical forecast by best RNN model List[TimeSeries] list of Predictions Optional[float] Mean average precision error Any Best NBEATS Model  Getting charts    forecast.nbeats(data: Union[pandas.core.frame.DataFrame, pandas.core.series.Series], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, num_stacks: int = 10, num_blocks: int = 3, num_layers: int = 4, layer_widths: int = 512, n_epochs: int = 100, learning_rate: float = 0.001, batch_size: int = 800, model_save_name: str = \u0026lsquo;nbeats_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display NBEATS forecast\nParameters ---------- data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. num_stacks (int, optional): The number of stacks that make up the whole model. Defaults to 10. num_blocks (int, optional): The number of blocks making up every stack. Defaults to 3. num_layers (int, optional): The number of fully connected layers preceding the final forking layers in each block of every stack. Defaults to 4. layer_widths (int, optional): Determines the number of neurons that make up each fully connected layer in each block of every stack. Defaults to 512. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":295,"href":"/OpenBBTerminal/SDK/forecast/nhits/","title":"Nhits","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.nhits(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 5, train_split: float = 0.85, past_covariates: str = None, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, num_stacks: int = 3, num_blocks: int = 1, num_layers: int = 2, layer_widths: int = 512, pooling_kernel_sizes: Optional[Tuple[Tuple[int]]] = None, n_freq_downsample: Optional[Tuple[Tuple[int]]] = None, dropout: float = 0.1, activation: str = \u0026lsquo;ReLU\u0026rsquo;, max_pool_1d: bool = True, batch_size: int = 32, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;brnn_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True) -\u0026gt; Tuple[list[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], Optional[float], Any]    Performs Nhits forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. num_stacks int: The number of stacks that make up the whole model. num_blocks int: The number of blocks making up every stack. num_layers int: The number of fully connected layers preceding the final forking layers in each block of every stack. layer_widths int: Determines the number of neurons that make up each fully connected layer in each block of every stack. If a list is passed, it must have a length equal to num_stacks and every entry in that list corresponds to the layer width of the corresponding stack. If an integer is passed, every stack will have blocks with FC layers of the same width. pooling_kernel_size Optional[Tuple[Tuple[int]]]: If set, this parameter must be a tuple of tuples, of size (num_stacks x num_blocks), specifying the kernel size for each block in each stack used for the input pooling layer. If left to None, some default values will be used based on input_chunk_length. n_freq_downsample: Optional[Tuple[Tuple[int]]]: If set, this parameter must be a tuple of tuples, of size (num_stacks x num_blocks), specifying the downsampling factors before interpolation, for each block in each stack. If left to None, some default values will be used based on output_chunk_length. dropout float: The dropout probability to be used in fully connected layers. activation str: Supported activations: [‘ReLU’,’RReLU’, ‘PReLU’, ‘Softplus’, ‘Tanh’, ‘SELU’, ‘LeakyReLU’, ‘Sigmoid’] max_pool_1d bool: Use max_pool_1d pooling. False uses AvgPool1d. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. Returns: list[TimeSeries] Adjusted Data series list[TimeSeries] Historical forecast by best RNN model list[TimeSeries] list of Predictions Optional[float] Mean average precision error Any Best BRNN Model  Getting charts    forecast.nhits(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, num_stacks: int = 3, num_blocks: int = 1, num_layers: int = 2, layer_widths: int = 512, pooling_kernel_sizes: Optional[Tuple[Tuple[int]]] = None, n_freq_downsample: Optional[Tuple[Tuple[int]]] = None, dropout: float = 0.1, activation: str = \u0026lsquo;ReLU\u0026rsquo;, max_pool_1d: bool = True, batch_size: int = 32, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;rnn_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display Nhits forecast\nParameters ---------- data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. num_stacks int: The number of stacks that make up the whole model. num_blocks int: The number of blocks making up every stack. num_layers int: The number of fully connected layers preceding the final forking layers in each block of every stack. layer_widths int: Determines the number of neurons that make up each fully connected layer in each block of every stack. If a list is passed, it must have a length equal to num_stacks and every entry in that list corresponds to the layer width of the corresponding stack. If an integer is passed, every stack will have blocks with FC layers of the same width. pooling_kernel_size Optional[Tuple[Tuple[int]]]: If set, this parameter must be a tuple of tuples, of size (num_stacks x num_blocks), specifying the kernel size for each block in each stack used for the input pooling layer. If left to None, some default values will be used based on input_chunk_length. n_freq_downsample: Optional[Tuple[Tuple[int]]]: If set, this parameter must be a tuple of tuples, of size (num_stacks x num_blocks), specifying the downsampling factors before interpolation, for each block in each stack. If left to None, some default values will be used based on output_chunk_length. dropout float: The dropout probability to be used in fully connected layers. activation str: Supported activations: [[‘ReLU’,’RReLU’, ‘PReLU’, ‘Softplus’, ‘Tanh’, ‘SELU’, ‘LeakyReLU’, ‘Sigmoid’] max_pool_1d bool: Use max_pool_1d pooling. False uses AvgPool1d. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":296,"href":"/OpenBBTerminal/sdk/forecast/plot/","title":"Plot","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.plot(data: pandas.core.frame.DataFrame, columns: List[str], export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[axes]] = None)    Plot data from a dataset\n   Parameters     data: pd.DataFrame   The dataframe to plot   columns: List[str]   The columns to show   export: str   Format to export image   external_axes:Optional[List[plt.axes]]   External axes to plot on    Getting charts    forecast.plot(data: pandas.core.frame.DataFrame, columns: List[str], export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[axes]] = None, chart=True)    Plot data from a dataset\n   Parameters     data: pd.DataFrame   The dataframe to plot   columns: List[str]   The columns to show   export: str   Format to export image   external_axes:Optional[List[plt.axes]]   External axes to plot on    "},{"id":297,"href":"/OpenBBTerminal/SDK/forecast/regr/","title":"Regr","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.regr(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, output_chunk_length: int = 1, lags: Union[int, List[int]] = 72) -\u0026gt; Tuple[List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], float, Any]    Perform Regression Forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data n_predict (int, optional): Days to predict. Defaults to 5. target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 1. lags (int, list) lagged target values to predict the next time step Returns: List[TimeSeries] Adjusted Data series List[TimeSeries] Historical forecast by best RNN model List[TimeSeries] list of Predictions float Mean average precision error Any Best Regression Model  Getting charts    forecast.regr(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, output_chunk_length: int = 1, lags: Union[int, List[int]] = 72, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, explainability_raw: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display Regression Forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 1. lags (int, list) lagged target values to predict the next time step export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":298,"href":"/OpenBBTerminal/SDK/forecast/rename/","title":"Rename","parent":"forecast","content":"Get underlying data    forecast.rename(df: pandas.core.frame.DataFrame, old_column: str, new_column: str) -\u0026gt; pandas.core.frame.DataFrame    Rename a column in a dataframe\nParameters ---------- df: pd.DataFrame The dataframe to have a column renamed old_column: str The column that will have its name changed new_column: str The name to update to Returns ---------- new_df: pd.DataFrame The dataframe with the renamed column  "},{"id":299,"href":"/OpenBBTerminal/SDK/forecast/rnn/","title":"Rnn","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.rnn(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 5, train_split: float = 0.85, forecast_horizon: int = 5, model_type: str = \u0026lsquo;LSTM\u0026rsquo;, hidden_dim: int = 20, dropout: float = 0.0, batch_size: int = 16, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;rnn_model\u0026rsquo;, training_length: int = 20, input_chunk_size: int = 14, force_reset: bool = True, save_checkpoints: bool = True) -\u0026gt; Tuple[List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], Optional[float], Any]    Perform RNN forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data n_predict (int, optional): Days to predict. Defaults to 5. target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. train_split (float, optional): Train/val split. Defaults to 0.85. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. model_type (str, optional): Either a string specifying the RNN module type (\u0026quot;RNN\u0026quot;, \u0026quot;LSTM\u0026quot; or \u0026quot;GRU\u0026quot;). Defaults to \u0026quot;LSTM\u0026quot;. hidden_dim (int, optional): Size for feature maps for each hidden RNN layer.. Defaults to 20. dropout (float, optional): Fraction of neurons afected by Dropout. Defaults to 0.0. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. Returns: List[TimeSeries] Adjusted Data series List[TimeSeries] Historical forecast by best RNN model List[TimeSeries] list of Predictions float Mean average precision error Any Best RNN Model  Getting charts    forecast.rnn(data: Union[pandas.core.frame.DataFrame, pandas.core.series.Series], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 5, train_split: float = 0.85, forecast_horizon: int = 5, model_type: str = \u0026lsquo;LSTM\u0026rsquo;, hidden_dim: int = 20, dropout: float = 0.0, batch_size: int = 16, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;rnn_model\u0026rsquo;, training_length: int = 20, input_chunk_size: int = 14, force_reset: bool = True, save_checkpoints: bool = True, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display RNN forecast\nParameters ---------- data (Union[pd.Series, pd.DataFrame]): Input Data dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. train_split (float, optional): Train/val split. Defaults to 0.85. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. model_type (str, optional): Either a string specifying the RNN module type (\u0026quot;RNN\u0026quot;, \u0026quot;LSTM\u0026quot; or \u0026quot;GRU\u0026quot;). Defaults to \u0026quot;LSTM\u0026quot;. hidden_dim (int, optional): Size for feature maps for each hidden RNN layer.. Defaults to 20. dropout (float, optional): Fraction of neurons afected by Dropout. Defaults to 0.0. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":300,"href":"/OpenBBTerminal/SDK/forecast/roc/","title":"Roc","parent":"forecast","content":"Get underlying data    forecast.roc(dataset: pandas.core.frame.DataFrame, target_column: str = \u0026lsquo;close\u0026rsquo;, period: int = 10) -\u0026gt; pandas.core.frame.DataFrame    A momentum oscillator, which measures the percentage change between the current value and the n period past value.\nParameters ---------- dataset : pd.DataFrame The dataset you wish to calculate with target_column : str The column you wish to add the ROC to period : int Time Span Returns ------- pd.DataFrame: Dataframe with added ROC column  "},{"id":301,"href":"/OpenBBTerminal/SDK/forecast/rsi/","title":"Rsi","parent":"forecast","content":"Get underlying data    forecast.rsi(dataset: pandas.core.frame.DataFrame, target_column: str = \u0026lsquo;close\u0026rsquo;, period: int = 10) -\u0026gt; pandas.core.frame.DataFrame    A momentum indicator that measures the magnitude of recent price changes to evaluate overbought or oversold conditions in the price of a stock or other asset.\nParameters ---------- dataset : pd.DataFrame The dataset you wish to calculate for target_column : str The column you wish to add the RSI to period : int Time Span Returns ------- pd.DataFrame: Dataframe with added RSI column  "},{"id":302,"href":"/OpenBBTerminal/SDK/forecast/season/","title":"Season","parent":"forecast","content":"Get underlying data    forecast.season(data: pandas.core.frame.DataFrame, column: str = \u0026lsquo;close\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, m: Optional[int] = None, max_lag: int = 24, alpha: float = 0.05, external_axes: Optional[List[axes]] = None)    Plot seasonality from a dataset\nParameters ---------- data: pd.DataFrame The dataframe to plot column: str The column of the dataframe to analyze export: str Format to export image m: Optional[int] Optionally, a time lag to highlight on the plot. Default is none. max_lag: int The maximal lag order to consider. Default is 24. alpha: float The confidence interval to display. Default is 0.05. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":303,"href":"/OpenBBTerminal/SDK/forecast/show/","title":"Show","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.show(data: pandas.core.frame.DataFrame, limit: int = 15, limit_col: int = 10, name: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;')    Getting charts    forecast.show(data: pandas.core.frame.DataFrame, limit: int = 15, limit_col: int = 10, name: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    "},{"id":304,"href":"/OpenBBTerminal/SDK/forecast/signal/","title":"Signal","parent":"forecast","content":"Get underlying data    forecast.signal(dataset: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    A price signal based on short/long term price.\n1 if the signal is that short term price will go up as compared to the long term. 0 if the signal is that short term price will go down as compared to the long term. Parameters ---------- dataset : pd.DataFrame The dataset you wish to calculate with Returns ------- pd.DataFrame: Dataframe with added signal column  "},{"id":305,"href":"/OpenBBTerminal/SDK/forecast/sto/","title":"Sto","parent":"forecast","content":"Get underlying data    forecast.sto(dataset: pandas.core.frame.DataFrame, period: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Stochastic Oscillator %K and %D : A stochastic oscillator is a momentum indicator comparing a particular closing price of a security to a range of its prices over a certain period of time. %K and %D are slow and fast indicators.\nRequires Low/High/Close columns. Note: This will drop first rows equal to period due to how this metric is calculated. Parameters ---------- dataset : pd.DataFrame The dataset you wish to calculate for period : int Span Returns ------- pd.DataFrame: Dataframe with added STO K \u0026amp; D columns  "},{"id":306,"href":"/OpenBBTerminal/SDK/forecast/tcn/","title":"Tcn","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.tcn(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, dropout: float = 0.1, num_filters: int = 6, weight_norm: bool = True, dilation_base: int = 2, n_epochs: int = 100, learning_rate: float = 0.001, batch_size: int = 800, model_save_name: str = \u0026lsquo;tcn_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True) -\u0026gt; Tuple[List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], Optional[float], Any]    Perform TCN forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. dropout (float, optional): Fraction of neurons afected by Dropout. Defaults to 0.1. num_filters (int, optional): The number of filters in a convolutional layer of the TCN. Defaults to 6. weight_norm (bool, optional): Boolean value indicating whether to use weight normalization. Defaults to True. dilation_base (int, optional): The base of the exponent that will determine the dilation on every level. Defaults to 2. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. Returns: List[TimeSeries] Adjusted Data series List[TimeSeries] Historical forecast by best RNN model List[TimeSeries] list of Predictions Optional[float] Mean average precision error Any Best TCN Model  Getting charts    forecast.tcn(data: Union[pandas.core.frame.DataFrame, pandas.core.series.Series], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, dropout: float = 0.1, num_filters: int = 6, weight_norm: bool = True, dilation_base: int = 2, n_epochs: int = 100, learning_rate: float = 0.001, batch_size: int = 800, model_save_name: str = \u0026lsquo;tcn_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display TCN forecast\nParameters ---------- data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. dropout (float, optional): Fraction of neurons afected by Dropout. Defaults to 0.1. num_filters (int, optional): The number of filters in a convolutional layer of the TCN. Defaults to 6. weight_norm (bool, optional): Boolean value indicating whether to use weight normalization. Defaults to True. dilation_base (int, optional): The base of the exponent that will determine the dilation on every level. Defaults to 2. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":307,"href":"/OpenBBTerminal/SDK/forecast/tft/","title":"Tft","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.tft(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 30, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, hidden_size: int = 16, lstm_layers: int = 1, num_attention_heads: int = 4, full_attention: bool = False, dropout: float = 0.1, hidden_continuous_size: int = 8, n_epochs: int = 200, batch_size: int = 32, model_save_name: str = \u0026lsquo;tft_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True) -\u0026gt; Tuple[List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], Optional[float], Any]    Performs Temporal Fusion Transformer forecasting The TFT applies multi-head attention queries on future inputs from mandatory future_covariates. Specifying future encoders with add_encoders (read below) can automatically generate future covariates and allows to use the model without having to pass any future_covariates to fit() and predict().\nhttps://unit8co.github.io/darts/generated_api/darts.models.forecasting.tft_model.html Parameters ---------- data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. hidden_size (int, optional): Hidden state size of the TFT. Defaults to 16. lstm_layers (int, optional): Number of layers for the Long Short Term Memory Encoder and Decoder. Defaults to 16. num_attention_headers (int, optional): Number of attention heads. Defaults to 4. full_attention (bool, optional): Whether to apply a multi-head attention query. Defaults to False\u0026gt; dropout (float, optional): Fraction of neurons affected by dropout. Defaults to 0.1. hidden_continuous_size (int, optional): Default hidden size for processing continuous variables. Defaults to 8. n_epochs (int, optional): Number of epochs to run during training. Defaults to 200. batch_size (int, optional): Number of samples to pass through network during a single epoch. Defaults to 32. model_save_name (str, optional): The name for the model. Defaults to tft_model force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. Returns ------- List[float] Adjusted Data series List[float] List of historical fcast values List[float] List of predicted fcast values Optional[float] precision Any Fit Prob. TFT model object.  Getting charts    forecast.tft(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 30, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, hidden_size: int = 16, lstm_layers: int = 1, num_attention_heads: int = 4, full_attention: bool = False, dropout: float = 0.1, hidden_continuous_size: int = 8, n_epochs: int = 200, batch_size: int = 32, model_save_name: str = \u0026lsquo;tft_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display Temporal Fusion Transformer forecast\nParameters ---------- data (Union[pd.Series, pd.DataFrame]): Input Data target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. hidden_size (int, optional): Hidden state size of the TFT. Defaults to 16. lstm_layers (int, optional): Number of layers for the Long Short Term Memory Encoder and Decoder. Defaults to 16. num_attention_headers (int, optional): Number of attention heads. Defaults to 4. full_attention (bool, optional): Whether to apply a multi-head attention query. Defaults to False\u0026gt; dropout (float, optional): Fraction of neurons affected by dropout. Defaults to 0.1. hidden_continuous_size (int, optional): Default hidden size for processing continuous variables. Defaults to 8. n_epochs (int, optional): Number of epochs to run during training. Defaults to 200. batch_size (int, optional): Number of samples to pass through network during a single epoch. Defaults to 32. model_save_name (str, optional): The name for the model. Defaults to tft_model force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":308,"href":"/OpenBBTerminal/SDK/forecast/theta/","title":"Theta","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.theta(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, seasonal: str = \u0026lsquo;M\u0026rsquo;, seasonal_periods: int = 7, n_predict: int = 30, start_window: float = 0.85, forecast_horizon: int = 5) -\u0026gt; Tuple[List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], float, float, Any]    Performs Theta forecasting An implementation of the 4Theta method with configurable theta parameter.\nhttps://unit8co.github.io/darts/generated_api/darts.models.forecasting.theta.html Parameters ---------- data : Union[pd.Series, np.ndarray] Input data. target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. seasonal: str Seasonal component. One of [N, A, M] Defaults to MULTIPLICATIVE. seasonal_periods: int Number of seasonal periods in a year If not set, inferred from frequency of the series. n_predict: int Number of days to forecast start_window: float Size of sliding window from start of timeseries and onwards forecast_horizon: int Number of days to forecast when backtesting and retraining historical Returns ------- List[TimeSeries] Adjusted Data series List[TimeSeries] Historical forecast by best theta List[TimeSeries] list of Predictions float Mean average precision error float Best Theta Any Theta Model  Getting charts    forecast.theta(data: Union[pandas.core.frame.DataFrame, pandas.core.series.Series], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, seasonal: str = \u0026lsquo;M\u0026rsquo;, seasonal_periods: int = 7, n_predict: int = 30, start_window: float = 0.85, forecast_horizon: int = 5, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display Theta forecast\nParameters ---------- data : Union[pd.Series, np.array] Data to forecast target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. dataset_name str The name of the ticker to be predicted seasonal: str Seasonal component. One of [N, A, M] Defaults to MULTIPLICATIVE. seasonal_periods: int Number of seasonal periods in a year If not set, inferred from frequency of the series. n_predict: int Number of days to forecast start_window: float Size of sliding window from start of timeseries and onwards forecast_horizon: int Number of days to forecast when backtesting and retraining historical export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":309,"href":"/OpenBBTerminal/SDK/forecast/trans/","title":"Trans","parent":"forecast","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forecast.trans(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, n_predict: int = 5, train_split: float = 0.85, past_covariates: str = None, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, d_model: int = 64, nhead: int = 4, num_encoder_layers: int = 3, num_decoder_layers: int = 3, dim_feedforward: int = 512, activation: str = \u0026lsquo;relu\u0026rsquo;, dropout: float = 0.0, batch_size: int = 32, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;trans_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True) -\u0026gt; Tuple[List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], List[darts.timeseries.TimeSeries], Optional[float], Any]    Performs Transformer forecasting\nArgs: data (Union[pd.Series, pd.DataFrame]): Input Data n_predict (int, optional): Days to predict. Defaults to 5. target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. d_model (int): The number of expected features in the encoder/decoder inputs. Defaults to 64. nhead (int): The number of heads in the multi-head attention mechanism. Defaults to 4. num_encoder_layers (int): The number of encoder layers in the encoder. Defaults to 3. num_decoder_layers (int): The number of decoder layers in the encoder. Defaults to 3. dim_feedforward (int): The dimension of the feedforward network model. Defaults to 512. activation (str): The activation function of encoder/decoder intermediate layer, ‘relu’ or ‘gelu’. Defaults to 'relu'. dropout (float, optional): Fraction of neurons afected by Dropout. Defaults to 0.0. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. learning_rate (float, optional): Defaults to 1e-3. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. Returns: List[TimeSeries] Adjusted Data series List[TimeSeries] Historical forecast by best RNN model List[TimeSeries] list of Predictions Optional[float] Mean average precision error Any Best transformer Model  Getting charts    forecast.trans(data: Union[pandas.core.series.Series, pandas.core.frame.DataFrame], target_column: str = \u0026lsquo;close\u0026rsquo;, dataset_name: str = \u0026lsquo;\u0026rsquo;, n_predict: int = 5, past_covariates: str = None, train_split: float = 0.85, forecast_horizon: int = 5, input_chunk_length: int = 14, output_chunk_length: int = 5, d_model: int = 64, nhead: int = 4, num_encoder_layers: int = 3, num_decoder_layers: int = 3, dim_feedforward: int = 512, activation: str = \u0026lsquo;relu\u0026rsquo;, dropout: float = 0.1, batch_size: int = 16, n_epochs: int = 100, learning_rate: float = 0.001, model_save_name: str = \u0026lsquo;trans_model\u0026rsquo;, force_reset: bool = True, save_checkpoints: bool = True, export: str = \u0026lsquo;\u0026rsquo;, residuals: bool = False, forecast_only: bool = False, start_date: Optional[datetime.datetime] = None, end_date: Optional[datetime.datetime] = None, naive: bool = False, export_pred_raw: bool = False, external_axes: Optional[List[axes]] = None, chart=True)    Display Transformer forecast\nParameters ---------- data (Union[pd.Series, pd.DataFrame]): Input Data dataset_name str The name of the ticker to be predicted n_predict (int, optional): Days to predict. Defaults to 5. target_column (str, optional): Target column to forecast. Defaults to \u0026quot;close\u0026quot;. train_split (float, optional): Train/val split. Defaults to 0.85. past_covariates (str, optional): Multiple secondary columns to factor in when forecasting. Defaults to None. forecast_horizon (int, optional): Forecast horizon when performing historical forecasting. Defaults to 5. input_chunk_length (int, optional): Number of past time steps that are fed to the forecasting module at prediction time. Defaults to 14. output_chunk_length (int, optional): The length of the forecast of the model. Defaults to 5. d_model (int): The number of expected features in the encoder/decoder inputs. Defaults to 64. nhead (int): The number of heads in the multi-head attention mechanism. Defaults to 4. num_encoder_layers (int): The number of encoder layers in the encoder. Defaults to 3. num_decoder_layers (int): The number of decoder layers in the encoder. Defaults to 3. dim_feedforward (int): The dimension of the feedforward network model. Defaults to 512. activation (str): The activation function of encoder/decoder intermediate layer, ‘relu’ or ‘gelu’. Defaults to 'relu'. dropout (float, optional): Fraction of neurons afected by Dropout. Defaults to 0.1. batch_size (int, optional): Number of time series (input and output sequences) used in each training pass. Defaults to 32. n_epochs (int, optional): Number of epochs over which to train the model. Defaults to 100. model_save_name (str, optional): Name for model. Defaults to \u0026quot;brnn_model\u0026quot;. force_reset (bool, optional): If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). Defaults to True. save_checkpoints (bool, optional): Whether or not to automatically save the untrained model and checkpoints from training. Defaults to True. export: str Format to export data residuals: bool Whether to show residuals for the model. Defaults to False. forecast_only: bool Whether to only show dates in the forecasting range. Defaults to False. start_date: Optional[datetime] The starting date to perform analysis, data before this is trimmed. Defaults to None. end_date: Optional[datetime] The ending date to perform analysis, data after this is trimmed. Defaults to None. naive: bool Whether to show the naive baseline. This just assumes the closing price will be the same as the previous day's closing price. Defaults to False. external_axes:Optional[List[plt.axes]] External axes to plot on  "},{"id":310,"href":"/OpenBBTerminal/SDK/forex/candle/","title":"Candle","parent":"forex","content":"Get underlying data    forex.candle(data: pandas.core.frame.DataFrame, to_symbol: str = \u0026lsquo;\u0026rsquo;, from_symbol: str = \u0026lsquo;\u0026rsquo;, ma: Optional[Iterable[int]] = None, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None)    Show candle plot for fx data.\nParameters ---------- data : pd.DataFrame Loaded fx historical data to_symbol : str To forex symbol from_symbol : str From forex symbol ma : Optional[Iterable[int]] Moving averages external_axes: Optional[List[plt.Axes]] External axes (1 axis is expected in the list), by default None  "},{"id":311,"href":"/OpenBBTerminal/SDK/forex/get_currency_list/","title":"Get Currency List","parent":"forex","content":"Get underlying data    forex.get_currency_list() -\u0026gt; List    Load AV currency codes from a local\n"},{"id":312,"href":"/OpenBBTerminal/SDK/forex/hist/","title":"Hist","parent":"forex","content":"Get underlying data    forex.hist(to_symbol: str = \u0026lsquo;USD\u0026rsquo;, from_symbol: str = \u0026lsquo;EUR\u0026rsquo;, resolution: str = \u0026rsquo;d', interval: int = 5, start_date: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Get historical forex data.\nParameters ---------- to_symbol : str To forex symbol from_symbol : str From forex symbol resolution : str, optional Resolution of data. Can be \u0026quot;i\u0026quot;, \u0026quot;d\u0026quot;, \u0026quot;w\u0026quot;, \u0026quot;m\u0026quot; for intraday, daily, weekly or monthly interval : int, optional Interval for intraday data start_date : str, optional Start date for data. Returns ------- pd.DataFrame Historical data for forex pair  "},{"id":313,"href":"/OpenBBTerminal/SDK/forex/load/","title":"Load","parent":"forex","content":"Get underlying data    forex.load(to_symbol: str, from_symbol: str, resolution: str = \u0026rsquo;d', interval: str = \u0026lsquo;1day\u0026rsquo;, start_date: str = \u0026lsquo;2021-10-26\u0026rsquo;, source: str = \u0026lsquo;YahooFinance\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Loads forex for two given symbols\nParameters ---------- to_symbol : str The from currency symbol. Ex: USD, EUR, GBP, YEN from_symbol: str The from currency symbol. Ex: USD, EUR, GBP, YEN resolution: str The resolution for the data interval: str What interval to get data for start_date: str When to begin loading in data source: str Where to get data from Returns ------- pd.DataFrame The loaded data  "},{"id":314,"href":"/OpenBBTerminal/SDK/forex/oanda/calendar/","title":"Calendar","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.calendar(days: int, instrument: Optional[str] = None) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request data of significant events calendar.\nParameters ---------- instrument : Union[str, None] The loaded currency pair, by default None days : int Number of days in advance Returns ------- Union[pd.DataFrame, bool] Calendar events data or False  Getting charts    forex.oanda.calendar(instrument: str, days: int = 7, chart=True)    View calendar of significant events.\nParameters ---------- instrument : str The loaded currency pair days : int Number of days in advance  "},{"id":315,"href":"/OpenBBTerminal/SDK/forex/oanda/cancel/","title":"Cancel","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.cancel(orderID: str, accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[str, bool]    Request cancellation of a pending order.\nParameters ---------- orderID : str The pending order ID to cancel. accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT  Getting charts    forex.oanda.cancel(accountID: str, orderID: str = \u0026lsquo;\u0026rsquo;, chart=True)    Cancel a Pending Order.\nParameters ---------- accountID : str Oanda user account ID orderID : str The pending order ID to cancel.  "},{"id":316,"href":"/OpenBBTerminal/SDK/forex/oanda/candles/","title":"Candles","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.candles(instrument: Optional[str] = None, granularity: str = \u0026lsquo;D\u0026rsquo;, candlecount: int = 180) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request data for candle chart.\nParameters ---------- instrument : str Loaded currency pair code granularity : str, optional Data granularity, by default \u0026quot;D\u0026quot; candlecount : int, optional Limit for the number of data points, by default 180 Returns ------- Union[pd.DataFrame, bool] Candle chart data or False  Getting charts    forex.oanda.candles(instrument: str = \u0026lsquo;\u0026rsquo;, granularity: str = \u0026lsquo;D\u0026rsquo;, candlecount: int = 180, additional_charts: Optional[Dict[str, bool]] = None, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Show candle chart.\nNote that additional plots (ta indicators) not supported in external axis mode. Parameters ---------- instrument : str The loaded currency pair granularity : str, optional The timeframe to get for the candle chart. Seconds: S5, S10, S15, S30 Minutes: M1, M2, M4, M5, M10, M15, M30 Hours: H1, H2, H3, H4, H6, H8, H12 Day (default): D, Week: W Month: M, candlecount : int, optional Limit for the number of data points additional_charts : Dict[str, bool] A dictionary of flags to include additional charts external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":317,"href":"/OpenBBTerminal/SDK/forex/oanda/close/","title":"Close","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.close(orderID: str, units: Optional[int] = 0, accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Close a trade.\nParameters ---------- orderID : str ID of the order to close units : Union[int, None] Number of units to close. If empty default to all. accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT Returns ------- Union[pd.DataFrame, bool] Close trades data or False  Getting charts    forex.oanda.close(accountID: str, orderID: str = \u0026lsquo;\u0026rsquo;, units: Optional[int] = None, chart=True)    Close a trade.\nParameters ---------- accountID : str Oanda user account ID orderID : str ID of the order to close units : Union[int, None] Number of units to close. If empty default to all.  "},{"id":318,"href":"/OpenBBTerminal/SDK/forex/oanda/fwd/","title":"Fwd","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.fwd(to_symbol: str = \u0026lsquo;USD\u0026rsquo;, from_symbol: str = \u0026lsquo;EUR\u0026rsquo;)    Gets forward rates from fxempire\nParameters ---------- to_symbol: str To currency from_symbol: str From currency Returns ------- df: pd.DataFrame  Getting charts    forex.oanda.fwd(to_symbol: str = \u0026lsquo;USD\u0026rsquo;, from_symbol: str = \u0026lsquo;EUR\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display forward rates for currency pairs\nParameters ---------- to_symbol: str To currency from_symbol: str From currency export: str Format to export data  "},{"id":319,"href":"/OpenBBTerminal/SDK/forex/oanda/listorders/","title":"Listorders","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.listorders(order_state: str = \u0026lsquo;PENDING\u0026rsquo;, order_count: int = 0, accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request the orders list from Oanda.\nParameters ---------- order_state : str Filter orders by a specific state (\u0026quot;PENDING\u0026quot;, \u0026quot;CANCELLED\u0026quot;, etc.) order_count : int Limit the number of orders to retrieve accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT  Getting charts    forex.oanda.listorders(accountID: str, order_state: str = \u0026lsquo;PENDING\u0026rsquo;, order_count: int = 0, chart=True)    List order history.\nParameters ---------- accountID : str Oanda user account ID order_state : str Filter orders by a specific state (\u0026quot;PENDING\u0026quot;, \u0026quot;CANCELLED\u0026quot;, etc.) order_count : int Limit the number of orders to retrieve  "},{"id":320,"href":"/OpenBBTerminal/SDK/forex/oanda/openpositions/","title":"Openpositions","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.openpositions(accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request information on open positions.\nParameters ---------- accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT  Getting charts    forex.oanda.openpositions(accountID: str, chart=True)    Get information about open positions.\nParameters ---------- accountID : str Oanda user account ID  "},{"id":321,"href":"/OpenBBTerminal/SDK/forex/oanda/opentrades/","title":"Opentrades","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.opentrades(accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request open trades data.\nParameters ---------- accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT Returns ------- Union[pd.DataFrame, bool] Open trades data or False  Getting charts    forex.oanda.opentrades(accountID: str, chart=True)    View open trades.\nParameters ---------- accountID : str Oanda user account ID  "},{"id":322,"href":"/OpenBBTerminal/SDK/forex/oanda/order/","title":"Order","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.order(price: int = 0, units: int = 0, instrument: Optional[str] = None, accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request creation of buy/sell trade order.\nParameters ---------- instrument : Union[str, None] The loaded currency pair, by default None price : int The price to set for the limit order. units : int The number of units to place in the order request. accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT Returns ------- Union[pd.DataFrame, bool] Orders data or False  Getting charts    forex.oanda.order(accountID: str, instrument: str = \u0026lsquo;\u0026rsquo;, price: int = 0, units: int = 0, chart=True)    Create a buy/sell order.\nParameters ---------- accountID : str Oanda user account ID instrument : str The loaded currency pair price : int The price to set for the limit order. units : int The number of units to place in the order request.  "},{"id":323,"href":"/OpenBBTerminal/SDK/forex/oanda/orderbook/","title":"Orderbook","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.orderbook(instrument: Optional[str] = None, accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request order book data for plotting.\nParameters ---------- instrument : Union[str, None] The loaded currency pair, by default None accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT Returns ------- Union[pd.DataFrame, bool] Order book data or False  Getting charts    forex.oanda.orderbook(accountID: str, instrument: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot the orderbook for the instrument if Oanda provides one. Parameters ---------- accountID : str Oanda user account ID instrument : str The loaded currency pair external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":324,"href":"/OpenBBTerminal/SDK/forex/oanda/pending/","title":"Pending","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.pending(accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request information on pending orders.\nParameters ---------- accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT Returns ------- Union[pd.DataFrame, bool] Pending orders data or False  Getting charts    forex.oanda.pending(accountID: str, chart=True)    Get information about pending orders.\nParameters ---------- accountID : str Oanda user account ID  "},{"id":325,"href":"/OpenBBTerminal/SDK/forex/oanda/positionbook/","title":"Positionbook","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.positionbook(instrument: Optional[str] = None, accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request position book data for plotting.\nParameters ---------- instrument : Union[str, None] The loaded currency pair, by default None accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT Returns ------- Union[pd.DataFrame, bool] Position book data or False  Getting charts    forex.oanda.positionbook(accountID: str, instrument: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot a position book for an instrument if Oanda provides one.\nParameters ---------- accountID : str Oanda user account ID instrument : str The loaded currency pair external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":326,"href":"/OpenBBTerminal/SDK/forex/oanda/price/","title":"Price","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.price(accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;, instrument: Optional[str] = None) -\u0026gt; Union[Dict[str, str], bool]    Request price for a forex pair.\nParameters ---------- accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT instrument : Union[str, None] The loaded currency pair, by default None Returns ------- Union[Dict[str, str], bool] The currency pair price or False  Getting charts    forex.oanda.price(account: str, instrument: Optional[str] = \u0026lsquo;\u0026rsquo;, chart=True)    View price for loaded currency pair.\nParameters ---------- accountID : str Oanda account ID instrument : Union[str, None] Instrument code or None  "},{"id":327,"href":"/OpenBBTerminal/SDK/forex/oanda/summary/","title":"Summary","parent":"oanda","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.oanda.summary(accountID: str = \u0026lsquo;REPLACE_ME\u0026rsquo;) -\u0026gt; Union[pandas.core.frame.DataFrame, bool]    Request Oanda account summary.\nParameters ---------- accountID : str, optional Oanda account ID, by default cfg.OANDA_ACCOUNT Returns ------- Union[pd.DataFrame, bool] Account summary data or False  Getting charts    forex.oanda.summary(accountID: str, chart=True)    Print Oanda account summary.\nParameters ---------- accountID : str Oanda user account ID  "},{"id":328,"href":"/OpenBBTerminal/SDK/forex/quote/","title":"Quote","parent":"forex","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    forex.quote(to_symbol: str = \u0026lsquo;USD\u0026rsquo;, from_symbol: str = \u0026lsquo;EUR\u0026rsquo;) -\u0026gt; Dict    Get current exchange rate quote from alpha vantage.\nParameters ---------- to_symbol : str To forex symbol from_symbol : str From forex symbol Returns ------- Dict Dictionary of exchange rate  Getting charts    forex.quote(to_symbol: str = \u0026lsquo;USD\u0026rsquo;, from_symbol: str = \u0026lsquo;EUR\u0026rsquo;, chart=True)    Display current forex pair exchange rate.\nParameters ---------- to_symbol : str To symbol from_symbol : str From forex symbol  "},{"id":329,"href":"/OpenBBTerminal/SDK/funds/info/","title":"Info","parent":"funds","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    funds.info(name: str, country: str = \u0026lsquo;united states\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Parameters ---------- name: str Name of fund (not symbol) to get information country: str Country of fund Returns ------- pd.DataFrame Dataframe of fund information  Getting charts    funds.info(name: str, country: str = \u0026lsquo;united states\u0026rsquo;, chart=True)    Display fund information. Finds name from symbol first if name is false\nParameters ---------- name: str Fund name to get info for country : str Country of fund  "},{"id":330,"href":"/OpenBBTerminal/SDK/funds/overview/","title":"Overview","parent":"funds","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    funds.overview(country: str = \u0026lsquo;united states\u0026rsquo;, limit: int = 20) -\u0026gt; pandas.core.frame.DataFrame    Parameters ---------- country: str Country to get overview for limit: int Number of results to get Returns ------- pd.DataFrame Dataframe containing overview  Getting charts    funds.overview(country: str = \u0026lsquo;united states\u0026rsquo;, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Displays an overview of the main funds from a country.\nParameters ---------- country: str Country to get overview for limit: int Number to show export : str Format to export data  "},{"id":331,"href":"/OpenBBTerminal/SDK/funds/search/","title":"Search","parent":"funds","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    funds.search(by: str = \u0026lsquo;name\u0026rsquo;, value: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Search investpy for matching funds\nParameters ---------- by : str Field to match on. Can be name, issuer, isin or symbol value : str String that will be searched for Returns ------- pd.DataFrame Dataframe containing matches  Getting charts    funds.search(by: str = \u0026lsquo;name\u0026rsquo;, value: str = \u0026lsquo;\u0026rsquo;, country: str = \u0026lsquo;united states\u0026rsquo;, limit: int = 10, sortby: str = \u0026lsquo;\u0026rsquo;, ascend: bool = False, chart=True)    Display results of searching for Mutual Funds\nParameters ---------- by : str Field to match on. Can be name, issuer, isin or symbol value : str String that will be searched for country: str Country to filter on limit: int Number to show sortby: str Column to sort by ascend: bool Flag to sort in ascending order  "},{"id":332,"href":"/OpenBBTerminal/SDK/futures/curve/","title":"Curve","parent":"futures","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    futures.curve(ticker: str = \u0026lsquo;')    Get curve futures [Source: Yahoo Finance]\nParameters ---------- ticker: str Ticker to get forward curve  Getting charts    futures.curve(ticker: str, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display curve futures [Source: Yahoo Finance]\nParameters ---------- ticker: str Curve future ticker to display raw: bool Display futures timeseries in raw format export: str Type of format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":333,"href":"/OpenBBTerminal/SDK/futures/historical/","title":"Historical","parent":"futures","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    futures.historical(tickers: List[str], expiry: str = \u0026lsquo;') -\u0026gt; Dict    Get historical futures [Source: Yahoo Finance]\nParameters ---------- tickers: List[str] List of future timeseries tickers to display expiry: str Future expiry date with format YYYY-MM Returns ---------- Dict Dictionary with sector weightings allocation  Getting charts    futures.historical(tickers: List[str], expiry: str = \u0026lsquo;\u0026rsquo;, start_date: str = \u0026lsquo;2019-10-27\u0026rsquo;, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display historical futures [Source: Yahoo Finance]\nParameters ---------- tickers: List[str] List of future timeseries tickers to display expiry: str Future expiry date with format YYYY-MM start_date : str Initial date like string (e.g., 2021-10-01) raw: bool Display futures timeseries in raw format export: str Type of format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":334,"href":"/OpenBBTerminal/SDK/futures/search/","title":"Search","parent":"futures","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    futures.search(category: str = \u0026lsquo;\u0026rsquo;, exchange: str = \u0026lsquo;\u0026rsquo;, description: str = \u0026lsquo;')    Get search futures [Source: Yahoo Finance]\nParameters ---------- category: str Select the category where the future exists exchange: str Select the exchange where the future exists description: str Select the description where the future exists  Getting charts    futures.search(category: str = \u0026lsquo;\u0026rsquo;, exchange: str = \u0026lsquo;\u0026rsquo;, description: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display search futures [Source: Yahoo Finance]\nParameters ---------- category: str Select the category where the future exists exchange: str Select the exchange where the future exists description: str Select the description of the future export: str Type of format to export data  "},{"id":335,"href":"/OpenBBTerminal/SDK/keys/av/","title":"Av","parent":"keys","content":"Get underlying data    keys.av(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Alpha Vantage key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":336,"href":"/OpenBBTerminal/SDK/keys/binance/","title":"Binance","parent":"keys","content":"Get underlying data    keys.binance(key: str, secret: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Binance key\n   Parameters     key: str   secret: str   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":337,"href":"/OpenBBTerminal/SDK/keys/bitquery/","title":"Bitquery","parent":"keys","content":"Get underlying data    keys.bitquery(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Bitquery key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":338,"href":"/OpenBBTerminal/SDK/keys/cmc/","title":"Cmc","parent":"keys","content":"Get underlying data    keys.cmc(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Coinmarketcap key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":339,"href":"/OpenBBTerminal/SDK/keys/coinbase/","title":"Coinbase","parent":"keys","content":"Get underlying data    keys.coinbase(key: str, secret: str, passphrase: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Coinbase key\n   Parameters     key: str   secret: str   passphrase: str   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":340,"href":"/OpenBBTerminal/SDK/keys/coinglass/","title":"Coinglass","parent":"keys","content":"Get underlying data    keys.coinglass(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Coinglass key.\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":341,"href":"/OpenBBTerminal/SDK/keys/cpanic/","title":"Cpanic","parent":"keys","content":"Get underlying data    keys.cpanic(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Cpanic key.\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":342,"href":"/OpenBBTerminal/SDK/keys/degiro/","title":"Degiro","parent":"keys","content":"Get underlying data    keys.degiro(username: str, password: str, secret: str = \u0026lsquo;\u0026rsquo;, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Degiro key\n   Parameters     username: str   password: str   secret: str   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":343,"href":"/OpenBBTerminal/SDK/keys/eodhd/","title":"Eodhd","parent":"keys","content":"Get underlying data    keys.eodhd(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Eodhd key.\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":344,"href":"/OpenBBTerminal/SDK/keys/ethplorer/","title":"Ethplorer","parent":"keys","content":"Get underlying data    keys.ethplorer(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Ethplorer key.\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":345,"href":"/OpenBBTerminal/SDK/keys/finnhub/","title":"Finnhub","parent":"keys","content":"Get underlying data    keys.finnhub(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Finnhub key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":346,"href":"/OpenBBTerminal/SDK/keys/fmp/","title":"Fmp","parent":"keys","content":"Get underlying data    keys.fmp(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Financial Modeling Prep key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":347,"href":"/OpenBBTerminal/SDK/keys/fred/","title":"Fred","parent":"keys","content":"Get underlying data    keys.fred(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set FRED key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":348,"href":"/OpenBBTerminal/SDK/keys/get_keys_info/","title":"Get Keys Info","parent":"keys","content":"Get underlying data    keys.get_keys_info() -\u0026gt; Dict[str, List[str]]    Get info on available APIs to use in set_keys.\nReturns ------- Dictionary of expected API keys and arguments: Dict[str, List[str]]  "},{"id":349,"href":"/OpenBBTerminal/SDK/keys/github/","title":"Github","parent":"keys","content":"Get underlying data    keys.github(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set GitHub key.\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":350,"href":"/OpenBBTerminal/SDK/keys/glassnode/","title":"Glassnode","parent":"keys","content":"Get underlying data    keys.glassnode(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Glassnode key.\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":351,"href":"/OpenBBTerminal/SDK/keys/iex/","title":"Iex","parent":"keys","content":"Get underlying data    keys.iex(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set IEX Cloud key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":352,"href":"/OpenBBTerminal/SDK/keys/messari/","title":"Messari","parent":"keys","content":"Get underlying data    keys.messari(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Messari key.\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":353,"href":"/OpenBBTerminal/SDK/keys/mykeys/","title":"Mykeys","parent":"keys","content":"Get underlying data    keys.mykeys(show: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get currently set API keys.\n   Parameters     show: bool   Flag to choose whether to show actual keys or not.   By default, False.   Returns:   pd.DataFrame: currents keys    "},{"id":354,"href":"/OpenBBTerminal/SDK/keys/news/","title":"News","parent":"keys","content":"Get underlying data    keys.news(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set News key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":355,"href":"/OpenBBTerminal/SDK/keys/oanda/","title":"Oanda","parent":"keys","content":"Get underlying data    keys.oanda(account: str, access_token: str, account_type: str = \u0026lsquo;\u0026rsquo;, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Oanda key\n   Parameters     account: str   access_token: str   account_type: str   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":356,"href":"/OpenBBTerminal/SDK/keys/polygon/","title":"Polygon","parent":"keys","content":"Get underlying data    keys.polygon(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Polygon key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":357,"href":"/OpenBBTerminal/SDK/keys/quandl/","title":"Quandl","parent":"keys","content":"Get underlying data    keys.quandl(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Quandl key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":358,"href":"/OpenBBTerminal/SDK/keys/reddit/","title":"Reddit","parent":"keys","content":"Get underlying data    keys.reddit(client_id: str, client_secret: str, password: str, username: str, useragent: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Reddit key\n   Parameters     client_id: str   client_secret: str   password: str   username: str   useragent: str   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":359,"href":"/OpenBBTerminal/SDK/keys/rh/","title":"Rh","parent":"keys","content":"Get underlying data    keys.rh(username: str, password: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Robinhood key\n   Parameters     username: str   password: str   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":360,"href":"/OpenBBTerminal/SDK/keys/santiment/","title":"Santiment","parent":"keys","content":"Get underlying data    keys.santiment(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Santiment key.\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":361,"href":"/OpenBBTerminal/SDK/keys/set_keys/","title":"Set Keys","parent":"keys","content":"Get underlying data    keys.set_keys(keys_dict: Dict[str, Dict[str, Union[str, bool]]], persist: bool = False, show_output: bool = False) -\u0026gt; Dict    Set API keys in bundle.\nParameters ---------- keys_dict: Dict[str, Dict[str, Union[str, bool]]] E.g. {\u0026quot;fred\u0026quot;: {\u0026quot;key\u0026quot;:\u0026quot;XXXXX\u0026quot;}, \u0026quot;binance\u0026quot;: {\u0026quot;key\u0026quot;:\u0026quot;YYYYY\u0026quot;, \u0026quot;secret\u0026quot;:\u0026quot;ZZZZZ\u0026quot;}} More info on APIs can be found through get_keys_info(). persist: bool If False, api key change will be contained to where it was changed. For example, Jupyter notebook. If True, api key change will be global, i.e. it will affect terminal environment variables. By default, False. show_output: bool Display status string or not. By default, False. Returns ------- status_dict: Dict  "},{"id":362,"href":"/OpenBBTerminal/SDK/keys/shroom/","title":"Shroom","parent":"keys","content":"Get underlying data    keys.shroom(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Shroom key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":363,"href":"/OpenBBTerminal/SDK/keys/si/","title":"Si","parent":"keys","content":"Get underlying data    keys.si(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Sentimentinvestor key.\n   Parameters     key: str   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":364,"href":"/OpenBBTerminal/SDK/keys/smartstake/","title":"Smartstake","parent":"keys","content":"Get underlying data    keys.smartstake(key: str, access_token: str, persist: bool = False, show_output: bool = False)    Set Smartstake key.\n   Parameters     key: str   API key   access_token: str   API token   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":365,"href":"/OpenBBTerminal/SDK/keys/tokenterminal/","title":"Tokenterminal","parent":"keys","content":"Get underlying data    keys.tokenterminal(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Token Terminal key.\nParameters ---------- key: str API key persist: bool If False, api key change will be contained to where it was changed. For example, Jupyter notebook. If True, api key change will be global, i.e. it will affect terminal environment variables. By default, False. show_output: bool Display status string or not. By default, False. Returns ------- status: str  "},{"id":366,"href":"/OpenBBTerminal/SDK/keys/tradier/","title":"Tradier","parent":"keys","content":"Get underlying data    keys.tradier(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Tradier key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":367,"href":"/OpenBBTerminal/SDK/keys/twitter/","title":"Twitter","parent":"keys","content":"Get underlying data    keys.twitter(key: str, secret: str, access_token: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Twitter key\n   Parameters     key: str   secret: str   access_token: str   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":368,"href":"/OpenBBTerminal/SDK/keys/walert/","title":"Walert","parent":"keys","content":"Get underlying data    keys.walert(key: str, persist: bool = False, show_output: bool = False) -\u0026gt; str    Set Walert key\n   Parameters     key: str   API key   persist: bool   If False, api key change will be contained to where it was changed. For example, Jupyter notebook.   If True, api key change will be global, i.e. it will affect terminal environment variables.   By default, False.   show_output: bool   Display status string or not. By default, False.   Returns   \u0026mdash;\u0026mdash;-   status: str    "},{"id":369,"href":"/OpenBBTerminal/SDK/portfolio/calmar/","title":"Calmar","parent":"portfolio","content":"Get underlying data    portfolio.calmar(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: int = 756)    Get calmar ratio\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window: int Interval used for rolling values Returns ------- pd.DataFrame DataFrame of calmar ratio of the benchmark and portfolio during different time periods pd.Series Series of calmar ratio data  "},{"id":370,"href":"/OpenBBTerminal/SDK/portfolio/commonsense/","title":"Commonsense","parent":"portfolio","content":"Get underlying data    portfolio.commonsense(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel)    Get common sense ratio\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame of the portfolios and the benchmarks common sense ratio during different time periods  "},{"id":371,"href":"/OpenBBTerminal/SDK/portfolio/distr/","title":"Distr","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.distr(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;)    Display daily returns\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str interval to compare cumulative returns and benchmark  Getting charts    portfolio.distr(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[matplotlib.axes._axes.Axes] = None, chart=True)    Display daily returns\nParameters ---------- portfolio_returns : pd.Series Returns of the portfolio benchmark_returns : pd.Series Returns of the benchmark interval : str interval to compare cumulative returns and benchmark raw : False Display raw data from cumulative return export : str Export certain type of data external_axes: plt.Axes Optional axes to display plot on  "},{"id":372,"href":"/OpenBBTerminal/SDK/portfolio/dret/","title":"Dret","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.dret(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get daily returns\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str interval to compare cumulative returns and benchmark Returns ------- pd.DataFrame  Getting charts    portfolio.dret(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;, raw: bool = False, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[matplotlib.axes._axes.Axes] = None, chart=True)    Display daily returns\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str interval to compare cumulative returns and benchmark raw : False Display raw data from cumulative return limit : int Last daily returns to display export : str Export certain type of data external_axes: plt.Axes Optional axes to display plot on  "},{"id":373,"href":"/OpenBBTerminal/SDK/portfolio/es/","title":"Es","parent":"portfolio","content":"Get underlying data    portfolio.es(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, use_mean: bool = False, distribution: str = \u0026lsquo;normal\u0026rsquo;, percentile: float = 99.9) -\u0026gt; pandas.core.frame.DataFrame    Get portfolio expected shortfall\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded use_mean: if one should use the data mean return distribution: str choose distribution to use: logistic, laplace, normal percentile: float es percentile (%) Returns ------- pd.DataFrame  "},{"id":374,"href":"/OpenBBTerminal/SDK/portfolio/gaintopain/","title":"Gaintopain","parent":"portfolio","content":"Get underlying data    portfolio.gaintopain(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel)    Get Pain-to-Gain ratio based on historical data\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame of the portfolio's gain-to-pain ratio  "},{"id":375,"href":"/OpenBBTerminal/SDK/portfolio/holdp/","title":"Holdp","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.holdp(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel)    Get holdings of assets (in percentage)\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded  Getting charts    portfolio.holdp(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, sum_assets: bool = False, raw: bool = False, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[matplotlib.axes._axes.Axes] = None, chart=True)    Display holdings of assets (in percentage)\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded sum_assets: bool Sum assets over time raw : bool To display raw data limit : int Number of past market days to display holdings export: str Format to export plot external_axes: plt.Axes Optional axes to display plot on  "},{"id":376,"href":"/OpenBBTerminal/SDK/portfolio/holdv/","title":"Holdv","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.holdv(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel) -\u0026gt; pandas.core.frame.DataFrame    Get holdings of assets (absolute value)\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame of holdings  Getting charts    portfolio.holdv(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, sum_assets: bool = False, raw: bool = False, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[matplotlib.axes._axes.Axes] = None, chart=True)    Display holdings of assets (absolute value)\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded sum_assets: bool Sum assets over time raw : bool To display raw data limit : int Number of past market days to display holdings export: str Format to export plot external_axes: plt.Axes Optional axes to display plot on  "},{"id":377,"href":"/OpenBBTerminal/SDK/portfolio/information/","title":"Information","parent":"portfolio","content":"Get underlying data    portfolio.information(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel)    Get information ratio\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame of the information ratio during different time periods  "},{"id":378,"href":"/OpenBBTerminal/SDK/portfolio/jensens/","title":"Jensens","parent":"portfolio","content":"Get underlying data    portfolio.jensens(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, risk_free_rate: float = 0, window: str = \u0026lsquo;1y\u0026rsquo;)    Get jensen\u0026rsquo;s alpha\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window: str Interval used for rolling values risk_free_rate: float Risk free rate Returns ------- pd.DataFrame DataFrame of jensens's alpha during different time windows pd.Series Series of jensens's alpha data  "},{"id":379,"href":"/OpenBBTerminal/SDK/portfolio/kelly/","title":"Kelly","parent":"portfolio","content":"Get underlying data    portfolio.kelly(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel)    Gets kelly criterion\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame of kelly criterion of the portfolio during different time periods  "},{"id":380,"href":"/OpenBBTerminal/SDK/portfolio/kurtosis/","title":"Kurtosis","parent":"portfolio","content":"Get underlying data    portfolio.kurtosis(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel) -\u0026gt; pandas.core.frame.DataFrame    Class method that retrieves kurtosis for portfolio and benchmark selected\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame with kurtosis for portfolio and benchmark for different periods  "},{"id":381,"href":"/OpenBBTerminal/SDK/portfolio/max_drawdown_ratio/","title":"Max Drawdown Ratio","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.max_drawdown_ratio(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, is_returns: bool = False) -\u0026gt; pandas.core.series.Series    Calculate the drawdown (MDD) of historical series. Note that the calculation is done on cumulative returns (or prices). The definition of drawdown is\n DD = (current value - rolling maximum) / rolling maximum Parameters ---------- data: pd.Series Series of input values is_returns: bool Flag to indicate inputs are returns Returns ---------- pd.Series Holdings series pd.Series Drawdown series -------  Getting charts    portfolio.max_drawdown_ratio(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display maximum drawdown for multiple intervals\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded export : str Export data format  "},{"id":382,"href":"/OpenBBTerminal/SDK/portfolio/maxdd/","title":"Maxdd","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.maxdd(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, is_returns: bool = False) -\u0026gt; pandas.core.series.Series    Calculate the drawdown (MDD) of historical series. Note that the calculation is done on cumulative returns (or prices). The definition of drawdown is\n DD = (current value - rolling maximum) / rolling maximum Parameters ---------- data: pd.Series Series of input values is_returns: bool Flag to indicate inputs are returns Returns ---------- pd.Series Holdings series pd.Series Drawdown series -------  Getting charts    portfolio.maxdd(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display maximum drawdown curve\nParameters ---------- portfolio : PortfolioModel Portfolio object export: str Format to export data external_axes: plt.Axes Optional axes to display plot on  "},{"id":383,"href":"/OpenBBTerminal/SDK/portfolio/maxdrawdown/","title":"Maxdrawdown","parent":"portfolio","content":"Get underlying data    portfolio.maxdrawdown(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel) -\u0026gt; pandas.core.frame.DataFrame    Class method that retrieves maximum drawdown ratio for portfolio and benchmark selected\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame with maximum drawdown for portfolio and benchmark for different periods  "},{"id":384,"href":"/OpenBBTerminal/SDK/portfolio/mret/","title":"Mret","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.mret(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get monthly returns\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str interval to compare cumulative returns and benchmark Returns ------- pd.DataFrame  Getting charts    portfolio.mret(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;, raw: bool = False, show_vals: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[matplotlib.axes._axes.Axes] = None, chart=True)    Display monthly returns\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str interval to compare cumulative returns and benchmark raw : False Display raw data from cumulative return show_vals : False Show values on heatmap export : str Export certain type of data external_axes: plt.Axes Optional axes to display plot on  "},{"id":385,"href":"/OpenBBTerminal/SDK/portfolio/om/","title":"Om","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.om(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, threshold_start: float = 0, threshold_end: float = 1.5) -\u0026gt; pandas.core.frame.DataFrame    Get omega ratio\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded threshold_start: float annualized target return threshold start of plotted threshold range threshold_end: float annualized target return threshold end of plotted threshold range Returns ------- pd.DataFrame  Getting charts    portfolio.om(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, threshold_start: float = 0, threshold_end: float = 1.5, chart=True)    Display omega ratio\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded threshold_start: float annualized target return threshold start of plotted threshold range threshold_end: float annualized target return threshold end of plotted threshold range  "},{"id":386,"href":"/OpenBBTerminal/SDK/portfolio/payoff/","title":"Payoff","parent":"portfolio","content":"Get underlying data    portfolio.payoff(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel)    Gets payoff ratio\nReturns ------- pd.DataFrame DataFrame of payoff ratio of the portfolio during different time periods  "},{"id":387,"href":"/OpenBBTerminal/SDK/portfolio/perf/","title":"Perf","parent":"portfolio","content":"Get underlying data    portfolio.perf(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, interval: str = \u0026lsquo;all\u0026rsquo;, show_all_trades: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get portfolio performance vs the benchmark\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded interval : str interval to consider performance. From: mtd, qtd, ytd, 3m, 6m, 1y, 3y, 5y, 10y, all show_all_trades: bool Whether to also show all trades made and their performance (default is False) Returns ------- pd.DataFrame  "},{"id":388,"href":"/OpenBBTerminal/SDK/portfolio/po/blacklitterman/","title":"Blacklitterman","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.blacklitterman(symbols: List[str], benchmark: Dict, p_views: List, q_views: List, interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, objective: str = \u0026lsquo;Sharpe\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, delta: float = None, equilibrium: bool = True, optimize: bool = True, value: float = 1.0, value_short: float = 0) -\u0026gt; Tuple    Builds a maximal diversification portfolio\nParameters ---------- symbols : List[str] List of portfolio stocks benchmark : Dict Dict of portfolio weights p_views: List Matrix P of views that shows relationships among assets and returns. Default value to None. q_views: List Matrix Q of expected returns of views. Default value is None. interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str If not using interval, start date string (YYYY-MM-DD) end_date: str If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool If True calculate log returns, else arithmetic returns. Default value is False freq: str The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float Max percentage of nan values accepted per asset to be included in returns. threshold: float Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. objective: str Objective function of the optimization model. The default is 'Sharpe'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'MaxRet': Maximize the expected return of the portfolio. risk_free_rate: float, optional Risk free rate, must be in annual frequency. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. delta: float, optional Risk aversion factor of Black Litterman model. Default value is None. equilibrium: bool, optional If True excess returns are based on equilibrium market portfolio, if False excess returns are calculated as historical returns minus risk free rate. Default value is True. optimize: bool, optional If True Black Litterman estimates are used as inputs of mean variance model, if False returns equilibrium weights from Black Litterman model Default value is True. value : float, optional Amount of money to allocate. The default is 1. value_short : float, optional Amount to allocate to portfolio in short positions. The default is 0. Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.blacklitterman(symbols: List[str], p_views: List, q_views: List, interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, benchmark: Dict = None, objective: str = \u0026lsquo;Sharpe\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, delta: float = None, equilibrium: bool = True, optimize: bool = True, value: float = 1.0, value_short: float = 0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a black litterman portfolio Parameters ---------- symbols : List[str] List of portfolio tickers p_views: List Matrix P of views that shows relationships among assets and returns. Default value to None. q_views: List Matrix Q of expected returns of views. Default value is None. interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. benchmark : Dict Dict of portfolio weights objective: str Objective function of the optimization model. The default is 'Sharpe'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'MaxRet': Maximize the expected return of the portfolio. risk_free_rate: float, optional Risk free rate, must be in annual frequency. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. delta: float, optional Risk aversion factor of Black Litterman model. Default value is None. equilibrium: bool, optional If True excess returns are based on equilibrium market portfolio, if False excess returns are calculated as historical returns minus risk free rate. Default value is True. optimize: bool, optional If True Black Litterman estimates are used as inputs of mean variance model, if False returns equilibrium weights from Black Litterman model Default value is True. value : float, optional Amount of money to allocate. The default is 1. value_short : float, optional Amount to allocate to portfolio in short positions. The default is 0. table: bool, optional True if plot table weights, by default False  "},{"id":389,"href":"/OpenBBTerminal/SDK/portfolio/po/ef/","title":"Ef","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.ef(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, alpha: float = 0.05, value: float = 1.0, value_short: float = 0.0, n_portfolios: int = 100, seed: int = 123) -\u0026gt; Tuple    Get efficient frontier Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR The default is 0.05. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 n_portfolios: int, optional \u0026quot;Number of portfolios to simulate. The default value is 100. seed: int, optional Seed used to generate random portfolios. The default value is 123. Returns ------- Tuple Parameters to create efficient frontier: frontier, mu, cov, stock_returns, weights, X1, Y1, port  Getting charts    portfolio.po.ef(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, alpha: float = 0.05, value: float = 1.0, value_short: float = 0.0, n_portfolios: int = 100, seed: int = 123, tangency: bool = False, plot_tickers: bool = True, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display efficient frontier Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR The default is 0.05. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 n_portfolios: int, optional \u0026quot;Number of portfolios to simulate. The default value is 100. seed: int, optional Seed used to generate random portfolios. The default value is 123. tangency: bool, optional Adds the optimal line with the risk-free asset. external_axes: Optional[List[plt.Axes]] Optional axes to plot data on plot_tickers: bool Whether to plot the tickers for the assets  "},{"id":390,"href":"/OpenBBTerminal/SDK/portfolio/po/equal/","title":"Equal","parent":"po","content":"Get underlying data    portfolio.po.equal(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, value: float = 1.0) -\u0026gt; Tuple    Equally weighted portfolio, where weight = 1/# of symbols\nParameters ---------- symbols : List[str] List of portfolio stocks interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float Max percentage of nan values accepted per asset to be included in returns. threshold: float Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. value : float, optional Amount to allocate. Returns percentages if set to 1. Returns ------- dict Dictionary of weights where keys are the tickers  "},{"id":391,"href":"/OpenBBTerminal/SDK/portfolio/po/get_properties/","title":"Get Properties","parent":"po","content":"Get underlying data    portfolio.po.get_properties() -\u0026gt; List[str]    Get properties to use on property optimization.\n   Returns     List[str]:   List of available properties to use on property optimization.    "},{"id":392,"href":"/OpenBBTerminal/SDK/portfolio/po/hcp/","title":"Hcp","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.hcp(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, model: str = \u0026lsquo;HRP\u0026rsquo;, codependence: str = \u0026lsquo;pearson\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, objective: str = \u0026lsquo;MinRisk\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, a_sim: int = 100, beta: float = None, b_sim: int = None, linkage: str = \u0026lsquo;single\u0026rsquo;, k: int = 0, max_k: int = 10, bins_info: str = \u0026lsquo;KN\u0026rsquo;, alpha_tail: float = 0.05, leaf_order: bool = True, d_ewma: float = 0.94, value: float = 1.0) -\u0026gt; Tuple    Builds hierarchical clustering based portfolios\nParameters ---------- symbols : List[str] List of portfolio stocks interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. model: str, optional The hierarchical cluster portfolio model used for optimize the portfolio. The default is 'HRP'. Possible values are: - 'HRP': Hierarchical Risk Parity. - 'HERC': Hierarchical Equal Risk Contribution. - 'NCO': Nested Clustered Optimization. codependence: str, optional The codependence or similarity matrix used to build the distance metric and clusters. The default is 'pearson'. Possible values are: - 'pearson': pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{pearson}_{i,j})}`. - 'spearman': spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{spearman}_{i,j})}`. - 'abs_pearson': absolute value pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{pearson}_{i,j}|)}`. - 'abs_spearman': absolute value spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{spearman}_{i,j}|)}`. - 'distance': distance correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-\rho^{distance}_{i,j})}`. - 'mutual_info': mutual information matrix. Distance used is variation information matrix. - 'tail': lower tail dependence index matrix. Dissimilarity formula: :math:`D_{i,j} = -\\log{\\lambda_{i,j}}`. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`c-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`c-MLforAM`. objective: str, optional Objective function used by the NCO model. The default is 'MinRisk'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'ERC': Equally risk contribution portfolio of the selected risk measure. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in annual frequency. Used for 'FLPM' and 'SLPM'. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. linkage: str, optional Linkage method of hierarchical clustering. For more information see `linkage \u0026lt;https://docs.scipy.org/doc/scipy/reference/generated/scipy. cluster.hierarchy.linkage.html?highlight=linkage#scipy.cluster.hierarchy.linkage\u0026gt;`_. The default is 'single'. Possible values are: - 'single'. - 'complete'. - 'average'. - 'weighted'. - 'centroid'. - 'median'. - 'ward'. - 'dbht': Direct Bubble Hierarchical Tree. k: int, optional Number of clusters. This value is took instead of the optimal number of clusters calculated with the two difference gap statistic. The default is None. max_k: int, optional Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. The default is 10. bins_info: str, optional Number of bins used to calculate variation of information. The default value is 'KN'. Possible values are: - 'KN': Knuth's choice method. For more information see `knuth_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.knuth_bin_width.html\u0026gt;`_. - 'FD': Freedman–Diaconis' choice method. For more information see `freedman_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.freedman_bin_width.html\u0026gt;`_. - 'SC': Scotts' choice method. For more information see `scott_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.scott_bin_width.html\u0026gt;`_. - 'HGR': Hacine-Gharbi and Ravier' choice method. alpha_tail: float, optional Significance level for lower tail dependence index. The default is 0.05. leaf_order: bool, optional Indicates if the cluster are ordered so that the distance between successive leaves is minimal. The default is True. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount of money to allocate. The default is 1. Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.hcp(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, model: str = \u0026lsquo;HRP\u0026rsquo;, codependence: str = \u0026lsquo;pearson\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, objective: str = \u0026lsquo;minrisk\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, risk_free_rate: float = 0.0, risk_aversion: float = 1.0, alpha: float = 0.05, a_sim: int = 100, beta: float = None, b_sim: int = None, linkage: str = \u0026lsquo;ward\u0026rsquo;, k: int = None, max_k: int = 10, bins_info: str = \u0026lsquo;KN\u0026rsquo;, alpha_tail: float = 0.05, leaf_order: bool = True, d_ewma: float = 0.94, value: float = 1.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a hierarchical clustering portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. model: str, optional The hierarchical cluster portfolio model used for optimize the portfolio. The default is 'HRP'. Possible values are: - 'HRP': Hierarchical Risk Parity. - 'HERC': Hierarchical Equal Risk Contribution. - 'NCO': Nested Clustered Optimization. codependence: str, optional The codependence or similarity matrix used to build the distance metric and clusters. The default is 'pearson'. Possible values are: - 'pearson': pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{pearson}_{i,j})}`. - 'spearman': spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{spearman}_{i,j})}`. - 'abs_pearson': absolute value pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{pearson}_{i,j}|)}`. - 'abs_spearman': absolute value spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{spearman}_{i,j}|)}`. - 'distance': distance correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-\rho^{distance}_{i,j})}`. - 'mutual_info': mutual information matrix. Distance used is variation information matrix. - 'tail': lower tail dependence index matrix. Dissimilarity formula: :math:`D_{i,j} = -\\log{\\lambda_{i,j}}`. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`c-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`c-MLforAM`. objective: str, optional Objective function used by the NCO model. The default is 'MinRisk'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'ERC': Equally risk contribution portfolio of the selected risk measure. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. linkage: str, optional Linkage method of hierarchical clustering. For more information see `linkage \u0026lt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.cluster.hierarchy.linkage.html\u0026gt;`_. The default is 'single'. Possible values are: - 'single'. - 'complete'. - 'average'. - 'weighted'. - 'centroid'. - 'median'. - 'ward'. - 'dbht': Direct Bubble Hierarchical Tree. k: int, optional Number of clusters. This value is took instead of the optimal number of clusters calculated with the two difference gap statistic. The default is None. max_k: int, optional Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. The default is 10. bins_info: str, optional Number of bins used to calculate variation of information. The default value is 'KN'. Possible values are: - 'KN': Knuth's choice method. For more information see `knuth_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.knuth_bin_width.html\u0026gt;`_. - 'FD': Freedman–Diaconis' choice method. For more information see `freedman_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.freedman_bin_width.html\u0026gt;`_. - 'SC': Scotts' choice method. For more information see `scott_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.scott_bin_width.html\u0026gt;`_. - 'HGR': Hacine-Gharbi and Ravier' choice method. alpha_tail: float, optional Significance level for lower tail dependence index. The default is 0.05. leaf_order: bool, optional Indicates if the cluster are ordered so that the distance between successive leaves is minimal. The default is True. d: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio, by default 1.0 table: bool, optional True if plot table weights, by default False  "},{"id":393,"href":"/OpenBBTerminal/SDK/portfolio/po/herc/","title":"Herc","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.herc(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, codependence: str = \u0026lsquo;pearson\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, objective: str = \u0026lsquo;minrisk\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, risk_free_rate: float = 0.0, risk_aversion: float = 1.0, alpha: float = 0.05, a_sim: int = 100, beta: float = None, b_sim: int = None, linkage: str = \u0026lsquo;single\u0026rsquo;, k: int = 0, max_k: int = 10, bins_info: str = \u0026lsquo;KN\u0026rsquo;, alpha_tail: float = 0.05, leaf_order: bool = True, d_ewma: float = 0.94, value: float = 1.0) -\u0026gt; Tuple    Builds a hierarchical risk parity portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. codependence: str, optional The codependence or similarity matrix used to build the distance metric and clusters. The default is 'pearson'. Possible values are: - 'pearson': pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{pearson}_{i,j})}`. - 'spearman': spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{spearman}_{i,j})}`. - 'abs_pearson': absolute value pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{pearson}_{i,j}|)}`. - 'abs_spearman': absolute value spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{spearman}_{i,j}|)}`. - 'distance': distance correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-\rho^{distance}_{i,j})}`. - 'mutual_info': mutual information matrix. Distance used is variation information matrix. - 'tail': lower tail dependence index matrix. Dissimilarity formula: :math:`D_{i,j} = -\\log{\\lambda_{i,j}}`. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`c-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`c-MLforAM`. objective: str, optional Objective function used by the NCO model. The default is 'MinRisk'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'ERC': Equally risk contribution portfolio of the selected risk measure. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. linkage: str, optional Linkage method of hierarchical clustering. For more information see `linkage \u0026lt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.cluster.hierarchy.linkage.html\u0026gt;`_. The default is 'single'. Possible values are: - 'single'. - 'complete'. - 'average'. - 'weighted'. - 'centroid'. - 'median'. - 'ward'. - 'dbht': Direct Bubble Hierarchical Tree. k: int, optional Number of clusters. This value is took instead of the optimal number of clusters calculated with the two difference gap statistic. The default is None. max_k: int, optional Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. The default is 10. bins_info: str, optional Number of bins used to calculate variation of information. The default value is 'KN'. Possible values are: - 'KN': Knuth's choice method. For more information see `knuth_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.knuth_bin_width.html\u0026gt;`_. - 'FD': Freedman–Diaconis' choice method. For more information see `freedman_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.freedman_bin_width.html\u0026gt;`_. - 'SC': Scotts' choice method. For more information see `scott_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.scott_bin_width.html\u0026gt;`_. - 'HGR': Hacine-Gharbi and Ravier' choice method. alpha_tail: float, optional Significance level for lower tail dependence index. The default is 0.05. leaf_order: bool, optional Indicates if the cluster are ordered so that the distance between successive leaves is minimal. The default is True. d: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  Getting charts    portfolio.po.herc(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, codependence: str = \u0026lsquo;pearson\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, risk_free_rate: float = 0.0, risk_aversion: float = 1.0, alpha: float = 0.05, a_sim: int = 100, beta: float = None, b_sim: int = None, linkage: str = \u0026lsquo;ward\u0026rsquo;, k: int = 0, max_k: int = 10, bins_info: str = \u0026lsquo;KN\u0026rsquo;, alpha_tail: float = 0.05, leaf_order: bool = True, d_ewma: float = 0.94, value: float = 1.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a hierarchical equal risk contribution portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. model: str, optional The hierarchical cluster portfolio model used for optimize the portfolio. The default is 'HRP'. Possible values are: - 'HRP': Hierarchical Risk Parity. - 'HERC': Hierarchical Equal Risk Contribution. - 'NCO': Nested Clustered Optimization. codependence: str, optional The codependence or similarity matrix used to build the distance metric and clusters. The default is 'pearson'. Possible values are: - 'pearson': pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{pearson}_{i,j})}`. - 'spearman': spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{spearman}_{i,j})}`. - 'abs_pearson': absolute value pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{pearson}_{i,j}|)}`. - 'abs_spearman': absolute value spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{spearman}_{i,j}|)}`. - 'distance': distance correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-\rho^{distance}_{i,j})}`. - 'mutual_info': mutual information matrix. Distance used is variation information matrix. - 'tail': lower tail dependence index matrix. Dissimilarity formula: :math:`D_{i,j} = -\\log{\\lambda_{i,j}}`. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`c-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`c-MLforAM`. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. linkage: str, optional Linkage method of hierarchical clustering. For more information see `linkage \u0026lt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.cluster.hierarchy.linkage.html\u0026gt;`_. The default is 'single'. Possible values are: - 'single'. - 'complete'. - 'average'. - 'weighted'. - 'centroid'. - 'median'. - 'ward'. - 'dbht': Direct Bubble Hierarchical Tree. k: int, optional Number of clusters. This value is took instead of the optimal number of clusters calculated with the two difference gap statistic. The default is None. max_k: int, optional Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. The default is 10. bins_info: str, optional Number of bins used to calculate variation of information. The default value is 'KN'. Possible values are: - 'KN': Knuth's choice method. For more information see `knuth_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.knuth_bin_width.html\u0026gt;`_. - 'FD': Freedman–Diaconis' choice method. For more information see `freedman_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.freedman_bin_width.html\u0026gt;`_. - 'SC': Scotts' choice method. For more information see `scott_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.scott_bin_width.html\u0026gt;`_. - 'HGR': Hacine-Gharbi and Ravier' choice method. alpha_tail: float, optional Significance level for lower tail dependence index. The default is 0.05. leaf_order: bool, optional Indicates if the cluster are ordered so that the distance between successive leaves is minimal. The default is True. d: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":394,"href":"/OpenBBTerminal/SDK/portfolio/po/hrp/","title":"Hrp","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.hrp(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, codependence: str = \u0026lsquo;pearson\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, objective: str = \u0026lsquo;minrisk\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, risk_free_rate: float = 0.0, risk_aversion: float = 1.0, alpha: float = 0.05, a_sim: int = 100, beta: float = None, b_sim: int = None, linkage: str = \u0026lsquo;single\u0026rsquo;, k: int = 0, max_k: int = 10, bins_info: str = \u0026lsquo;KN\u0026rsquo;, alpha_tail: float = 0.05, leaf_order: bool = True, d_ewma: float = 0.94, value: float = 1.0) -\u0026gt; Tuple    Builds a hierarchical risk parity portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. codependence: str, optional The codependence or similarity matrix used to build the distance metric and clusters. The default is 'pearson'. Possible values are: - 'pearson': pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{pearson}_{i,j})}`. - 'spearman': spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{spearman}_{i,j})}`. - 'abs_pearson': absolute value pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{pearson}_{i,j}|)}`. - 'abs_spearman': absolute value spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{spearman}_{i,j}|)}`. - 'distance': distance correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-\rho^{distance}_{i,j})}`. - 'mutual_info': mutual information matrix. Distance used is variation information matrix. - 'tail': lower tail dependence index matrix. Dissimilarity formula: :math:`D_{i,j} = -\\log{\\lambda_{i,j}}`. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`c-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`c-MLforAM`. objective: str, optional Objective function used by the NCO model. The default is 'MinRisk'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'ERC': Equally risk contribution portfolio of the selected risk measure. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. linkage: str, optional Linkage method of hierarchical clustering. For more information see `linkage \u0026lt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.cluster.hierarchy.linkage.html\u0026gt;`_. The default is 'single'. Possible values are: - 'single'. - 'complete'. - 'average'. - 'weighted'. - 'centroid'. - 'median'. - 'ward'. - 'dbht': Direct Bubble Hierarchical Tree. k: int, optional Number of clusters. This value is took instead of the optimal number of clusters calculated with the two difference gap statistic. The default is None. max_k: int, optional Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. The default is 10. bins_info: str, optional Number of bins used to calculate variation of information. The default value is 'KN'. Possible values are: - 'KN': Knuth's choice method. For more information see `knuth_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.knuth_bin_width.html\u0026gt;`_. - 'FD': Freedman–Diaconis' choice method. For more information see `freedman_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.freedman_bin_width.html\u0026gt;`_. - 'SC': Scotts' choice method. For more information see `scott_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.scott_bin_width.html\u0026gt;`_. - 'HGR': Hacine-Gharbi and Ravier' choice method. alpha_tail: float, optional Significance level for lower tail dependence index. The default is 0.05. leaf_order: bool, optional Indicates if the cluster are ordered so that the distance between successive leaves is minimal. The default is True. d: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  Getting charts    portfolio.po.hrp(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, codependence: str = \u0026lsquo;pearson\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, risk_free_rate: float = 0.0, risk_aversion: float = 1.0, alpha: float = 0.05, a_sim: int = 100, beta: float = None, b_sim: int = None, linkage: str = \u0026lsquo;single\u0026rsquo;, k: int = 0, max_k: int = 10, bins_info: str = \u0026lsquo;KN\u0026rsquo;, alpha_tail: float = 0.05, leaf_order: bool = True, d_ewma: float = 0.94, value: float = 1.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a hierarchical risk parity portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. codependence: str, optional The codependence or similarity matrix used to build the distance metric and clusters. The default is 'pearson'. Possible values are: - 'pearson': pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{pearson}_{i,j})}`. - 'spearman': spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{spearman}_{i,j})}`. - 'abs_pearson': absolute value pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{pearson}_{i,j}|)}`. - 'abs_spearman': absolute value spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{spearman}_{i,j}|)}`. - 'distance': distance correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-\rho^{distance}_{i,j})}`. - 'mutual_info': mutual information matrix. Distance used is variation information matrix. - 'tail': lower tail dependence index matrix. Dissimilarity formula: :math:`D_{i,j} = -\\log{\\lambda_{i,j}}`. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`c-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`c-MLforAM`. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. linkage: str, optional Linkage method of hierarchical clustering. For more information see `linkage \u0026lt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.cluster.hierarchy.linkage.html\u0026gt;`_. The default is 'single'. Possible values are: - 'single'. - 'complete'. - 'average'. - 'weighted'. - 'centroid'. - 'median'. - 'ward'. - 'dbht': Direct Bubble Hierarchical Tree. k: int, optional Number of clusters. This value is took instead of the optimal number of clusters calculated with the two difference gap statistic. The default is None. max_k: int, optional Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. The default is 10. bins_info: str, optional Number of bins used to calculate variation of information. The default value is 'KN'. Possible values are: - 'KN': Knuth's choice method. For more information see `knuth_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.knuth_bin_width.html\u0026gt;`_. - 'FD': Freedman–Diaconis' choice method. For more information see `freedman_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.freedman_bin_width.html\u0026gt;`_. - 'SC': Scotts' choice method. For more information see `scott_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.scott_bin_width.html\u0026gt;`_. - 'HGR': Hacine-Gharbi and Ravier' choice method. alpha_tail: float, optional Significance level for lower tail dependence index. The default is 0.05. leaf_order: bool, optional Indicates if the cluster are ordered so that the distance between successive leaves is minimal. The default is True. d: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":395,"href":"/OpenBBTerminal/SDK/portfolio/po/load/","title":"Load","parent":"po","content":"Get underlying data    portfolio.po.load(excel_file: str = \u0026lsquo;')    Load in the Excel file to determine the allocation that needs to be set. Parameters ---------- excel_file: str The location of the Excel file that needs to be loaded. Returns ------- tickers: list Returns a list with ticker symbols categories: dictionary Returns a dictionary that specifies each category  "},{"id":396,"href":"/OpenBBTerminal/SDK/portfolio/po/load_bl_views/","title":"Load Bl Views","parent":"po","content":"Get underlying data    portfolio.po.load_bl_views(excel_file: str = \u0026lsquo;')    Load a Excel file with views for Black Litterman model. Parameters ---------- excel_file: str The location of the Excel file that needs to be loaded. Returns ------- p_views: list Returns a list with p_views matrix q_views: list Returns a list with q_views matrix  "},{"id":397,"href":"/OpenBBTerminal/SDK/portfolio/po/maxdecorr/","title":"Maxdecorr","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.maxdecorr(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0) -\u0026gt; Tuple    Builds a maximal decorrelation portfolio\nParameters ---------- symbols : List[str] List of portfolio stocks interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str If not using interval, start date string (YYYY-MM-DD) end_date: str If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool If True calculate log returns, else arithmetic returns. Default value is False freq: str The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float Max percentage of nan values accepted per asset to be included in returns. threshold: float Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see s`interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount of money to allocate. The default is 1. value_short : float, optional Amount to allocate to portfolio in short positions. The default is 0. Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.maxdecorr(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a maximal decorrelation portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":398,"href":"/OpenBBTerminal/SDK/portfolio/po/maxdiv/","title":"Maxdiv","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.maxdiv(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0) -\u0026gt; Tuple    Builds a maximal diversification portfolio\nParameters ---------- symbols : List[str] List of portfolio stocks interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str If not using interval, start date string (YYYY-MM-DD) end_date: str If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool If True calculate log returns, else arithmetic returns. Default value is False freq: str The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float Max percentage of nan values accepted per asset to be included in returns. threshold: float Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount of money to allocate. The default is 1. value_short : float, optional Amount to allocate to portfolio in short positions. The default is 0. Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.maxdiv(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a maximal diversification portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":399,"href":"/OpenBBTerminal/SDK/portfolio/po/maxret/","title":"Maxret","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.maxret(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0) -\u0026gt; Tuple    Builds a maximal return/risk ratio portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.maxret(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a maximal return portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":400,"href":"/OpenBBTerminal/SDK/portfolio/po/maxsharpe/","title":"Maxsharpe","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.maxsharpe(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0) -\u0026gt; Tuple    Builds a maximal return/risk ratio portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.maxsharpe(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a maximal return/risk ratio portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":401,"href":"/OpenBBTerminal/SDK/portfolio/po/maxutil/","title":"Maxutil","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.maxutil(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0) -\u0026gt; Tuple    Builds a maximal return/risk ratio portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.maxutil(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a maximal risk averse utility portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":402,"href":"/OpenBBTerminal/SDK/portfolio/po/meanrisk/","title":"Meanrisk","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.meanrisk(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, objective: str = \u0026lsquo;Sharpe\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0) -\u0026gt; Tuple    Builds a mean risk optimal portfolio\nParameters ---------- symbols : List[str] List of portfolio stocks interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float Max percentage of nan values accepted per asset to be included in returns. threshold: float Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. objective: str Objective function of the optimization model. The default is 'Sharpe'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'MaxRet': Maximize the expected return of the portfolio. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in annual frequency. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount of money to allocate. The default is 1. value_short : float, optional Amount to allocate to portfolio in short positions. The default is 0. Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.meanrisk(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, objective: str = \u0026lsquo;sharpe\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a mean risk optimal portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. objective: str Objective function of the optimization model. The default is 'Sharpe'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'MaxRet': Maximize the expected return of the portfolio. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":403,"href":"/OpenBBTerminal/SDK/portfolio/po/minrisk/","title":"Minrisk","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.minrisk(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0) -\u0026gt; Tuple    Builds a maximal return/risk ratio portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.minrisk(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, risk_aversion: float = 1, alpha: float = 0.05, target_return: float = -1, target_risk: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, value_short: float = 0.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a minimum risk portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. target_risk: float, optional Constraint on maximum level of portfolio's risk. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":404,"href":"/OpenBBTerminal/SDK/portfolio/po/nco/","title":"Nco","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.nco(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, codependence: str = \u0026lsquo;pearson\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, objective: str = \u0026lsquo;minrisk\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, risk_free_rate: float = 0.0, risk_aversion: float = 1.0, alpha: float = 0.05, a_sim: int = 100, beta: float = None, b_sim: int = None, linkage: str = \u0026lsquo;single\u0026rsquo;, k: int = None, max_k: int = 10, bins_info: str = \u0026lsquo;KN\u0026rsquo;, alpha_tail: float = 0.05, leaf_order: bool = True, d_ewma: float = 0.94, value: float = 1.0) -\u0026gt; Tuple    Builds a hierarchical risk parity portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. codependence: str, optional The codependence or similarity matrix used to build the distance metric and clusters. The default is 'pearson'. Possible values are: - 'pearson': pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{pearson}_{i,j})}`. - 'spearman': spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{spearman}_{i,j})}`. - 'abs_pearson': absolute value pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{pearson}_{i,j}|)}`. - 'abs_spearman': absolute value spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{spearman}_{i,j}|)}`. - 'distance': distance correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-\rho^{distance}_{i,j})}`. - 'mutual_info': mutual information matrix. Distance used is variation information matrix. - 'tail': lower tail dependence index matrix. Dissimilarity formula: :math:`D_{i,j} = -\\log{\\lambda_{i,j}}`. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`c-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`c-MLforAM`. objective: str, optional Objective function used by the NCO model. The default is 'MinRisk'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'ERC': Equally risk contribution portfolio of the selected risk measure. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. linkage: str, optional Linkage method of hierarchical clustering. For more information see `linkage \u0026lt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.cluster.hierarchy.linkage.html\u0026gt;`_. The default is 'single'. Possible values are: - 'single'. - 'complete'. - 'average'. - 'weighted'. - 'centroid'. - 'median'. - 'ward'. - 'dbht': Direct Bubble Hierarchical Tree. k: int, optional Number of clusters. This value is took instead of the optimal number of clusters calculated with the two difference gap statistic. The default is None. max_k: int, optional Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. The default is 10. bins_info: str, optional Number of bins used to calculate variation of information. The default value is 'KN'. Possible values are: - 'KN': Knuth's choice method. For more information see `knuth_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.knuth_bin_width.html\u0026gt;`_. - 'FD': Freedman–Diaconis' choice method. For more information see `freedman_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.freedman_bin_width.html\u0026gt;`_. - 'SC': Scotts' choice method. For more information see `scott_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.scott_bin_width.html\u0026gt;`_. - 'HGR': Hacine-Gharbi and Ravier' choice method. alpha_tail: float, optional Significance level for lower tail dependence index. The default is 0.05. leaf_order: bool, optional Indicates if the cluster are ordered so that the distance between successive leaves is minimal. The default is True. d: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  Getting charts    portfolio.po.nco(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, codependence: str = \u0026lsquo;pearson\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, objective: str = \u0026lsquo;MinRisk\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, risk_free_rate: float = 0.0, risk_aversion: float = 1.0, alpha: float = 0.05, a_sim: int = 100, beta: float = None, b_sim: int = None, linkage: str = \u0026lsquo;ward\u0026rsquo;, k: int = None, max_k: int = 10, bins_info: str = \u0026lsquo;KN\u0026rsquo;, alpha_tail: float = 0.05, leaf_order: bool = True, d_ewma: float = 0.94, value: float = 1.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a hierarchical equal risk contribution portfolio Parameters ---------- symbols : List[str] List of portfolio tickers interval : str interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. model: str, optional The hierarchical cluster portfolio model used for optimize the portfolio. The default is 'HRP'. Possible values are: - 'HRP': Hierarchical Risk Parity. - 'HERC': Hierarchical Equal Risk Contribution. - 'NCO': Nested Clustered Optimization. codependence: str, optional The codependence or similarity matrix used to build the distance metric and clusters. The default is 'pearson'. Possible values are: - 'pearson': pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{pearson}_{i,j})}`. - 'spearman': spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{0.5(1-\rho^{spearman}_{i,j})}`. - 'abs_pearson': absolute value pearson correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{pearson}_{i,j}|)}`. - 'abs_spearman': absolute value spearman correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-|\rho^{spearman}_{i,j}|)}`. - 'distance': distance correlation matrix. Distance formula: :math:`D_{i,j} = \\sqrt{(1-\rho^{distance}_{i,j})}`. - 'mutual_info': mutual information matrix. Distance used is variation information matrix. - 'tail': lower tail dependence index matrix. Dissimilarity formula: :math:`D_{i,j} = -\\log{\\lambda_{i,j}}`. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`c-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`c-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`c-MLforAM`. objective: str, optional Objective function used by the NCO model. The default is 'MinRisk'. Possible values are: - 'MinRisk': Minimize the selected risk measure. - 'Utility': Maximize the risk averse utility function. - 'Sharpe': Maximize the risk adjusted return ratio based on the selected risk measure. - 'ERC': Equally risk contribution portfolio of the selected risk measure. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. risk_aversion: float, optional Risk aversion factor of the 'Utility' objective function. The default is 1. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. linkage: str, optional Linkage method of hierarchical clustering. For more information see `linkage \u0026lt;https://docs.scipy.org/doc/scipy/reference/generated/scipy.cluster.hierarchy.linkage.html\u0026gt;`_. The default is 'single'. Possible values are: - 'single'. - 'complete'. - 'average'. - 'weighted'. - 'centroid'. - 'median'. - 'ward'. - 'dbht': Direct Bubble Hierarchical Tree. k: int, optional Number of clusters. This value is took instead of the optimal number of clusters calculated with the two difference gap statistic. The default is None. max_k: int, optional Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. The default is 10. bins_info: str, optional Number of bins used to calculate variation of information. The default value is 'KN'. Possible values are: - 'KN': Knuth's choice method. For more information see `knuth_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.knuth_bin_width.html\u0026gt;`_. - 'FD': Freedman–Diaconis' choice method. For more information see `freedman_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.freedman_bin_width.html\u0026gt;`_. - 'SC': Scotts' choice method. For more information see `scott_bin_width \u0026lt;https://docs.astropy.org/en/stable/api/astropy.stats.scott_bin_width.html\u0026gt;`_. - 'HGR': Hacine-Gharbi and Ravier' choice method. alpha_tail: float, optional Significance level for lower tail dependence index. The default is 0.05. leaf_order: bool, optional Indicates if the cluster are ordered so that the distance between successive leaves is minimal. The default is True. d: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio in long positions, by default 1.0 value_short : float, optional Amount to allocate to portfolio in short positions, by default 0.0 table: bool, optional True if plot table weights, by default False  "},{"id":405,"href":"/OpenBBTerminal/SDK/portfolio/po/plot/","title":"Plot","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.plot(weights, data: pandas.core.frame.DataFrame, category: Dict = None, title_opt: str = \u0026lsquo;\u0026rsquo;, freq: str = \u0026lsquo;D\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, alpha: float = 0.05, a_sim: float = 100, beta: float = None, b_sim: float = None, pie: bool = False, hist: bool = False, dd: bool = False, rc_chart: bool = False, heat: bool = False, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None)    Plot additional charts Parameters ---------- weights: Dict Dict of portfolio weights data: pd.DataFrame DataFrame of stock returns title_opt: str Title to be used on the pie chart freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. pie : bool, optional Display a pie chart of values, by default False hist : bool, optional Display a histogram with risk measures, by default False dd : bool, optional Display a drawdown chart with risk measures, by default False rc-chart : float, optional Display a risk contribution chart for assets, by default False heat : float, optional Display a heatmap of correlation matrix with dendrogram, by default False external_axes: Optional[List[plt.Axes]] Optional axes to plot data on  Getting charts    portfolio.po.plot(weights, data: pandas.core.frame.DataFrame, category: Dict = None, title_opt: str = \u0026lsquo;\u0026rsquo;, freq: str = \u0026lsquo;D\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_free_rate: float = 0, alpha: float = 0.05, a_sim: float = 100, beta: float = None, b_sim: float = None, pie: bool = False, hist: bool = False, dd: bool = False, rc_chart: bool = False, heat: bool = False, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot additional charts Parameters ---------- weights: Dict Dict of portfolio weights data: pd.DataFrame DataFrame of stock returns title_opt: str Title to be used on the pie chart freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. risk_measure: str, optional The risk measure used to optimize the portfolio. If model is 'NCO', the risk measures available depends on the objective function. The default is 'MV'. Possible values are: - 'MV': Variance. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'VaR': Value at Risk. - 'CVaR': Conditional Value at Risk. - 'TG': Tail Gini. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization (Minimax). - 'RG': Range of returns. - 'CVRG': CVaR range of returns. - 'TGRG': Tail Gini range of returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns (Calmar Ratio). - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'DaR': Drawdown at Risk of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'MDD_Rel': Maximum Drawdown of compounded cumulative returns (Calmar Ratio). - 'ADD_Rel': Average Drawdown of compounded cumulative returns. - 'DaR_Rel': Drawdown at Risk of compounded cumulative returns. - 'CDaR_Rel': Conditional Drawdown at Risk of compounded cumulative returns. - 'EDaR_Rel': Entropic Drawdown at Risk of compounded cumulative returns. - 'UCI_Rel': Ulcer Index of compounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM'. The default is 0. alpha: float, optional Significance level of VaR, CVaR, EDaR, DaR, CDaR, EDaR, Tail Gini of losses. The default is 0.05. a_sim: float, optional Number of CVaRs used to approximate Tail Gini of losses. The default is 100. beta: float, optional Significance level of CVaR and Tail Gini of gains. If None it duplicates alpha value. The default is None. b_sim: float, optional Number of CVaRs used to approximate Tail Gini of gains. If None it duplicates a_sim value. The default is None. pie : bool, optional Display a pie chart of values, by default False hist : bool, optional Display a histogram with risk measures, by default False dd : bool, optional Display a drawdown chart with risk measures, by default False rc-chart : float, optional Display a risk contribution chart for assets, by default False heat : float, optional Display a heatmap of correlation matrix with dendrogram, by default False external_axes: Optional[List[plt.Axes]] Optional axes to plot data on  "},{"id":406,"href":"/OpenBBTerminal/SDK/portfolio/po/property/","title":"Property","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.property(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, s_property: str = \u0026lsquo;marketCap\u0026rsquo;, value: float = 1.0) -\u0026gt; Tuple    Calculate portfolio weights based on selected property\nParameters ---------- symbols : List[str] List of portfolio stocks interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float Max percentage of nan values accepted per asset to be included in returns. threshold: float Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. s_property : str Property to weight portfolio by value : float, optional Amount of money to allocate Returns ------- Dict Dictionary of portfolio weights or allocations  Getting charts    portfolio.po.property(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, s_property: str = \u0026lsquo;marketCap\u0026rsquo;, risk_measure=\u0026lsquo;mv\u0026rsquo;, risk_free_rate: float = 0, alpha=0.05, value: float = 1, table: bool = False, chart=True) -\u0026gt; Dict    Builds a portfolio weighted by selected property Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. s_property : str Property to get weighted portfolio of risk_measure: str, optional The risk measure used to compute indicators. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'WR': Worst Realization. - 'ADD': Average Drawdown of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'MDD': Maximum Drawdown of uncompounded cumulative returns. risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR. value : float, optional Amount to allocate to portfolio, by default 1.0 table: bool, optional True if plot table weights, by default False  "},{"id":407,"href":"/OpenBBTerminal/SDK/portfolio/po/relriskparity/","title":"Relriskparity","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.relriskparity(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, version: str = \u0026lsquo;A\u0026rsquo;, risk_cont: List[str] = None, penal_factor: float = 1, target_return: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0) -\u0026gt; Tuple    Builds a relaxed risk parity portfolio using the least squares approach\nParameters ---------- symbols : List[str] List of portfolio stocks interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. version : str, optional Relaxed risk parity model version. The default is 'A'. Possible values are: - 'A': without regularization and penalization constraints. - 'B': with regularization constraint but without penalization constraint. - 'C': with regularization and penalization constraints. risk_cont: List[str], optional The vector of risk contribution per asset. If empty, the default is 1/n (number of assets). penal_factor: float, optional The penalization factor of penalization constraints. Only used with version 'C'. The default is 1. target_return: float, optional Constraint on minimum level of portfolio's return. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount of money to allocate. The default is 1. Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.relriskparity(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, version: str = \u0026lsquo;A\u0026rsquo;, risk_cont: List[str] = None, penal_factor: float = 1, target_return: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a relaxed risk parity portfolio using the least squares approach Parameters ---------- symbols : List[str] List of portfolio tickers interval : str, optional interval to look at returns from start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. - X (integer days) for returns calculated every X days. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. version : str, optional Relaxed risk parity model version. The default is 'A'. Possible values are: - 'A': without regularization and penalization constraints. - 'B': with regularization constraint but without penalization constraint. - 'C': with regularization and penalization constraints. risk_cont: List[str], optional The vector of risk contribution per asset. If empty, the default is 1/n (number of assets). penal_factor: float, optional The penalization factor of penalization constraints. Only used with version 'C'. The default is 1. target_return: float, optional Constraint on minimum level of portfolio's return. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio, by default 1.0 table: bool, optional True if plot table weights, by default False  "},{"id":408,"href":"/OpenBBTerminal/SDK/portfolio/po/riskparity/","title":"Riskparity","parent":"po","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.po.riskparity(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;MV\u0026rsquo;, risk_cont: List[str] = None, risk_free_rate: float = 0, alpha: float = 0.05, target_return: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0) -\u0026gt; Tuple    Builds a risk parity portfolio using the risk budgeting approach\nParameters ---------- symbols : List[str] List of portfolio stocks interval : str, optional interval to get stock data, by default \u0026quot;3mo\u0026quot; start_date: str, optional If not using interval, start date string (YYYY-MM-DD) end_date: str, optional If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool, optional If True calculate log returns, else arithmetic returns. Default value is False freq: str, optional The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. maxnan: float, optional Max percentage of nan values accepted per asset to be included in returns. threshold: float, optional Value used to replace outliers that are higher to threshold. method: str, optional Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str, optional The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'UCI': Ulcer Index of uncompounded cumulative returns. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. risk_cont: List[str], optional The vector of risk contribution per asset. If empty, the default is 1/n (number of assets). risk_free_rate: float, optional Risk free rate, must be in annual frequency. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount of money to allocate. The default is 1. Returns ------- Tuple Dictionary of portfolio weights and DataFrame of stock returns  Getting charts    portfolio.po.riskparity(symbols: List[str], interval: str = \u0026lsquo;3y\u0026rsquo;, start_date: str = \u0026lsquo;\u0026rsquo;, end_date: str = \u0026lsquo;\u0026rsquo;, log_returns: bool = False, freq: str = \u0026lsquo;D\u0026rsquo;, maxnan: float = 0.05, threshold: float = 0, method: str = \u0026lsquo;time\u0026rsquo;, risk_measure: str = \u0026lsquo;mv\u0026rsquo;, risk_cont: List[str] = None, risk_free_rate: float = 0, alpha: float = 0.05, target_return: float = -1, mean: str = \u0026lsquo;hist\u0026rsquo;, covariance: str = \u0026lsquo;hist\u0026rsquo;, d_ewma: float = 0.94, value: float = 1.0, table: bool = False, chart=True) -\u0026gt; Dict    Builds a risk parity portfolio using the risk budgeting approach Parameters ---------- symbols : List[str] List of portfolio tickers interval : str interval to look at returns from start_date: str If not using interval, start date string (YYYY-MM-DD) end_date: str If not using interval, end date string (YYYY-MM-DD). If empty use last weekday. log_returns: bool If True calculate log returns, else arithmetic returns. Default value is False freq: str The frequency used to calculate returns. Default value is 'D'. Possible values are: - 'D' for daily returns. - 'W' for weekly returns. - 'M' for monthly returns. - X (integer days) for returns calculated every X days. maxnan: float Max percentage of nan values accepted per asset to be included in returns. threshold: float Value used to replace outliers that are higher to threshold. method: str Method used to fill nan values. Default value is 'time'. For more information see `interpolate \u0026lt;https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.interpolate.html\u0026gt;`_. risk_measure: str The risk measure used to optimize the portfolio. The default is 'MV'. Possible values are: - 'MV': Standard Deviation. - 'MAD': Mean Absolute Deviation. - 'MSV': Semi Standard Deviation. - 'FLPM': First Lower Partial Moment (Omega Ratio). - 'SLPM': Second Lower Partial Moment (Sortino Ratio). - 'CVaR': Conditional Value at Risk. - 'EVaR': Entropic Value at Risk. - 'CDaR': Conditional Drawdown at Risk of uncompounded cumulative returns. - 'EDaR': Entropic Drawdown at Risk of uncompounded cumulative returns. - 'UCI': Ulcer Index of uncompounded cumulative returns. risk_cont: List[str], optional The vector of risk contribution per asset. If empty, the default is 1/n (number of assets). risk_free_rate: float, optional Risk free rate, must be in the same interval of assets returns. Used for 'FLPM' and 'SLPM' and Sharpe objective function. The default is 0. alpha: float, optional Significance level of CVaR, EVaR, CDaR and EDaR target_return: float, optional Constraint on minimum level of portfolio's return. mean: str, optional The method used to estimate the expected returns. The default value is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. covariance: str, optional The method used to estimate the covariance matrix: The default is 'hist'. Possible values are: - 'hist': use historical estimates. - 'ewma1': use ewma with adjust=True. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ewma2': use ewma with adjust=False. For more information see `EWM \u0026lt;https://pandas.pydata.org/pandas-docs/stable/user_guide/window.html#exponentially-weighted-window\u0026gt;`_. - 'ledoit': use the Ledoit and Wolf Shrinkage method. - 'oas': use the Oracle Approximation Shrinkage method. - 'shrunk': use the basic Shrunk Covariance method. - 'gl': use the basic Graphical Lasso Covariance method. - 'jlogo': use the j-LoGo Covariance method. For more information see: :cite:`a-jLogo`. - 'fixed': denoise using fixed method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'spectral': denoise using spectral method. For more information see chapter 2 of :cite:`a-MLforAM`. - 'shrink': denoise using shrink method. For more information see chapter 2 of :cite:`a-MLforAM`. d_ewma: float, optional The smoothing factor of ewma methods. The default is 0.94. value : float, optional Amount to allocate to portfolio, by default 1.0 table: bool, optional True if plot table weights, by default False  "},{"id":409,"href":"/OpenBBTerminal/SDK/portfolio/profitfactor/","title":"Profitfactor","parent":"portfolio","content":"Get underlying data    portfolio.profitfactor(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel)    Gets profit factor\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame of profit factor of the portfolio during different time periods  "},{"id":410,"href":"/OpenBBTerminal/SDK/portfolio/rbeta/","title":"Rbeta","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.rbeta(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;1y\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get rolling beta using portfolio and benchmark returns\nParameters ---------- portfolio : PortfolioModel Portfolio object window: string Interval used for rolling values. Possible options: mtd, qtd, ytd, 1d, 5d, 10d, 1m, 3m, 6m, 1y, 3y, 5y, 10y. Returns ------- pd.DataFrame DataFrame of the portfolio's rolling beta  Getting charts    portfolio.rbeta(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;1y\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display rolling beta\nParameters ---------- portfolio : PortfolioModel Portfolio object window: str interval for window to consider Possible options: mtd, qtd, ytd, 1d, 5d, 10d, 1m, 3m, 6m, 1y, 3y, 5y, 10y. export: str Export to file external_axes: Optional[List[plt.Axes]] Optional axes to display plot on  "},{"id":411,"href":"/OpenBBTerminal/SDK/portfolio/rsharpe/","title":"Rsharpe","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.rsharpe(portfolio: pandas.core.frame.DataFrame, risk_free_rate: float = 0, window: str = \u0026lsquo;1y\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get rolling sharpe ratio\nParameters ---------- portfolio_returns : pd.Series Series of portfolio returns risk_free_rate : float Risk free rate window : str Rolling window to use Possible options: mtd, qtd, ytd, 1d, 5d, 10d, 1m, 3m, 6m, 1y, 3y, 5y, 10y Returns ------- pd.DataFrame Rolling sharpe ratio DataFrame  Getting charts    portfolio.rsharpe(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, risk_free_rate: float = 0, window: str = \u0026lsquo;1y\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display rolling sharpe\nParameters ---------- portfolio : PortfolioModel Portfolio object risk_free_rate: float Value to use for risk free rate in sharpe/other calculations window: str interval for window to consider export: str Export to file external_axes: Optional[List[plt.Axes]] Optional axes to display plot on  "},{"id":412,"href":"/OpenBBTerminal/SDK/portfolio/rsortino/","title":"Rsortino","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.rsortino(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, risk_free_rate: float = 0, window: str = \u0026lsquo;1y\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get rolling sortino\nParameters ---------- portfolio : PortfolioModel Portfolio object window: str interval for window to consider Possible options: mtd, qtd, ytd, 1d, 5d, 10d, 1m, 3m, 6m, 1y, 3y, 5y, 10y risk_free_rate: float Value to use for risk free rate in sharpe/other calculations Returns ------- pd.DataFrame Rolling sortino ratio DataFrame  Getting charts    portfolio.rsortino(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, risk_free_rate: float = 0, window: str = \u0026lsquo;1y\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display rolling sortino\nParameters ---------- portfolio : PortfolioModel Portfolio object risk_free_rate: float Value to use for risk free rate in sharpe/other calculations window: str interval for window to consider export: str Export to file external_axes: Optional[List[plt.Axes]] Optional axes to display plot on  "},{"id":413,"href":"/OpenBBTerminal/SDK/portfolio/rsquare/","title":"Rsquare","parent":"portfolio","content":"Get underlying data    portfolio.rsquare(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel) -\u0026gt; pandas.core.frame.DataFrame    Class method that retrieves R2 Score for portfolio and benchmark selected\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame with R2 Score between portfolio and benchmark for different periods  "},{"id":414,"href":"/OpenBBTerminal/SDK/portfolio/rvol/","title":"Rvol","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.rvol(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;1y\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get rolling volatility\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str Rolling window size to use Possible options: mtd, qtd, ytd, 1d, 5d, 10d, 1m, 3m, 6m, 1y, 3y, 5y, 10y  Getting charts    portfolio.rvol(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;1y\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display rolling volatility\nParameters ---------- portfolio : PortfolioModel Portfolio object interval: str interval for window to consider export: str Export to file external_axes: Optional[List[plt.Axes]] Optional axes to display plot on  "},{"id":415,"href":"/OpenBBTerminal/SDK/portfolio/sharpe/","title":"Sharpe","parent":"portfolio","content":"Get underlying data    portfolio.sharpe(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, risk_free_rate: float = 0) -\u0026gt; pandas.core.frame.DataFrame    Class method that retrieves sharpe ratio for portfolio and benchmark selected\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded risk_free_rate: float Risk free rate value Returns ------- pd.DataFrame DataFrame with sharpe ratio for portfolio and benchmark for different periods  "},{"id":416,"href":"/OpenBBTerminal/SDK/portfolio/skew/","title":"Skew","parent":"portfolio","content":"Get underlying data    portfolio.skew(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel) -\u0026gt; pandas.core.frame.DataFrame    Class method that retrieves skewness for portfolio and benchmark selected\nportfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame with skewness for portfolio and benchmark for different periods  "},{"id":417,"href":"/OpenBBTerminal/SDK/portfolio/sortino/","title":"Sortino","parent":"portfolio","content":"Get underlying data    portfolio.sortino(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, risk_free_rate: float = 0) -\u0026gt; pandas.core.frame.DataFrame    Class method that retrieves sortino ratio for portfolio and benchmark selected\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded risk_free_rate: float Risk free rate value Returns ------- pd.DataFrame DataFrame with sortino ratio for portfolio and benchmark for different periods  "},{"id":418,"href":"/OpenBBTerminal/SDK/portfolio/summary/","title":"Summary","parent":"portfolio","content":"Get underlying data    portfolio.summary(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;, risk_free_rate: float = 0) -\u0026gt; pandas.core.frame.DataFrame    Get summary portfolio and benchmark returns\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str interval to compare cumulative returns and benchmark risk_free_rate : float Risk free rate for calculations Returns ------- pd.DataFrame  "},{"id":419,"href":"/OpenBBTerminal/SDK/portfolio/tail/","title":"Tail","parent":"portfolio","content":"Get underlying data    portfolio.tail(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: int = 252)    Get tail ratio\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window: int Interval used for rolling values Returns ------- pd.DataFrame DataFrame of the portfolios and the benchmarks tail ratio during different time windows pd.Series Series of the portfolios rolling tail ratio pd.Series Series of the benchmarks rolling tail ratio  "},{"id":420,"href":"/OpenBBTerminal/SDK/portfolio/trackerr/","title":"Trackerr","parent":"portfolio","content":"Get underlying data    portfolio.trackerr(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: int = 252)    Get tracking error\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window: int Interval used for rolling values Returns ------- pd.DataFrame DataFrame of tracking errors during different time windows pd.Series Series of rolling tracking error  "},{"id":421,"href":"/OpenBBTerminal/SDK/portfolio/var/","title":"Var","parent":"portfolio","content":"Get underlying data    portfolio.var(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, use_mean: bool = False, adjusted_var: bool = False, student_t: bool = False, percentile: float = 99.9) -\u0026gt; pandas.core.frame.DataFrame    Get portfolio VaR\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded use_mean: bool if one should use the data mean return adjusted_var: bool if one should have VaR adjusted for skew and kurtosis (Cornish-Fisher-Expansion) student_t: bool If one should use the student-t distribution percentile: float var percentile (%) Returns ------- pd.DataFrame  "},{"id":422,"href":"/OpenBBTerminal/SDK/portfolio/volatility/","title":"Volatility","parent":"portfolio","content":"Get underlying data    portfolio.volatility(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel) -\u0026gt; pandas.core.frame.DataFrame    Class method that retrieves volatility for portfolio and benchmark selected\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded Returns ------- pd.DataFrame DataFrame with volatility for portfolio and benchmark for different periods  "},{"id":423,"href":"/OpenBBTerminal/SDK/portfolio/yret/","title":"Yret","parent":"portfolio","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    portfolio.yret(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;)    Get yearly returns\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str interval to compare cumulative returns and benchmark  Getting charts    portfolio.yret(portfolio: openbb_terminal.portfolio.portfolio_model.PortfolioModel, window: str = \u0026lsquo;all\u0026rsquo;, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[matplotlib.axes._axes.Axes] = None, chart=True)    Display yearly returns\nParameters ---------- portfolio: Portfolio Portfolio object with trades loaded window : str interval to compare cumulative returns and benchmark raw : False Display raw data from cumulative return export : str Export certain type of data external_axes: plt.Axes Optional axes to display plot on  "},{"id":424,"href":"/OpenBBTerminal/SDK/stocks/ba/bullbear/","title":"Bullbear","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.bullbear(symbol: str) -\u0026gt; Tuple[int, int, int, int]    Gets bullbear sentiment for ticker [Source: stocktwits]\nParameters ---------- symbol : str Ticker symbol to look at Returns ------- int Watchlist count int Number of cases found for ticker int Number of bullish statements int Number of bearish statements  Getting charts    stocks.ba.bullbear(symbol: str, chart=True)    Print bullbear sentiment based on last 30 messages on the board. Also prints the watchlist_count. [Source: Stocktwits] Parameters ---------- symbol: str Stock ticker symbol  "},{"id":425,"href":"/OpenBBTerminal/SDK/stocks/ba/cnews/","title":"Cnews","parent":"ba","content":"Get underlying data    stocks.ba.cnews(symbol: str, start_date: str = \u0026lsquo;2022-09-26\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;) -\u0026gt; List[Dict]    Get news from a company. [Source: Finnhub]\nParameters ---------- symbol : str company ticker to look for news articles start_date: str date to start searching articles, with format YYYY-MM-DD end_date: str date to end searching articles, with format YYYY-MM-DD Returns ---------- articles : List term to search on the news articles  "},{"id":426,"href":"/OpenBBTerminal/SDK/stocks/ba/getdd/","title":"Getdd","parent":"ba","content":"Get underlying data    stocks.ba.getdd(symbol: str, limit: int = 5, n_days: int = 3, show_all_flairs: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Gets due diligence posts from list of subreddits [Source: reddit]\nParameters ---------- symbol: str Stock ticker limit: int Number of posts to get n_days: int Number of days back to get posts show_all_flairs: bool Search through all flairs (apart from Yolo and Meme) Returns ------- pd.DataFrame Dataframe of submissions  "},{"id":427,"href":"/OpenBBTerminal/SDK/stocks/ba/headlines/","title":"Headlines","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.headlines(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Gets Sentiment analysis provided by FinBrain\u0026rsquo;s API [Source: finbrain]\nParameters ---------- symbol : str Ticker symbol to get the sentiment analysis from Returns ------- DataFrame() Empty if there was an issue with data retrieval  Getting charts    stocks.ba.headlines(symbol: str, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Sentiment analysis from FinBrain\nParameters ---------- symbol: str Ticker symbol to get the sentiment analysis from raw: False Display raw table data export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":428,"href":"/OpenBBTerminal/SDK/stocks/ba/hist/","title":"Hist","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.hist(symbol: str, start_date: str = \u0026lsquo;2022-10-19\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, number: int = 100) -\u0026gt; pandas.core.frame.DataFrame    Get hour-level sentiment data for the chosen symbol\nSource: [Sentiment Investor] Parameters ---------- symbol: str Ticker to view sentiment data start_date: str Initial date like string or unix timestamp (e.g. 12-21-2021) end_date: str End date like string or unix timestamp (e.g. 12-21-2021) number : int Number of results returned by API call Maximum 250 per api call Returns ------- pd.DataFrame Dataframe of historical sentiment  Getting charts    stocks.ba.hist(symbol: str, start_date: str = \u0026lsquo;2022-10-19\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, number: int = 100, raw: bool = False, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display historical sentiment data of a ticker, and plot a chart with RHI and AHI.\nParameters ---------- symbol: str Ticker symbol to view sentiment data start_date: str Initial date like string or unix timestamp (e.g. 2021-12-21) end_date: str End date like string or unix timestamp (e.g. 2022-01-15) number: int Number of results returned by API call Maximum 250 per api call raw: boolean Whether to display raw data, by default False limit: int Number of results display on the terminal Default: 10 export: str Format to export data external_axes: Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None Returns -------  "},{"id":429,"href":"/OpenBBTerminal/SDK/stocks/ba/infer/","title":"Infer","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.infer(symbol: str, limit: int = 100, start_date: Optional[str] = \u0026lsquo;\u0026rsquo;, end_date: Optional[str] = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Load tweets from twitter API and analyzes using VADER\nParameters ---------- symbol: str Ticker symbol to search twitter for limit: int Number of tweets to analyze start_date: Optional[str] If given, the start time to get tweets from end_date: Optional[str] If given, the end time to get tweets from Returns ------- df_tweet: pd.DataFrame Dataframe of tweets and sentiment  Getting charts    stocks.ba.infer(symbol: str, limit: int = 100, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Infer sentiment from past n tweets\nParameters ---------- symbol: str Stock ticker symbol limit: int Number of tweets to analyze export: str Format to export tweet dataframe  "},{"id":430,"href":"/OpenBBTerminal/SDK/stocks/ba/mentions/","title":"Mentions","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.mentions(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get interest over time from google api [Source: google]\nParameters ---------- symbol: str Stock ticker symbol Returns ------- pd.DataFrame Dataframe of interest over time  Getting charts    stocks.ba.mentions(symbol: str, start_date: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot weekly bars of stock\u0026rsquo;s interest over time. other users watchlist. [Source: Google]\nParameters ---------- symbol : str Ticker symbol start_date : str Start date as YYYY-MM-DD string export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":431,"href":"/OpenBBTerminal/SDK/stocks/ba/messages/","title":"Messages","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.messages(symbol: str, limit: int = 30) -\u0026gt; pandas.core.frame.DataFrame    Get last messages for a given ticker [Source: stocktwits]\nParameters ---------- symbol : str Stock ticker symbol limit : int Number of messages to get Returns ------- pd.DataFrame Dataframe of messages  Getting charts    stocks.ba.messages(symbol: str, limit: int = 30, chart=True)    Print up to 30 of the last messages on the board. [Source: Stocktwits]\nParameters ---------- symbol: str Stock ticker symbol limit: int Number of messages to get  "},{"id":432,"href":"/OpenBBTerminal/SDK/stocks/ba/popular/","title":"Popular","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.popular(limit: int = 10, post_limit: int = 50, subreddits: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Get popular tickers from list of subreddits [Source: reddit]\nParameters ---------- limit : int Number of top tickers to get post_limit : int How many posts to analyze in each subreddit subreddits : str, optional String of comma separated subreddits. Returns ------- pd.DataFrame DataFrame of top tickers from supplied subreddits  Getting charts    stocks.ba.popular(limit: int = 10, post_limit: int = 50, subreddits: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Print latest popular tickers. [Source: Reddit]\nParameters ---------- limit : int Number of top tickers to get post_limit : int How many posts to analyze in each subreddit subreddits : str, optional String of comma separated subreddits. export : str Format to export dataframe  "},{"id":433,"href":"/OpenBBTerminal/SDK/stocks/ba/queries/","title":"Queries","parent":"ba","content":"Get underlying data    stocks.ba.queries(symbol: str, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get related queries from google api [Source: google]\nParameters ---------- symbol: str Stock ticker symbol to compare limit: int Number of queries to show Returns ------- dict : {'top': pd.DataFrame or None, 'rising': pd.DataFrame or None}  "},{"id":434,"href":"/OpenBBTerminal/SDK/stocks/ba/redditsent/","title":"Redditsent","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.redditsent(symbol: str, limit: int = 100, sortby: str = \u0026lsquo;relevance\u0026rsquo;, time_frame: str = \u0026lsquo;week\u0026rsquo;, full_search: bool = True, subreddits: str = \u0026lsquo;all\u0026rsquo;) -\u0026gt; Tuple[pandas.core.frame.DataFrame, list, float]    Finds posts related to a specific search term in Reddit\nParameters ---------- symbol: str Ticker symbol to search for limit: int Number of posts to get per subreddit sortby: str Search type Possibilities: \u0026quot;relevance\u0026quot;, \u0026quot;hot\u0026quot;, \u0026quot;top\u0026quot;, \u0026quot;new\u0026quot;, or \u0026quot;comments\u0026quot; time_frame: str Relative time of post Possibilities: \u0026quot;hour\u0026quot;, \u0026quot;day\u0026quot;, \u0026quot;week\u0026quot;, \u0026quot;month\u0026quot;, \u0026quot;year\u0026quot;, \u0026quot;all\u0026quot; full_search: bool Enable comprehensive search for ticker subreddits: str Comma-separated list of subreddits Returns ------- tuple[pd.DataFrame, list, float]: Dataframe of submissions related to the search term, List of polarity scores, Average polarity score  Getting charts    stocks.ba.redditsent(symbol: str, sortby: str = \u0026lsquo;relevance\u0026rsquo;, limit: int = 100, graphic: bool = False, time_frame: str = \u0026lsquo;week\u0026rsquo;, full_search: bool = True, subreddits: str = \u0026lsquo;all\u0026rsquo;, display: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Determine Reddit sentiment about a search term\n   Parameters     symbol: str   The ticker symbol being search for in Reddit   sortby: str   Type of search   limit: str   Number of posts to get at most   graphic: bool   Displays box and whisker plot   time_frame: str   Time frame for search   full_search: bool   Enable comprehensive search for ticker   subreddits: str   Comma-separated list of subreddits   display: bool   Enable printing of raw sentiment values for each post   export: str   Format to export data   external_axes: Optional[List[plt.Axes]]   If supplied, expect 1 external axis    "},{"id":435,"href":"/OpenBBTerminal/SDK/stocks/ba/regions/","title":"Regions","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.regions(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get interest by region from google api [Source: google]\nParameters ---------- symbol: str Ticker symbol to look at Returns ------- pd.DataFrame Dataframe of interest by region  Getting charts    stocks.ba.regions(symbol: str, limit: int = 5, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot bars of regions based on stock\u0026rsquo;s interest. [Source: Google]\nParameters ---------- symbol : str Ticker symbol limit: int Number of regions to show export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":436,"href":"/OpenBBTerminal/SDK/stocks/ba/rise/","title":"Rise","parent":"ba","content":"Get underlying data    stocks.ba.rise(symbol: str, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get top rising related queries with this stock\u0026rsquo;s query [Source: google]\nParameters ---------- symbol: str Stock ticker symbol limit: int Number of queries to show Returns ------- pd.DataFrame Dataframe containing rising related queries  "},{"id":437,"href":"/OpenBBTerminal/SDK/stocks/ba/sentiment/","title":"Sentiment","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.sentiment(symbol: str, n_tweets: int = 15, n_days_past: int = 2) -\u0026gt; pandas.core.frame.DataFrame    Get sentiments from symbol\nParameters ---------- symbol: str Stock ticker symbol to get sentiment for n_tweets: int Number of tweets to get per hour n_days_past: int Number of days to extract tweets for  Getting charts    stocks.ba.sentiment(symbol: str, n_tweets: int = 15, n_days_past: int = 2, compare: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot sentiments from symbol\nParameters ---------- symbol: str Stock ticker symbol to get sentiment for n_tweets: int Number of tweets to get per hour n_days_past: int Number of days to extract tweets for compare: bool Show corresponding change in stock price export: str Format to export tweet dataframe external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":438,"href":"/OpenBBTerminal/SDK/stocks/ba/snews/","title":"Snews","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.snews(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get headlines sentiment using VADER model over time. [Source: Finnhub]\nParameters ---------- symbol : str Ticker of company  Getting charts    stocks.ba.snews(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display stock price and headlines sentiment using VADER model over time. [Source: Finnhub]\nParameters ---------- symbol : str Ticker of company export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":439,"href":"/OpenBBTerminal/SDK/stocks/ba/spac/","title":"Spac","parent":"ba","content":"Get underlying data    stocks.ba.spac(limit: int = 5) -\u0026gt; Tuple[pandas.core.frame.DataFrame, dict, int]    Get posts containing SPAC from top subreddits [Source: reddit]\nParameters ---------- limit : int, optional Number of posts to get for each subreddit, by default 5 Returns ------- pd.DataFrame : Dataframe of reddit submissions dict : Dictionary of tickers and counts int : Number of posts found.  "},{"id":440,"href":"/OpenBBTerminal/SDK/stocks/ba/spacc/","title":"Spacc","parent":"ba","content":"Get underlying data    stocks.ba.spacc(limit: int = 10, popular: bool = False) -\u0026gt; Tuple[pandas.core.frame.DataFrame, dict]    Get top tickers from r/SPACs [Source: reddit]\nParameters ---------- limit : int Number of posts to look at popular : bool Search by hot instead of new Returns ------- pd.DataFrame: Dataframe of reddit submission dict: Dictionary of tickers and number of mentions  "},{"id":441,"href":"/OpenBBTerminal/SDK/stocks/ba/stalker/","title":"Stalker","parent":"ba","content":"Get underlying data    stocks.ba.stalker(user: str, limit: int = 30) -\u0026gt; List[Dict]    Gets messages from given user [Source: stocktwits]\nParameters ---------- user : str User to get posts for limit : int, optional Number of posts to get, by default 30  "},{"id":442,"href":"/OpenBBTerminal/SDK/stocks/ba/text_sent/","title":"Text Sent","parent":"ba","content":"Get underlying data    stocks.ba.text_sent(post_data: List[str]) -\u0026gt; float    Find the sentiment of a post and related comments\nParameters ---------- post_data: list[str] A post and its comments in string form Returns ------- float A number in the range [-1, 1] representing sentiment  "},{"id":443,"href":"/OpenBBTerminal/SDK/stocks/ba/trend/","title":"Trend","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.trend(start_date: datetime.datetime = datetime.datetime(2022, 10, 26, 11, 40, 0, 860201), hour: int = 0, number: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get sentiment data on the most talked about tickers within the last hour\nSource: [Sentiment Investor] Parameters ---------- start_date: datetime Datetime object (e.g. datetime(2021, 12, 21) hour: int Hour of the day in 24-hour notation (e.g. 14) number : int Number of results returned by API call Maximum 250 per api call Returns ------- pd.DataFrame Dataframe of trending data  Getting charts    stocks.ba.trend(start_date: datetime.datetime = datetime.datetime(2022, 10, 26, 11, 40, 0, 860431, chart=True), hour: int = 0, number: int = 10, limit: int = 10, export: str = \u0026lsquo;')    Display most talked about tickers within the last hour together with their sentiment data.\nParameters ---------- start_date: datetime Datetime object (e.g. datetime(2021, 12, 21) hour: int Hour of the day in 24-hour notation (e.g. 14) number : int Number of results returned by API call Maximum 250 per api call limit: int Number of results display on the terminal Default: 10 export: str Format to export data  "},{"id":444,"href":"/OpenBBTerminal/SDK/stocks/ba/trending/","title":"Trending","parent":"ba","content":"Get underlying data    stocks.ba.trending() -\u0026gt; pandas.core.frame.DataFrame    Get trending tickers from stocktwits [Source: stocktwits]\nReturns ------- pd.DataFrame Dataframe of trending tickers and watchlist count  "},{"id":445,"href":"/OpenBBTerminal/SDK/stocks/ba/watchlist/","title":"Watchlist","parent":"ba","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ba.watchlist(limit: int = 5) -\u0026gt; Tuple[List[praw.models.reddit.submission.Submission], dict, int]    Get reddit users watchlists [Source: reddit]\nParameters ---------- limit : int Number of posts to look through Returns ------- list[praw.models.reddit.submission.Submission]: List of reddit submissions dict: Dictionary of tickers and counts int Count of how many posts were analyzed  Getting charts    stocks.ba.watchlist(limit: int = 5, chart=True)    Print other users watchlist. [Source: Reddit]\nParameters ---------- limit: int Maximum number of submissions to look at  "},{"id":446,"href":"/OpenBBTerminal/SDK/stocks/ba/wsb/","title":"Wsb","parent":"ba","content":"Get underlying data    stocks.ba.wsb(limit: int = 10, new: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get wsb posts [Source: reddit]\nParameters ---------- limit : int, optional Number of posts to get, by default 10 new : bool, optional Flag to sort by new instead of hot, by default False Returns ------- pd.DataFrame Dataframe of reddit submissions  "},{"id":447,"href":"/OpenBBTerminal/SDK/stocks/ca/balance/","title":"Balance","parent":"ca","content":"Get underlying data    stocks.ca.balance(similar: List[str], timeframe: str = \u0026lsquo;2021\u0026rsquo;, quarter: bool = False)    Get balance data. [Source: Marketwatch]\nParameters ---------- similar : List[str] List of tickers to compare. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). timeframe : str Column header to compare quarter : bool, optional Whether to use quarterly statements, by default False export : str, optional Format to export data  "},{"id":448,"href":"/OpenBBTerminal/SDK/stocks/ca/cashflow/","title":"Cashflow","parent":"ca","content":"Get underlying data    stocks.ca.cashflow(similar: List[str], timeframe: str = \u0026lsquo;2021\u0026rsquo;, quarter: bool = False)    Get cashflow data. [Source: Marketwatch]\nParameters ---------- similar : List[str] List of tickers to compare. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). timeframe : str Column header to compare quarter : bool, optional Whether to use quarterly statements, by default False export : str, optional Format to export data  "},{"id":449,"href":"/OpenBBTerminal/SDK/stocks/ca/finnhub_peers/","title":"Finnhub Peers","parent":"ca","content":"Get underlying data    stocks.ca.finnhub_peers(symbol: str) -\u0026gt; List[str]    Get similar companies from Finhub\nParameters ---------- symbol : str Ticker to find comparisons for Returns ------- List[str] List of similar companies  "},{"id":450,"href":"/OpenBBTerminal/SDK/stocks/ca/finviz_peers/","title":"Finviz Peers","parent":"ca","content":"Get underlying data    stocks.ca.finviz_peers(symbol: str, compare_list: List[str] = None) -\u0026gt; Tuple[List[str], str]    Get similar companies from Finviz\nParameters ---------- symbol : str Ticker to find comparisons for compare_list : List[str] List of fields to compare, [\u0026quot;Sector\u0026quot;, \u0026quot;Industry\u0026quot;, \u0026quot;Country\u0026quot;] Returns ------- List[str] List of similar companies  "},{"id":451,"href":"/OpenBBTerminal/SDK/stocks/ca/hcorr/","title":"Hcorr","parent":"ca","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ca.hcorr(similar: List[str], start_date: str = \u0026lsquo;2021-10-25\u0026rsquo;, candle_type: str = \u0026lsquo;a\u0026rsquo;)    Get historical price correlation. [Source: Yahoo Finance] Parameters ---------- similar : List[str] List of similar tickers. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). start_date : str, optional Start date of comparison, by default 1 year ago candle_type : str, optional OHLCA column to use for candles or R for returns, by default \u0026quot;a\u0026quot; for Adjusted Close  Getting charts    stocks.ca.hcorr(similar: List[str], start_date: str = \u0026lsquo;2021-10-25\u0026rsquo;, candle_type: str = \u0026lsquo;a\u0026rsquo;, display_full_matrix: bool = False, raw: bool = False, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Correlation heatmap based on historical price comparison between similar companies. [Source: Yahoo Finance] Parameters ---------- similar : List[str] List of similar tickers. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). start_date : str, optional Start date of comparison, by default 1 year ago candle_type : str, optional OHLCA column to use for candles or R for returns, by default \u0026quot;a\u0026quot; for Adjusted Close display_full_matrix : bool, optional Optionally display all values in the matrix, rather than masking off half, by default False raw: bool, optional Whether to display raw data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None export : str, optional Format to export correlation prices, by default \u0026quot;\u0026quot;  "},{"id":452,"href":"/OpenBBTerminal/SDK/stocks/ca/hist/","title":"Hist","parent":"ca","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ca.hist(similar: List[str], start_date: str = \u0026lsquo;2021-10-25\u0026rsquo;, candle_type: str = \u0026lsquo;a\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get historical prices for all comparison stocks\nParameters ---------- similar: List[str] List of similar tickers. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). start_date: str, optional Start date of comparison. Defaults to 1 year previously candle_type: str, optional Candle variable to compare, by default \u0026quot;a\u0026quot; for Adjusted Close. Possible values are: o, h, l, c, a, v, r Returns ------- pd.DataFrame Dataframe containing candle type variable for each ticker  Getting charts    stocks.ca.hist(similar: List[str], start_date: str = \u0026lsquo;2021-10-25\u0026rsquo;, candle_type: str = \u0026lsquo;a\u0026rsquo;, normalize: bool = True, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display historical stock prices. [Source: Yahoo Finance]\nParameters ---------- similar: List[str] List of similar tickers. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). start_date: str, optional Start date of comparison, by default 1 year ago candle_type: str, optional OHLCA column to use or R to use daily returns calculated from Adjusted Close, by default \u0026quot;a\u0026quot; for Adjusted Close normalize: bool, optional Boolean to normalize all stock prices using MinMax defaults True export: str, optional Format to export historical prices, by default \u0026quot;\u0026quot; external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":453,"href":"/OpenBBTerminal/SDK/stocks/ca/income/","title":"Income","parent":"ca","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ca.income(similar: List[str], timeframe: str = \u0026lsquo;2021\u0026rsquo;, quarter: bool = False)    Get income data. [Source: Marketwatch]\nParameters ---------- similar : List[str] List of tickers to compare. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). timeframe : str Column header to compare quarter : bool, optional Whether to use quarterly statements, by default False export : str, optional Format to export data  Getting charts    stocks.ca.income(symbols: List[str], timeframe: str = \u0026lsquo;2021\u0026rsquo;, quarter: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display income data. [Source: Marketwatch]\nParameters ---------- symbols : List[str] List of tickers to compare. Enter tickers you want to see as shown below: [\u0026quot;TSLA\u0026quot;, \u0026quot;AAPL\u0026quot;, \u0026quot;NFLX\u0026quot;, \u0026quot;BBY\u0026quot;] You can also get a list of comparable peers with finnhub_peers(), finviz_peers(), polygon_peers(). timeframe : str What year to look at quarter : bool, optional Whether to use quarterly statements, by default False export : str, optional Format to export data  "},{"id":454,"href":"/OpenBBTerminal/SDK/stocks/ca/polygon_peers/","title":"Polygon Peers","parent":"ca","content":"Get underlying data    stocks.ca.polygon_peers(symbol: str, us_only: bool = False) -\u0026gt; List[str]    Get similar companies from Polygon\nParameters ---------- symbol: str Ticker to get similar companies of us_only: bool Only stocks from the US stock exchanges Returns ------- List[str]: List of similar tickers  "},{"id":455,"href":"/OpenBBTerminal/SDK/stocks/ca/scorr/","title":"Scorr","parent":"ca","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ca.scorr(similar: List[str])    Get correlation sentiments across similar companies. [Source: FinBrain]\nParameters ---------- similar : List[str] Similar companies to compare income with. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers().  Getting charts    stocks.ca.scorr(similar: List[str], raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot correlation sentiments heatmap across similar companies. [Source: FinBrain]\nParameters ---------- similar : List[str] Similar companies to compare income with. Comparable companies can be accessed through finviz_peers(), finnhub_peers() or polygon_peers(). raw : bool, optional Output raw values, by default False export : str, optional Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":456,"href":"/OpenBBTerminal/SDK/stocks/ca/screener/","title":"Screener","parent":"ca","content":"Get underlying data    stocks.ca.screener(similar: List[str], data_type: str = \u0026lsquo;overview\u0026rsquo;)    Screener Overview\nParameters ---------- similar: List of similar companies. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). data_type : str Data type between: overview, valuation, financial, ownership, performance, technical Returns ---------- pd.DataFrame Dataframe with overview, valuation, financial, ownership, performance or technical  "},{"id":457,"href":"/OpenBBTerminal/SDK/stocks/ca/sentiment/","title":"Sentiment","parent":"ca","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ca.sentiment(symbols: List[str]) -\u0026gt; pandas.core.frame.DataFrame    Gets Sentiment analysis from several symbols provided by FinBrain\u0026rsquo;s API\nParameters ---------- symbols : List[str] List of tickers to get sentiment Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). Returns ------- pd.DataFrame Contains sentiment analysis from several tickers  Getting charts    stocks.ca.sentiment(similar: List[str], raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display sentiment for all ticker. [Source: FinBrain]\nParameters ---------- similar : List[str] Similar companies to compare income with. Comparable companies can be accessed through finviz_peers(), finnhub_peers() or polygon_peers(). raw : bool, optional Output raw values, by default False export : str, optional Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":458,"href":"/OpenBBTerminal/SDK/stocks/ca/volume/","title":"Volume","parent":"ca","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ca.volume(similar: List[str], start_date: str = \u0026lsquo;2021-10-25\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get stock volume. [Source: Yahoo Finance]\nParameters ---------- similar : List[str] List of similar tickers. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). start_date : str, optional Start date of comparison, by default 1 year ago  Getting charts    stocks.ca.volume(similar: List[str], start_date: str = \u0026lsquo;2021-10-25\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display stock volume. [Source: Yahoo Finance]\nParameters ---------- similar : List[str] List of similar tickers. Comparable companies can be accessed through finnhub_peers(), finviz_peers(), polygon_peers(). start_date : str, optional Start date of comparison, by default 1 year ago export : str, optional Format to export historical prices, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":459,"href":"/OpenBBTerminal/SDK/stocks/candle/","title":"Candle","parent":"Introduction to the Stocks Menu","content":"Get underlying data    stocks.candle(symbol: str, data: pandas.core.frame.DataFrame = None, use_matplotlib: bool = True, intraday: bool = False, add_trend: bool = False, ma: Optional[Iterable[int]] = None, asset_type: str = \u0026lsquo;\u0026rsquo;, start_date: datetime.datetime = datetime.datetime(2019, 10, 22, 11, 39, 59, 858379), interval: int = 1440, end_date: datetime.datetime = datetime.datetime(2022, 10, 26, 11, 39, 59, 858399), prepost: bool = False, source: str = \u0026lsquo;YahooFinance\u0026rsquo;, iexrange: str = \u0026lsquo;ytd\u0026rsquo;, weekly: bool = False, monthly: bool = False, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, raw: bool = False, yscale: str = \u0026lsquo;linear\u0026rsquo;)    Shows candle plot of loaded ticker. [Source: Yahoo Finance, IEX Cloud or Alpha Vantage]\nParameters ---------- symbol: str Ticker name data: pd.DataFrame Stock dataframe use_matplotlib: bool Flag to use matplotlib instead of interactive plotly chart intraday: bool Flag for intraday data for plotly range breaks add_trend: bool Flag to add high and low trends to chart ma: Tuple[int] Moving averages to add to the candle asset_type_: str String to include in title external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None asset_type_: str String to include in title start_date: datetime Start date to get data from with interval: int Interval (in minutes) to get data 1, 5, 15, 30, 60 or 1440 end_date: datetime End date to get data from with prepost: bool Pre and After hours data source: str Source of data extracted iexrange: str Timeframe to get IEX data. weekly: bool Flag to get weekly data monthly: bool Flag to get monthly data raw : bool, optional Flag to display raw data, by default False yscale: str Linear or log for yscale  "},{"id":460,"href":"/OpenBBTerminal/SDK/stocks/dd/analyst/","title":"Analyst","parent":"dd","content":"Get underlying data    stocks.dd.analyst(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get analyst data. [Source: Finviz]\nParameters ---------- symbol : str Stock ticker symbol Returns ------- df_fa: DataFrame Analyst price targets  "},{"id":461,"href":"/OpenBBTerminal/SDK/stocks/dd/arktrades/","title":"Arktrades","parent":"dd","content":"Get underlying data    stocks.dd.arktrades(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Gets a dataframe of ARK trades for ticker\nParameters ---------- symbol : str Ticker to get trades for Returns ------- pd.DataFrame DataFrame of trades  "},{"id":462,"href":"/OpenBBTerminal/SDK/stocks/dd/customer/","title":"Customer","parent":"dd","content":"Get underlying data    stocks.dd.customer(symbol: str, limit: int = 50) -\u0026gt; pandas.core.frame.DataFrame    Print customers from ticker provided\nParameters ---------- symbol: str Ticker to select customers from limit: int The maximum number of rows to show Returns ------- pd.DataFrame A dataframe of suppliers  "},{"id":463,"href":"/OpenBBTerminal/SDK/stocks/dd/est/","title":"Est","parent":"dd","content":"Get underlying data    stocks.dd.est(symbol: str) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Get analysts' estimates for a given ticker. [Source: Business Insider]\nParameters ---------- symbol : str Ticker to get analysts' estimates Returns ------- df_year_estimates : pd.DataFrame Year estimates df_quarter_earnings : pd.DataFrame Quarter earnings estimates df_quarter_revenues : pd.DataFrame Quarter revenues estimates  "},{"id":464,"href":"/OpenBBTerminal/SDK/stocks/dd/news/","title":"News","parent":"dd","content":"Get underlying data    stocks.dd.news(symbol: str) -\u0026gt; List[Any]    Get news from Finviz\nParameters ---------- symbol : str Stock ticker symbol Returns ------- List[Any] News  "},{"id":465,"href":"/OpenBBTerminal/SDK/stocks/dd/pt/","title":"Pt","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dd.pt(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get analysts' price targets for a given stock. [Source: Business Insider]\nParameters ---------- symbol : str Ticker symbol Returns ------- pd.DataFrame Analysts data  Getting charts    stocks.dd.pt(symbol: str, data: pandas.core.frame.DataFrame, start_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, limit: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display analysts' price targets for a given stock. [Source: Business Insider]\nParameters ---------- symbol: str Due diligence ticker symbol data: DataFrame Due diligence stock dataframe start_date : str Start date of the stock data limit : int Number of latest price targets from analysts to print raw: bool Display raw data only export: str Export dataframe data to csv,json,xlsx file external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":466,"href":"/OpenBBTerminal/SDK/stocks/dd/rating/","title":"Rating","parent":"dd","content":"Get underlying data    stocks.dd.rating(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get ratings for a given ticker. [Source: Financial Modeling Prep]\nParameters ---------- symbol : str Stock ticker symbol Returns ------- pd.DataFrame Rating data  "},{"id":467,"href":"/OpenBBTerminal/SDK/stocks/dd/rot/","title":"Rot","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dd.rot(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get rating over time data. [Source: Finnhub]\nParameters ---------- symbol : str Ticker symbol to get ratings from Returns ------- pd.DataFrame Get dataframe with ratings  Getting charts    stocks.dd.rot(symbol: str, limit: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Rating over time (monthly). [Source: Finnhub]\nParameters ---------- ticker : str Ticker to get ratings from limit : int Number of last months ratings to show raw: bool Display raw data only export: str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]] External axes (1 axis is expected in the list), by default None  "},{"id":468,"href":"/OpenBBTerminal/SDK/stocks/dd/sec/","title":"Sec","parent":"dd","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dd.sec(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get SEC filings for a given stock ticker. [Source: Market Watch]\nParameters ---------- symbol : str Stock ticker symbol Returns ------- df_financials : pd.DataFrame SEC filings data  Getting charts    stocks.dd.sec(symbol: str, limit: int = 5, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display SEC filings for a given stock ticker. [Source: Market Watch]\nParameters ---------- symbol: str Stock ticker symbol limit: int Number of ratings to display export: str Export dataframe data to csv,json,xlsx file  "},{"id":469,"href":"/OpenBBTerminal/SDK/stocks/dd/supplier/","title":"Supplier","parent":"dd","content":"Get underlying data    stocks.dd.supplier(symbol: str, limit: int = 50) -\u0026gt; pandas.core.frame.DataFrame    Get suppliers from ticker provided. [Source: CSIMarket]\nParameters ---------- symbol: str Ticker to select suppliers from limit: int The maximum number of rows to show Returns ------- pd.DataFrame A dataframe of suppliers  "},{"id":470,"href":"/OpenBBTerminal/SDK/stocks/disc/active/","title":"Active","parent":"disc","content":"Get underlying data    stocks.disc.active() -\u0026gt; pandas.core.frame.DataFrame    Get stocks ordered in descending order by intraday trade volume. [Source: Yahoo Finance]\nReturns ------- pd.DataFrame Most active stocks  "},{"id":471,"href":"/OpenBBTerminal/SDK/stocks/disc/arkord/","title":"Arkord","parent":"disc","content":"Get underlying data    stocks.disc.arkord(buys_only: bool = False, sells_only: bool = False, fund: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Returns ARK orders in a Dataframe\nParameters ---------- buys_only: bool Flag to filter on buys only sells_only: bool Flag to sort on sells only fund: str Optional filter by fund Returns ------- DataFrame ARK orders data frame with the following columns: ticker, date, shares, weight, fund, direction  "},{"id":472,"href":"/OpenBBTerminal/SDK/stocks/disc/asc/","title":"Asc","parent":"disc","content":"Get underlying data    stocks.disc.asc() -\u0026gt; pandas.core.frame.DataFrame    Get Yahoo Finance small cap stocks with earnings growth rates better than 25%. [Source: Yahoo Finance]\nReturns ------- pd.DataFrame Most aggressive small cap stocks  "},{"id":473,"href":"/OpenBBTerminal/SDK/stocks/disc/dividends/","title":"Dividends","parent":"disc","content":"Get underlying data    stocks.disc.dividends(date: str = \u0026lsquo;2022-10-26\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Gets dividend calendar for given date. Date represents Ex-Dividend Date\nParameters ---------- date: datetime Date to get for in format YYYY-MM-DD Returns ------- pd.DataFrame: Dataframe of dividend calendar  "},{"id":474,"href":"/OpenBBTerminal/SDK/stocks/disc/fipo/","title":"Fipo","parent":"disc","content":"Get underlying data    stocks.disc.fipo(num_days_ahead: int = 5, end_date: Optional[str] = None)    Future IPOs dates. [Source: Finnhub]\nParameters ---------- num_days_ahead: int Number of days to look ahead for IPOs dates end_date: datetime The end date (format YYYY-MM-DD) to look for IPOs from today onwards  "},{"id":475,"href":"/OpenBBTerminal/SDK/stocks/disc/gainers/","title":"Gainers","parent":"disc","content":"Get underlying data    stocks.disc.gainers() -\u0026gt; pandas.core.frame.DataFrame    Get top gainers. [Source: Yahoo Finance]\nReturns ------- pd.DataFrame Stock Gainers  "},{"id":476,"href":"/OpenBBTerminal/SDK/stocks/disc/gtech/","title":"Gtech","parent":"disc","content":"Get underlying data    stocks.disc.gtech() -\u0026gt; pandas.core.frame.DataFrame    Get technology stocks with revenue and earnings growth in excess of 25%. [Source: Yahoo Finance]\nReturns ------- pd.DataFrame Growth technology stocks  "},{"id":477,"href":"/OpenBBTerminal/SDK/stocks/disc/hotpenny/","title":"Hotpenny","parent":"disc","content":"Get underlying data    stocks.disc.hotpenny() -\u0026gt; pandas.core.frame.DataFrame    Returns today hot penny stocks\nReturns ------- DataFrame Today hot penny stocks DataFrame with the following columns: Ticker, Price, Change, $ Volume, Volume, # Trades  "},{"id":478,"href":"/OpenBBTerminal/SDK/stocks/disc/ipo/","title":"Ipo","parent":"disc","content":"Get underlying data    stocks.disc.ipo(start_date: str = \u0026lsquo;2022-10-21\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get IPO calendar\nParameters ---------- start_date : str start date (%Y-%m-%d) to get IPO calendar end_date : str end date (%Y-%m-%d) to get IPO calendar Returns ------- pd.DataFrame Get dataframe with economic calendar events  "},{"id":479,"href":"/OpenBBTerminal/SDK/stocks/disc/losers/","title":"Losers","parent":"disc","content":"Get underlying data    stocks.disc.losers() -\u0026gt; pandas.core.frame.DataFrame    Get top losers. [Source: Yahoo Finance]\nReturns ------- pd.DataFrame Stock Losers  "},{"id":480,"href":"/OpenBBTerminal/SDK/stocks/disc/lowfloat/","title":"Lowfloat","parent":"disc","content":"Get underlying data    stocks.disc.lowfloat() -\u0026gt; pandas.core.frame.DataFrame    Returns low float DataFrame\nReturns ------- DataFrame Low float DataFrame with the following columns: Ticker, Company, Exchange, ShortInt, Float, Outstd, Industry  "},{"id":481,"href":"/OpenBBTerminal/SDK/stocks/disc/news/","title":"News","parent":"disc","content":"Get underlying data    stocks.disc.news(news_type: str = \u0026lsquo;Top-News\u0026rsquo;, limit: int = 5) -\u0026gt; List    Gets news. [Source: SeekingAlpha]\nParameters ---------- news_type : str From: Top-News, On-The-Move, Market-Pulse, Notable-Calls, Buybacks, Commodities, Crypto, Issuance, Global, Guidance, IPOs, SPACs, Politics, M-A, Consumer, Energy, Financials, Healthcare, MLPs, REITs, Technology limit : int Number of news to display Returns ------- List[dict] List of dict news  "},{"id":482,"href":"/OpenBBTerminal/SDK/stocks/disc/pipo/","title":"Pipo","parent":"disc","content":"Get underlying data    stocks.disc.pipo(num_days_behind: int = 5, start_date: Optional[str] = None)    Past IPOs dates. [Source: Finnhub]\nParameters ---------- num_days_behind: int Number of days to look behind for IPOs dates start_date: str The starting date (format YYYY-MM-DD) to look for IPOs  "},{"id":483,"href":"/OpenBBTerminal/SDK/stocks/disc/rtat/","title":"Rtat","parent":"disc","content":"Get underlying data    stocks.disc.rtat() -\u0026gt; pandas.core.frame.DataFrame    Gets the top 10 retail stocks per day\nReturns ------- pd.DataFrame Dataframe of tickers  "},{"id":484,"href":"/OpenBBTerminal/SDK/stocks/disc/trending/","title":"Trending","parent":"disc","content":"Get underlying data    stocks.disc.trending(limit: int = 5) -\u0026gt; list    Returns a list of trending articles\nParameters ---------- limit: int Number of articles Returns ------- list Trending articles list  "},{"id":485,"href":"/OpenBBTerminal/SDK/stocks/disc/ugs/","title":"Ugs","parent":"disc","content":"Get underlying data    stocks.disc.ugs() -\u0026gt; pandas.core.frame.DataFrame    Get stocks with earnings growth rates better than 25% and relatively low PE and PEG ratios. [Source: Yahoo Finance]\nReturns ------- pd.DataFrame Undervalued stocks  "},{"id":486,"href":"/OpenBBTerminal/SDK/stocks/disc/ulc/","title":"Ulc","parent":"disc","content":"Get underlying data    stocks.disc.ulc() -\u0026gt; pandas.core.frame.DataFrame    Get Yahoo Finance potentially undervalued large cap stocks. [Source: Yahoo Finance]\nReturns ------- pd.DataFrame Most undervalued large cap stocks  "},{"id":487,"href":"/OpenBBTerminal/SDK/stocks/disc/upcoming/","title":"Upcoming","parent":"disc","content":"Get underlying data    stocks.disc.upcoming(limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Returns a DataFrame with upcoming earnings\nParameters ---------- limit : int Number of pages Returns ------- DataFrame Upcoming earnings DataFrame  "},{"id":488,"href":"/OpenBBTerminal/SDK/stocks/dps/ctb/","title":"Ctb","parent":"dps","content":"Get underlying data    stocks.dps.ctb() -\u0026gt; pandas.core.frame.DataFrame    Get stocks with highest cost to borrow [Source: Interactive Broker]\nReturns ------- pd.DataFrame Cost to borrow  "},{"id":489,"href":"/OpenBBTerminal/SDK/stocks/dps/dpotc/","title":"Dpotc","parent":"dps","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dps.dpotc(symbol: str) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Get all FINRA data associated with a ticker\nParameters ---------- symbol : str Stock ticker to get data from Returns ------- pd.DataFrame Dark Pools (ATS) Data pd.DataFrame OTC (Non-ATS) Data  Getting charts    stocks.dps.dpotc(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display barchart of dark pool (ATS) and OTC (Non ATS) data. [Source: FINRA]\nParameters ---------- symbol : str Stock ticker export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":490,"href":"/OpenBBTerminal/SDK/stocks/dps/ftd/","title":"Ftd","parent":"dps","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dps.ftd(symbol: str, start_date: str = \u0026lsquo;2022-08-27\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, limit: int = 0) -\u0026gt; pandas.core.frame.DataFrame    Display fails-to-deliver data for a given ticker. [Source: SEC]\nParameters ---------- symbol : str Stock ticker start_date : str Start of data, in YYYY-MM-DD format end_date : str End of data, in YYYY-MM-DD format limit : int Number of latest fails-to-deliver being printed Returns ---------- pd.DataFrame Fail to deliver data  Getting charts    stocks.dps.ftd(symbol: str, data: pandas.core.frame.DataFrame, start_date: str = \u0026lsquo;2022-08-27\u0026rsquo;, end_date: str = \u0026lsquo;2022-10-26\u0026rsquo;, limit: int = 0, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display fails-to-deliver data for a given ticker. [Source: SEC]\nParameters ---------- symbol: str Stock ticker data: pd.DataFrame Stock data start_date: str Start of data, in YYYY-MM-DD format end_date: str End of data, in YYYY-MM-DD format limit : int Number of latest fails-to-deliver being printed raw: bool Print raw data export: str Export dataframe data to csv,json,xlsx file external_axes: Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":491,"href":"/OpenBBTerminal/SDK/stocks/dps/hsi/","title":"Hsi","parent":"dps","content":"Get underlying data    stocks.dps.hsi() -\u0026gt; pandas.core.frame.DataFrame    Returns a high short interest DataFrame\nReturns ------- DataFrame High short interest Dataframe with the following columns: Ticker, Company, Exchange, ShortInt, Float, Outstd, Industry  "},{"id":492,"href":"/OpenBBTerminal/SDK/stocks/dps/pos/","title":"Pos","parent":"dps","content":"Get underlying data    stocks.dps.pos(sortby: str = \u0026lsquo;dpp_dollar\u0026rsquo;, ascend: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get dark pool short positions. [Source: Stockgrid]\nParameters ---------- sortby : str Field for which to sort by, where 'sv': Short Vol. [1M], 'sv_pct': Short Vol. %%, 'nsv': Net Short Vol. [1M], 'nsv_dollar': Net Short Vol. ($100M), 'dpp': DP Position [1M], 'dpp_dollar': DP Position ($1B) ascend : bool Data in ascending order Returns ---------- pd.DataFrame Dark pool short position data  "},{"id":493,"href":"/OpenBBTerminal/SDK/stocks/dps/prom/","title":"Prom","parent":"dps","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dps.prom(limit: int = 1000, tier_ats: str = \u0026lsquo;T1\u0026rsquo;) -\u0026gt; Tuple[pandas.core.frame.DataFrame, Dict]    Get all FINRA ATS data, and parse most promising tickers based on linear regression\nParameters ---------- limit: int Number of tickers to filter from entire ATS data based on the sum of the total weekly shares quantity tier_ats : int Tier to process data from: T1, T2 or OTCE Returns ------- pd.DataFrame Dark Pools (ATS) Data Dict Tickers from Dark Pools with better regression slope  Getting charts    stocks.dps.prom(input_limit: int = 1000, limit: int = 10, tier: str = \u0026lsquo;T1\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display dark pool (ATS) data of tickers with growing trades activity. [Source: FINRA]\nParameters ---------- input_limit : int Number of tickers to filter from entire ATS data based on the sum of the total weekly shares quantity limit : int Number of tickers to display from most promising with better linear regression slope tier : str Tier to process data from: T1, T2 or OTCE export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":494,"href":"/OpenBBTerminal/SDK/stocks/dps/psi_q/","title":"Psi Q","parent":"dps","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dps.psi_q(symbol: str, nyse: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Plots the short interest of a stock. This corresponds to the number of shares that have been sold short but have not yet been covered or closed out. Either NASDAQ or NYSE [Source: Quandl]\nParameters ---------- symbol : str ticker to get short interest from nyse : bool data from NYSE if true, otherwise NASDAQ Returns ---------- pd.DataFrame short interest volume data  Getting charts    stocks.dps.psi_q(symbol: str, nyse: bool = False, limit: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plots the short interest of a stock. This corresponds to the number of shares that have been sold short but have not yet been covered or closed out. Either NASDAQ or NYSE [Source: Quandl]\nParameters ---------- symbol : str ticker to get short interest from nyse : bool data from NYSE if true, otherwise NASDAQ limit: int Number of past days to show short interest raw : bool Flag to print raw data instead export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":495,"href":"/OpenBBTerminal/SDK/stocks/dps/psi_sg/","title":"Psi Sg","parent":"dps","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dps.psi_sg(symbol: str) -\u0026gt; Tuple[pandas.core.frame.DataFrame, List]    Get price vs short interest volume. [Source: Stockgrid]\nParameters ---------- symbol : str Stock to get data from Returns ---------- pd.DataFrame Short interest volume data List Price data  Getting charts    stocks.dps.psi_sg(symbol: str, limit: int = 84, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot price vs short interest volume. [Source: Stockgrid]\nParameters ---------- symbol : str Stock to plot for limit : int Number of last open market days to show raw : bool Flag to print raw data instead export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (3 axes are expected in the list), by default None  "},{"id":496,"href":"/OpenBBTerminal/SDK/stocks/dps/shorted/","title":"Shorted","parent":"dps","content":"Get underlying data    stocks.dps.shorted() -\u0026gt; pandas.core.frame.DataFrame    Get most shorted stock screener [Source: Yahoo Finance]\nReturns ------- pd.DataFrame Most Shorted Stocks  "},{"id":497,"href":"/OpenBBTerminal/SDK/stocks/dps/sidtc/","title":"Sidtc","parent":"dps","content":"Get underlying data    stocks.dps.sidtc(sortby: str = \u0026lsquo;float\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get short interest and days to cover. [Source: Stockgrid]\nParameters ---------- sortby : str Field for which to sort by, where 'float': Float Short %%, 'dtc': Days to Cover, 'si': Short Interest Returns ---------- pd.DataFrame Short interest and days to cover data  "},{"id":498,"href":"/OpenBBTerminal/SDK/stocks/dps/spos/","title":"Spos","parent":"dps","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dps.spos(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get net short position. [Source: Stockgrid]\nParameters ---------- symbol: str Stock to get data from Returns ---------- pd.DataFrame Net short position  Getting charts    stocks.dps.spos(symbol: str, limit: int = 84, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot net short position. [Source: Stockgrid]\nParameters ---------- symbol: str Stock to plot for limit : int Number of last open market days to show raw : bool Flag to print raw data instead export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (2 axes are expected in the list), by default None  "},{"id":499,"href":"/OpenBBTerminal/SDK/stocks/dps/volexch/","title":"Volexch","parent":"dps","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.dps.volexch(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Gets short data for 5 exchanges [https://ftp.nyse.com] starting at 1/1/2021\nParameters ---------- symbol : str Ticker to get data for Returns ------- pd.DataFrame DataFrame of short data by exchange  Getting charts    stocks.dps.volexch(symbol: str, raw: bool = False, sortby: str = \u0026lsquo;\u0026rsquo;, ascend: bool = False, mpl: bool = True, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display short data by exchange\nParameters ---------- symbol : str Stock ticker raw : bool Flag to display raw data sortby: str Column to sort by ascend: bool Sort in ascending order mpl: bool Display using matplotlib export : str, optional Format of export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":500,"href":"/OpenBBTerminal/SDK/stocks/fa/analysis/","title":"Analysis","parent":"fa","content":"Get underlying data    stocks.fa.analysis(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Save time reading SEC filings with the help of machine learning. [Source: https://eclect.us]\nParameters ---------- symbol: str Ticker symbol to see analysis of filings Returns ------- str Analysis of filings text  "},{"id":501,"href":"/OpenBBTerminal/SDK/stocks/fa/av_balance/","title":"Av Balance","parent":"fa","content":"Get underlying data    stocks.fa.av_balance(symbol: str, limit: int = 5, quarterly: bool = False, ratios: bool = False, plot: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get balance sheets for company\nParameters ---------- symbol : str Stock ticker symbol limit : int Number of past to get quarterly : bool, optional Flag to get quarterly instead of annual, by default False ratios: bool Shows percentage change, by default False plot: bool If the data shall be formatted ready to plot Returns ------- pd.DataFrame DataFrame of the balance sheet  "},{"id":502,"href":"/OpenBBTerminal/SDK/stocks/fa/av_cash/","title":"Av Cash","parent":"fa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.fa.av_cash(symbol: str, limit: int = 5, quarterly: bool = False, ratios: bool = False, plot: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get cash flows for company\nParameters ---------- symbol : str Stock ticker symbol limit : int Number of past to get quarterly : bool, optional Flag to get quarterly instead of annual, by default False ratios: bool Shows percentage change, by default False plot: bool If the data shall be formatted ready to plot Returns ------- pd.DataFrame Dataframe of cash flow statements  Getting charts    stocks.fa.av_cash(symbol: str, limit: int = 5, quarterly: bool = False, ratios: bool = False, plot: list = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Alpha Vantage income statement\nParameters ---------- symbol : str Fundamental analysis ticker symbol limit: int Number of past statements, by default 5 quarterly: bool Flag to get quarterly instead of annual, by default False ratios: bool Shows percentage change, by default False plot: list List of row labels to plot export: str Format to export data  "},{"id":503,"href":"/OpenBBTerminal/SDK/stocks/fa/av_income/","title":"Av Income","parent":"fa","content":"Get underlying data    stocks.fa.av_income(symbol: str, limit: int = 5, quarterly: bool = False, ratios: bool = False, plot: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get income statements for company\nParameters ---------- symbol : str Stock ticker symbol limit : int Number of past to get quarterly : bool, optional Flag to get quarterly instead of annual, by default False ratios: bool Shows percentage change, by default False plot: bool If the data shall be formatted ready to plot Returns ------- pd.DataFrame DataFrame of income statements  "},{"id":504,"href":"/OpenBBTerminal/SDK/stocks/fa/av_metrics/","title":"Av Metrics","parent":"fa","content":"Get underlying data    stocks.fa.av_metrics(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get key metrics from overview\nParameters ---------- symbol : str Stock ticker symbol Returns ------- pd.DataFrame Dataframe of key metrics  "},{"id":505,"href":"/OpenBBTerminal/SDK/stocks/fa/av_overview/","title":"Av Overview","parent":"fa","content":"Get underlying data    stocks.fa.av_overview(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get alpha vantage company overview\nParameters ---------- symbol : str Stock ticker symbol Returns ------- pd.DataFrame Dataframe of fundamentals  "},{"id":506,"href":"/OpenBBTerminal/SDK/stocks/fa/cal/","title":"Cal","parent":"fa","content":"Get underlying data    stocks.fa.cal(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get calendar earnings for ticker symbol\nParameters ---------- symbol: str Stock ticker symbol Returns ------- pd.DataFrame Dataframe of calendar earnings  "},{"id":507,"href":"/OpenBBTerminal/SDK/stocks/fa/data/","title":"Data","parent":"fa","content":"Get underlying data    stocks.fa.data(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get fundamental data from finviz\nParameters ---------- symbol : str Stock ticker symbol Returns ------- pd.DataFrame DataFrame of fundamental data  "},{"id":508,"href":"/OpenBBTerminal/SDK/stocks/fa/dcf/","title":"Dcf","parent":"fa","content":"Get underlying data    stocks.fa.dcf(symbol: str, limit: int = 5, quarterly: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get stocks dcf from FMP\nParameters ---------- symbol : str Stock ticker symbol limit : int Number to get quarterly : bool, optional Flag to get quarterly data, by default False Returns ------- pd.DataFrame Dataframe of dcf data  "},{"id":509,"href":"/OpenBBTerminal/SDK/stocks/fa/divs/","title":"Divs","parent":"fa","content":"Get underlying data    stocks.fa.divs(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get historical dividend for ticker\nParameters ---------- symbol: str Ticker symbol to get dividend for Returns ------- pd.DataFrame: Dataframe of dividends and dates  "},{"id":510,"href":"/OpenBBTerminal/SDK/stocks/fa/dupont/","title":"Dupont","parent":"fa","content":"Get underlying data    stocks.fa.dupont(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get dupont ratios\nParameters ---------- symbol : str Stock ticker symbol Returns ------- dupont : pd.DataFrame The dupont ratio breakdown  "},{"id":511,"href":"/OpenBBTerminal/SDK/stocks/fa/earnings/","title":"Earnings","parent":"fa","content":"Get underlying data    stocks.fa.earnings(symbol: str, quarterly: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get earnings calendar for ticker\nParameters ---------- symbol : str Stock ticker symbol quarterly : bool, optional Flag to get quarterly and not annual, by default False Returns ------- pd.DataFrame Dataframe of earnings  "},{"id":512,"href":"/OpenBBTerminal/SDK/stocks/fa/enterprise/","title":"Enterprise","parent":"fa","content":"Get underlying data    stocks.fa.enterprise(symbol: str, limit: int = 5, quarterly: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Financial Modeling Prep ticker enterprise\nParameters ---------- symbol : str Fundamental analysis ticker symbol limit: int Number to get quarterly: bool Flag to get quarterly data Returns ---------- pd.DataFrame: Dataframe of enterprise information  "},{"id":513,"href":"/OpenBBTerminal/SDK/stocks/fa/fama_coe/","title":"Fama Coe","parent":"fa","content":"Get underlying data    stocks.fa.fama_coe(symbol: str) -\u0026gt; float    Use Fama and French to get the cost of equity for a company\nParameters ---------- symbol : str The ticker symbol to be analyzed Returns ------- coef : float The stock's Fama French coefficient  "},{"id":514,"href":"/OpenBBTerminal/SDK/stocks/fa/fama_raw/","title":"Fama Raw","parent":"fa","content":"Get underlying data    stocks.fa.fama_raw() -\u0026gt; pandas.core.frame.DataFrame    Get Fama French data\nReturns ------- df : pd.DataFrame Fama French data  "},{"id":515,"href":"/OpenBBTerminal/SDK/stocks/fa/fmp_balance/","title":"Fmp Balance","parent":"fa","content":"Get underlying data    stocks.fa.fmp_balance(symbol: str, limit: int = 5, quarterly: bool = False, ratios: bool = False, plot: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get balance sheets\nParameters ---------- symbol : str Stock ticker symbol limit : int Number to get quarterly : bool, optional Flag to get quarterly data, by default False ratios: bool Shows percentage change, by default False plot: bool If the data shall be formatted ready to plot Returns ------- pd.DataFrame Dataframe of balance sheet  "},{"id":516,"href":"/OpenBBTerminal/SDK/stocks/fa/fmp_cash/","title":"Fmp Cash","parent":"fa","content":"Get underlying data    stocks.fa.fmp_cash(symbol: str, limit: int = 5, quarterly: bool = False, ratios: bool = False, plot: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get cash flow\nParameters ---------- symbol : str Stock ticker symbol limit : int Number to get quarterly : bool, optional Flag to get quarterly data, by default False ratios: bool Shows percentage change, by default False plot: bool If the data shall be formatted ready to plot Returns ------- pd.DataFrame Dataframe of company cash flow  "},{"id":517,"href":"/OpenBBTerminal/SDK/stocks/fa/fmp_income/","title":"Fmp Income","parent":"fa","content":"Get underlying data    stocks.fa.fmp_income(symbol: str, limit: int = 5, quarterly: bool = False, ratios: bool = False, plot: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get income statements\nParameters ---------- symbol : str Stock ticker symbol limit : int Number to get quarterly : bool, optional Flag to get quarterly data, by default False ratios: bool Shows percentage change, by default False plot: bool If the data shall be formatted ready to plot Returns ------- pd.DataFrame Dataframe of the income statements  "},{"id":518,"href":"/OpenBBTerminal/SDK/stocks/fa/fmp_metrics/","title":"Fmp Metrics","parent":"fa","content":"Get underlying data    stocks.fa.fmp_metrics(symbol: str, limit: int = 5, quarterly: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get key metrics\nParameters ---------- symbol : str Stock ticker symbol limit : int Number to get quarterly : bool, optional Flag to get quarterly data, by default False Returns ------- pd.DataFrame Dataframe of key metrics  "},{"id":519,"href":"/OpenBBTerminal/SDK/stocks/fa/fmp_ratios/","title":"Fmp Ratios","parent":"fa","content":"Get underlying data    stocks.fa.fmp_ratios(symbol: str, limit: int = 5, quarterly: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get key ratios\nParameters ---------- symbol : str Stock ticker symbol limit : int Number to get quarterly : bool, optional Flag to get quarterly data, by default False Returns ------- pd.DataFrame Dataframe of key ratios  "},{"id":520,"href":"/OpenBBTerminal/SDK/stocks/fa/fraud/","title":"Fraud","parent":"fa","content":"Get underlying data    stocks.fa.fraud(symbol: str, detail: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get fraud ratios based on fundamentals\nParameters ---------- symbol : str Stock ticker symbol detail : bool Whether to provide extra m-score details Returns ------- metrics : pd.DataFrame The fraud ratios  "},{"id":521,"href":"/OpenBBTerminal/SDK/stocks/fa/growth/","title":"Growth","parent":"fa","content":"Get underlying data    stocks.fa.growth(symbol: str, limit: int = 5, quarterly: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get financial statement growth\nParameters ---------- symbol : str Stock ticker symbol limit : int Number to get quarterly : bool, optional Flag to get quarterly data, by default False Returns ------- pd.DataFrame Dataframe of financial statement growth  "},{"id":522,"href":"/OpenBBTerminal/SDK/stocks/fa/historical_5/","title":"Historical 5","parent":"fa","content":"Get underlying data    stocks.fa.historical_5(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get 5 year monthly historical performance for a ticker with dividends filtered\nParameters ---------- symbol: str The ticker symbol to be analyzed Returns ------- df: pd.DataFrame Historical data  "},{"id":523,"href":"/OpenBBTerminal/SDK/stocks/fa/hq/","title":"Hq","parent":"fa","content":"Get underlying data    stocks.fa.hq(symbol: str) -\u0026gt; str    Gets google map url for headquarter\nParameters ---------- symbol: str Stock ticker symbol Returns ------- str Headquarter google maps url  "},{"id":524,"href":"/OpenBBTerminal/SDK/stocks/fa/info/","title":"Info","parent":"fa","content":"Get underlying data    stocks.fa.info(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Gets ticker symbol info\nParameters ---------- symbol: str Stock ticker symbol Returns ------- pd.DataFrame DataFrame of yfinance information  "},{"id":525,"href":"/OpenBBTerminal/SDK/stocks/fa/mgmt/","title":"Mgmt","parent":"fa","content":"Get underlying data    stocks.fa.mgmt(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get company managers from Business Insider\nParameters ---------- symbol : str Stock ticker symbol Returns ------- pd.DataFrame Dataframe of managers  "},{"id":526,"href":"/OpenBBTerminal/SDK/stocks/fa/mktcap/","title":"Mktcap","parent":"fa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.fa.mktcap(symbol: str, start_date: str = \u0026lsquo;2019-10-24\u0026rsquo;) -\u0026gt; Tuple[pandas.core.frame.DataFrame, str]    Get market cap over time for ticker. [Source: Yahoo Finance]\nParameters ---------- symbol: str Ticker to get market cap over time start_date: str Start date to display market cap Returns ------- pd.DataFrame: Dataframe of estimated market cap over time str: Currency of ticker  Getting charts    stocks.fa.mktcap(symbol: str, start_date: str = \u0026lsquo;2019-10-24\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display market cap over time. [Source: Yahoo Finance]\nParameters ---------- symbol: str Stock ticker symbol start_date: str Start date to display market cap export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":527,"href":"/OpenBBTerminal/SDK/stocks/fa/poly_financials/","title":"Poly Financials","parent":"fa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.fa.poly_financials(symbol: str, statement: str, quarterly: bool = False, ratios: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get ticker financial statements from polygon\nParameters ---------- symbol: str Stock ticker symbol statement: str Financial statement data to retrieve, can be balance, income or cash quarterly:bool Flag to get quarterly reports, by default False ratios: bool Shows percentage change, by default False Returns ------- pd.DataFrame Balance Sheets or Income Statements  Getting charts    stocks.fa.poly_financials(symbol: str, statement: str, limit: int = 10, quarterly: bool = False, ratios: bool = False, plot: list = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display tickers balance sheet or income statement\nParameters ---------- symbol: str Stock ticker symbol statement:str Either balance or income limit: int Number of results to show, by default 10 quarterly: bool Flag to get quarterly reports, by default False ratios: bool Shows percentage change, by default False plot: list List of row labels to plot export: str Format to export data  "},{"id":528,"href":"/OpenBBTerminal/SDK/stocks/fa/profile/","title":"Profile","parent":"fa","content":"Get underlying data    stocks.fa.profile(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get ticker profile from FMP\nParameters ---------- symbol : str Stock ticker symbol Returns ---------- pd.DataFrame: Dataframe of ticker profile  "},{"id":529,"href":"/OpenBBTerminal/SDK/stocks/fa/quote/","title":"Quote","parent":"fa","content":"Get underlying data    stocks.fa.quote(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Gets ticker quote from FMP\nParameters ---------- symbol : str Stock ticker symbol Returns ---------- pd.DataFrame: Dataframe of ticker quote  "},{"id":530,"href":"/OpenBBTerminal/SDK/stocks/fa/score/","title":"Score","parent":"fa","content":"Get underlying data    stocks.fa.score(symbol: str) -\u0026gt; Optional[numpy.number]    Gets value score from fmp\nParameters ---------- symbol : str Stock ticker symbol Returns ------- np.number Value score  "},{"id":531,"href":"/OpenBBTerminal/SDK/stocks/fa/shrs/","title":"Shrs","parent":"fa","content":"Get underlying data    stocks.fa.shrs(symbol: str, holder: str = \u0026lsquo;institutional\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Get shareholders from yahoo\nParameters ---------- symbol : str Stock ticker symbol holder : str Which holder to get table for Returns ------- pd.DataFrame Major holders  "},{"id":532,"href":"/OpenBBTerminal/SDK/stocks/fa/similar_dfs/","title":"Similar Dfs","parent":"fa","content":"Get underlying data    stocks.fa.similar_dfs(symbol: str, info: Dict[str, Any], n: int, no_filter: bool = False)    Get dataframes for similar companies Parameters ---------- symbol : str The ticker symbol to create a dataframe for into : Dict[str,Any] The dictionary produced from the yfinance.info function n : int The number of similar companies to produce no_filter : bool True means that we do not filter based on market cap Returns ------- new_list : List[str, pd.DataFrame] A list of similar companies  "},{"id":533,"href":"/OpenBBTerminal/SDK/stocks/fa/splits/","title":"Splits","parent":"fa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.fa.splits(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get splits and reverse splits events. [Source: Yahoo Finance]\nParameters ---------- symbol: str Ticker to get forward and reverse splits Returns ------- pd.DataFrame: Dataframe of forward and reverse splits  Getting charts    stocks.fa.splits(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display splits and reverse splits events. [Source: Yahoo Finance]\nParameters ---------- symbol: str Stock ticker symbol export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":534,"href":"/OpenBBTerminal/SDK/stocks/fa/sust/","title":"Sust","parent":"fa","content":"Get underlying data    stocks.fa.sust(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get sustainability metrics from yahoo\nParameters ---------- symbol : str Stock ticker symbol Returns ------- pd.DataFrame Dataframe of sustainability metrics  "},{"id":535,"href":"/OpenBBTerminal/SDK/stocks/fa/website/","title":"Website","parent":"fa","content":"Get underlying data    stocks.fa.website(symbol: str) -\u0026gt; str    Gets website of company from yfinance\nParameters ---------- symbol: str Stock ticker symbol Returns ------- str Company we  "},{"id":536,"href":"/OpenBBTerminal/SDK/stocks/fa/yf_financials/","title":"Yf Financials","parent":"fa","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.fa.yf_financials(symbol: str, statement: str, ratios: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get cashflow statement for company\nParameters ---------- symbol : str Stock ticker symbol statement: str can be: cash-flow financials for Income balance-sheet ratios: bool Shows percentage change Returns ------- pd.DataFrame Dataframe of Financial statement  Getting charts    stocks.fa.yf_financials(symbol: str, statement: str, limit: int = 12, ratios: bool = False, plot: list = None, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display tickers balance sheet, income statement or cash-flow\nParameters ---------- symbol: str Stock ticker symbol statement: str can be: cash-flow financials for Income balance-sheet limit: int ratios: bool Shows percentage change plot: list List of row labels to plot export: str Format to export data  "},{"id":537,"href":"/OpenBBTerminal/SDK/stocks/gov/contracts/","title":"Contracts","parent":"gov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.gov.contracts(symbol: str, past_transaction_days: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Get government contracts for ticker [Source: quiverquant.com]\nParameters ---------- symbol: str Ticker to get congress trading data from past_transaction_days: int Number of days to get transactions for Returns ------- pd.DataFrame Most recent transactions by members of U.S. Congress  Getting charts    stocks.gov.contracts(symbol: str, past_transaction_days: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Show government contracts for ticker [Source: quiverquant.com]\nParameters ---------- symbol: str Ticker to get congress trading data from past_transaction_days: int Number of days to get transactions for raw: bool Flag to display raw data export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":538,"href":"/OpenBBTerminal/SDK/stocks/gov/government_trading/","title":"Government Trading","parent":"gov","content":"Get underlying data    stocks.gov.government_trading(gov_type: str = \u0026lsquo;congress\u0026rsquo;, symbol: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Returns the most recent transactions by members of government\nParameters ---------- gov_type: str Type of government data between: 'congress', 'senate', 'house', 'contracts', 'quarter-contracts' and 'corporate-lobbying' symbol : str Ticker symbol to get congress trading data from Returns ------- pd.DataFrame Most recent transactions by members of U.S. Congress  "},{"id":539,"href":"/OpenBBTerminal/SDK/stocks/gov/gtrades/","title":"Gtrades","parent":"gov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.gov.gtrades(symbol: str, gov_type: str = \u0026lsquo;congress\u0026rsquo;, past_transactions_months: int = 6) -\u0026gt; pandas.core.frame.DataFrame    Government trading for specific ticker [Source: quiverquant.com]\nParameters ---------- symbol: str Ticker symbol to get congress trading data from gov_type: str Type of government data between: congress, senate and house past_transactions_months: int Number of months to get transactions for Returns ------- pd.DataFrame DataFrame of tickers government trading  Getting charts    stocks.gov.gtrades(symbol: str, gov_type: str = \u0026lsquo;congress\u0026rsquo;, past_transactions_months: int = 6, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Government trading for specific ticker [Source: quiverquant.com]\nParameters ---------- symbol: str Ticker symbol to get congress trading data from gov_type: str Type of government data between: congress, senate and house past_transactions_months: int Number of months to get transactions for raw: bool Show raw output of trades export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":540,"href":"/OpenBBTerminal/SDK/stocks/gov/histcont/","title":"Histcont","parent":"gov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.gov.histcont(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get historical quarterly government contracts [Source: quiverquant.com]\nParameters ---------- symbol: str Ticker symbol to get congress trading data from Returns ------- pd.DataFrame Historical quarterly government contracts  Getting charts    stocks.gov.histcont(symbol: str, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Show historical quarterly government contracts [Source: quiverquant.com]\nParameters ---------- symbol: str Ticker symbol to get congress trading data from raw: bool Flag to display raw data export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":541,"href":"/OpenBBTerminal/SDK/stocks/gov/lastcontracts/","title":"Lastcontracts","parent":"gov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.gov.lastcontracts(past_transaction_days: int = 2) -\u0026gt; pandas.core.frame.DataFrame    Get last government contracts [Source: quiverquant.com]\nParameters ---------- past_transaction_days: int Number of days to look back Returns ------- pd.DataFrame DataFrame of government contracts  Getting charts    stocks.gov.lastcontracts(past_transaction_days: int = 2, limit: int = 20, sum_contracts: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Last government contracts [Source: quiverquant.com]\nParameters ---------- past_transaction_days: int Number of days to look back limit: int Number of contracts to show sum_contracts: bool Flag to show total amount of contracts given out. export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":542,"href":"/OpenBBTerminal/SDK/stocks/gov/lasttrades/","title":"Lasttrades","parent":"gov","content":"Get underlying data    stocks.gov.lasttrades(gov_type: str = \u0026lsquo;congress\u0026rsquo;, limit: int = -1, representative: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Get last government trading [Source: quiverquant.com]\nParameters ---------- gov_type: str Type of government data between: congress, senate and house limit: int Number of days to look back representative: str Specific representative to look at Returns ------- pd.DataFrame Last government trading  "},{"id":543,"href":"/OpenBBTerminal/SDK/stocks/gov/lobbying/","title":"Lobbying","parent":"gov","content":"Get underlying data    stocks.gov.lobbying(symbol: str, limit: int = 10) -\u0026gt; pandas.core.frame.DataFrame    Corporate lobbying details\nParameters ---------- symbol: str Ticker symbol to get corporate lobbying data from limit: int Number of events to show Returns ------- pd.DataFrame Dataframe with corporate lobbying data  "},{"id":544,"href":"/OpenBBTerminal/SDK/stocks/gov/qtrcontracts/","title":"Qtrcontracts","parent":"gov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.gov.qtrcontracts(analysis: str = \u0026lsquo;total\u0026rsquo;, limit: int = 5) -\u0026gt; pandas.core.frame.DataFrame    Analyzes quarterly contracts by ticker\nParameters ---------- analysis : str How to analyze. Either gives total amount or sorts by high/low momentum. limit : int, optional Number to return, by default 5 Returns ------- pd.DataFrame Dataframe with tickers and total amount if total selected.  Getting charts    stocks.gov.qtrcontracts(analysis: str = \u0026lsquo;total\u0026rsquo;, limit: int = 5, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Quarterly contracts [Source: quiverquant.com]\nParameters ---------- analysis: str Analysis to perform. Either 'total', 'upmom' 'downmom' limit: int Number to show raw: bool Flag to display raw data export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":545,"href":"/OpenBBTerminal/SDK/stocks/gov/topbuys/","title":"Topbuys","parent":"gov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.gov.topbuys(gov_type: str = \u0026lsquo;congress\u0026rsquo;, past_transactions_months: int = 6) -\u0026gt; pandas.core.frame.DataFrame    Get top buy government trading [Source: quiverquant.com]\nParameters ---------- gov_type: str Type of government data between: congress, senate and house past_transactions_months: int Number of months to get trading for Returns ------- pd.DataFrame DataFrame of top government buy trading  Getting charts    stocks.gov.topbuys(gov_type: str = \u0026lsquo;congress\u0026rsquo;, past_transactions_months: int = 6, limit: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Top buy government trading [Source: quiverquant.com]\nParameters ---------- gov_type: str Type of government data between: congress, senate and house past_transactions_months: int Number of months to get trading for limit: int Number of tickers to show raw: bool Display raw data export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":546,"href":"/OpenBBTerminal/SDK/stocks/gov/toplobbying/","title":"Toplobbying","parent":"gov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.gov.toplobbying() -\u0026gt; pandas.core.frame.DataFrame    Corporate lobbying details\nReturns ------- pd.DataFrame DataFrame of top corporate lobbying  Getting charts    stocks.gov.toplobbying(limit: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Top lobbying tickers based on total spent\nParameters ---------- limit: int Number of tickers to show raw: bool Show raw data export: Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":547,"href":"/OpenBBTerminal/SDK/stocks/gov/topsells/","title":"Topsells","parent":"gov","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.gov.topsells(gov_type: str = \u0026lsquo;congress\u0026rsquo;, past_transactions_months: int = 6) -\u0026gt; pandas.core.frame.DataFrame    Get top sell government trading [Source: quiverquant.com]\nParameters ---------- gov_type: str Type of government data between: congress, senate and house past_transactions_months: int Number of months to get trading for Returns ------- pd.DataFrame DataFrame of top government sell trading  Getting charts    stocks.gov.topsells(gov_type: str = \u0026lsquo;congress\u0026rsquo;, past_transactions_months: int = 6, limit: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Top sell government trading [Source: quiverquant.com]\nParameters ---------- gov_type: str Type of government data between: congress, senate and house past_transactions_months: int Number of months to get trading for limit: int Number of tickers to show raw: bool Display raw data export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":548,"href":"/OpenBBTerminal/SDK/stocks/ins/act/","title":"Act","parent":"ins","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ins.act(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get insider activity. [Source: Business Insider]\nParameters ---------- symbol : str Ticker symbol to get insider activity data from Returns ------- df_insider : pd.DataFrame Get insider activity data  Getting charts    stocks.ins.act(data: pandas.core.frame.DataFrame, symbol: str, start_date: str = \u0026lsquo;2019-10-22\u0026rsquo;, interval: str = \u0026lsquo;1440min\u0026rsquo;, limit: int = 10, raw: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display insider activity. [Source: Business Insider]\nParameters ---------- data: pd.DataFrame Stock dataframe symbol: str Due diligence ticker symbol start_date: str Start date of the stock data interval: str Stock data interval limit: int Number of latest days of inside activity raw: bool Print to console export: str Export dataframe data to csv,json,xlsx file external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":549,"href":"/OpenBBTerminal/SDK/stocks/ins/lins/","title":"Lins","parent":"ins","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ins.lins(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get last insider activity for a given stock ticker. [Source: Finviz]\nParameters ---------- symbol : str Stock ticker symbol pd.DataFrame Latest insider trading activity  Getting charts    stocks.ins.lins(symbol: str, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display insider activity for a given stock ticker. [Source: Finviz]\nParameters ---------- symbol : str Stock ticker symbol limit : int Number of latest insider activity to display export : str Export dataframe data to csv,json,xlsx file  "},{"id":550,"href":"/OpenBBTerminal/SDK/stocks/ins/print_insider_data/","title":"Print Insider Data","parent":"ins","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ins.print_insider_data(type_insider: str = \u0026lsquo;lcb\u0026rsquo;, limit: int = 10)    Print insider data\nParameters ---------- type_insider: str Insider type of data. Available types can be accessed through get_insider_types(). limit: int Limit of data rows to display  Getting charts    stocks.ins.print_insider_data(type_insider: str = \u0026lsquo;lcb\u0026rsquo;, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Print insider data\nParameters ---------- type_insider: str Insider type of data. Available types can be accessed through get_insider_types(). limit: int Limit of data rows to display export: str Export data format  "},{"id":551,"href":"/OpenBBTerminal/SDK/stocks/load/","title":"Load","parent":"Introduction to the Stocks Menu","content":"Get underlying data    stocks.load(symbol: str, start_date: datetime.datetime = None, interval: int = 1440, end_date: datetime.datetime = None, prepost: bool = False, source: str = \u0026lsquo;YahooFinance\u0026rsquo;, iexrange: str = \u0026lsquo;ytd\u0026rsquo;, weekly: bool = False, monthly: bool = False)    Load a symbol to perform analysis using the string above as a template. Optional arguments and their descriptions are listed above. The default source is, yFinance (https://pypi.org/project/yfinance/). Other sources: - AlphaVantage (https://www.alphavantage.co/documentation/) - IEX Cloud (https://iexcloud.io/docs/api/) - Eod Historical Data (https://eodhistoricaldata.com/financial-apis/) Please note that certain analytical features are exclusive to the specific source. To load a symbol from an exchange outside of the NYSE/NASDAQ default, use yFinance as the source and add the corresponding exchange to the end of the symbol. i.e. ‘BNS.TO’. Note this may be possible with other paid sources check their docs. BNS is a dual-listed stock, there are separate options chains and order books for each listing. Opportunities for arbitrage may arise from momentary pricing discrepancies between listings with a dynamic exchange rate as a second order opportunity in ForEx spreads. Find the full list of supported exchanges here: https://help.yahoo.com/kb/exchanges-data-providers-yahoo-finance-sln2310.html Certain analytical features, such as VWAP, require the ticker to be loaded as intraday using the ‘-i x’ argument. When encountering this error, simply reload the symbol using the interval argument. i.e. ‘load -t BNS -s YYYY-MM-DD -i 1 -p’ loads one-minute intervals, including Pre/After Market data, using the default source, yFinance. Certain features, such as the Prediction menu, require the symbol to be loaded as daily and not intraday. Parameters ---------- symbol: str Ticker to get data start_date: datetime Start date to get data from with interval: int Interval (in minutes) to get data 1, 5, 15, 30, 60 or 1440 end_date: datetime End date to get data from with prepost: bool Pre and After hours data source: str Source of data extracted iexrange: str Timeframe to get IEX data. weekly: bool Flag to get weekly data monthly: bool Flag to get monthly data Returns ------- df_stock_candidate: pd.DataFrame Dataframe of data  "},{"id":552,"href":"/OpenBBTerminal/SDK/stocks/options/chains/","title":"Chains","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.chains(symbol: str, expiry: str) -\u0026gt; pandas.core.frame.DataFrame    Display option chains [Source: Tradier]\u0026quot;\nParameters ---------- symbol : str Ticker to get options for expiry : str Expiration date in the form of \u0026quot;YYYY-MM-DD\u0026quot; Returns ------- chains: pd.DataFrame Dataframe with options for the given Symbol and Expiration date  Getting charts    stocks.options.chains(symbol: str, expiry: str, to_display: List[str] = None, min_sp: float = -1, max_sp: float = -1, calls_only: bool = False, puts_only: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display option chain\nParameters ---------- symbol: str Stock ticker symbol expiry: str Expiration date of option to_display: List[str] List of columns to display min_sp: float Min strike price to display max_sp: float Max strike price to display calls_only: bool Only display calls puts_only: bool Only display puts export: str Format to export file  "},{"id":553,"href":"/OpenBBTerminal/SDK/stocks/options/chains_yf/","title":"Chains Yf","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.chains_yf(symbol: str, expiry: str, min_sp: float = -1, max_sp: float = -1, calls: bool = True, puts: bool = True) -\u0026gt; pandas.core.frame.DataFrame    Get full option chains with calculated greeks\nParameters ---------- symbol: str Stock ticker symbol expiry: str Expiration date for chain in format YYY-mm-dd calls: bool Flag to get calls puts: bool Flag to get puts Returns ------- pd.DataFrame DataFrame of option chain. If both calls and puts  Getting charts    stocks.options.chains_yf(symbol: str, expiry: str, min_sp: float = -1, max_sp: float = -1, calls_only: bool = False, puts_only: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Display option chains for given ticker and expiration\nParameters ---------- symbol: str Stock ticker symbol expiry: str Expiration for option chain min_sp: float Min strike max_sp: float Max strike calls_only: bool Flag to get calls only puts_only: bool Flag to get puts only export: str Format to export data  "},{"id":554,"href":"/OpenBBTerminal/SDK/stocks/options/closing/","title":"Closing","parent":"options","content":"Get underlying data    stocks.options.closing(symbol: str) -\u0026gt; pandas.core.series.Series    Get closing prices for a given ticker\nParameters ---------- symbol : str The ticker symbol to get the price for Returns ---------- price : List[float] A list of closing prices for a ticker  "},{"id":555,"href":"/OpenBBTerminal/SDK/stocks/options/dividend/","title":"Dividend","parent":"options","content":"Get underlying data    stocks.options.dividend(symbol: str) -\u0026gt; pandas.core.series.Series    Gets option chain from yf for given ticker and expiration\nParameters ---------- symbol: str Ticker symbol to get options for Returns ------- chains: yf.ticker.Dividends Dividends  "},{"id":556,"href":"/OpenBBTerminal/SDK/stocks/options/dte/","title":"DTE","parent":"options","content":"Get underlying data    stocks.options.dte(date_value: str) -\u0026gt; int    Gets days to expiration from yfinance option\n"},{"id":557,"href":"/OpenBBTerminal/SDK/stocks/options/generate_data/","title":"Generate Data","parent":"options","content":"Get underlying data    stocks.options.generate_data(current_price: float, options: List[Dict[str, int]], underlying: int) -\u0026gt; Tuple[List[float], List[float], List[float]]    Gets x values, and y values before and after pre\n"},{"id":558,"href":"/OpenBBTerminal/SDK/stocks/options/grhist/","title":"Grhist","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.grhist(symbol: str, expiry: str, strike: float, chain_id: str = \u0026lsquo;\u0026rsquo;, put: bool = False) -\u0026gt; pandas.core.frame.DataFrame    Get histoical option greeks\nParameters ---------- symbol: str Stock ticker symbol expiry: str Option expiration date strike: float Strike price to look for chain_id: str OCC option symbol. Overwrites other inputs put: bool Is this a put option? Returns ------- df: pd.DataFrame Dataframe containing historical greeks  Getting charts    stocks.options.grhist(symbol: str, expiry: str, strike: float, greek: str = \u0026lsquo;Delta\u0026rsquo;, chain_id: str = \u0026lsquo;\u0026rsquo;, put: bool = False, raw: bool = False, limit: int = 20, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plots historical greeks for a given option. [Source: Syncretism]\nParameters ---------- symbol: str Stock ticker expiry: str Expiration date strike: float Strike price to consider greek: str Greek variable to plot chain_id: str OCC option chain. Overwrites other variables put: bool Is this a put option? raw: bool Print to console limit: int Number of rows to show in raw export: str Format to export data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":559,"href":"/OpenBBTerminal/SDK/stocks/options/hedge/add_hedge_option/","title":"Add Hedge Option","parent":"hedge","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.hedge.add_hedge_option(price: float = 100, implied_volatility: float = 20, strike: float = 120, days: float = 30, sign: int = 1) -\u0026gt; tuple    Determine the delta, gamma and vega value of the portfolio and/or options.\nParameters ---------- price: float The price. implied_volatility: float The implied volatility. strike: float The strike price. days: float The amount of days until expiration. Use annual notation thus a month would be 30 / 360. sign: int Whether you have a long (1) or short (-1) position Returns ------- delta: float gamma: float portfolio: float  Getting charts    stocks.options.hedge.add_hedge_option(price: float = 100, implied_volatility: float = 20, strike: float = 120, days: float = 30, sign: int = 1, chart=True)    Determine the delta, gamma and vega value of the portfolio and/or options and show them.\nParameters ---------- price: float The price. implied_volatility: float The implied volatility. strike: float The strike price. days: float The amount of days until expiration. Use annual notation thus a month would be 30 / 360. sign: int Whether you have a long (1) or short (-1) position Returns ------- delta: float gamma: float vega: float  "},{"id":560,"href":"/OpenBBTerminal/SDK/stocks/options/hedge/calc_delta/","title":"Calc Delta","parent":"hedge","content":"Get underlying data    stocks.options.hedge.calc_delta(asset_price: float = 100, asset_volatility: float = 20, strike_price: float = 120, time_to_expiration: float = 30, risk_free_rate: float = 0, sign: int = 1)    The first-order partial-derivative with respect to the underlying asset of the Black-Scholes equation is known as delta. Delta refers to how the option value changes when there is a change in the underlying asset price. Multiplying delta by a +-$1 change in the underlying asset, holding all other parameters constant, will give you the new value of the option. Delta will be positive for long call and short put positions, negative for short call and long put positions.\nParameters ---------- asset_price: int The price. asset_volatility: float The implied volatility. strike_price: float The strike price. time_to_expiration: float The amount of days until expiration. Use annual notation thus a month would be 30 / 360. risk_free_rate: float The risk free rate. sign: int Whether you have a long (1) or short (-1) position Returns ------- delta: float Returns the value for the delta.  "},{"id":561,"href":"/OpenBBTerminal/SDK/stocks/options/hedge/calc_gamma/","title":"Calc Gamma","parent":"hedge","content":"Get underlying data    stocks.options.hedge.calc_gamma(asset_price: float = 100, asset_volatility: float = 20, strike_price: float = 120, time_to_expiration: float = 30, risk_free_rate: float = 0)    The second-order partial-derivative with respect to the underlying asset of the Black-Scholes equation is known as gamma. Gamma refers to how the option’s delta changes when there is a change in the underlying asset price. Multiplying gamma by a +-$1 change in the underlying asset, holding all other parameters constant, will give you the new value of the option’s delta. Essentially, gamma is telling us the rate of change of delta given a +-1 change in the underlying asset price. Gamma is always positive for long positions and negative for short positions.\nParameters ---------- asset_price: int The price. asset_volatility: float The implied volatility. strike_price: float The strike price. time_to_expiration: float The amount of days until expiration. Use annual notation thus a month would be 30 / 360. risk_free_rate: float The risk free rate. Returns ------- gamma: float Returns the value for the gamma.  "},{"id":562,"href":"/OpenBBTerminal/SDK/stocks/options/hedge/calc_hedge/","title":"Calc Hedge","parent":"hedge","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.hedge.calc_hedge(portfolio_option_amount: float = 100, side: str = \u0026lsquo;Call\u0026rsquo;, greeks: dict = {\u0026lsquo;Portfolio\u0026rsquo;: {\u0026lsquo;Delta\u0026rsquo;: 1, \u0026lsquo;Gamma\u0026rsquo;: 9.1268e-05, \u0026lsquo;Vega\u0026rsquo;: 5.4661}, \u0026lsquo;Option A\u0026rsquo;: {\u0026lsquo;Delta\u0026rsquo;: 1, \u0026lsquo;Gamma\u0026rsquo;: 9.1268e-05, \u0026lsquo;Vega\u0026rsquo;: 5.4661}, \u0026lsquo;Option B\u0026rsquo;: {\u0026lsquo;Delta\u0026rsquo;: 1, \u0026lsquo;Gamma\u0026rsquo;: 9.1268e-05, \u0026lsquo;Vega\u0026rsquo;: 5.4661}}, sign: int = 1)    Determine the hedge position and the weights within each option and underlying asset to hold a neutral portfolio\nParameters ---------- portfolio_option_amount: float Number to show side: str Whether you have a Call or Put instrument greeks: dict Dictionary containing delta, gamma and vega values for the portfolio and option A and B. Structure is as follows: {'Portfolio': {'Delta': VALUE, 'Gamma': VALUE, 'Vega': VALUE}} etc sign: int Whether you have a long (1) or short (-1) position Returns ------- option A weight: float option B weight: float portfolio weight: float is_singular: boolean  Getting charts    stocks.options.hedge.calc_hedge(portfolio_option_amount: float = 100, side: str = \u0026lsquo;Call\u0026rsquo;, greeks: dict = {\u0026lsquo;Portfolio\u0026rsquo;: {\u0026lsquo;Delta\u0026rsquo;: 1, \u0026lsquo;Gamma\u0026rsquo;: 9.1268e-05, \u0026lsquo;Vega\u0026rsquo;: 5.4661}, \u0026lsquo;Option A\u0026rsquo;: {\u0026lsquo;Delta\u0026rsquo;: 1, \u0026lsquo;Gamma\u0026rsquo;: 9.1268e-05, \u0026lsquo;Vega\u0026rsquo;: 5.4661}, \u0026lsquo;Option B\u0026rsquo;: {\u0026lsquo;Delta\u0026rsquo;: 1, \u0026lsquo;Gamma\u0026rsquo;: 9.1268e-05, \u0026lsquo;Vega\u0026rsquo;: 5.4661}}, sign: int = 1, chart=True)    Determine the hedge position and the weights within each option and underlying asset to hold a neutral portfolio and show them\nParameters ---------- portfolio_option_amount: float Number to show side: str Whether you have a Call or Put instrument greeks: dict Dictionary containing delta, gamma and vega values for the portfolio and option A and B. Structure is as follows: {'Portfolio': {'Delta': VALUE, 'Gamma': VALUE, 'Vega': VALUE}} etc sign: int Whether you have a long (1) or short (-1) position Returns ------- A table with the neutral portfolio weights.  "},{"id":563,"href":"/OpenBBTerminal/SDK/stocks/options/hedge/calc_vega/","title":"Calc Vega","parent":"hedge","content":"Get underlying data    stocks.options.hedge.calc_vega(asset_price: float = 100, asset_volatility: float = 20, strike_price: float = 120, time_to_expiration: float = 30, risk_free_rate: float = 0)    The first-order partial-derivative with respect to the underlying asset volatility of the Black-Scholes equation is known as vega. Vega refers to how the option value changes when there is a change in the underlying asset volatility. Multiplying vega by a +-1% change in the underlying asset volatility, holding all other parameters constant, will give you the new value of the option. Vega will be positive for long positions and negative for short positions.\nParameters ---------- asset_price: int The price. asset_volatility: float The implied volatility. strike_price: float The strike price. time_to_expiration: float The amount of days until expiration. Use annual notation thus a month would be 30 / 360. risk_free_rate: float The risk free rate. Returns ------- vega: float Returns the value for the gamma.  "},{"id":564,"href":"/OpenBBTerminal/SDK/stocks/options/hist_ce/","title":"Hist Ce","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.hist_ce(symbol: str = \u0026lsquo;GME\u0026rsquo;, date: str = \u0026lsquo;2021-02-05\u0026rsquo;, call: bool = True, price: str = \u0026lsquo;90\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Historic prices for a specific option [chartexchange]\nParameters ---------- symbol : str Ticker symbol to get historical data from date : str Date as a string YYYYMMDD call : bool Whether to show a call or a put price : str Strike price for a specific option Returns ------- historical : pd.Dataframe Historic information for an option  Getting charts    stocks.options.hist_ce(symbol: str = \u0026lsquo;GME\u0026rsquo;, expiry: str = \u0026lsquo;2021-02-05\u0026rsquo;, call: bool = True, price: float = 90, limit: int = 10, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; None    Return raw stock data[chartexchange]\nParameters ---------- symbol : str Ticker symbol for the given option expiry : str The expiry of expiration, format \u0026quot;YYYY-MM-DD\u0026quot;, i.e. 2010-12-31. call : bool Whether the underlying asset should be a call or a put price : float The strike of the expiration limit : int Number of rows to show export : str Export data as CSV, JSON, XLSX external_axes: Optional[List[plt.Axes]] External axes (1 axis is expected in the list), by default None  "},{"id":565,"href":"/OpenBBTerminal/SDK/stocks/options/hist_tr/","title":"Hist Tr","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.hist_tr(symbol: str, expiry: str, strike: float = 0, put: bool = False, chain_id: Optional[str] = None) -\u0026gt; pandas.core.frame.DataFrame    Gets historical option pricing. This inputs either ticker, expiration, strike or the OCC chain ID and processes the request to tradier for historical premiums. Parameters ---------- symbol: str Stock ticker symbol expiry: str Option expiration date strike: int Option strike price put: bool Is this a put option? chain_id: Optional[str] OCC chain ID Returns ------- df_hist: pd.DataFrame Dataframe of historical option prices  Getting charts    stocks.options.hist_tr(symbol: str, expiry: str, strike: float = 0, put: bool = False, raw: bool = False, chain_id: str = None, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot historical option prices\nParameters ---------- symbol: str Stock ticker symbol expiry: str Expiry date of option strike: float Option strike price put: bool Is this a put option? raw: bool Print raw data chain_id: str OCC option symbol export: str Format of export file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":566,"href":"/OpenBBTerminal/SDK/stocks/options/info/","title":"Info","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.info(symbol: str)    Get info for a given ticker\nParameters ---------- symbol : str The ticker symbol to get the price for Returns ---------- price : float The info for a given ticker  Getting charts    stocks.options.info(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Scrapes Barchart.com for the options information\nParameters ---------- symbol: str Ticker symbol to get options info for export: str Format of export file  "},{"id":567,"href":"/OpenBBTerminal/SDK/stocks/options/last_price/","title":"Last Price","parent":"options","content":"Get underlying data    stocks.options.last_price(symbol: str)    Makes api request for last price\nParameters ---------- symbol: str Ticker symbol Returns ------- float: Last price  "},{"id":568,"href":"/OpenBBTerminal/SDK/stocks/options/option_chain/","title":"Option Chain","parent":"options","content":"Get underlying data    stocks.options.option_chain(symbol: str, expiry: str)    Gets option chain from yf for given ticker and expiration\nParameters ---------- symbol: str Ticker symbol to get options for expiry: str Date to get options for. YYYY-MM-DD Returns ------- chains: yf.ticker.Options Options chain  "},{"id":569,"href":"/OpenBBTerminal/SDK/stocks/options/option_expirations/","title":"Option Expirations","parent":"options","content":"Get underlying data    stocks.options.option_expirations(symbol: str)    Get available expiration dates for given ticker\nParameters ---------- symbol: str Ticker symbol to get expirations for Returns ------- dates: List[str] List of of available expirations  "},{"id":570,"href":"/OpenBBTerminal/SDK/stocks/options/pcr/","title":"Pcr","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.pcr(symbol: str, window: int = 30, start_date: str = \u0026lsquo;2021-10-25\u0026rsquo;) -\u0026gt; pandas.core.frame.DataFrame    Gets put call ratio over last time window [Source: AlphaQuery.com]\nParameters ---------- symbol: str Ticker symbol to look for window: int, optional Window to consider, by default 30 start_date: str, optional Start date to plot, by default last 366 days  Getting charts    stocks.options.pcr(symbol: str, window: int = 30, start_date: str = \u0026lsquo;2021-10-25\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display put call ratio [Source: AlphaQuery.com]\nParameters ---------- symbol : str Stock ticker symbol window : int, optional Window length to look at, by default 30 start_date : str, optional Starting date for data, by default (datetime.now() - timedelta(days=366)).strftime(\u0026quot;%Y-%m-%d\u0026quot;) export : str, optional Format to export data, by default \u0026quot;\u0026quot; external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":571,"href":"/OpenBBTerminal/SDK/stocks/options/price/","title":"Price","parent":"options","content":"Get underlying data    stocks.options.price(symbol: str) -\u0026gt; float    Get current price for a given ticker\nParameters ---------- symbol : str The ticker symbol to get the price for Returns ---------- price : float The price of the ticker  "},{"id":572,"href":"/OpenBBTerminal/SDK/stocks/options/process_chains/","title":"Process Chains","parent":"options","content":"Get underlying data    stocks.options.process_chains(response: requests.models.Response) -\u0026gt; pandas.core.frame.DataFrame    Function to take in the requests.get and return a DataFrame\nParameters ---------- response: requests.models.Response This is the response from tradier api. Returns ------- opt_chain: pd.DataFrame Dataframe with all available options  "},{"id":573,"href":"/OpenBBTerminal/SDK/stocks/options/screen/check_presets/","title":"Check Presets","parent":"screen","content":"Get underlying data    stocks.options.screen.check_presets(preset_dict: dict) -\u0026gt; str    Checks option screener preset values\nParameters ---------- preset_dict: dict Defined presets from configparser Returns ------- error: str String of all errors accumulated  "},{"id":574,"href":"/OpenBBTerminal/SDK/stocks/options/screen/screener_output/","title":"Screener Output","parent":"screen","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.screen.screener_output(preset: str) -\u0026gt; Tuple[pandas.core.frame.DataFrame, str]    Screen options based on preset filters\nParameters ---------- preset: str Chosen preset Returns ------- pd.DataFrame: DataFrame with screener data, or empty if errors str: String containing error message if supplied  Getting charts    stocks.options.screen.screener_output(preset: str, limit: int = 20, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; List    Print the output of screener\nParameters ---------- preset: str Chosen preset limit: int Number of randomly sorted rows to display export: str Format for export file Returns ------- List List of tickers screened  "},{"id":575,"href":"/OpenBBTerminal/SDK/stocks/options/unu/","title":"Unu","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.unu(limit: int = 100)    Get unusual option activity from fdscanner.com\nParameters ---------- limit: int Number to show Returns ------- df: pd.DataFrame Dataframe containing options information last_updated: pd.Timestamp Timestamp indicated when data was updated from website  Getting charts    stocks.options.unu(limit: int = 20, sortby: str = \u0026lsquo;Vol/OI\u0026rsquo;, ascend: bool = False, calls_only: bool = False, puts_only: bool = False, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Displays the unusual options table\nParameters ---------- limit: int Number of rows to show sortby: str Data column to sort on ascend: bool Whether to sort in ascend order calls_only : bool Flag to only show calls puts_only : bool Flag to show puts only export: str File type to export  "},{"id":576,"href":"/OpenBBTerminal/SDK/stocks/options/voi_yf/","title":"Voi Yf","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.voi_yf(symbol: str, expiry: str) -\u0026gt; pandas.core.frame.DataFrame    Plot volume and open interest\nParameters ---------- symbol: str Stock ticker symbol expiry: str Option expiration  Getting charts    stocks.options.voi_yf(symbol: str, expiry: str, min_sp: float = -1, max_sp: float = -1, min_vol: float = -1, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot volume and open interest\nParameters ---------- symbol: str Stock ticker symbol expiry: str Option expiration min_sp: float Min strike price max_sp: float Max strike price min_vol: float Min volume to consider export: str Format for exporting data external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":577,"href":"/OpenBBTerminal/SDK/stocks/options/vol_yf/","title":"Vol Yf","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.vol_yf(symbol: str, expiry: str) -\u0026gt; pandas.core.frame.DataFrame    Plot volume\nParameters ---------- symbol: str Ticker symbol expiry: str expiration date for options  Getting charts    stocks.options.vol_yf(symbol: str, expiry: str, min_sp: float = -1, max_sp: float = -1, calls_only: bool = False, puts_only: bool = False, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Plot volume\nParameters ---------- symbol: str Ticker symbol expiry: str expiration date for options min_sp: float Min strike to consider max_sp: float Max strike to consider calls_only: bool Show calls only puts_only: bool Show puts only export: str Format to export file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":578,"href":"/OpenBBTerminal/SDK/stocks/options/vsurf/","title":"Vsurf","parent":"options","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.options.vsurf(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Gets IV surface for calls and puts for ticker\nParameters ---------- symbol: str Stock ticker symbol to get Returns ------- pd.DataFrame Dataframe of DTE, Strike and IV  Getting charts    stocks.options.vsurf(symbol: str, export: str = \u0026lsquo;\u0026rsquo;, z: str = \u0026lsquo;IV\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display vol surface\nParameters ---------- symbol : str Ticker symbol to get surface for export : str Format to export data z : str The variable for the Z axis external_axes: Optional[List[plt.Axes]] External axes (1 axis is expected in the list), by default None  "},{"id":579,"href":"/OpenBBTerminal/SDK/stocks/options/x_values/","title":"X Values","parent":"options","content":"Get underlying data    stocks.options.x_values(current_price: float, options: List[Dict[str, int]]) -\u0026gt; List[float]    Generates different price values that need to be t\n"},{"id":580,"href":"/OpenBBTerminal/SDK/stocks/options/y_values/","title":"Y Values","parent":"options","content":"Get underlying data    stocks.options.y_values(base: float, price: float, options: List[Dict[Any, Any]], underlying: int) -\u0026gt; float    Generates y values for corresponding x v\n"},{"id":581,"href":"/OpenBBTerminal/SDK/stocks/process_candle/","title":"Process Candle","parent":"Introduction to the Stocks Menu","content":"Get underlying data    stocks.process_candle(data: pandas.core.frame.DataFrame) -\u0026gt; pandas.core.frame.DataFrame    Process DataFrame into candle style plot\nParameters ---------- data : DataFrame Stock dataframe. Returns ------- DataFrame A Panda's data frame with columns Open, High, Low, Close, Adj Close, Volume, date_id, OC-High, OC-Low.  "},{"id":582,"href":"/OpenBBTerminal/SDK/stocks/qa/capm_information/","title":"Capm Information","parent":"qa","content":"Get underlying data    stocks.qa.capm_information(symbol: str) -\u0026gt; Tuple[float, float]    Provides information that relates to the CAPM model\nParameters ---------- symbol : str A ticker symbol in string form Returns ------- beta : float The beta for a stock sys : float The systematic risk for a stock  "},{"id":583,"href":"/OpenBBTerminal/SDK/stocks/qa/fama_raw/","title":"Fama Raw","parent":"qa","content":"Get underlying data    stocks.qa.fama_raw() -\u0026gt; pandas.core.frame.DataFrame    Gets base Fama French data to calculate risk\nReturns ---------- fama : pd.DataFrame A data with fama french model information  "},{"id":584,"href":"/OpenBBTerminal/SDK/stocks/qa/historical_5/","title":"Historical 5","parent":"qa","content":"Get underlying data    stocks.qa.historical_5(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get 5 year monthly historical performance for a ticker with dividends filtered\nParameters ---------- symbol : str A ticker symbol in string form Returns ---------- data : pd.DataFrame A dataframe with historical information  "},{"id":585,"href":"/OpenBBTerminal/SDK/stocks/quote/","title":"Quote","parent":"Introduction to the Stocks Menu","content":"Get underlying data    stocks.quote(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Ticker quote\nParameters ---------- symbol : str Ticker  "},{"id":586,"href":"/OpenBBTerminal/SDK/stocks/screener/historical/","title":"Historical","parent":"screener","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.screener.historical(preset_loaded: str = \u0026lsquo;top_gainers\u0026rsquo;, limit: int = 10, start_date: str = \u0026lsquo;2022-04-29\u0026rsquo;, type_candle: str = \u0026lsquo;a\u0026rsquo;, normalize: bool = True)    View historical price of stocks that meet preset\nParameters ---------- preset_loaded: str Preset loaded to filter for tickers limit: int Number of stocks to display start_date: str Start date to display historical data, in YYYY-MM-DD format type_candle: str Type of candle to display normalize : bool Boolean to normalize all stock prices using MinMax Returns ------- pd.DataFrame Dataframe of the screener list[str] List of stocks bool Whether some random stock selection due to limitations  Getting charts    stocks.screener.historical(preset_loaded: str = \u0026lsquo;top_gainers\u0026rsquo;, limit: int = 10, start_date: str = \u0026lsquo;2022-04-29\u0026rsquo;, type_candle: str = \u0026lsquo;a\u0026rsquo;, normalize: bool = True, export: str = \u0026lsquo;\u0026rsquo;, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True) -\u0026gt; List[str]    View historical price of stocks that meet preset\nParameters ---------- preset_loaded: str Preset loaded to filter for tickers limit: int Number of stocks to display start_date: str Start date to display historical data, in YYYY-MM-DD format type_candle: str Type of candle to display normalize : bool Boolean to normalize all stock prices using MinMax export : str Export dataframe data to csv,json,xlsx file external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None Returns ------- list[str] List of stocks  "},{"id":587,"href":"/OpenBBTerminal/SDK/stocks/screener/screener_data/","title":"Screener Data","parent":"screener","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.screener.screener_data(preset_loaded: str = \u0026lsquo;top_gainers\u0026rsquo;, data_type: str = \u0026lsquo;overview\u0026rsquo;, limit: int = 10, ascend: bool = False)    Screener Overview\nParameters ---------- preset_loaded : str Loaded preset filter data_type : str Data type between: overview, valuation, financial, ownership, performance, technical limit : int Limit of stocks filtered with presets to print ascend : bool Ascended order of stocks filtered to print Returns ---------- pd.DataFrame Dataframe with loaded filtered stocks  Getting charts    stocks.screener.screener_data(loaded_preset: str = \u0026lsquo;top_gainers\u0026rsquo;, data_type: str = \u0026lsquo;overview\u0026rsquo;, limit: int = 10, ascend: bool = False, sortby: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True) -\u0026gt; List[str]    Screener one of the following: overview, valuation, financial, ownership, performance, technical.\nParameters ---------- loaded_preset: str Preset loaded to filter for tickers data_type : str Data type string between: overview, valuation, financial, ownership, performance, technical limit : int Limit of stocks to display ascend : bool Order of table to ascend or descend sortby: str Column to sort table by export : str Export dataframe data to csv,json,xlsx file Returns ------- List[str] List of stocks that meet preset criteria  "},{"id":588,"href":"/OpenBBTerminal/SDK/stocks/search/","title":"Search","parent":"Introduction to the Stocks Menu","content":"Get underlying data    stocks.search(query: str = \u0026lsquo;\u0026rsquo;, country: str = \u0026lsquo;\u0026rsquo;, sector: str = \u0026lsquo;\u0026rsquo;, industry: str = \u0026lsquo;\u0026rsquo;, exchange_country: str = \u0026lsquo;\u0026rsquo;, limit: int = 0, export: str = \u0026lsquo;') -\u0026gt; None    Search selected query for tickers.\nParameters ---------- query : str The search term used to find company tickers country: str Search by country to find stocks matching the criteria sector : str Search by sector to find stocks matching the criteria industry : str Search by industry to find stocks matching the criteria exchange_country: str Search by exchange country to find stock matching limit : int The limit of companies shown. export : str Export data  "},{"id":589,"href":"/OpenBBTerminal/SDK/stocks/sia/countries/","title":"Countries","parent":"sia","content":"Get underlying data    stocks.sia.countries(industry: str = \u0026lsquo;\u0026rsquo;, sector: str = \u0026lsquo;') -\u0026gt; list    Get all countries in Yahoo Finance data based on sector or industry. [Source: Finance Database]\nParameters ---------- industry : str Filter retrieved countries by industry sector : str Filter retrieved countries by sector Returns ------- list List of possible countries  "},{"id":590,"href":"/OpenBBTerminal/SDK/stocks/sia/cpci/","title":"Cpci","parent":"sia","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.sia.cpci(industry: str = \u0026lsquo;Internet Content \u0026amp; Information\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True) -\u0026gt; dict    Get number of companies per country in a specific industry (and specific market cap). [Source: Finance Database]\nParameters ---------- industry: str Select industry to get number of companies by each country mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges Returns ------- dict Dictionary of countries and number of companies in a specific sector  Getting charts    stocks.sia.cpci(industry: str = \u0026lsquo;Internet Content \u0026amp; Information\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True, export: str = \u0026lsquo;\u0026rsquo;, raw: bool = False, max_countries_to_display: int = 15, min_pct_to_display_country: float = 0.015, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display number of companies per country in a specific industry. [Source: Finance Database]\nParameters ---------- industry: str Select industry to get number of companies by each country mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges export: str Format to export data as raw: bool Output all raw data max_countries_to_display: int Maximum number of countries to display min_pct_to_display_country: float Minimum percentage to display country external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":591,"href":"/OpenBBTerminal/SDK/stocks/sia/cpcs/","title":"Cpcs","parent":"sia","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.sia.cpcs(sector: str = \u0026lsquo;Technology\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True) -\u0026gt; dict    Get number of companies per country in a specific sector (and specific market cap). [Source: Finance Database]\nParameters ---------- sector: str Select sector to get number of companies by each country mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges Returns ------- dict Dictionary of countries and number of companies in a specific sector  Getting charts    stocks.sia.cpcs(sector: str = \u0026lsquo;Technology\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True, export: str = \u0026lsquo;\u0026rsquo;, raw: bool = False, max_countries_to_display: int = 15, min_pct_to_display_country: float = 0.015, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display number of companies per country in a specific sector. [Source: Finance Database]\nParameters ---------- sector: str Select sector to get number of companies by each country mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges export: str Format to export data as raw: bool Output all raw data max_countries_to_display: int Maximum number of countries to display min_pct_to_display_country: float Minimum percentage to display country external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":592,"href":"/OpenBBTerminal/SDK/stocks/sia/cpic/","title":"Cpic","parent":"sia","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.sia.cpic(country: str = \u0026lsquo;United States\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True)    Get number of companies per industry in a specific country (and specific market cap). [Source: Finance Database]\nParameters ---------- country: str Select country to get number of companies by each industry mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges Returns ------- dict Dictionary of industries and number of companies in a specific country  Getting charts    stocks.sia.cpic(country: str = \u0026lsquo;United States\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True, export: str = \u0026lsquo;\u0026rsquo;, raw: bool = False, max_industries_to_display: int = 15, min_pct_to_display_industry: float = 0.015, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display number of companies per industry in a specific country. [Source: Finance Database]\nParameters ---------- country: str Select country to get number of companies by each industry mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges export: str Format to export data as raw: bool Output all raw data max_industries_to_display: int Maximum number of industries to display min_pct_to_display_industry: float Minimum percentage to display industry external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":593,"href":"/OpenBBTerminal/SDK/stocks/sia/cpis/","title":"Cpis","parent":"sia","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.sia.cpis(sector: str = \u0026lsquo;Technology\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True) -\u0026gt; dict    Get number of companies per industry in a specific sector (and specific market cap). [Source: Finance Database]\nParameters ---------- sector: str Select sector to get number of companies by each industry mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges Returns ------- dict Dictionary of industries and number of companies in a specific sector  Getting charts    stocks.sia.cpis(sector: str = \u0026lsquo;Technology\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True, export: str = \u0026lsquo;\u0026rsquo;, raw: bool = False, max_industries_to_display: int = 15, min_pct_to_display_industry: float = 0.015, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display number of companies per industry in a specific sector. [Source: Finance Database]\nParameters ---------- sector: str Select sector to get number of companies by each industry mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges export: str Format to export data as raw: bool Output all raw data max_industries_to_display: int Maximum number of industries to display min_pct_to_display_industry: float Minimum percentage to display industry external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":594,"href":"/OpenBBTerminal/SDK/stocks/sia/cps/","title":"Cps","parent":"sia","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.sia.cps(country: str = \u0026lsquo;United States\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True) -\u0026gt; dict    Get number of companies per sector in a specific country (and specific market cap). [Source: Finance Database]\nParameters ---------- country: str Select country to get number of companies by each sector mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges Returns ------- dict Dictionary of sectors and number of companies in a specific country  Getting charts    stocks.sia.cps(country: str = \u0026lsquo;United States\u0026rsquo;, mktcap: str = \u0026lsquo;Large\u0026rsquo;, exclude_exchanges: bool = True, export: str = \u0026lsquo;\u0026rsquo;, raw: bool = False, max_sectors_to_display: int = 15, min_pct_to_display_sector: float = 0.015, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    Display number of companies per sector in a specific country (and market cap). [Source: Finance Database]\nParameters ---------- country: str Select country to get number of companies by each sector mktcap: str Select market cap of companies to consider from Small, Mid and Large exclude_exchanges : bool Exclude international exchanges export: str Format to export data as raw: bool Output all raw data max_sectors_to_display: int Maximum number of sectors to display min_pct_to_display_sector: float Minimum percentage to display sector external_axes : Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":595,"href":"/OpenBBTerminal/SDK/stocks/sia/filter_stocks/","title":"Filter Stocks","parent":"sia","content":"Get underlying data    stocks.sia.filter_stocks(country: str = None, sector: str = None, industry: str = None, marketcap: str = \u0026lsquo;\u0026rsquo;, exclude_exchanges: bool = True) -\u0026gt; list    Filter stocks based on country, sector, industry, market cap and exclude exchanges. [Source: Finance Database]\nParameters ---------- country: str Search by country to find stocks matching the criteria. sector: str Search by sector to find stocks matching the criteria. industry: str Search by industry to find stocks matching the criteria. marketcap: str Select stocks based on the market cap. exclude_exchanges: bool When you wish to include different exchanges use this boolean. Returns ------- list List of filtered stocks  "},{"id":596,"href":"/OpenBBTerminal/SDK/stocks/sia/industries/","title":"Industries","parent":"sia","content":"Get underlying data    stocks.sia.industries(country: str = \u0026lsquo;\u0026rsquo;, sector: str = \u0026lsquo;') -\u0026gt; list    Get all industries in Yahoo Finance data based on country or sector. [Source: Finance Database]\nParameters ---------- country : str Filter retrieved industries by country sector : str Filter retrieved industries by sector Returns ------- list List of possible industries  "},{"id":597,"href":"/OpenBBTerminal/SDK/stocks/sia/maketcap/","title":"Maketcap","parent":"sia","content":"Get underlying data    stocks.sia.maketcap() -\u0026gt; list    Get all market cap division in Yahoo Finance data. [Source: Finance Database]\nReturns ------- list List of possible market caps  "},{"id":598,"href":"/OpenBBTerminal/SDK/stocks/sia/sectors/","title":"Sectors","parent":"sia","content":"Get underlying data    stocks.sia.sectors(industry: str = \u0026lsquo;\u0026rsquo;, country: str = \u0026lsquo;') -\u0026gt; list    Get all sectors in Yahoo Finance data based on country or industry. [Source: Finance Database]\nParameters ---------- industry : str Filter retrieved sectors by industry country : str Filter retrieved sectors by country Returns ------- list List of possible sectors  "},{"id":599,"href":"/OpenBBTerminal/SDK/stocks/sia/stocks_data/","title":"Stocks Data","parent":"sia","content":"Get underlying data    stocks.sia.stocks_data(symbols: List[str] = None, finance_key: str = \u0026lsquo;ncf\u0026rsquo;, stocks_data: dict = None, period: str = \u0026lsquo;annual\u0026rsquo;, symbol: str = \u0026lsquo;USD\u0026rsquo;)    Get stocks data based on a list of stocks and the finance key. The function searches for the correct financial statement automatically. [Source: StockAnalysis]\nParameters ---------- symbols: list A list of tickers that will be used to collect data for. finance_key: str The finance key used to search within the SA_KEYS for the correct name of item on the financial statement stocks_data : dict A dictionary that is empty on initialisation but filled once data is collected for the first time. period : str Whether you want annually, quarterly or trailing financial statements. symbol : str Choose in what currency you wish to convert each company's financial statement. Default is USD (US Dollars). Returns ------- dict Dictionary of filtered stocks data separated by financial statement  "},{"id":600,"href":"/OpenBBTerminal/SDK/stocks/ta/recom/","title":"Recom","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ta.recom(symbol: str, screener: str = \u0026lsquo;america\u0026rsquo;, exchange: str = \u0026lsquo;\u0026rsquo;, interval: str = \u0026lsquo;') -\u0026gt; pandas.core.frame.DataFrame    Get tradingview recommendation based on technical indicators\nParameters ---------- symbol : str Ticker symbol to get the recommendation from tradingview based on technical indicators screener : str Screener based on tradingview docs https://python-tradingview-ta.readthedocs.io/en/latest/usage.html exchange: str Exchange based on tradingview docs https://python-tradingview-ta.readthedocs.io/en/latest/usage.html interval: str Interval time to check technical indicators and correspondent recommendation Returns ------- df_recommendation: pd.DataFrame Dataframe of tradingview recommendations based on technical indicators  Getting charts    stocks.ta.recom(symbol: str, screener: str = \u0026lsquo;america\u0026rsquo;, exchange: str = \u0026lsquo;\u0026rsquo;, interval: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, chart=True)    Print tradingview recommendation based on technical indicators\nParameters ---------- symbol : str Ticker symbol to get tradingview recommendation based on technical indicators screener : str Screener based on tradingview docs https://python-tradingview-ta.readthedocs.io/en/latest/usage.html exchange: str Exchange based on tradingview docs https://python-tradingview-ta.readthedocs.io/en/latest/usage.html interval: str Interval time to check technical indicators and correspondent recommendation export: str Format of export file  "},{"id":601,"href":"/OpenBBTerminal/SDK/stocks/ta/rsp/","title":"Rsp","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ta.rsp(s_ticker: str = \u0026lsquo;') -\u0026gt; Tuple[pandas.core.frame.DataFrame]    Relative strength percentile [Source: https://github.com/skyte/relative-strength] Currently takes from https://github.com/soggyomelette/rs-log in order to get desired output\nParameters ---------- s_ticker : str Stock Ticker Returns ---------- pd.DataFrame Dataframe of stock percentile pd.Dataframe Dataframe of industry percentile pd.Dataframe Raw stock dataframe for export pd.Dataframe Raw industry dataframe for export  Getting charts    stocks.ta.rsp(s_ticker: str = \u0026lsquo;\u0026rsquo;, export: str = \u0026lsquo;\u0026rsquo;, tickers_show: bool = False, chart=True)    Display Relative Strength Percentile [Source: https://github.com/skyte/relative-strength]\nParameters ---------- s_ticker : str Stock ticker export : str Format of export file tickers_show : bool Boolean to check if tickers in the same industry as the stock should be shown  "},{"id":602,"href":"/OpenBBTerminal/SDK/stocks/ta/summary/","title":"Summary","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ta.summary(symbol: str) -\u0026gt; str    Get technical summary report provided by FinBrain\u0026rsquo;s API\nParameters ---------- symbol : str Ticker symbol to get the technical summary Returns ------- report:str technical summary report  Getting charts    stocks.ta.summary(symbol: str, chart=True)    Print technical summary report provided by FinBrain\u0026rsquo;s API\nParameters ---------- symbol: str Ticker symbol to get the technical summary  "},{"id":603,"href":"/OpenBBTerminal/SDK/stocks/ta/view/","title":"View","parent":"ta","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.ta.view(symbol: str) -\u0026gt; bytes    Get finviz image for given ticker\nParameters ---------- symbol: str Ticker symbol Returns ------- bytes Image in byte format  Getting charts    stocks.ta.view(symbol: str, external_axes: Optional[List[matplotlib.axes._axes.Axes]] = None, chart=True)    View finviz image for ticker\nParameters ---------- symbol: str Stock ticker symbol external_axes: Optional[List[plt.Axes]], optional External axes (1 axis is expected in the list), by default None  "},{"id":604,"href":"/OpenBBTerminal/SDK/stocks/th/all/","title":"All","parent":"th","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.th.all() -\u0026gt; pandas.core.frame.DataFrame    Get all exchanges.\nParameters ---------- Returns ------- pd.DataFrame All available exchanges  Getting charts    stocks.th.all(, chart=True)    Display all exchanges.\nParameters ----------  "},{"id":605,"href":"/OpenBBTerminal/SDK/stocks/th/check_if_open/","title":"Check if Open","parent":"th","content":"Get underlying data    stocks.th.check_if_open(bursa: pandas.core.frame.DataFrame, exchange: str) -\u0026gt; bool    Check if market open helper function\nParameters __________ bursa : pd.DataFrame pd.DataFrame of all exchanges exchange : str bursa pd.DataFrame index value for exchange Returns _______ bool If market is open  "},{"id":606,"href":"/OpenBBTerminal/SDK/stocks/th/closed/","title":"Closed","parent":"th","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.th.closed() -\u0026gt; pandas.core.frame.DataFrame    Get closed exchanges.\nParameters ---------- Returns ------- pd.DataFrame Currently closed exchanges  Getting charts    stocks.th.closed(, chart=True)    Display closed exchanges.\nParameters ----------  "},{"id":607,"href":"/OpenBBTerminal/SDK/stocks/th/exchange/","title":"Exchange","parent":"th","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.th.exchange(symbol: str) -\u0026gt; pandas.core.frame.DataFrame    Get current exchange open hours.\nParameters ---------- symbol : str Exchange symbol Returns ------- pd.DataFrame Exchange info  Getting charts    stocks.th.exchange(symbol: str, chart=True)    Display current exchange trading hours.\nParameters ---------- symbol : str Exchange symbol  "},{"id":608,"href":"/OpenBBTerminal/SDK/stocks/th/open/","title":"Open","parent":"th","content":"To obtain charts, make sure to add chart=True as the last parameter\nGet underlying data    stocks.th.open() -\u0026gt; pandas.core.frame.DataFrame    Get open exchanges.\nParameters ---------- Returns ------- pd.DataFrame Currently open exchanges  Getting charts    stocks.th.open(, chart=True)    Display open exchanges.\nParameters ----------  "},{"id":609,"href":"/OpenBBTerminal/SDK/stocks/tob/","title":"Tob","parent":"Introduction to the Stocks Menu","content":"Get underlying data    stocks.tob(symbol: str, exchange: str = \u0026lsquo;BZX\u0026rsquo;) -\u0026gt; Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]    Get top of book bid and ask for ticker on exchange [CBOE.com]\nParameters ---------- symbol: str Ticker to get exchange: str Exchange to look at. Can be `BZX`,`EDGX`, `BYX`, `EDGA` Returns ------- pd.DatatFrame Dataframe of Bids pd.DataFrame Dataframe of asks  "},{"id":610,"href":"/OpenBBTerminal/terminal/","title":"Terminal","parent":"OpenBB Terminal Documentation","content":" "},{"id":611,"href":"/OpenBBTerminal/terminal/alternative/","title":"Alternative","parent":"Terminal","content":"Investors utilize alternative data to analyze a company or investment that is not available through typical data sources (financial statements, SEC filings, management presentations, press releases, etc.). Traditional data sources do not provide investors with as accurate, timely, or granular insights and measurements into corporate performance as alternative data does. Increases in computing power and personal device usage have resulted in tremendous data production during the previous ten years. As a result, a slew of new businesses have sprung up to collect, clean, analyze, and interpret data in order to sell it as a product that might help investors make better decisions.\nAvailable commands    Covid     Cases     Deaths     Ov     Rates     Slopes       Oss     Rossidx     Rs     Sh     Tr       "},{"id":612,"href":"/OpenBBTerminal/terminal/alternative/covid/","title":"Covid","parent":"Alternative","content":"Available commands:    Cases     Deaths     Ov     Rates     Slopes     "},{"id":613,"href":"/OpenBBTerminal/terminal/alternative/covid/cases/","title":"Cases","parent":"Covid","content":"usage: cases [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] [-l LIMIT] Show historical cases for country.\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":614,"href":"/OpenBBTerminal/terminal/alternative/covid/deaths/","title":"Deaths","parent":"Covid","content":"sage: deaths [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] [-l LIMIT] Show historical deaths by country.\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":615,"href":"/OpenBBTerminal/terminal/alternative/covid/ov/","title":"Ov","parent":"Covid","content":"usage: ov [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] [-l LIMIT] Show historical cases and deaths by country.\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":616,"href":"/OpenBBTerminal/terminal/alternative/covid/rates/","title":"Rates","parent":"Covid","content":"usage: rates [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] [-l LIMIT] Show historical rates country.\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":617,"href":"/OpenBBTerminal/terminal/alternative/covid/slopes/","title":"Slopes","parent":"Covid","content":"usage: slopes [-d DAYS] [-a] [-t THRESHOLD] [-h] [--export {csv,json,xlsx}] [-l LIMIT] Show countries with highest slopes in cases.\noptional arguments: -d DAYS, --days DAYS Number of days back to look (default: 30) -a, --ascend Show in ascending order (default: False) -t THRESHOLD, --threshold THRESHOLD Threshold for total cases over period (default: 10000) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) 2022 Feb 14, 10:26 (✨) /alternative/covid/ $ slopes Highest Sloping Cases (Cases/Day) ┌────────────────┬───────────┐ │ Country │ Slope │ ├────────────────┼───────────┤ │ US │ 331073.67 │ ├────────────────┼───────────┤ │ France │ 278690.89 │ ├────────────────┼───────────┤ │ India │ 197265.42 │ ├────────────────┼───────────┤ │ Brazil │ 166945.38 │ ├────────────────┼───────────┤ │ Germany │ 145740.36 │ ├────────────────┼───────────┤ │ United Kingdom │ 121007.75 │ ├────────────────┼───────────┤ │ Russia │ 90106.71 │ ├────────────────┼───────────┤ │ Spain │ 87634.01 │ ├────────────────┼───────────┤ │ Turkey │ 82293.04 │ ├────────────────┼───────────┤ │ Japan │ 74577.78 │ └────────────────┴───────────┘ "},{"id":618,"href":"/OpenBBTerminal/terminal/alternative/oss/","title":"Oss","parent":"Alternative","content":"Available commands:    Rossidx     Rs     Sh     Tr     "},{"id":619,"href":"/OpenBBTerminal/terminal/alternative/oss/rossidx/","title":"Rossidx","parent":"Oss","content":"usage: rossidx [-s SORTBY [SORTBY {GitHub,Company,Country,City,Founded,Raised [$M],Stars,Forks,Stars AGR [%],Forks AGR [%]}]] [--descend] [--chart] [--growth] [-ct {stars,forks}] [-h] [--export EXPORT] [-l LIMIT]\nDisplay list of startups from ross index [Source: https://runacap.com/] Use \u0026ndash;chart to display chart and -t {stars,forks} to set chart type\noptional arguments: -s SORTBY [SORTBY ...], --sortby SORTBY [SORTBY {GitHub,Company,Country,City,Founded,Raised [$M],Stars,Forks,Stars AGR [%],Forks AGR [%]}] Sort startups by column (default: Stars AGR [%]) --descend Flag to sort in descending order (lowest first) (default: False) -c, --chart Flag to show chart (default: False) -g, --growth Flag to show growth chart (default: False) -t {stars,forks}, --chart-type {stars,forks} Chart type: {stars, forks} (default: stars) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":620,"href":"/OpenBBTerminal/terminal/alternative/oss/rs/","title":"Rs","parent":"Oss","content":"usage: rs [-h] [-r REPO] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] Display a repo summary [Source: https://api.github.com]\noptional arguments: -h, --help show help message (default: False) -r --repo Repository to search for star history. Format: org/repo, e.g., openbb-finance/openbbterminal --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":621,"href":"/OpenBBTerminal/terminal/alternative/oss/sh/","title":"Sh","parent":"Oss","content":"usage: sh [-h] [-r REPO] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] Display a repo star history [Source: https://api.github.com]\noptional arguments: -h, --help show help message (default: False) -r --repo Repository to search for star history. Format: org/repo, e.g., openbb-finance/openbbterminal --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":622,"href":"/OpenBBTerminal/terminal/alternative/oss/tr/","title":"Tr","parent":"Oss","content":"usage: tr [-h] [-c CATEGORIES] [-s {stars,forks}] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] [-l LIMIT] Display top repositories [Source: https://api.github.com]\noptional arguments: -c, --categories Filter by repo categories. If more than one separate with a comma: e.g., finance,investment. Default: None -s, --sortby Sort repos by {stars, forks}. Default: stars -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":623,"href":"/OpenBBTerminal/terminal/common/ba/bullbear/","title":"Bullbear","parent":"Introduction to the Behavioural Analysis","content":"usage: bullbear [-h] Shows the bull/bear sentiment for the loaded ticker based on last 30 messages on the board. Also prints the watchlist_count. Source: Stocktwits\noptional arguments: -h, --help show this help message (default: False) Example:\n2022 Feb 16, 10:07 (✨) /stocks/ba/ $ bullbear Watchlist count: 381324 Last 16 sentiment messages: Bullish 87.5% Bearish 12.5% "},{"id":624,"href":"/OpenBBTerminal/terminal/common/ba/getdd/","title":"Getdd","parent":"Introduction to the Behavioural Analysis","content":"usage: getdd [-l LIMIT] [-d DAYS] [-a] [-h] Print top stock\u0026rsquo;s due diligence from other users. [Source: Reddit]\noptional arguments: -l LIMIT, --limit LIMIT limit of posts to retrieve. -d DAYS, --days DAYS number of prior days to look for. -a, --all search through all flairs (apart from Yolo and Meme), otherwise we focus on specific flairs: DD, technical analysis, Catalyst, News, Advice, Chart -h, --help show this help message Example:\n2022 Feb 16, 10:18 (✨) /stocks/ba/ $ getdd -d 50 2022-02-15 17:51:11 - $ATVI free money even if MSFT deal falls through. https://old.reddit.com/r/wallstreetbets/comments/st8s1i/atvi_free_money_even_if_msft_deal_falls_through/ 2022-02-10 05:10:31 - PTON: The safest investment you can make https://old.reddit.com/r/stocks/comments/soycgc/pton_the_safest_investment_you_can_make/ 2022-02-09 01:47:49 - Why only retards are selling the (near) bottom on $FB and are about to get metacucked 🙊 https://old.reddit.com/r/wallstreetbets/comments/so19al/why_only_retards_are_selling_the_near_bottom_on/) 2022-02-08 02:53:43 - If You Cannot Beat Them, Join Them - Congress Trading \u0026amp; Retail Traders https://old.reddit.com/r/wallstreetbets/comments/sn90qs/if_you_cannot_beat_them_join_them_congress/ 2022-02-03 20:01:06 - Thoughts on only buying large market cap stocks (Top 100, 100 billion market cap+, and significant index weighting)? https://old.reddit.com/r/stocks/comments/sjsqhu/thoughts_on_only_buying_large_market_cap_stocks/ "},{"id":625,"href":"/OpenBBTerminal/terminal/common/ba/headlines/","title":"Headlines","parent":"Introduction to the Behavioural Analysis","content":"usage: headlines [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] FinBrain collects the news headlines from 15+ major financial news sources on a daily basis and analyzes them to generate sentiment scores for more than 4500 US stocks.FinBrain Technologies develops deep learning algorithms for financial analysis and prediction, which currently serves traders from more than 150 countries all around the world. [Source: https://finbrain.tech]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 10:20 (✨) /stocks/ba/ $ headlines FinBrain Ticker Sentiment ┏━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ Sentiment ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 2022-02-03 │ 0.107 │ ├────────────┼───────────┤ │ 2022-02-04 │ 0.354 │ ├────────────┼───────────┤ │ 2022-02-07 │ 0.129 │ ├────────────┼───────────┤ │ 2022-02-08 │ 0.173 │ ├────────────┼───────────┤ │ 2022-02-09 │ 0.187 │ ├────────────┼───────────┤ │ 2022-02-10 │ 0.161 │ ├────────────┼───────────┤ │ 2022-02-11 │ 0.311 │ ├────────────┼───────────┤ │ 2022-02-14 │ 0.174 │ ├────────────┼───────────┤ │ 2022-02-15 │ 0.275 │ ├────────────┼───────────┤ │ 2022-02-16 │ 0.329 │ └────────────┴───────────┘ "},{"id":626,"href":"/OpenBBTerminal/terminal/common/ba/hist/","title":"Hist","parent":"Introduction to the Behavioural Analysis","content":"usage: hist [-s START] [-e END] [-n NUMBER] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] [-l LIMIT] Plot historical sentiment data of RHI and AHI by hour. Source: [Sentiment Investor]\nAHI (Absolute Hype Index)    AHI is a measure of how much people are talking about a stock on social media. It is calculated by dividing the total number of mentions for the chosen stock on a social network by the mean number of mentions any stock receives on that social medium.\nRHI (Relative Hype Index)    RHI is a measure of whether people are talking about a stock more or less than usual, calculated by dividing the mean AHI for the past day by the mean AHI for for the past week for that stock.\noptional arguments: -s START, --start START The starting date (format YYYY-MM-DD) of the stock. Default: 7 days ago (default: 2022-02-09) -e END, --end END The ending date (format YYYY-MM-DD) of the stock. Default: today (default: 2022-02-16) -n NUMBER, --number NUMBER Number of results returned from Sentiment Investor. Default: 100 (default: 100) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) Example:\n2022 Feb 16, 10:23 (✨) /stocks/ba/ $ load TSLA Loading Daily TSLA stock with starting period 2019-02-11 for analysis. Datetime: 2022 Feb 16 10:23 Timezone: America/New_York Currency: USD Market: CLOSED 2022 Feb 16, 10:23 (✨) /stocks/ba/ $ hist "},{"id":627,"href":"/OpenBBTerminal/terminal/common/ba/infer/","title":"Infer","parent":"Introduction to the Behavioural Analysis","content":"usage: infer [-l LIMIT] [-h] [--export {csv,json,xlsx}] Displays a quick sentiment inference from last tweets that contain the ticker. This model splits the text into character-level tokens and uses vader sentiment analysis. Source: https://Twitter.com\noptional arguments: -l LIMIT, --limit LIMIT limit of latest tweets to infer from. (default: 100) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 19, 13:05 (✨) /stocks/ba/ $ infer From: 2022-02-19 17:08:20 To: 2022-02-19 18:04:18 100 tweets were analyzed. Frequency of approx 1 tweet every 34 seconds. The summed compound sentiment of AAPL is: 13.2 The average compound sentiment of AAPL is: 0.13 Of the last 100 tweets, 45.00 % had a higher positive sentiment Of the last 100 tweets, 18.00 % had a higher negative sentiment "},{"id":628,"href":"/OpenBBTerminal/terminal/common/ba/interest/","title":"Interest","parent":"Introduction to the Behavioural Analysis","content":"usage: interest [-s START] [-w WORDS] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Plot interest over time of words/sentences versus stock price. [Source: Google]\noptional arguments: -s START, --start START starting date (format YYYY-MM-DD) of interest (default: 2020-03-08) -w WORDS, --words WORDS Select multiple sentences/words separated by commas. E.g. COVID,WW3,NFT (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":629,"href":"/OpenBBTerminal/terminal/common/ba/mentions/","title":"Mentions","parent":"Introduction to the Behavioural Analysis","content":"usage: mentions [-s START] [-h] Uses Google metrics to plot ticker mentions over time.\noptional arguments: -s START, --start START starting date (format YYYY-MM-DD) from when we are interested in stock's mentions. (default: 2020-09-15 00:00:00) -h, --help show this help message (default: False) "},{"id":630,"href":"/OpenBBTerminal/terminal/common/ba/messages/","title":"Messages","parent":"Introduction to the Behavioural Analysis","content":"usage: messages [-t TICKER] [-l N_LIM] [-h] Show the last posts for a ticker. Source: https://Stocktwits.com\noptional arguments: -t TICKER, --ticker TICKER get board messages from this ticker. (default: AAPL) -l N_LIM, --limit N_LIM limit messages shown. (default: 30) -h, --help show this help message (default: False) "},{"id":631,"href":"/OpenBBTerminal/terminal/common/ba/popular/","title":"Popular","parent":"Introduction to the Behavioural Analysis","content":"usage: popular [-l LIMIT] [-n NUM] [-s S_SUBREDDIT] [-h] The current popular tickers on Reddit\noptional arguments: -l LIMIT, --limit LIMIT limit of top tickers to retrieve (default: 10) -n NUM, --num NUM number of posts retrieved per sub reddit. (default: 50) -s S_SUBREDDIT, --sub S_SUBREDDIT subreddits to look for tickers, e.g. pennystocks,stocks. Default: pennystocks, RobinHoodPennyStocks, Daytrading, StockMarket, stocks, investing, wallstreetbets (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 10:31 (✨) /stocks/ba/ $ popular Search for latest tickers for 50 'Superstonk' posts 217 potential tickers found. Search for latest tickers for 50 'pennystocks' posts 107 potential tickers found. Search for latest tickers for 50 'RobinHoodPennyStocks' posts 7 potential tickers found. Search for latest tickers for 50 'Daytrading' posts 56 potential tickers found. Search for latest tickers for 50 'StockMarket' posts 77 potential tickers found. Search for latest tickers for 50 'stocks' posts 97 potential tickers found. Search for latest tickers for 50 'investing' posts 37 potential tickers found. Search for latest tickers for 50 'wallstreetbets' posts 31 potential tickers found. The following TOP 10 tickers have been mentioned: ┏━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Mentions ┃ Ticker ┃ Company ┃ Sector ┃ Price ┃ Change ┃ Perf Month ┃ URL ┃ ┡━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ 57 │ GME │ GameStop Corp. │ Consumer Cyclical │ 129.34 │ 2.52% │ 8.15% │ https://finviz.com/quote.ashx?t=GME │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 40 │ POST │ Post Holdings, Inc. │ Consumer Defensive │ 109.14 │ -0.18% │ -7.18% │ https://finviz.com/quote.ashx?t=POST │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 10 │ SPY │ Financial │ Exchange Traded Fund │ 442.48 │ -0.81% │ -4.01% │ https://finviz.com/quote.ashx?t=SPY │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 8 │ QQQ │ Financial │ Exchange Traded Fund │ 351.15 │ -1.40% │ -6.28% │ https://finviz.com/quote.ashx?t=QQQ │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 6 │ VTI │ Vanguard Index Funds - Vanguard Total Stock Market ETF │ Financial │ 224.13 │ -0.86% │ -3.81% │ https://finviz.com/quote.ashx?t=VTI │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 5 │ AAPL │ Apple Inc. │ Technology │ 170.53 │ -1.31% │ -0.16% │ https://finviz.com/quote.ashx?t=AAPL │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 5 │ ESG │ Financial │ Exchange Traded Fund │ 107.88 │ -0.65% │ -4.64% │ https://finviz.com/quote.ashx?t=ESG │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 5 │ SHOP │ Shopify Inc. │ Technology │ 728.52 │ -18.10% │ -19.35% │ https://finviz.com/quote.ashx?t=SHOP │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 4 │ AMD │ Advanced Micro Devices, Inc. │ Technology │ 117.21 │ -3.51% │ -11.26% │ https://finviz.com/quote.ashx?t=AMD │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 4 │ NVDA │ NVIDIA Corporation │ Technology │ 258.61 │ -2.39% │ -1.66% │ https://finviz.com/quote.ashx?t=NVDA │ ├──────────┼────────┼────────────────────────────────────────────────────────┼──────────────────────┼────────┼─────────┼────────────┼──────────────────────────────────────┤ │ 3 │ RESN │ Resonant Inc. │ Technology │ 4.35 │ -1.01% │ 185.06% │ https://finviz.com/quote.ashx?t=RESN │ └──────────┴────────┴────────────────────────────────────────────────────────┴──────────────────────┴────────┴─────────┴────────────┴──────────────────────────────────────┘ "},{"id":632,"href":"/OpenBBTerminal/terminal/common/ba/queries/","title":"Queries","parent":"Introduction to the Behavioural Analysis","content":"usage: queries [-l LIMIT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Print top related queries with this stock\u0026rsquo;s query. [Source: Google]\noptional arguments: -l LIMIT, --limit LIMIT limit of top related queries to print. (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 10:38 (✨) /stocks/ba/ $ queries Top AMZN's related queries ┏━━━━━━━━━━━━━━━━━━┳━━━━━━━┓ ┃ query ┃ value ┃ ┡━━━━━━━━━━━━━━━━━━╇━━━━━━━┩ │ amzn stock │ 100% │ ├──────────────────┼───────┤ │ amzn price │ 31% │ ├──────────────────┼───────┤ │ amzn stock price │ 26% │ ├──────────────────┼───────┤ │ aapl │ 25% │ ├──────────────────┼───────┤ │ tsla │ 18% │ ├──────────────────┼───────┤ │ aapl stock │ 15% │ ├──────────────────┼───────┤ │ fb stock │ 12% │ ├──────────────────┼───────┤ │ msft │ 12% │ ├──────────────────┼───────┤ │ tsla stock │ 12% │ ├──────────────────┼───────┤ │ goog │ 9% │ └──────────────────┴───────┘ "},{"id":633,"href":"/OpenBBTerminal/terminal/common/ba/redditsent/","title":"Redditsent","parent":"Introduction to the Behavioural Analysis","content":"usage: redditsent [-s {relevance,hot,top,new,comments}] [-c COMPANY] [--subreddits SUBREDDITS] [-l LIMIT] [-t {hour,day,week,month,year,all}] [-f] [-g] [-h] [--export EXPORT] Determine general Reddit sentiment about a ticker. [Source: Reddit]\noptional arguments: -s {relevance,hot,top,new,comments}, --sort {relevance,hot,top,new,comments} search sorting type -c COMPANY, --company COMPANY explicit name of company to search for, will override ticker symbol --subreddits SUBREDDITS comma-separated list of subreddits to search -l LIMIT, --limit LIMIT how many posts to gather from each subreddit -t {hour,day,week,month,year,all}, --time {hour,day,week,month,year,all} time period to get posts from -- all, year, month, week, or day; defaults to week --full enable comprehensive search -g, --graphic display graphic -d, --display Print table of sentiment values -h, --help show this help message --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg Example:\nredditsent -c Google --subreddits tech,stocks --full Searching through subreddits for posts. 100%|█████████████████████████████████████████████████████████████████████████| 2/2 [00:01\u0026lt;00:00, 1.84it/s] Analyzing each post... 100%|███████████████████████████████████████████████████████████████████████| 10/10 [00:04\u0026lt;00:00, 2.07it/s] Sentiment Analysis for Google is 0.7552 "},{"id":634,"href":"/OpenBBTerminal/terminal/common/ba/regions/","title":"Regions","parent":"Introduction to the Behavioural Analysis","content":"usage: regions [-l LIMIT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Plot bars of regions based on stock\u0026rsquo;s interest. [Source: Google]\noptional arguments: -l LIMIT, --limit LIMIT limit of regions to plot that show highest interest. (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":635,"href":"/OpenBBTerminal/terminal/common/ba/rise/","title":"Rise","parent":"Introduction to the Behavioural Analysis","content":"usage: rise [-l LIMIT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Print top rising related queries with this stock\u0026rsquo;s query. [Source: Google]\noptional arguments: -l LIMIT, --limit LIMIT limit of top rising related queries to print. (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 10:40 (✨) /stocks/ba/ $ rise Top rising AAPL's related queries ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━┓ ┃ query ┃ value ┃ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━┩ │ nio stock │ 227850 │ ├─────────────────┼────────┤ │ nio │ 183950 │ ├─────────────────┼────────┤ │ pltr │ 103100 │ ├─────────────────┼────────┤ │ pltr stock │ 82800 │ ├─────────────────┼────────┤ │ mrna stock │ 75050 │ ├─────────────────┼────────┤ │ zm stock │ 67850 │ ├─────────────────┼────────┤ │ nio stock price │ 64000 │ ├─────────────────┼────────┤ │ zm │ 63500 │ ├─────────────────┼────────┤ │ bynd │ 61450 │ ├─────────────────┼────────┤ │ bynd stock │ 47450 │ └─────────────────┴────────┘ "},{"id":636,"href":"/OpenBBTerminal/terminal/common/ba/sentiment/","title":"Sentiment","parent":"Introduction to the Behavioural Analysis","content":"usage: sentiment [-l LIMIT] [-d N_DAYS_PAST] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Plot in-depth sentiment predicted from tweets from last days that contain pre-defined ticker. [Source: Twitter]\noptional arguments: -l LIMIT, --limit LIMIT limit of tweets to extract per hour. (default: 15) -d N_DAYS_PAST, --days N_DAYS_PAST number of days in the past to extract tweets. (default: 6) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 19, 13:16 (✨) /stocks/ba/ $ sentiment From 2022-02-19 retrieving 360 tweets (15 tweets/hour) From 2022-02-18 retrieving 360 tweets (15 tweets/hour) From 2022-02-17 retrieving 360 tweets (15 tweets/hour) From 2022-02-16 retrieving 360 tweets (15 tweets/hour) From 2022-02-15 retrieving 360 tweets (15 tweets/hour) From 2022-02-14 retrieving 360 tweets (15 tweets/hour) From 2022-02-13 retrieving 360 tweets (15 tweets/hour) "},{"id":637,"href":"/OpenBBTerminal/terminal/common/ba/snews/","title":"Snews","parent":"Introduction to the Behavioural Analysis","content":"usage: snews [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Display stock price and headlines sentiment using VADER model over time. [Source: Finnhub]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":638,"href":"/OpenBBTerminal/terminal/common/ba/spac/","title":"Spac","parent":"Introduction to the Behavioural Analysis","content":"usage: spac [-l N_LIMIT] [-h] Show other users SPACs announcement. [Source: Reddit]\noptional arguments: -l N_LIMIT, --limit N_LIMIT limit of posts with SPACs retrieved. (default: 5) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 10:42 (✨) /stocks/ba/ $ spac 2022-02-15 22:31:56 - 2020 vs 2021 https://old.reddit.com/r/wallstreetbets/comments/stfcdu/2020_vs_2021/ 2022-02-15 20:05:35 - Calls on the “W” this week should print…Wynn and Walmart calls baby.. https://old.reddit.com/r/wallstreetbets/comments/stbz5h/calls_on_the_w_this_week_should_printwynn_and/ 2022-02-13 18:09:23 - APEX Clearing, Peak 6, a power couple, poker and a failed SPAC. https://old.reddit.com/r/Superstonk/comments/srovzk/apex_clearing_peak_6_a_power_couple_poker_and_a/ 2022-02-11 19:30:21 - SPAC founders DO get 20% of hundreds of millions in stock for their 25k investment. And the par value for shares is so low, some fuckery can be done! https://old.reddit.com/r/Superstonk/comments/sq7hcz/spac_founders_do_get_20_of_hundreds_of_millions/ 2022-02-11 15:16:40 - In Q4 Citadel Advisors LLC bought 6.39% of FTCV - the SPAC that eToro will merge with in order to go public. https://old.reddit.com/r/Superstonk/comments/sq1qv8/in_q4_citadel_advisors_llc_bought_639_of_ftcv_the/ The following stock tickers have been mentioned more than once across the previous SPACs: 3 GME, 2 POST, 2 FTCV "},{"id":639,"href":"/OpenBBTerminal/terminal/common/ba/spacc/","title":"Spacc","parent":"Introduction to the Behavioural Analysis","content":"usage: spacc [-l N_LIMIT] [-p] [-h] Print other users SPACs announcements under subreddit \u0026lsquo;SPACs\u0026rsquo;. [Source: Reddit]\noptional arguments: -l N_LIMIT, --limit N_LIMIT limit of posts with SPACs retrieved (default: 10) -p, --popular popular flag, if true the posts retrieved are based on score rather than time (default: False) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 10:43 (✨) /stocks/ba/ $ spacc 2022-02-16 11:35:01 - I scraped r/SPACs for the top ticker mentions in the last 24H. Here are the results (Wednesday February 16, 2022) https://old.reddit.com/r/SPACs/comments/sttsnl/i_scraped_rspacs_for_the_top_ticker_mentions_in/ 2022-02-16 09:26:19 - PPGH Gogoro confirms that it is expected to list overseas in the first quarter of this year https://old.reddit.com/r/SPACs/comments/strs9m/ppgh_gogoro_confirms_that_it_is_expected_to_list/ 2022-02-16 08:00:16 - Announcements x Daily Discussion for Wednesday, February 16, 2022 https://old.reddit.com/r/SPACs/comments/stqhci/announcements_x_daily_discussion_for_wednesday/ 2022-02-15 15:10:40 - Did IBKR resolve my SPAC redemptions wrongly? https://old.reddit.com/r/SPACs/comments/st52xb/did_ibkr_resolve_my_spac_redemptions_wrongly/ The following stock tickers have been mentioned more than once across the previous SPACs: 8 CCAC, 6 IBKR, 3 CLBT, 3 SLDP, 2 VIAC, 2 CND "},{"id":640,"href":"/OpenBBTerminal/terminal/common/ba/stalker/","title":"Stalker","parent":"Introduction to the Behavioural Analysis","content":"usage: stalker [-u S_USER] [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print up to the last 30 messages of a user. [Source: Stocktwits]\noptional arguments: -u S_USER, --user S_USER username. (default: Newsfilter) -l LIMIT, --limit LIMIT limit messages shown. (default: 30) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 10:44 (✨) /stocks/ba/ $ stalker ------------------------------------------------------------------------------ 2022-02-16 15:44:24 $APSI Form 8-K: On February 14, 2022, Aqua Power Systems acquired a digital asset commonly referred to as “land” within the Sandbox metaverse. The Sandbox is a decentralized, community-driven gaming e.. https://newsfilter.io/a/077c80e3595e23f3a9adf089f24220d1 ------------------------------------------------------------------------------ 2022-02-16 15:44:04 $ACT $GNW Increase in Long-Term Care Costs in Wisconsin Mirror National Trends; Labor Market Shifts and Continued COVID-19 Pressure Affect Future Costs https://newsfilter.io/a/acd6951639a15b873ff29dfe333c495e ------------------------------------------------------------------------------ 2022-02-16 15:43:44 $SYBT 2,571 shares acquired by Croce Michael (Executive Vice President), reported in a new form 4 filed with the SEC https://newsfilter.io/a/a9b224c7a3427af2d28a7d5482c2501a ------------------------------------------------------------------------------ 2022-02-16 15:43:30 Thinking about trading options or stock in Roblox, Meta, Block, Trade Desk, or Devon Energy? $DVN $FB $RBLX $SQ $TTD https://newsfilter.io/a/b7000be8e8b35ededc2abe4c246cd19a ------------------------------------------------------------------------------ 2022-02-16 15:43:08 $GRRB $338,254.00 of shares acquired by Schwiers James B (President \u0026amp;amp; COO), reported in a new form 4 filed with the SEC https://newsfilter.io/a/327d924ef4c507727b08b5f4989b1bd3 ------------------------------------------------------------------------------ 2022-02-16 15:42:07 $ARLP 794 shares acquired by Cantrell Brian L (Senior VP and CFO), reported in a new form 4 filed with the SEC https://newsfilter.io/a/0310350cc25f4d15959334893bd916dc ------------------------------------------------------------------------------ 2022-02-16 15:42:01 $ACT $GNW Increase in Long-Term Care Costs in Texas Mirror National Trends; Labor Market Shifts and Continued COVID-19 Pressure Affect Future Costs https://newsfilter.io/a/e86d458d9e48cacd03bb0fc4ed9031aa ------------------------------------------------------------------------------ 2022-02-16 15:41:26 $PDLB Form 3/A (initial statement of beneficial ownership of securities) filed with the SEC https://newsfilter.io/a/ec79f2f0558259465e6ed6be37208891 ------------------------------------------------------------------------------ 2022-02-16 15:40:54 $PDLB filed 2 new form 3/A (initial statement of beneficial ownership of securities) with the SEC in the last 2 minutes. 1. filing: https://newsfilter.io/a/d1c358598d5b7d9917f135004753dd3c 2. filing: https://newsfilter.io/a/e12fd3d79f67fe97b0349ebcec497594 ------------------------------------------------------------------------------ 2022-02-16 15:40:42 $ZNTE Form DEFA14A (additional definitive proxy soliciting materials and rule 14(a)(12) material) filed with the SEC https://newsfilter.io/a/81a6d11a7d635b22d0b63d97724877ba ------------------------------------------------------------------------------ 2022-02-16 15:40:08 Thinking about buying stock in Team, ViacomCBS, Kaival Brands, Ericsson, or Barrick Gold? $ERIC $GOLD $KAVL $TISI $VIAC https://newsfilter.io/a/587588716a671414014bf779eab21059 ------------------------------------------------------------------------------ 2022-02-16 15:40:07 Thinking about buying stock in Vinco Ventures, SoFi Technologies, Ford, Vonage, or BP? $BBIG $BP $F $SOFI $VG https://newsfilter.io/a/385fbe647e5e9ef2c9328bf3a9fbc9b6 ------------------------------------------------------------------------------ 2022-02-16 15:40:04 $ACT $GNW Increase in Long-Term Care Costs in Tennessee Mirror National Trends; Labor Market Shifts and Continued COVID-19 Pressure Affect Future Costs https://newsfilter.io/a/f0544ef5b76170ad50bc8359bac658e2 ------------------------------------------------------------------------------ 2022-02-16 15:39:54 $FTRP Field Trip Health Posts 330% YoY Increase In Q3 Revenue https://newsfilter.io/a/e2118ae4f28181fa49047b865af0ef41 ------------------------------------------------------------------------------ 2022-02-16 15:39:54 $KHC Kraft Heinz Stock Gains On Q4 Earnings Beat https://newsfilter.io/a/4a57861cd3455555baa7cb88705225c5 ------------------------------------------------------------------------------ 2022-02-16 15:39:54 $VIAC $CMCSA ViacomCBS Rebrands As Paramount: What You Need To Know https://newsfilter.io/a/1dee0b7add2966c50b08a6f213e69a4d ------------------------------------------------------------------------------ 2022-02-16 15:38:56 $ABNB Truist Securities analyst Naved Khan maintains Airbnb with a Hold and raises the price target from $180 to $190. ------------------------------------------------------------------------------ 2022-02-16 15:38:01 $ACT $GNW Change in Long-Term Care Costs in South Dakota Mixed; Labor Market Shifts and Continued COVID-19 Pressure Affect Future Costs https://newsfilter.io/a/157e15e71e3872ce73d3401098f3f855 ------------------------------------------------------------------------------ 2022-02-16 15:36:04 $ACT $GNW Increase in Long-Term Care Costs in Oklahoma Mirror National Trends; Labor Market Shifts and Continued COVID-19 Pressure Affect Future Costs https://newsfilter.io/a/ad6f8e78a059110c0837d6eef45c8955 ------------------------------------------------------------------------------ 2022-02-16 15:35:42 $ZNTE Form 8-K: Regulation FD Disclosure. As previously announced, Zanite Acquisition Corp. entered into a Business Combination Agreement with Embraer S.A. Embraer Aircraft Holding and EVE UAM, dated .. https://newsfilter.io/a/915ff8502b8a5c00b4664293ab6806ab ------------------------------------------------------------------------------ 2022-02-16 15:35:30 $HON Honeywell International was awarded a new government contract \u0026amp;quot;Repair of NIIN 014601334\u0026amp;quot;, total contract value: $4,959.84 https://newsfilter.io/a/36789929e1dafa14b062a20b211e6aca ------------------------------------------------------------------------------ 2022-02-16 15:35:02 $TCFC $V Webinar: Bringing Credit Issuing In-House in 2022 https://newsfilter.io/a/5dd17c223e94a8dc364e899a0eb95bb2 ------------------------------------------------------------------------------ 2022-02-16 15:34:51 $NRUC Form 424B3 (prospectus ) filed with the SEC https://newsfilter.io/a/fe2b5bf1ac582d745f6fadb886126695 ------------------------------------------------------------------------------ 2022-02-16 15:34:27 $ZNTE Form DEFA14A (additional definitive proxy soliciting materials and rule 14(a)(12) material) filed with the SEC https://newsfilter.io/a/c0d62bba8d60e10984b83bd681c3a455 ------------------------------------------------------------------------------ 2022-02-16 15:34:06 $NGG NIAGARA MOHAWK POWER DECLARES PREFERRED STOCK DIVIDENDS https://newsfilter.io/a/60b80cf78256233915c4a4ecacfb2626 ------------------------------------------------------------------------------ 2022-02-16 15:34:05 $PM Philip Morris International to Publish a Video Presentation at the 2022 Consumer Analyst Group of New York Virtual Conference https://newsfilter.io/a/adeaf7a6816bdc25b346f15c098f90cb ------------------------------------------------------------------------------ 2022-02-16 15:34:01 $ACT $GNW Change in Long-Term Care Costs in Nebraska Mixed; Labor Market Shifts and Continued COVID-19 Pressure Affect Future Costs https://newsfilter.io/a/f640abccc455086ae4b43f43ad4254fb ------------------------------------------------------------------------------ 2022-02-16 15:33:07 $PDLB Form 3/A (initial statement of beneficial ownership of securities) filed with the SEC https://newsfilter.io/a/bea839aee3a4f30dc384c7a90e21c701 ------------------------------------------------------------------------------ 2022-02-16 15:33:06 $ALKT Texans Credit Union Partners with Alkami to Amplify Its Digital Banking Experience https://newsfilter.io/a/198d92eb6e1c481b825b830659af8698 "},{"id":641,"href":"/OpenBBTerminal/terminal/common/ba/stats/","title":"Stats","parent":"Introduction to the Behavioural Analysis","content":"usage: stats [-h] Sentiment stats which displays buzz, news score, articles last week, articles weekly average, bullish vs bearish percentages, sector average bullish percentage, and sector average news score. [Source: https://finnhub.io]\noptional arguments: -h, --help show this help message (default: False) "},{"id":642,"href":"/OpenBBTerminal/terminal/common/ba/trend/","title":"Trend","parent":"Introduction to the Behavioural Analysis","content":"usage: trend [-s START] [-hr HOUR] [-n NUMBER] [-h] [--export {csv,json,xlsx}] [-l LIMIT] Show most talked about tickers within the last one hour. Source: [Sentiment Investor]\noptional arguments: -s START, --start START The starting date (format YYYY-MM-DD). Default: Today (default: 2022-02-16) -hr HOUR, --hour HOUR Hour of the day in the 24-hour notation. Example: 14 (default: 0) -n NUMBER, --number NUMBER Number of results returned from Sentiment Investor. Default: 10 (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) Example:\n2022 Feb 16, 10:50 (✨) /stocks/ba/ $ trend Most trending stocks at 2022-02-16 00:00 ┏━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━┳━━━━━━┓ ┃ TICKER ┃ TOTAL ┃ LIKES ┃ RHI ┃ AHI ┃ ┡━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━╇━━━━━━┩ │ AMC │ 120.00 │ 227.00 │ 1.70 │ 1.53 │ ├────────┼────────┼────────┼──────┼──────┤ │ BTC │ 97.00 │ 162.00 │ 1.75 │ 1.30 │ ├────────┼────────┼────────┼──────┼──────┤ │ SPY │ 88.00 │ 69.00 │ 1.48 │ 1.29 │ ├────────┼────────┼────────┼──────┼──────┤ │ NVDA │ 68.00 │ 34.00 │ 2.44 │ 2.57 │ ├────────┼────────┼────────┼──────┼──────┤ │ FB │ 51.00 │ 51.00 │ 1.11 │ 1.60 │ ├────────┼────────┼────────┼──────┼──────┤ │ TSLA │ 47.00 │ 53.00 │ 1.07 │ 0.81 │ ├────────┼────────┼────────┼──────┼──────┤ │ MANA │ 37.00 │ 84.00 │ 5.36 │ 3.86 │ ├────────┼────────┼────────┼──────┼──────┤ │ NIO │ 32.00 │ 21.00 │ 1.19 │ 0.87 │ ├────────┼────────┼────────┼──────┼──────┤ │ PLTR │ 31.00 │ 17.00 │ 1.45 │ 1.26 │ ├────────┼────────┼────────┼──────┼──────┤ │ ETH │ 23.00 │ 24.00 │ 1.61 │ 1.14 │ └────────┴────────┴────────┴──────┴──────┘ "},{"id":643,"href":"/OpenBBTerminal/terminal/common/ba/trending/","title":"Trending","parent":"Introduction to the Behavioural Analysis","content":"usage: trending [-h] Tickers trending on Stocktwits\noptional arguments: -h, --help show this help message (default: False) Example:\n2022 Feb 16, 10:50 (✨) /stocks/ba/ $ trending Trending Stocks ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Ticker ┃ Watchlist Count ┃ Name ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ RBLX │ 57121 │ Roblox │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ SHOP │ 98777 │ Shopify │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ VIAC │ 18321 │ Viacom CBS, Inc │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ UPST │ 27649 │ Upstart │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ NVDA │ 350895 │ NVIDIA Corporation │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ ORGN │ 12019 │ Origin Materials │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ BCRX │ 36996 │ BioCryst Pharmaceuticals, Inc. │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ APPS │ 23164 │ Digital Turbine, Inc. │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ ABNB │ 44018 │ Airbnb │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ ACT │ 848 │ ADVISORSHARES T/VICE ETF │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ TTD │ 30946 │ The Trade Desk Inc │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ IBRX │ 10309 │ ImmunityBio Inc │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ GOLD │ 22601 │ Barrick Gold Corporation │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ SPCE │ 136010 │ Virgin Galactic Holdings Inc │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ AERC │ 5689 │ AeroClean Technologies Inc │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ KSCP │ 4896 │ Knightscope │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ AUPH │ 42395 │ Aurinia Pharmaceuticals Inc. │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ CROX │ 5925 │ CROCS Inc. │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ AI │ 20938 │ C3.ai Inc │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ ERIC │ 8548 │ LM Ericsson Telephone Co. │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ IMTE │ 7701 │ Integrated Media Technology Ltd │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ AMC │ 369648 │ AMC Entertainment │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ TIGR │ 10273 │ UP Fintech │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ MASI │ 1424 │ Masimo Corporation │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ BKKT │ 24761 │ Bakkt Holdings Inc - Ordinary Shares - Class A │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ SGLY │ 178 │ Sino Global Shipping America Ltd │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ BXRX │ 10174 │ Baudax Bio, Inc. │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ ARLP │ 1507 │ Alliance Resource Partners LP │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ WIX │ 6479 │ Wix │ ├────────┼─────────────────┼────────────────────────────────────────────────┤ │ GNRC │ 3090 │ Generac Holdings Inc. │ └────────┴─────────────────┴────────────────────────────────────────────────┘ "},{"id":644,"href":"/OpenBBTerminal/terminal/common/ba/watchlist/","title":"Watchlist","parent":"Introduction to the Behavioural Analysis","content":"usage: watchlist [-l N_LIMIT] [-h] Searches Reddit for users' watchlists.\noptional arguments: -l N_LIMIT, --limit N_LIMIT limit of posts with watchlists retrieved. (default: 5) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 10:52 (✨) /stocks/ba/ $ watchlist 2022-02-16 14:16:31 - Morning Update for Wednesday, 2/16/22 https://old.reddit.com/r/StockMarket/comments/stwy68/morning_update_for_wednesday_21622/ 2022-02-15 08:18:07 - Don't let family, friends, etc. influence you that you cannot make it + some general stock advice. https://old.reddit.com/r/Daytrading/comments/ssy2sw/dont_let_family_friends_etc_influence_you_that/ 2022-02-14 11:49:01 - Let's investigate stocks in Europe, Euronext ($ENX.PA) write up. https://old.reddit.com/r/stocks/comments/ss8sxb/lets_investigate_stocks_in_europe_euronext_enxpa/ 2022-02-13 21:46:46 - Looking for a platform that displays (or screens by) basic financial data with a good UI. https://old.reddit.com/r/stocks/comments/srtwxi/looking_for_a_platform_that_displays_or_screens/ 2022-02-11 17:31:13 - Clear Blue Technologies $CBLU.V $CBUTF QUICK LOOK, watchlist + portfolio addition 👀👀 👨🏽‍💻👩🏾‍💻 https://old.reddit.com/r/RobinHoodPennyStocks/comments/sq4t5o/clear_blue_technologies_cbluv_cbutf_quick_look/ "},{"id":645,"href":"/OpenBBTerminal/terminal/common/ba/wsb/","title":"Wsb","parent":"Introduction to the Behavioural Analysis","content":"usage: wsb [-l N_LIMIT] [-n] [-h] Get some inspiration for trade ideas from the infamous subReddit, WSB. [SourceL Reddit]\noptional arguments: -l N_LIMIT, --limit N_LIMIT limit of posts to print. (default: 10) -n, --new new flag, if true the posts retrieved are based on being more recent rather than their score. (default: False) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 10:52 (✨) /stocks/ba/ $ wsb 2022-02-16 11:00:14 - Daily Discussion Thread for February 16, 2022 https://old.reddit.com/r/wallstreetbets/comments/stt7n0/daily_discussion_thread_for_february_16_2022/ 2022-02-12 11:45:28 - Most Anticipated Earnings Releases for the week beginning February 14th, 2022 https://old.reddit.com/r/wallstreetbets/comments/sqpscq/most_anticipated_earnings_releases_for_the_week/ 2022-02-16 14:01:48 - Since losing money is cool here. https://old.reddit.com/r/wallstreetbets/comments/stwml0/since_loosing_money_is_cool_here/ 2022-02-16 11:42:50 - How to become a WSB mod 🌈🌈🌈 https://old.reddit.com/r/wallstreetbets/comments/sttx9d/how_to_become_a_wsb_mod/ 2022-02-15 23:19:28 - I don't get why this inflation thing is freaking people out https://old.reddit.com/r/wallstreetbets/comments/stggd7/i_dont_get_why_this_inflation_thing_is_freaking/) 2022-02-16 13:56:23 - Justice Department Is Pursuing Wide-Ranging Investigation of Short-Sellers https://old.reddit.com/r/wallstreetbets/comments/stwht2/justice_department_is_pursuing_wideranging/ 2022-02-15 21:24:58 - i was up 100% on upst puts https://old.reddit.com/r/wallstreetbets/comments/stdsqj/i_was_up_100_on_upst_puts/ 2022-02-15 19:33:03 - The over short thesis hasn't gone anywhere. https://old.reddit.com/r/wallstreetbets/comments/stb7gb/the_over_short_thesis_hasnt_gone_anywhere/ 2022-02-16 14:15:24 - Make GME, not war. https://old.reddit.com/r/wallstreetbets/comments/stwxa9/make_gme_not_war/ 2022-02-16 11:24:54 - Free Money Hack - Can’t Go Tits Up https://old.reddit.com/r/wallstreetbets/comments/sttmmb/free_money_hack_cant_go_tits_up/ "},{"id":646,"href":"/OpenBBTerminal/terminal/common/qa/acf/","title":"Acf","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: acf [-l LAGS] [-h] Auto-Correlation and Partial Auto-Correlation Functions for diff and diff diff stock data, see source: http://sciencedirect.com/topics/chemistry/autocorrelation-function\nThe autocorrelation function (ACF) defines how data points in a time series are related, on average, to the preceding data points (Box, Jenkins, \u0026amp; Reinsel, 1994).\nA positive autocorrelation value for a particular lag τ can be interpreted as a measure of persistence of data points separated by this lag to stay above and/or below the mean value of the signal. A negative autocorrelation indicates that data points separated by this lag tend to alternate about the mean value. An important piece of information provided by the ACF is the maximum lag τmax that still has a significant value. This lag indicates the “memory” or temporal persistence of the fluctuation series. Data points separated by time lags greater than τmax are uncoupled. The ACF is often redundantly plotted for positive and negative values of τ, although by definition it is symmetric about τ = 0.\noptional arguments: -l LAGS, --lags LAGS maximum lags to display in plots (default: 15) -h, --help show this help message (default: False "},{"id":647,"href":"/OpenBBTerminal/terminal/common/qa/beta/","title":"Beta","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: beta [--ref REF_TICKER] [-h] Displays scatter plot of returns of a stock against a reference ticker and calculates the line of best fit through them to compute alpha and beta.\noptional arguments: -r, --ref Specify the reference ticker to use (default: SPY) -h, --help show this help message (default: False) "},{"id":648,"href":"/OpenBBTerminal/terminal/common/qa/bw/","title":"Bw","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: bw [-y] [-h] Almost the same as a candle chart but with the very small difference that in addition to the open, close, min, max values it is also possible to specify a fifth, median value. The median lies between the open and close value and is illustrated as a horizontal line within the bar.\noptional arguments: -y, --yearly Flag to show yearly bw plot (default: False) -h, --help show this help message (default: False) "},{"id":649,"href":"/OpenBBTerminal/terminal/common/qa/capm/","title":"Capm","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: capm [-h] Provides detailed information about a stock\u0026rsquo;s risk compared to the market risk.\noptional arguments: -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:01 (✨) /stocks/qa/ $ load tsla Loading Daily TSLA stock with starting period 2019-02-11 for analysis. Datetime: 2022 Feb 16 11:02 Timezone: America/New_York Currency: USD Market: CLOSED 2022 Feb 16, 11:02 (✨) /stocks/qa/ $ capm Beta: 2.02 Systematic Risk: 23.09% Unsystematic Risk: 76.91% "},{"id":650,"href":"/OpenBBTerminal/terminal/common/qa/cdf/","title":"Cdf","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: cdf [--export {csv,json,xlsx}] [-h] Explanation excerpt from: https://www.probabilitycourse.com/chapter3/3_2_1_cdf.php\nThe cumulative distribution function (CDF) of a random variable is another method to describe the distribution of random variables. The advantage of the CDF is that it can be defined for any kind of random variable (discrete, continuous, and mixed).\nThe cumulative distribution function (CDF) of random variable X is defined as:\n F X  ( x ) = P ( X \u0026#x2264; x ) , \u0026#xA0;for all\u0026#xA0;  x \u0026#x2208; R  .  Contextual Example: I toss a coin twice. Let X be the number of observed heads. Find the CDF of X\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":651,"href":"/OpenBBTerminal/terminal/common/qa/cusum/","title":"Cusum","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: cusum [-t THRESHOLD] [-d DRIFT] [-h] Cumulative Sum Control Chart. A stochastic wave used as a stock market breadth indicator in mid-to-long term analysis, it is a sequential analysis technique for step detection in a time-series. The threshold can be thought of as the level where the background noise is at or below the level of the true signal.\nSee this paper for a deep dive: https://econpapers.wiwi.kit.edu/downloads/KITe_WP_62.pdf\noptional arguments: -t THRESHOLD, --threshold THRESHOLD threshold (default: 0.002988466304844406) -d DRIFT, --drift DRIFT drift (default: 0.001494233152422203) -h, --help show this help message (default: False) "},{"id":652,"href":"/OpenBBTerminal/terminal/common/qa/decompose/","title":"Decompose","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: decompose [-m] [--export {csv,json,xlsx}] [-h] This type of forecasting attempts to separate and index factors thought to have meaningful impact on the otherwise random movements in stock prices.\nDecompose time series as:\n Additive Time Series = Level + CyclicTrend + Residual + Seasonality Multiplicative Time Series = Level * CyclicTrend * Residual * Seasonality  For a detailed research paper discussing analysis of the Indian Auto Sector, download the PDF here: https://www.researchgate.net/publication/290263806_Decomposition_of_Time_Series_Data_of_Stock_Markets_and_its_Implications_for_Prediction_-_An_Application_for_the_Indian_Auto_Sector\n\u0026ldquo;This will help in stock selection in the following ways. First, it will indicate the overall trend of the sector, hence the stock price, and help in taking a position. Second, if seasonality patterns can be seen, then during which month which sector and hence which stock should be a good buy, can be inferred. Third, the random component will throw some light on the volatility pattern of the sector and hence the stock. This decomposition will indicate which of the three components are stronger and can shed further light on the efficient market hypothesis. The decomposition will bring out the overall macroeconomic characteristic of a sector, which affects the fundamentals of a company.\u0026rdquo;\noptional arguments: -m, --multiplicative decompose using multiplicative model instead of additive (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:06 (✨) /stocks/qa/ $ decompose Time-Series Level is 2660.84 Strength of Trend: 0.0000 Strength of Seasonality: 0.0032 "},{"id":653,"href":"/OpenBBTerminal/terminal/common/qa/es/","title":"Es","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: es [-m] [-d {laplace,student_t,logistic,normal}] [-p PERCENTILE] [-h] Provides Expected Shortfall (short: ES) of the selected stock.\noptional arguments: -m, --mean If one should use the mean of the stocks return (default: False) -d {laplace,student_t,logistic,normal}, --dist {laplace,student_t,logistic,normal}, --distributions {laplace,student_t,logistic,normal} Distribution used for the calculations (default: normal) -p PERCENTILE, --percentile PERCENTILE Percentile used for ES calculations, for example input 99.9 equals a 99.9 Percent Expected Shortfall (default: 99.9) -h, --help show this help message (default: False) Example:\n2022 Feb 25, 06:50 (✨) /stocks/qa/ $ es TSLA Expected Shortfall ┏━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ ┃ ES: ┃ Historical ES: ┃ ┡━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ 90.0% │ -0.0752 │ -0.0705 │ ├───────┼─────────┼────────────────┤ │ 95.0% │ -0.0885 │ -0.0932 │ ├───────┼─────────┼────────────────┤ │ 99.0% │ -0.1144 │ -0.1561 │ ├───────┼─────────┼────────────────┤ │ 99.9% │ -0.1444 │ -0.2106 │ └───────┴─────────┴────────────────┘ "},{"id":654,"href":"/OpenBBTerminal/terminal/common/qa/hist/","title":"Hist","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: hist [-b N_BINS] [-h] Histogram of proportional gains by entry point from a specified date, divisible into a specified number of distributed groups.\noptional arguments: -b N_BINS, --bins N_BINS -h, --help show this help message (default: False) "},{"id":655,"href":"/OpenBBTerminal/terminal/common/qa/kurtosis/","title":"Kurtosis","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: kurtosis [-l N_LENGTH] [--export {csv,json,xlsx}] [-h] Kurtosis is a measure of the \u0026ldquo;tailedness\u0026rdquo; of the probability distribution of a real-valued random variable. Like skewness, kurtosis describes the shape of a probability distribution and there are different ways of quantifying it for a theoretical distribution and corresponding ways of estimating it from a sample from a population. Different measures of kurtosis may have different interpretations.\nFor research on this topic, visit: https://www.styleadvisor.com/resources/statfacts/kurtosis\nKurtosis identifies where the volatility risk came from in a distribution of returns. Kurtosis improves one’s understanding of volatility risk.\nKurtosis is also known as the fourth moment of the distribution, used in conjunction with mean, standard deviation, and skewness to understand the shape of a distribution of returns. In its base case, kurtosis has a neutral value of 3.0. The calculation is frequently modified by the second term in the equation below, which scales kurtosis so that the baseline, neutral value is 0.0.\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 14) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":656,"href":"/OpenBBTerminal/terminal/common/qa/line/","title":"Line","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: line [--log] [-d] [--ml ML] [--ms MS] [-h] [--export {png,jpg,pdf,svg}] Show line plot of selected data and allow to draw lines or highlight specific datetimes.\noptional arguments: --log Plot with y on log scale (default: False) -d, --draw Draw lines and annotate on the plot (default: False) --ml ML Draw vertical line markers to highlight certain events (default: ) --ms MS Draw scatter markers to highlight certain events (default: ) -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export figure into png, jpg, pdf, svg (default: ) "},{"id":657,"href":"/OpenBBTerminal/terminal/common/qa/load/","title":"Load","parent":"Introduction to the Quantitative Analysis Menu","content":"Use the load command within the submenu.\n"},{"id":658,"href":"/OpenBBTerminal/terminal/common/qa/normality/","title":"Normality","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: normality [--export {csv,json,xlsx}] [-h] Normality tests\nTo learn more about this subject, visit the Wiki page: https://en.wikipedia.org/wiki/Normality_test\nA 2011 study concludes that Shapiro–Wilk has the best power for a given significance, followed closely by Anderson–Darling when comparing the Shapiro–Wilk, Kolmogorov–Smirnov, Lilliefors, and Anderson–Darling tests.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:11 (✨) /stocks/qa/ $ normality Normality Statistics ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┓ ┃ ┃ Statistic ┃ p-value ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━┩ │ Kurtosis │ 10.2422 │ 0.0000 │ ├────────────────────┼───────────┼─────────┤ │ Skewness │ -0.2238 │ 0.8229 │ ├────────────────────┼───────────┼─────────┤ │ Jarque-Bera │ 1155.1958 │ 0.0000 │ ├────────────────────┼───────────┼─────────┤ │ Shapiro-Wilk │ 0.9265 │ 0.0000 │ ├────────────────────┼───────────┼─────────┤ │ Kolmogorov-Smirnov │ 0.4680 │ 0.0000 │ └────────────────────┴───────────┴─────────┘ "},{"id":659,"href":"/OpenBBTerminal/terminal/common/qa/om/","title":"Om","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: om [-s START] [-e END] [-h] Provides omega ratio of the selected stock.\nThe omega ratio is the probability weighted ratio of gains versus losses for a threshold return. This is in practice done by getting the sum of the returns above the threshold return and of the returns below it and then calculating the ratio between these sums. For more, read: https://en.wikipedia.org/wiki/Omega_ratio\noptional arguments: -s START, --start START Start of the omega ratio threshold (default: 0) -e END, --end END End of the omega ratio threshold (default: 1.5) -h, --help show this help message (default: False) "},{"id":660,"href":"/OpenBBTerminal/terminal/common/qa/pick/","title":"Pick","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: pick [-t {Open,High,Low,Close,AdjClose,Volume,Returns,LogRet}] [-h] Select a target variable from the available arguments listed.\noptional arguments: -t {Open,High,Low,Close,AdjClose,Volume,Returns,LogRet}, --target {Open,High,Low,Close,AdjClose,Volume,Returns,LogRet} Select variable to analyze (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:12 (✨) /stocks/qa/ $ load tsla Loading Daily TSLA stock with starting period 2019-02-11 for analysis. Datetime: 2022 Feb 16 11:12 Timezone: America/New_York Currency: USD Market: CLOSED 2022 Feb 16, 11:12 (✨) /stocks/qa/ $ pick adjclose "},{"id":661,"href":"/OpenBBTerminal/terminal/common/qa/qqplot/","title":"Qqplot","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: qqplot [-h] Display Q-Q plot vs normal quantiles. See the Wiki page on this topic here: https://en.wikipedia.org/wiki/Q–Q_plot\nA Q–Q plot is used to compare the shapes of distributions, providing a graphical view of how properties such as location, scale, and skewness are similar or different in the two distributions. Q–Q plots can be used to compare collections of data, or theoretical distributions. The use of Q–Q plots to compare two samples of data can be viewed as a non-parametric approach to comparing their underlying distributions. A Q–Q plot is generally a more powerful approach to do this than the common technique of comparing histograms of the two samples, but requires more skill to interpret. Q–Q plots are commonly used to compare a data set to a theoretical model.\nThe points plotted in a Q–Q plot are always non-decreasing when viewed from left to right. If the two distributions being compared are identical, the Q–Q plot follows the 45° line y = x. If the two distributions agree after linearly transforming the values in one of the distributions, then the Q–Q plot follows some line, but not necessarily the line y = x. If the general trend of the Q–Q plot is flatter than the line y = x, the distribution plotted on the horizontal axis is more dispersed than the distribution plotted on the vertical axis. Conversely, if the general trend of the Q–Q plot is steeper than the line y = x, the distribution plotted on the vertical axis is more dispersed than the distribution plotted on the horizontal axis. Q–Q plots are often arced, or \u0026ldquo;S\u0026rdquo; shaped, indicating that one of the distributions is more skewed than the other, or that one of the distributions has heavier tails than the other.\nAlthough a Q–Q plot is based on quantiles, in a standard Q–Q plot it is not possible to determine which point in the Q–Q plot determines a given quantile. For example, it is not possible to determine the median of either of the two distributions being compared by inspecting the Q–Q plot. Some Q–Q plots indicate the deciles to make determinations such as this possible.\nThe intercept and slope of a linear regression between the quantiles gives a measure of the relative location and relative scale of the samples. If the median of the distribution plotted on the horizontal axis is 0, the intercept of a regression line is a measure of location, and the slope is a measure of scale. The distance between medians is another measure of relative location reflected in a Q–Q plot. The \u0026ldquo;probability plot correlation coefficient\u0026rdquo; (PPCC plot) is the correlation coefficient between the paired sample quantiles. The closer the correlation coefficient is to one, the closer the distributions are to being shifted, scaled versions of each other. For distributions with a single shape parameter, the probability plot correlation coefficient plot provides a method for estimating the shape parameter – one simply computes the correlation coefficient for different values of the shape parameter, and uses the one with the best fit, just as if one were comparing distributions of different types.\nAnother common use of Q–Q plots is to compare the distribution of a sample to a theoretical distribution, such as the standard normal distribution N(0,1), as in a normal probability plot. As in the case when comparing two samples of data, one orders the data (formally, computes the order statistics), then plots them against certain quantiles of the theoretical distribution.\noptional arguments: -h, --help show this help message (default: False) "},{"id":662,"href":"/OpenBBTerminal/terminal/common/qa/quantile/","title":"Quantile","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: quantile [-l N_LENGTH] [-q F_QUANTILE] [--export {csv,json,xlsx}] [-h] In statistics and probability, quantiles are cut points dividing the range of a probability distribution into continuous intervals with equal probabilities, or dividing the observations in a sample in the same way.\nThe quantiles are values which divide the distribution such that there is a given proportion of observations below the quantile. For example, the median is a quantile. The median is the central value of the distribution, such that half the points are less than or equal to it and half are greater than or equal to it. By default, q is set at 0.5, which effectively is median. Change q to get the desired quantile (0 \u0026lt; q \u0026lt; 1).\nSee the Wiki page on this topic for further explanation: https://en.wikipedia.org/wiki/Quantile\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 14) -q F_QUANTILE, --quantile F_QUANTILE quantile (default: 0.5) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":663,"href":"/OpenBBTerminal/terminal/common/qa/raw/","title":"Raw","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: raw [-n NUM] [-d] [-h] [--export {csv,json,xlsx}] Shows historical daily value for the target value.\noptional arguments: -n NUM, --num NUM Number to show (default: 20) -d, --descend Sort in descending order (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 11:05 (✨) /stocks/qa/ $ raw Raw Data ┏━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Adjclose ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━┩ │ 2022-01-19 │ 995.650 │ ├────────────┼──────────┤ │ 2022-01-20 │ 996.270 │ ├────────────┼──────────┤ │ 2022-01-21 │ 943.900 │ ├────────────┼──────────┤ │ 2022-01-24 │ 930.000 │ ├────────────┼──────────┤ │ 2022-01-25 │ 918.400 │ ├────────────┼──────────┤ │ 2022-01-26 │ 937.410 │ ├────────────┼──────────┤ │ 2022-01-27 │ 829.100 │ ├────────────┼──────────┤ │ 2022-01-28 │ 846.350 │ ├────────────┼──────────┤ │ 2022-01-31 │ 936.720 │ ├────────────┼──────────┤ │ 2022-02-01 │ 931.250 │ ├────────────┼──────────┤ │ 2022-02-02 │ 905.660 │ ├────────────┼──────────┤ │ 2022-02-03 │ 891.140 │ ├────────────┼──────────┤ │ 2022-02-04 │ 923.320 │ ├────────────┼──────────┤ │ 2022-02-07 │ 907.340 │ ├────────────┼──────────┤ │ 2022-02-08 │ 922.000 │ ├────────────┼──────────┤ │ 2022-02-09 │ 932.000 │ ├────────────┼──────────┤ │ 2022-02-10 │ 904.550 │ ├────────────┼──────────┤ │ 2022-02-11 │ 860.000 │ ├────────────┼──────────┤ │ 2022-02-14 │ 875.760 │ ├────────────┼──────────┤ │ 2022-02-15 │ 922.430 │ └────────────┴──────────┘ "},{"id":664,"href":"/OpenBBTerminal/terminal/common/qa/rolling/","title":"Rolling","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: rolling [-l N_LENGTH] [--export {csv,json,xlsx}] [-h] Rolling mean and std deviation, To learn more on this topic, visit: https://www.mathsisfun.com/data/standard-normal-distribution.html\noptional arguments: -l N_LENGTH, --length N_LENGTH Window length (default: 14) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":665,"href":"/OpenBBTerminal/terminal/common/qa/sh/","title":"Sh","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: sh [-r RFR] [-w WINDOW] [-h] Provides the sharpe ratio of the selected stock.\nThe sharpe ratio is calculated by subtracting the risk-free rates from the return and then divide it by the risk, measured by the volatility. This gives the return per volatility point.\noptional arguments: -r RFR, --rfr RFR Risk free return (default: 0) -w WINDOW, --window WINDOW Rolling window length (default: 252) -h, --help show this help message (default: False) "},{"id":666,"href":"/OpenBBTerminal/terminal/common/qa/skew/","title":"Skew","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: skew [-l N_LENGTH] [--export {csv,json,xlsx}] [-h] Skewness is a measure of asymmetry or distortion of symmetric distribution. It measures the deviation of the given distribution of a random variable from a symmetric distribution, such as normal distribution. A normal distribution is without any skewness, as it is symmetrical on both sides. Hence, a curve is regarded as skewed if it is shifted towards the right or the left.\nSee the Wiki page for a detailed explanation: https://en.wikipedia.org/wiki/Skewness\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 14) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":667,"href":"/OpenBBTerminal/terminal/common/qa/so/","title":"So","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: so [-t TARGET_RETURN] [-a] [-w WINDOW] [-h] Provides the sortino ratio of the selected stock.\nThe sortino ratio is very similar to the sharpe ratio, but different in a crucial way. Sharpe ratio punishes the standard deviation of positive return. The sortino ratio only punishes standard deviation of negative returns. For more, read: http://www.redrockcapital.com/Sortino__A__Sharper__Ratio_Red_Rock_Capital.pdf\noptional arguments: -t TARGET_RETURN, --target TARGET_RETURN Target return (default: 0) -a, --adjusted If one should adjust the sortino ratio inorder to make it comparable to the sharpe ratio (default: False) -w WINDOW, --window WINDOW Rolling window length (default: 252) -h, --help show this help message (default: False) "},{"id":668,"href":"/OpenBBTerminal/terminal/common/qa/spread/","title":"Spread","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: spread [-l N_LENGTH] [--export {csv,json,xlsx}] [-h] Displays the spread of the picked target variable for three statistics: value, standard deviation, variance.\noptional arguments: -l N_LENGTH, --length N_LENGTH Window length (default: 14) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":669,"href":"/OpenBBTerminal/terminal/common/qa/summary/","title":"Summary","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: summary [--export {csv,json,xlsx}] [-h] Summary of statistics derived from the target variable.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:16 (✨) /stocks/qa/ $ summary Summary Statistics ┏━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ open ┃ high ┃ low ┃ close ┃ adjclose ┃ volume ┃ returns ┃ logret ┃ logprice ┃ ┡━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━┩ │ count │ 760.000 │ 760.000 │ 760.000 │ 760.000 │ 760.000 │ 760.000 │ 760.000 │ 760.000 │ 760.000 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ mean │ 203.131 │ 205.470 │ 200.350 │ 202.963 │ 202.963 │ 18581311.316 │ -0.000 │ -0.000 │ 5.288 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ std │ 44.546 │ 44.825 │ 44.020 │ 44.497 │ 44.497 │ 10992756.504 │ 0.025 │ 0.025 │ 0.224 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ min │ 112.630 │ 114.200 │ 108.700 │ 111.790 │ 111.790 │ 5523000.000 │ -0.133 │ -0.143 │ 4.717 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ 10% │ 152.144 │ 153.973 │ 150.186 │ 151.635 │ 151.635 │ 9561170.000 │ -0.030 │ -0.030 │ 5.021 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ 25% │ 171.659 │ 174.392 │ 169.912 │ 171.858 │ 171.858 │ 12144500.000 │ -0.012 │ -0.013 │ 5.147 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ 50% │ 199.905 │ 202.325 │ 197.335 │ 200.000 │ 200.000 │ 15985100.000 │ 0.000 │ 0.000 │ 5.298 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ 75% │ 229.373 │ 231.640 │ 226.552 │ 229.478 │ 229.478 │ 21443775.000 │ 0.014 │ 0.014 │ 5.436 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ 90% │ 265.203 │ 268.028 │ 262.522 │ 265.506 │ 265.506 │ 28987730.000 │ 0.029 │ 0.029 │ 5.582 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ max │ 313.500 │ 319.320 │ 308.910 │ 317.140 │ 317.140 │ 141830000.000 │ 0.104 │ 0.099 │ 5.759 │ ├───────┼──────────┼──────────┼──────────┼──────────┼──────────┼─────────────────────┼─────────┼─────────┼──────────┤ │ var │ 1984.325 │ 2009.289 │ 1937.717 │ 1979.969 │ 1979.969 │ 120840695549911.328 │ 0.001 │ 0.001 │ 0.050 │ └───────┴──────────┴──────────┴──────────┴──────────┴──────────┴─────────────────────┴─────────┴─────────┴──────────┘ "},{"id":670,"href":"/OpenBBTerminal/terminal/common/qa/unitroot/","title":"Unitroot","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: unitroot [-r {c,ct,ctt,nc}] [-k {c,ct}] [--export {csv,json,xlsx}] [-h] Unit root test / stationarity (ADF, KPSS)\nIn statistics, a unit root test tests whether a time series variable is non-stationary and possesses a unit root. The null hypothesis is generally defined as the presence of a unit root and the alternative hypothesis is either stationarity, trend stationarity or explosive root depending on the test used.\nSee the Wiki page on this subject for more information: https://en.wikipedia.org/wiki/Unit_root_test\noptional arguments: -r {c,ct,ctt,nc}, --fuller_reg {c,ct,ctt,nc} Type of regression. Can be ‘c’,’ct’,’ctt’,’nc’ 'c' - Constant and t - trend order (default: c) -k {c,ct}, --kps_reg {c,ct} Type of regression. Can be ‘c’,’ct' (default: c) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:16 (✨) /stocks/qa/ $ unitroot Unit Root Calculation ┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ ADF ┃ KPSS ┃ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━┩ │ Test Statistic │ -28.9536 │ 0.2928 │ ├────────────────┼────────────┼────────┤ │ P-Value │ 0.0000 │ 0.1000 │ ├────────────────┼────────────┼────────┤ │ NLags │ 0.0000 │ 3 │ ├────────────────┼────────────┼────────┤ │ Nobs │ 759.0000 │ │ ├────────────────┼────────────┼────────┤ │ ICBest │ -3339.2013 │ │ └────────────────┴────────────┴────────┘ "},{"id":671,"href":"/OpenBBTerminal/terminal/common/qa/var/","title":"Var","parent":"Introduction to the Quantitative Analysis Menu","content":"usage: var [-m] [-a] [-s] [-p PERCENTILE] [-h] Provides value at risk (short: VaR) of the selected stock.\noptional arguments: -m, --mean If one should use the mean of the stocks return (default: False) -a, --adjusted If the VaR should be adjusted for skew and kurtosis (Cornish-Fisher-Expansion) (default: False) -s, --student If one should use the student-t distribution (default: False) -p PERCENTILE, --percentile PERCENTILE Percentile used for VaR calculations, for example input 99.9 equals a 99.9 Percent VaR (default: 99.9) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:18 (✨) /stocks/qa/ $ var FB Value at Risk ┏━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ ┃ VaR: ┃ Historical VaR: ┃ ┡━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ 90.0% │ -0.0305 │ -0.0233 │ ├───────┼─────────┼─────────────────┤ │ 95.0% │ -0.0389 │ -0.0364 │ ├───────┼─────────┼─────────────────┤ │ 99.0% │ -0.0546 │ -0.0578 │ ├───────┼─────────┼─────────────────┤ │ 99.9% │ -0.0719 │ -0.1719 │ └───────┴─────────┴─────────────────┘ "},{"id":672,"href":"/OpenBBTerminal/terminal/common/ta/ad/","title":"Ad","parent":"Introduction to the Technical Analysis Menu","content":"usage: ad [--open] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] The Accumulation/Distribution Line is similar to the On Balance Volume (OBV), which sums the volume times +1/-1 based on whether the close is higher than the previous close. The Accumulation/Distribution indicator, however multiplies the volume by the close location value (CLV). The CLV is based on the movement of the issue within a single bar and can be +1, -1 or zero. The Accumulation/Distribution Line is interpreted by looking for a divergence in the direction of the indicator relative to price. If the Accumulation/Distribution Line is trending upward it indicates that the price may follow. Also, if the Accumulation/Distribution Line becomes flat while the price is still rising (or falling) then it signals an impending flattening of the price.\noptional arguments: --open uses open value of stock (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":673,"href":"/OpenBBTerminal/terminal/common/ta/adosc/","title":"Adosc","parent":"Introduction to the Technical Analysis Menu","content":"usage: adosc [--open] [--fast N_LENGTH_FAST] [--slow N_LENGTH_SLOW] [--export {csv,json,xlsx}] [-h] Acummulation/Distribution Oscillator, also known as the Chaikin Oscillator is essentially a momentum indicator, but of the Accumulation-Distribution line rather than merely price. It looks at both the strength of price moves and the underlying buying and selling pressure during a given time period. The oscillator reading above zero indicates net buying pressure, while one below zero registers net selling pressure. Divergence between the indicator and pure price moves are the most common signals from the indicator, and often flag market turning points.\noptional arguments: --open uses open value of stock (default: False) --fast N_LENGTH_FAST fast length (default: 3) --slow N_LENGTH_SLOW slow length (default: 10) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":674,"href":"/OpenBBTerminal/terminal/common/ta/adx/","title":"Adx","parent":"Introduction to the Technical Analysis Menu","content":"usage: adx [-l N_LENGTH] [-s N_SCALAR] [-d N_DRIFT] [--export {csv,json,xlsx}] [-h] The ADX is a Welles Wilder style moving average of the Directional Movement Index (DX). The values range from 0 to 100, but rarely get above 60. To interpret the ADX, consider a high number to be a strong trend, and a low number, a weak trend.\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 14) -s N_SCALAR, --scalar N_SCALAR scalar (default: 100) -d N_DRIFT, --drift N_DRIFT drift (default: 1) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":675,"href":"/OpenBBTerminal/terminal/common/ta/aroon/","title":"Aroon","parent":"Introduction to the Technical Analysis Menu","content":"usage: aroon [-l N_LENGTH] [-s N_SCALAR] [--export {csv,json,xlsx}] [-h] The word aroon is Sanskrit for \u0026ldquo;dawn\u0026rsquo;s early light.\u0026rdquo; The Aroon indicator attempts to show when a new trend is dawning. The indicator consists of two lines (Up and Down) that measure how long it has been since the highest high/lowest low has occurred within an n period range. When the Aroon Up is staying between 70 and 100 then it indicates an upward trend. When the Aroon Down is staying between 70 and 100 then it indicates an downward trend. A strong upward trend is indicated when the Aroon Up is above 70 while the Aroon Down is below 30. Likewise, a strong downward trend is indicated when the Aroon Down is above 70 while the Aroon Up is below 30. Also look for crossovers. When the Aroon Down crosses above the Aroon Up, it indicates a weakening of the upward trend (and vice versa).\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 25) -s N_SCALAR, --scalar N_SCALAR scalar (default: 100) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":676,"href":"/OpenBBTerminal/terminal/common/ta/atr/","title":"Atr","parent":"Introduction to the Technical Analysis Menu","content":"usage: atr [-l N_LENGTH] [-m {ema,sma,wma,hma,zlma}] [-o N_OFFSET] [-h] [--export EXPORT] Averge True Range is used to measure volatility, especially volatility caused by gaps or limit moves.\noptional arguments: -l N_LENGTH, --length N_LENGTH Window length (default: 14) -m {ema,sma,wma,hma,zlma}, --mamode {ema,sma,wma,hma,zlma} mamode (default: ema) -o N_OFFSET, --offset N_OFFSET offset (default: 0) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":677,"href":"/OpenBBTerminal/terminal/common/ta/bbands/","title":"Bbands","parent":"Introduction to the Technical Analysis Menu","content":"usage: bbands [-l N_LENGTH] [-s N_STD] [-m S_MAMODE] [--export {csv,json,xlsx}] [-h] Bollinger Bands consist of three lines. The middle band is a simple moving average (generally 20 periods) of the typical price (TP). The upper and lower bands are F standard deviations (generally 2) above and below the middle band. The bands widen and narrow when the volatility of the price is higher or lower, respectively. Bollinger Bands do not, in themselves, generate buy or sell signals; they are an indicator of overbought or oversold conditions. When the price is near the upper or lower band it indicates that a reversal may be imminent. The middle band becomes a support or resistance level. The upper and lower bands can also be interpreted as price targets. When the price bounces off of the lower band and crosses the middle band, then the upper band becomes the price target.\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 5) -s N_STD, --std N_STD std (default: 2) -m S_MAMODE, --mamode S_MAMODE mamode (default: sma) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":678,"href":"/OpenBBTerminal/terminal/common/ta/cci/","title":"Cci","parent":"Introduction to the Technical Analysis Menu","content":"usage: cci [-l N_LENGTH] [-s N_SCALAR] [--export {csv,json,xlsx}] [-h] The CCI is designed to detect beginning and ending market trends. The range of 100 to -100 is the normal trading range. CCI values outside of this range indicate overbought or oversold conditions. You can also look for price divergence in the CCI. If the price is making new highs, and the CCI is not, then a price correction is likely.\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 14) -s N_SCALAR, --scalar N_SCALAR scalar (default: 0.015) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":679,"href":"/OpenBBTerminal/terminal/common/ta/cg/","title":"Cg","parent":"Introduction to the Technical Analysis Menu","content":"usage: cg [-l N_LENGTH] [--export {csv,json,xlsx}] [-h] The Center of Gravity indicator, in short, is used to anticipate future price movements and to trade on price reversals as soon as they happen. However, just like other oscillators, the COG indicator returns the best results in range-bound markets and should be avoided when the price is trending. Traders who use it will be able to closely speculate the upcoming price change of the asset.\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 14) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":680,"href":"/OpenBBTerminal/terminal/common/ta/clenow/","title":"Clenow","parent":"Introduction to the Technical Analysis Menu","content":"usage: clenow [-p PERIOD] [-h] [--export EXPORT] Calculates the Clenow Volatility Adjusted Momentum.\nThis indicator is calculated by performing a regression on log prices. The factor is obtained by multiplying the regression coefficient with the R2 of the regression.\nAn example of the use of this strategy can be found at: https://www.quant-investing.com/blog/this-easy-to-use-adjusted-slope-momentum-strategy-performed-7-times-better-than-the-market\noptions: -p PERIOD, --period PERIOD Lookback period for regression (default: 90) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about clenow' to access the related guide. "},{"id":681,"href":"/OpenBBTerminal/terminal/common/ta/demark/","title":"Demark","parent":"Introduction to the Technical Analysis Menu","content":"usage: demark [-m MIN_TO_SHOW] [-h] [--export EXPORT] Calculates the Demark sequential indicator.\noptional arguments: -m MIN_TO_SHOW, --min MIN_TO_SHOW Minimum value of indicator to show (declutters plot). (default: 5) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use \u0026lsquo;about demark\u0026rsquo; to access the related guide.\n"},{"id":682,"href":"/OpenBBTerminal/terminal/common/ta/donchian/","title":"Donchian","parent":"Introduction to the Technical Analysis Menu","content":"usage: donchian [-u N_LENGTH_UPPER] [-l N_LENGTH_LOWER] [--export {csv,json,xlsx}] [-h] Donchian Channels are three lines generated by moving average calculations that comprise an indicator formed by upper and lower bands around a midrange or median band. The upper band marks the highest price of a security over N periods while the lower band marks the lowest price of a security over N periods. The area between the upper and lower bands represents the Donchian Channel.\noptional arguments: -u N_LENGTH_UPPER, --length_upper N_LENGTH_UPPER length (default: 20) -l N_LENGTH_LOWER, --length_lower N_LENGTH_LOWER length (default: 20) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":683,"href":"/OpenBBTerminal/terminal/common/ta/ema/","title":"Ema","parent":"Introduction to the Technical Analysis Menu","content":"usage: ema [-l N_LENGTH] [-o N_OFFSET] [--export {csv,json,xlsx}] [-h] The Exponential Moving Average is a staple of technical analysis and is used in countless technical indicators. In a Simple Moving Average, each value in the time period carries equal weight, and values outside of the time period are not included in the average. However, the Exponential Moving Average is a cumulative calculation, including all data. Past values have a diminishing contribution to the average, while more recent values have a greater contribution. This method allows the moving average to be more responsive to changes in the data.\noptional arguments: -l N_LENGTH, --length N_LENGTH Window lengths. Multiple values indicated as comma separated values. (default: [20, 50]) -o N_OFFSET, --offset N_OFFSET offset (default: 0) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":684,"href":"/OpenBBTerminal/terminal/common/ta/fib/","title":"Fib","parent":"Introduction to the Technical Analysis Menu","content":"usage: fib [-p PERIOD] [--start START] [--end END] [--export {csv,json,xlsx}] [-h] Calculates the fibonacci retracement levels\nThe fibonocci retracement works by looking at a minimum and maximum point. Between these values, there is typically support/resistance at 23.5 %, 38.2%, 50% and 61.8%. Those values follow the golden ratio from the fibonocci sequence.\nThe --start and --end flags allow the user to select dates for the min and max points as your retracement levels. Both flags are required if using.\noptional arguments: -p PERIOD, --period PERIOD Days to lookback for retracement (default: 120) --start START Starting date to select (default: None) --end END Ending date to select (default: None) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":685,"href":"/OpenBBTerminal/terminal/common/ta/fisher/","title":"Fisher","parent":"Introduction to the Technical Analysis Menu","content":"usage: fisher [-l N_LENGTH] [--export {csv,json,xlsx}] [-h] The Fisher Transform is a technical indicator created by John F. Ehlers that converts prices into a Gaussian normal distribution.1 The indicator highlights when prices have moved to an extreme, based on recent prices. This may help in spotting turning points in the price of an asset. It also helps show the trend and isolate the price waves within a trend.\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 14) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":686,"href":"/OpenBBTerminal/terminal/common/ta/hma/","title":"Hma","parent":"Introduction to the Technical Analysis Menu","content":"usage: hma [-l N_LENGTH] [-o N_OFFSET] [--export {csv,json,xlsx}] [-h] The Hull Moving Average solves the age old dilemma of making a moving average more responsive to current price activity whilst maintaining curve smoothness. In fact the HMA almost eliminates lag altogether and manages to improve smoothing at the same time.\noptional arguments: -l N_LENGTH, --length N_LENGTH Window lengths. Multiple values indicated as comma separated values. (default: [10, 20]) -o N_OFFSET, --offset N_OFFSET offset (default: 0) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":687,"href":"/OpenBBTerminal/terminal/common/ta/kc/","title":"Kc","parent":"Introduction to the Technical Analysis Menu","content":"usage: kc [-l N_LENGTH] [-s N_SCALAR] [-m {ema,sma,wma,hma,zlma}] [-o N_OFFSET] [--export {csv,json,xlsx}] [-h] Keltner Channels are volatility-based bands that are placed on either side of an asset\u0026rsquo;s price and can aid in determining the direction of a trend.The Keltner channel uses the average true range (ATR) or volatility, with breaks above or below the top and bottom barriers signaling a continuation.\noptional arguments: -l N_LENGTH, --length N_LENGTH Window length (default: 20) -s N_SCALAR, --scalar N_SCALAR scalar (default: 2) -m {ema,sma,wma,hma,zlma}, --mamode {ema,sma,wma,hma,zlma} mamode (default: ema) -o N_OFFSET, --offset N_OFFSET offset (default: 0) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":688,"href":"/OpenBBTerminal/terminal/common/ta/macd/","title":"Macd","parent":"Introduction to the Technical Analysis Menu","content":"usage: macd [--fast N_FAST] [--slow N_SLOW] [--signal N_SIGNAL] [--export {csv,json,xlsx}] [-h] The Moving Average Convergence Divergence (MACD) is the difference between two Exponential Moving Averages. The Signal line is an Exponential Moving Average of the MACD. The MACD signals trend changes and indicates the start of new trend direction. High values indicate overbought conditions, low values indicate oversold conditions. Divergence with the price indicates an end to the current trend, especially if the MACD is at extreme high or low values. When the MACD line crosses above the signal line a buy signal is generated. When the MACD crosses below the signal line a sell signal is generated. To confirm the signal, the MACD should be above zero for a buy, and below zero for a sell.\noptional arguments: --fast N_FAST The short period. (default: 12) --slow N_SLOW The long period. (default: 26) --signal N_SIGNAL The signal period. (default: 9) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":689,"href":"/OpenBBTerminal/terminal/common/ta/obv/","title":"Obv","parent":"Introduction to the Technical Analysis Menu","content":"usage: obv [--export {csv,json,xlsx}] [-h] The On Balance Volume (OBV) is a cumulative total of the up and down volume. When the close is higher than the previous close, the volume is added to the running total, and when the close is lower than the previous close, the volume is subtracted from the running total. To interpret the OBV, look for the OBV to move with the price or precede price moves. If the price moves before the OBV, then it is a non-confirmed move. A series of rising peaks, or falling troughs, in the OBV indicates a strong trend. If the OBV is flat, then the market is not trending.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":690,"href":"/OpenBBTerminal/terminal/common/ta/recom/","title":"Recom","parent":"Introduction to the Technical Analysis Menu","content":"usage: recom [-s {crypto,forex,cfd}] [-e EXCHANGE] [-i {1M,1W,1d,4h,1h,15m,5m,1m}] [--export {csv,json,xlsx}] [-h] Print tradingview recommendation based on technical indicators. [Source: https://pypi.org/project/tradingview-ta/]\noptional arguments: -s {crypto,forex,cfd}, --screener {crypto,forex,cfd} Screener. See https://python-tradingview-ta.readthedocs.io/en/latest/usage.html (default: america) -e EXCHANGE, --exchange EXCHANGE Set exchange. For Forex use: 'FX_IDC', and for crypto use 'TVC'. See https://python-tradingview- ta.readthedocs.io/en/latest/usage.html. By default Alpha Vantage tries to get this data from the ticker. (default: ) -i {1M,1W,1d,4h,1h,15m,5m,1m}, --interval {1M,1W,1d,4h,1h,15m,5m,1m} Interval, that corresponds to the recommendation given by tradingview based on technical indicators. See https://python- tradingview-ta.readthedocs.io/en/latest/usage.html (default: ) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:31 (✨) /stocks/ta/ $ recom Ticker Recommendation ┏━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━┳━━━━━━┳━━━━━━━━━┓ ┃ ┃ RECOMMENDATION ┃ BUY ┃ SELL ┃ NEUTRAL ┃ ┡━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━╇━━━━━━╇━━━━━━━━━┩ │ 1 month │ BUY │ 15 │ 2 │ 9 │ ├─────────┼────────────────┼─────┼──────┼─────────┤ │ 1 week │ BUY │ 14 │ 2 │ 10 │ ├─────────┼────────────────┼─────┼──────┼─────────┤ │ 1 day │ SELL │ 5 │ 13 │ 8 │ ├─────────┼────────────────┼─────┼──────┼─────────┤ │ 4 hours │ SELL │ 4 │ 14 │ 8 │ ├─────────┼────────────────┼─────┼──────┼─────────┤ │ 1 hour │ SELL │ 4 │ 13 │ 9 │ ├─────────┼────────────────┼─────┼──────┼─────────┤ │ 15 min │ SELL │ 3 │ 13 │ 10 │ ├─────────┼────────────────┼─────┼──────┼─────────┤ │ 5 min │ SELL │ 5 │ 12 │ 9 │ ├─────────┼────────────────┼─────┼──────┼─────────┤ │ 1 min │ SELL │ 6 │ 11 │ 9 │ └─────────┴────────────────┴─────┴──────┴─────────┘ "},{"id":691,"href":"/OpenBBTerminal/terminal/common/ta/rsi/","title":"Rsi","parent":"Introduction to the Technical Analysis Menu","content":"usage: rsi [-l N_LENGTH] [-s N_SCALAR] [-d N_DRIFT] [--export {csv,json,xlsx}] [-h] The Relative Strength Index (RSI) calculates a ratio of the recent upward price movements to the absolute price movement. The RSI ranges from 0 to 100. The RSI is interpreted as an overbought/oversold indicator when the value is over 70/below 30. You can also look for divergence with price. If the price is making new highs/lows, and the RSI is not, it indicates a reversal.\noptional arguments: -l N_LENGTH, --length N_LENGTH length (default: 14) -s N_SCALAR, --scalar N_SCALAR scalar (default: 100) -d N_DRIFT, --drift N_DRIFT drift (default: 1) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":692,"href":"/OpenBBTerminal/terminal/common/ta/rsp/","title":"Rsp","parent":"Introduction to the Technical Analysis Menu","content":"usage: rsp [-h] [\u0026ndash;export EXPORT]\nIBD Style Relative Strength Percentile Ranking of Stocks (i.e. 0-100 Score). Ranks stocks on the basis of relative strength as calculated by Investor\u0026rsquo;s Business Daily (Yearly performance of stock (most recent quarter is weighted double) divided by yearly performance of reference index (here, we use SPY) Export table to view the entire ranking Data taken from https://github.com/skyte/relative-strength\noptional arguments: -h, \u0026ndash;help show this help message (default: False) \u0026ndash;export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: )\nExample: "},{"id":693,"href":"/OpenBBTerminal/terminal/common/ta/sma/","title":"Sma","parent":"Introduction to the Technical Analysis Menu","content":"usage: sma [-l N_LENGTH] [-o N_OFFSET] [--export {csv,json,xlsx}] [-h] Moving Averages are used to smooth the data in an array to help eliminate noise and identify trends. The Simple Moving Average is literally the simplest form of a moving average. Each output value is the average of the previous n values. In a Simple Moving Average, each value in the time period carries equal weight, and values outside of the time period are not included in the average. This makes it less responsive to recent changes in the data, which can be useful for filtering out those changes.\noptional arguments: -l N_LENGTH, --length N_LENGTH Window lengths. Multiple values indicated as comma separated values. (default: [20, 50]) -o N_OFFSET, --offset N_OFFSET offset (default: 0) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":694,"href":"/OpenBBTerminal/terminal/common/ta/stoch/","title":"Stoch","parent":"Introduction to the Technical Analysis Menu","content":"usage: stoch [-k N_FASTKPERIOD] [-d N_SLOWDPERIOD] [--slowkperiod N_SLOWKPERIOD] [--export {csv,json,xlsx}] [-h] The Stochastic Oscillator measures where the close is in relation to the recent trading range. The values range from zero to 100. %D values over 75 indicate an overbought condition; values under 25 indicate an oversold condition. When the Fast %D crosses above the Slow %D, it is a buy signal; when it crosses below, it is a sell signal. The Raw %K is generally considered too erratic to use for crossover signals.\noptional arguments: -k N_FASTKPERIOD, --fastkperiod N_FASTKPERIOD The time period of the fastk moving average (default: 14) -d N_SLOWDPERIOD, --slowdperiod N_SLOWDPERIOD The time period of the slowd moving average (default: 3) --slowkperiod N_SLOWKPERIOD The time period of the slowk moving average (default: 3) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":695,"href":"/OpenBBTerminal/terminal/common/ta/summary/","title":"Summary","parent":"Introduction to the Technical Analysis Menu","content":"usage: summary [-h] Technical summary report provided by FinBrain\u0026rsquo;s API. FinBrain Technologies develops deep learning algorithms for financial analysis and prediction, which currently serves traders from more than 150 countries all around the world. [Source: https://finbrain.tech]\noptional arguments: -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:33 (✨) /stocks/ta/ $ summary GOOGL price has changed -1.45% in the last 3 days and 0.80% yesterday. RSI is currently neutral but close to the overbought area and the indicator is pointing downwards. MACD is in the Bullish area and the histogram is moving downwards. GOOGL price is trading below the 200-day SMA line and the SMA is trending up. The asset price is between the Upper and the Middle Bollinger Bands. "},{"id":696,"href":"/OpenBBTerminal/terminal/common/ta/tv/","title":"Tv","parent":"Introduction to the Technical Analysis Menu","content":"usage: tv [-h] View TradingView for technical analysis. [Source: TradingView]\noptional arguments: -h, --help show this help message (default: False) "},{"id":697,"href":"/OpenBBTerminal/terminal/common/ta/view/","title":"View","parent":"Introduction to the Technical Analysis Menu","content":"usage: view [-h] View historical price with trendlines. [Source: Finviz]\noptional arguments: -h, --help show this help message (default: False) "},{"id":698,"href":"/OpenBBTerminal/terminal/common/ta/vwap/","title":"Vwap","parent":"Introduction to the Technical Analysis Menu","content":"usage: vwap [-o N_OFFSET] [--export {csv,json,xlsx}] [-h] The Volume Weighted Average Price that measures the average typical price by volume. It is typically used with intraday charts to identify general direction.\noptional arguments: -o N_OFFSET, --offset N_OFFSET offset (default: 0) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 11:36 (✨) /stocks/ta/ $ load GOOGL -i 1 Loading Intraday 1min GOOGL stock with starting period 2022-02-10 for analysis. Datetime: 2022 Feb 16 11:36 Timezone: America/New_York Currency: USD Market: CLOSED 2022 Feb 16, 11:36 (✨) /stocks/ta/ $ vwap "},{"id":699,"href":"/OpenBBTerminal/terminal/common/ta/wma/","title":"Wma","parent":"Introduction to the Technical Analysis Menu","content":"usage: wma [-l N_LENGTH] [-o N_OFFSET] [--export {csv,json,xlsx}] [-h] A Weighted Moving Average puts more weight on recent data and less on past data. This is done by multiplying each bar’s price by a weighting factor. Because of its unique calculation, WMA will follow prices more closely than a corresponding Simple Moving Average.\noptional arguments: -l N_LENGTH, --length N_LENGTH Window lengths. Multiple values indicated as comma separated values. (default: [20, 50]) -o N_OFFSET, --offset N_OFFSET offset (default: 0) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":700,"href":"/OpenBBTerminal/terminal/common/ta/zlma/","title":"Zlma","parent":"Introduction to the Technical Analysis Menu","content":"usage: zlma [-l N_LENGTH] [-o N_OFFSET] [--export {csv,json,xlsx}] [-h] The zero lag exponential moving average (ZLEMA) indicator was created by John Ehlers and Ric Way. The idea is do a regular exponential moving average (EMA) calculation but on a de-lagged data instead of doing it on the regular data. Data is de-lagged by removing the data from \u0026ldquo;lag\u0026rdquo; days ago thus removing (or attempting to) the cumulative effect of the moving average.\noptional arguments: -l N_LENGTH, --length N_LENGTH Window lengths. Multiple values indicated as comma separated values. (default: [20]) -o N_OFFSET, --offset N_OFFSET offset (default: 0) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":701,"href":"/OpenBBTerminal/terminal/crypto/candle/","title":"Candle","parent":"Introduction to Cryptocurrency","content":"usage: candle [--log] [-h] [--export EXPORT] Display chart for loaded coin. You can specify currency vs which you want to show chart and also number of days to get data for.\n--log Plot with y axis on log scale (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) For more information and examples, use \u0026lsquo;about candle\u0026rsquo; to access the related guide.\n"},{"id":702,"href":"/OpenBBTerminal/terminal/crypto/dd/active/","title":"Active","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: active [-s INITIAL_DATE] [-u END_DATE] [-i {1h, 24h, 10m, 1w, 1month}] [--export {csv,json,xlsx}] [-h] Display active addresses on a certain blockchain over time [Source: https://glassnode.org]\nThe number of unique addresses that were active either as a sender or receiver. Only addresses that were active in successful transactions are counted.\nSupported assets: BTC, ETH, LTC, AAVE, ABT, AMPL, ANT, ARMOR, BADGER, BAL, BAND, BAT, BIX, BNT, BOND, BRD, BUSD, BZRX, CELR, CHSB, CND, COMP, CREAM, CRO, CRV, CVC, CVP, DAI, DDX, DENT, DGX, DHT, DMG, DODO, DOUGH, DRGN, ELF, ENG, ENJ, EURS, FET, FTT, FUN, GNO, GUSD, HEGIC, HOT, HPT, HT, HUSD, INDEX, KCS, LAMB, LBA, LDO, LEO, LINK, LOOM, LRC, MANA, MATIC, MCB, MCO, MFT, MIR, MKR, MLN, MTA, MTL, MX, NDX, NEXO, NFTX, NMR, Nsure, OCEAN, OKB, OMG, PAX, PAY, PERP, PICKLE, PNK, PNT, POLY, POWR, PPT, QASH, QKC, QNT, RDN, REN, REP, RLC, ROOK, RPL, RSR, SAI, SAN, SNT, SNX, STAKE, STORJ, sUSD, SUSHI, TEL, TOP, UBT, UMA, UNI, USDC, USDK, USDT, UTK, VERI, WaBi, WAX, WBTC, WETH, wNMX, WTC, YAM, YFI, ZRX\narguments: -s DATE --since DATE Start date (default: 1 year before, e.g., 2020-10-22) -u DATE --until DATE End date (default: current day, e.g., 2021-10-22) -i INTERV --interval INTERV Interval frequency (default: 24h) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":703,"href":"/OpenBBTerminal/terminal/crypto/dd/ath/","title":"Ath","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: ath [--export {csv,json,xlsx}] [--vs {usd,btc}] [-h] All time high data for loaded coin\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) --vs {usd,btc} currency (default: usd) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:04 (✨) /crypto/dd/ $ ath Coin Highs ┌─────────────────────────────────────┬──────────────────────────┐ │ Metric │ Value │ ├─────────────────────────────────────┼──────────────────────────┤ │ Current Price USD │ 44302 │ ├─────────────────────────────────────┼──────────────────────────┤ │ All Time High USD │ 69045 │ ├─────────────────────────────────────┼──────────────────────────┤ │ All Time High Date USD │ 2021-11-10T14:24:11.849Z │ ├─────────────────────────────────────┼──────────────────────────┤ │ All Time High Change Percentage USD │ -35.75 │ └─────────────────────────────────────┴──────────────────────────┘ "},{"id":704,"href":"/OpenBBTerminal/terminal/crypto/dd/atl/","title":"Atl","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: atl [--vs {usd,btc}] [--export {csv,json,xlsx}] [-h] All time low data for loaded coin\noptional arguments: --vs {usd,btc} currency (default: usd) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:05 (✨) /crypto/dd/ $ atl Coin Lows ┌────────────────────────────────────┬──────────────────────────┐ │ Metric │ Value │ ├────────────────────────────────────┼──────────────────────────┤ │ Current Price USD │ 44302 │ ├────────────────────────────────────┼──────────────────────────┤ │ All Time Low USD │ 67.81 │ ├────────────────────────────────────┼──────────────────────────┤ │ All Time Low Date USD │ 2013-07-06T00:00:00.000Z │ ├────────────────────────────────────┼──────────────────────────┤ │ All Time Low Change Percentage USD │ 65317.50 │ └────────────────────────────────────┴──────────────────────────┘ "},{"id":705,"href":"/OpenBBTerminal/terminal/crypto/dd/balance/","title":"Balance","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: balance [--vs {USDT,TUSD,USDC,BUSD,NGN,RUB,TRY,EUR,IDRT,GBP,UAH,BIDR,AUD,DAI,BRL,VAI,USDP}] [--export {csv,json,xlsx}] [-h] Display balance\noptional arguments: --vs {USDT,TUSD,USDC,BUSD,NGN,RUB,TRY,EUR,IDRT,GBP,UAH,BIDR,AUD,DAI,BRL,VAI,USDP} Quote currency (what to view coin vs) (default: USDT) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":706,"href":"/OpenBBTerminal/terminal/crypto/dd/basic/","title":"Basic","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: basic [--export {csv,json,xlsx}] [-h] Get basic information for coin. Like: name, symbol, rank, type, description, platform, proof_type, contract, tags, parent\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:10 (✨) /crypto/dd/ $ basic Basic Coin Information ┌─────────────┬───────────────────────────────────────────────────────────────────────────────┐ │ Metric │ Value │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ id │ btc-bitcoin │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ name │ Bitcoin │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ symbol │ BTC │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ rank │ 1 │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ type │ coin │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ description │ Bitcoin is a cryptocurrency and worldwide payment system. It is the first │ │ │ decentralized digital currency, as the system works without a central bank or │ │ │ single administrator. │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ platform │ bnb-binance-coin │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ proof_type │ Proof of Work │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ contract │ 0x719bd7b3d60f0b194fdbe4570aeda1b3712b4986 │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ tags │ Segwit, Cryptocurrency, Proof Of Work, Payments, Sha256, Mining, Lightning │ │ │ Network │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ parent │ bnb-binance-coin │ └─────────────┴───────────────────────────────────────────────────────────────────────────────┘ "},{"id":707,"href":"/OpenBBTerminal/terminal/crypto/dd/bc/","title":"Bc","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: bc [--export {csv,json,xlsx}] [-h] Blockchain explorers URLs for loaded coin. Those are sites like etherescan.io or polkascan.io in which you can see all blockchain data e.g. all txs, all tokens, all contracts\u0026hellip;\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:10 (✨) /crypto/dd/ $ bc Blockchain URLs ┌────────┬─────────────────────────────────┐ │ Metric │ Value │ ├────────┼─────────────────────────────────┤ │ 0 │ https://blockchair.com/bitcoin/ │ ├────────┼─────────────────────────────────┤ │ 1 │ https://btc.com/ │ ├────────┼─────────────────────────────────┤ │ 2 │ https://btc.tokenview.com/ │ └────────┴─────────────────────────────────┘ "},{"id":708,"href":"/OpenBBTerminal/terminal/crypto/dd/change/","title":"Change","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: change [-e EXCHANGE] [-s INITIAL_DATE] [-u END_DATE] [-i {1h, 24h, 10m, 1w, 1month}] [--export {csv,json,xlsx}] [-h] Display 30d change of the supply held in exchange wallets. [Source: https://glassnode.org]\nSupported assets: BTC, ETH, LTC, AAVE, ABT, AMPL, ANT, ARMOR, BADGER, BAL, BAND, BAT, BIX, BNT, BOND, BRD, BUSD, BZRX, CELR, CHSB, CND, COMP, CREAM, CRO, CRV, CVC, CVP, DAI, DDX, DENT, DGX, DHT, DMG, DODO, DOUGH, DRGN, ELF, ENG, ENJ, EURS, FET, FTT, FUN, GNO, GUSD, HEGIC, HOT, HPT, HT, HUSD, INDEX, KCS, LAMB, LBA, LDO, LEO, LINK, LOOM, LRC, MANA, MATIC, MCB, MCO, MFT, MIR, MKR, MLN, MTA, MTL, MX, NDX, NEXO, NFTX, NMR, Nsure, OCEAN, OKB, OMG, PAX, PAY, PERP, PICKLE, PNK, PNT, POLY, POWR, PPT, QASH, QKC, QNT, RDN, REN, REP, RLC, ROOK, RPL, RSR, SAI, SAN, SNT, SNX, STAKE, STORJ, sUSD, SUSHI, TEL, TOP, UBT, UMA, UNI, USDC, USDK, USDT, UTK, VERI, WaBi, WAX, WBTC, WETH, wNMX, WTC, YAM, YFI, ZRX\nSupported exchanges: aggregated, binance, bittrex, coinex, gate.io, gemini, huobi, kucoin, poloniex, bibox, bigone, bitfinex, hitbtc, kraken, okex, bithumb, zb.com, cobinhood, bitmex, bitstamp, coinbase, coincheck, luno\noptional arguments: -a EXCHANGE Exchange to check (default: aggregated) -s DATE --since DATE Start date (default: 3 years before, e.g., 2018-10-22) -u DATE --until DATE End date (default: 2 years before, e.g., 2019-10-22) -i INTERV --interval INTERV Interval frequency (default: 24h) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":709,"href":"/OpenBBTerminal/terminal/crypto/dd/desc/","title":"Desc","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: desc [-p {0x,1inch,88mph,aave,abracadabra-money,alchemist,alchemix-finance,algorand,alpha-finance,arweave,autofarm,avalanche,axie-infinity,balancer,bancor,barnbridge,basket-dao,benqi,binance-smart-chain,bitcoin,cap,cardano,centrifuge,clipper,compound,convex-finance,cosmos,cryptex,curve,decentral-games,decred,dforce,dhedge,dodo,dogecoin,dydx,ellipsis-finance,elrond,enzyme-finance,erasure-protocol,ethereum,ethereum-name-service,euler,fantom,fei-protocol,filecoin,futureswap,gmx,goldfinch,harvest-finance,helium,hurricaneswap,idle-finance,index-cooperative,instadapp,integral-protocol,karura,keeperdao,keep-network,kusama,kyber,lido-finance,liquity,litecoin,livepeer,looksrare,loopring,maiar,makerdao,maple-finance,mcdex,metamask,mstable,near-protocol,nexus-mutual,nftx,notional-finance,opensea,optimism,osmosis,pancakeswap,pangolin,perpetual-protocol,piedao,pocket-network,polkadot,polygon,polymarket,pooltogether,powerpool,quickswap,rarible,rari-capital,reflexer,ren,ribbon-finance,rocket-pool,saddle-finance,set-protocol,solana,solend,spookyswap,stake-dao,stellar,sushiswap,synthetix,terra,tezos,the-graph,thorchain,tokemak,tokenlon,tornado-cash,trader-joe,uma,uniswap,unit-protocol,venus,vesper-finance,volmex,wakaswap,yearn-finance,yield-guild-games,yield-yak,zcash,zora}] [-h] [--export EXPORT] Display project description [Source: Token Terminal]\noptional arguments: -p {0x,1inch,88mph,aave,abracadabra-money,alchemist,alchemix-finance,algorand,alpha-finance,arweave,autofarm,avalanche,axie-infinity,balancer,bancor,barnbridge,basket-dao,benqi,binance-smart-chain,bitcoin,cap,cardano,centrifuge,clipper,compound,convex-finance,cosmos,cryptex,curve,decentral-games,decred,dforce,dhedge,dodo,dogecoin,dydx,ellipsis-finance,elrond,enzyme-finance,erasure-protocol,ethereum,ethereum-name-service,euler,fantom,fei-protocol,filecoin,futureswap,gmx,goldfinch,harvest-finance,helium,hurricaneswap,idle-finance,index-cooperative,instadapp,integral-protocol,karura,keeperdao,keep-network,kusama,kyber,lido-finance,liquity,litecoin,livepeer,looksrare,loopring,maiar,makerdao,maple-finance,mcdex,metamask,mstable,near-protocol,nexus-mutual,nftx,notional-finance,opensea,optimism,osmosis,pancakeswap,pangolin,perpetual-protocol,piedao,pocket-network,polkadot,polygon,polymarket,pooltogether,powerpool,quickswap,rarible,rari-capital,reflexer,ren,ribbon-finance,rocket-pool,saddle-finance,set-protocol,solana,solend,spookyswap,stake-dao,stellar,sushiswap,synthetix,terra,tezos,the-graph,thorchain,tokemak,tokenlon,tornado-cash,trader-joe,uma,uniswap,unit-protocol,venus,vesper-finance,volmex,wakaswap,yearn-finance,yield-guild-games,yield-yak,zcash,zora}, --project {0x,1inch,88mph,aave,abracadabra-money,alchemist,alchemix-finance,algorand,alpha-finance,arweave,autofarm,avalanche,axie-infinity,balancer,bancor,barnbridge,basket-dao,benqi,binance-smart-chain,bitcoin,cap,cardano,centrifuge,clipper,compound,convex-finance,cosmos,cryptex,curve,decentral-games,decred,dforce,dhedge,dodo,dogecoin,dydx,ellipsis-finance,elrond,enzyme-finance,erasure-protocol,ethereum,ethereum-name-service,euler,fantom,fei-protocol,filecoin,futureswap,gmx,goldfinch,harvest-finance,helium,hurricaneswap,idle-finance,index-cooperative,instadapp,integral-protocol,karura,keeperdao,keep-network,kusama,kyber,lido-finance,liquity,litecoin,livepeer,looksrare,loopring,maiar,makerdao,maple-finance,mcdex,metamask,mstable,near-protocol,nexus-mutual,nftx,notional-finance,opensea,optimism,osmosis,pancakeswap,pangolin,perpetual-protocol,piedao,pocket-network,polkadot,polygon,polymarket,pooltogether,powerpool,quickswap,rarible,rari-capital,reflexer,ren,ribbon-finance,rocket-pool,saddle-finance,set-protocol,solana,solend,spookyswap,stake-dao,stellar,sushiswap,synthetix,terra,tezos,the-graph,thorchain,tokemak,tokenlon,tornado-cash,trader-joe,uma,uniswap,unit-protocol,venus,vesper-finance,volmex,wakaswap,yearn-finance,yield-guild-games,yield-yak,zcash,zora} Choose project of interest (default: btc) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) Example:\n2022 Aug 28, 19:09 (🦋) /crypto/dd/ $ desc cardano HOW Validators process transactions and receive fees from users (supply-side revenue). WHO ADA holders own and govern the protocol. They currently do not take a cut of the total transaction fees paid by users (protocol revenue). WHAT Cardano is a smart contract platform for decentralized applications (a blockchain). Cardano was founded by Charles Hoskinson \u0026amp; Jeremy Wood and launched in 2017. FUNDING Cardano has raised approx. $62.2M. COMPETITION Smart contract platforms such as Cosmos, Ethereum, Tezos, etc. BUSINESS MODEL Cardano is a smart contract platform for dApps. GITHUB CONTRIBUTORS 533 "},{"id":710,"href":"/OpenBBTerminal/terminal/crypto/dd/dev/","title":"Dev","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: dev [--export {csv,json,xlsx}] [-h] Developers data for loaded coin. If the development data is available you can see how the code development of given coin is going on. There are some statistics that shows number of stars, forks, subscribers, pull requests, commits, merges, contributors on github.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:13 (✨) /crypto/dd/ $ dev Developers Data for Loaded Coin ┌───────────────────────────┬───────┐ │ Metric │ Value │ ├───────────────────────────┼───────┤ │ Forks │ 31593 │ ├───────────────────────────┼───────┤ │ Stars │ 61894 │ ├───────────────────────────┼───────┤ │ Subscribers │ 3904 │ ├───────────────────────────┼───────┤ │ Total Issues │ 6729 │ ├───────────────────────────┼───────┤ │ Closed Issues │ 6114 │ ├───────────────────────────┼───────┤ │ Pull Requests Merged │ 9418 │ ├───────────────────────────┼───────┤ │ Pull Request Contributors │ 771 │ ├───────────────────────────┼───────┤ │ Commit Count 4 Weeks │ 266 │ └───────────────────────────┴───────┘ "},{"id":711,"href":"/OpenBBTerminal/terminal/crypto/dd/eb/","title":"Eb","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: eb [-e EXCHANGE] [-p {True, False}] [-s INITIAL_DATE] [-u END_DATE] [-i {1h, 24h, 10m, 1w, 1month}] [--export {csv,json,xlsx}] [-h] Display total amount of coins held on exchange addresses in units and percentage. [Source: https://glassnode.org]\nSupported assets: BTC, ETH, LTC, AAVE, ABT, AMPL, ANT, ARMOR, BADGER, BAL, BAND, BAT, BIX, BNT, BOND, BRD, BUSD, BZRX, CELR, CHSB, CND, COMP, CREAM, CRO, CRV, CVC, CVP, DAI, DDX, DENT, DGX, DHT, DMG, DODO, DOUGH, DRGN, ELF, ENG, ENJ, EURS, FET, FTT, FUN, GNO, GUSD, HEGIC, HOT, HPT, HT, HUSD, INDEX, KCS, LAMB, LBA, LDO, LEO, LINK, LOOM, LRC, MANA, MATIC, MCB, MCO, MFT, MIR, MKR, MLN, MTA, MTL, MX, NDX, NEXO, NFTX, NMR, Nsure, OCEAN, OKB, OMG, PAX, PAY, PERP, PICKLE, PNK, PNT, POLY, POWR, PPT, QASH, QKC, QNT, RDN, REN, REP, RLC, ROOK, RPL, RSR, SAI, SAN, SNT, SNX, STAKE, STORJ, sUSD, SUSHI, TEL, TOP, UBT, UMA, UNI, USDC, USDK, USDT, UTK, VERI, WaBi, WAX, WBTC, WETH, wNMX, WTC, YAM, YFI, ZRX\nSupported exchanges: aggregated, binance, bittrex, coinex, gate.io, gemini, huobi, kucoin, poloniex, bibox, bigone, bitfinex, hitbtc, kraken, okex, bithumb, zb.com, cobinhood, bitmex, bitstamp, coinbase, coincheck, luno\narguments: -e EXCHANGE Exchange to check (default: aggregated) -p {True, False} Show percentage instead of stacked value (default: False) -s DATE --since DATE Start date (default: 3 years before, e.g., 2018-10-22) -u DATE --until DATE End date (default: 2 years before, e.g., 2019-10-22) -i INTERV --interval INTERV Interval frequency (default: 24h) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":712,"href":"/OpenBBTerminal/terminal/crypto/dd/events/","title":"Events","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: events [-l N] [-s {date,date_to,name,description,is_conference}] [--descend] [-u] [--export {csv,json,xlsx}] [-h] Show information about most important coins events. Most of coins doesn\u0026rsquo;t have any events. You can display only N number of events with \u0026ndash;limit parameter. You can sort data by id, date , date_to, name, description, is_conference \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. You can use additional flag \u0026ndash;urls to see urls for each event Displays: date , date_to, name, description, is_conference, link, proof_image_link\noptional arguments: -l N, --limit N Limit of records (default: 10) -s {date,date_to,name,description,is_conference}, --sort {date,date_to,name,description,is_conference} Sort by given column. Default: date (default: date) --descend Flag to sort in descending order (lowest first) (default: False) -u, --urls Flag to show urls. If you will use that flag you will see only date, name, link columns (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:14 (✨) /crypto/dd/ $ events All Events ┌────────────┬────────────┬────────────────────────────────────────────────────────────────────────────────────────────────────────┬─────────────────────────────────────────┬───────────────┐ │ date │ date_to │ name │ description │ is_conference │ ├────────────┼────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────┼───────────────┤ │ 2021-06-11 │ None │ Ask El Salvador for advice: Cuba suspends dollar cash deposits in banks due to US sanctions │ │ False │ │ 00:00:00 │ │ │ │ │ ├────────────┼────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────┼───────────────┤ │ 2021-06-11 │ None │ One of the Richest Bitcoin Whales in History Bought $138,000,000 in BTC Amid Market Turmoil – AronBoss │ │ False │ │ 00:00:00 │ │ │ │ │ ├────────────┼────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────┼───────────────┤ │ 2021-05-10 │ None │ Bitcoin’s upcoming Taproot upgrade and why it matters for the network │ │ False │ │ 00:00:00 │ │ │ │ │ ├────────────┼────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────┼───────────────┤ │ 2021-03-24 │ 2021-03-26 │ THE CRYPTO GATHERING │ │ False │ │ 08:00:00 │ 23:00:00 │ │ │ │ ├────────────┼────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────┼───────────────┤ │ 2018-10-09 │ 2018-10-09 │ Blockchain \u0026amp; Bitcoin Conference Switzerland │ The second conference organized by │ True │ │ 09:00:00 │ 18:00:00 │ │ Smile-Expo company in Geneva, the │ │ │ │ │ │ European fintech hub. The conference │ │ │ │ │ │ will also feature the demozone. │ │ ├────────────┼────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────┼───────────────┤ │ 2018-09-28 │ 2018-09-30 │ Super Conference │ KWIC, Kitchener - Waterloo, ON, Canada. │ True │ │ 20:00:00 │ 16:00:00 │ │ 29 September, 2018 │ │ ├────────────┼────────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────┼───────────────┤ │ 2018-07-10 │ None │ SEC- ETF VanEck decision │ │ False │ │ 12:00:00 │ │ │ │ │ └────────────┴────────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────┴───────────────┘ "},{"id":713,"href":"/OpenBBTerminal/terminal/crypto/dd/ex/","title":"Ex","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: ex [-l N] [-s {id,name,adjusted_volume_24h_share,fiats}] [--descend] [--export {csv,json,xlsx}] [-h] Get all exchanges found for given coin. You can display only N number of exchanges with \u0026ndash;limit parameter. You can sort data by id, name, adjusted_volume_24h_share, fiats \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. Displays: id, name, adjusted_volume_24h_share, fiats\noptional arguments: -l N, --limit N Limit of records (default: 10) -s {id,name,adjusted_volume_24h_share,fiats}, --sort {id,name,adjusted_volume_24h_share,fiats} Sort by given column. Default: date (default: adjusted_volume_24h_share) --descend Flag to sort in descending order (lowest first) (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":714,"href":"/OpenBBTerminal/terminal/crypto/dd/fr/","title":"Fr","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: fr [-h] [--export EXPORT]\nDisplay asset\u0026rsquo;s fundraising details [Source: https://messari.io]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":715,"href":"/OpenBBTerminal/terminal/crypto/dd/fundrate/","title":"Fundrate","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: fundrate [-h] [--export EXPORT] Displays funding rate by exchange for a certain asset [Source: https://coinglass.github.io/API-Reference/]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":716,"href":"/OpenBBTerminal/terminal/crypto/dd/funot/","title":"Funot","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: funot [-m {twitter_followers,gmv_annualized,market_cap,take_rate,revenue,revenue_protocol,tvl,pe,pe_circulating,ps,ps_circulating}] [-p {0x,1inch,88mph,aave,abracadabra-money,alchemist,alchemix-finance,algorand,alpha-finance,arweave,autofarm,avalanche,axie-infinity,balancer,bancor,barnbridge,basket-dao,benqi,binance-smart-chain,bitcoin,cap,cardano,centrifuge,clipper,compound,convex-finance,cosmos,cryptex,curve,decentral-games,decred,dforce,dhedge,dodo,dogecoin,dydx,ellipsis-finance,elrond,enzyme-finance,erasure-protocol,ethereum,ethereum-name-service,euler,fantom,fei-protocol,filecoin,futureswap,gmx,goldfinch,harvest-finance,helium,hurricaneswap,idle-finance,index-cooperative,instadapp,integral-protocol,karura,keeperdao,keep-network,kusama,kyber,lido-finance,liquity,litecoin,livepeer,looksrare,loopring,maiar,makerdao,maple-finance,mcdex,metamask,mstable,near-protocol,nexus-mutual,nftx,notional-finance,opensea,optimism,osmosis,pancakeswap,pangolin,perpetual-protocol,piedao,pocket-network,polkadot,polygon,polymarket,pooltogether,powerpool,quickswap,rarible,rari-capital,reflexer,ren,ribbon-finance,rocket-pool,saddle-finance,set-protocol,solana,solend,spookyswap,stake-dao,stellar,sushiswap,synthetix,terra,tezos,the-graph,thorchain,tokemak,tokenlon,tornado-cash,trader-joe,uma,uniswap,unit-protocol,venus,vesper-finance,volmex,wakaswap,yearn-finance,yield-guild-games,yield-yak,zcash,zora}] [--export EXPORT] Display fundamental metric over time [Source: Token Terminal]\noptional arguments: -m {twitter_followers,gmv_annualized,market_cap,take_rate,revenue,revenue_protocol,tvl,pe,pe_circulating,ps,ps_circulating}, --metric {twitter_followers,gmv_annualized,market_cap,take_rate,revenue,revenue_protocol,tvl,pe,pe_circulating,ps,ps_circulating} Choose metric of interest (default: ) -p {0x,1inch,88mph,aave,abracadabra-money,alchemist,alchemix-finance,algorand,alpha-finance,arweave,autofarm,avalanche,axie-infinity,balancer,bancor,barnbridge,basket-dao,benqi,binance-smart-chain,bitcoin,cap,cardano,centrifuge,clipper,compound,convex-finance,cosmos,cryptex,curve,decentral-games,decred,dforce,dhedge,dodo,dogecoin,dydx,ellipsis-finance,elrond,enzyme-finance,erasure-protocol,ethereum,ethereum-name-service,euler,fantom,fei-protocol,filecoin,futureswap,gmx,goldfinch,harvest-finance,helium,hurricaneswap,idle-finance,index-cooperative,instadapp,integral-protocol,karura,keeperdao,keep-network,kusama,kyber,lido-finance,liquity,litecoin,livepeer,looksrare,loopring,maiar,makerdao,maple-finance,mcdex,metamask,mstable,near-protocol,nexus-mutual,nftx,notional-finance,opensea,optimism,osmosis,pancakeswap,pangolin,perpetual-protocol,piedao,pocket-network,polkadot,polygon,polymarket,pooltogether,powerpool,quickswap,rarible,rari-capital,reflexer,ren,ribbon-finance,rocket-pool,saddle-finance,set-protocol,solana,solend,spookyswap,stake-dao,stellar,sushiswap,synthetix,terra,tezos,the-graph,thorchain,tokemak,tokenlon,tornado-cash,trader-joe,uma,uniswap,unit-protocol,venus,vesper-finance,volmex,wakaswap,yearn-finance,yield-guild-games,yield-yak,zcash,zora}, --project {0x,1inch,88mph,aave,abracadabra-money,alchemist,alchemix-finance,algorand,alpha-finance,arweave,autofarm,avalanche,axie-infinity,balancer,bancor,barnbridge,basket-dao,benqi,binance-smart-chain,bitcoin,cap,cardano,centrifuge,clipper,compound,convex-finance,cosmos,cryptex,curve,decentral-games,decred,dforce,dhedge,dodo,dogecoin,dydx,ellipsis-finance,elrond,enzyme-finance,erasure-protocol,ethereum,ethereum-name-service,euler,fantom,fei-protocol,filecoin,futureswap,gmx,goldfinch,harvest-finance,helium,hurricaneswap,idle-finance,index-cooperative,instadapp,integral-protocol,karura,keeperdao,keep-network,kusama,kyber,lido-finance,liquity,litecoin,livepeer,looksrare,loopring,maiar,makerdao,maple-finance,mcdex,metamask,mstable,near-protocol,nexus-mutual,nftx,notional-finance,opensea,optimism,osmosis,pancakeswap,pangolin,perpetual-protocol,piedao,pocket-network,polkadot,polygon,polymarket,pooltogether,powerpool,quickswap,rarible,rari-capital,reflexer,ren,ribbon-finance,rocket-pool,saddle-finance,set-protocol,solana,solend,spookyswap,stake-dao,stellar,sushiswap,synthetix,terra,tezos,the-graph,thorchain,tokemak,tokenlon,tornado-cash,trader-joe,uma,uniswap,unit-protocol,venus,vesper-finance,volmex,wakaswap,yearn-finance,yield-guild-games,yield-yak,zcash,zora} Choose project of interest (default: btc) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Aug 28, 19:08 (🦋) /crypto/dd/ $ funot -m revenue -p solana "},{"id":717,"href":"/OpenBBTerminal/terminal/crypto/dd/gh/","title":"Gh","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: gh [-i INTERVAL] [-d DEV] [-s START] [-end END] [-h] [--export EXPORT] Display github activity over time for a given coin. [Source: https://santiment.net/]\noptional arguments: -i INTERVAL, --interval INTERVAL Frequency interval. Default: 1d (default: 1w) -d DEV, --dev DEV Filter only for development activity. Default: False (default: False) -s START, --start START Initial date. Default: A year ago (default: 2021-04-25) -end END, --end END End date. Default: Today (default: 2022-04-25) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":718,"href":"/OpenBBTerminal/terminal/crypto/dd/gov/","title":"Gov","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: gov [-h] [--export EXPORT]\nDisplay asset\u0026rsquo;s governance [Source: https://messari.io]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":719,"href":"/OpenBBTerminal/terminal/crypto/dd/info/","title":"Info","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: info [--export {csv,json,xlsx}] [-h] Shows basic information about loaded coin like: Name, Symbol, Description, Market Cap, Public Interest, Supply, and Price related metrics\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:34 (✨) /crypto/dd/ $ info Basic Coin Information ┌─────────────────────────────┬──────────────────────────────────────────────────────────────────────────────────┐ │ Metric │ Value │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Id │ bitcoin │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Name │ Bitcoin │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Symbol │ btc │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Description │ Bitcoin is the first successful internet money based on peer-to-peer technology; │ │ │ whereby no central bank or authority is involved in the transaction and │ │ │ production of the Bitcoin currency. It was created by an anonymous │ │ │ individual/group under the name, Satoshi Nakamoto. The source code is available │ │ │ publicly as an open source project, anybody can look at it and be part of the │ │ │ developmental process. Bitcoin is changing the way we see money as we speak. The │ │ │ idea was to produce a means of exchange, independent of any central authority, │ │ │ that could be transferred electronically in a secure, verifiable and immutable │ │ │ way. It is a decentralized peer-to-peer internet currency making mobile payment │ │ │ easy, very low transaction fees, protects your identity, and it works anywhere │ │ │ all the time with no central authority and banks. Bitcoin is designed to have │ │ │ only 21 million BTC ever created, thus making it a deflationary currency. │ │ │ Bitcoin uses the SHA-256 hashing algorithm with an average transaction │ │ │ confirmation time of 10 minutes. Miners today are mining Bitcoin using ASIC chip │ │ │ dedicated to only mining Bitcoin, and the hash rate has shot up to peta hashes. │ │ │ Being the first successful online cryptography currency, Bitcoin has inspired │ │ │ other alternative currencies such as Litecoin, Peercoin, Primecoin, and so on. │ │ │ The cryptocurrency then took off with the innovation of the turing-complete │ │ │ smart contract by Ethereum which led to the development of other amazing │ │ │ projects such as EOS, Tron, and even crypto-collectibles such as CryptoKitties. │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Contract Address │ {} │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Market Cap Rank │ 1 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Public Interest Score │ 0.34 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Total Supply │ 21000000.00 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Max Supply │ 21000000.00 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Circulating Supply │ 18958987.00 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Price Change Percentage 24H │ 4.47 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Price Change Percentage 7D │ 0.82 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Price Change Percentage 30D │ 2.41 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Current Price Btc │ 1.00 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Current Price Eth │ 14.27 │ ├─────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────┤ │ Current Price Usd │ 44269 │ └─────────────────────────────┴──────────────────────────────────────────────────────────────────────────────────┘ "},{"id":720,"href":"/OpenBBTerminal/terminal/crypto/dd/inv/","title":"Inv","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: inv [-h] [--export EXPORT]\nDisplay asset\u0026rsquo;s investors [Source: https://messari.io]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":721,"href":"/OpenBBTerminal/terminal/crypto/dd/links/","title":"Links","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: links [-h] [--export EXPORT]\nDisplay asset\u0026rsquo;s links [Source: https://messari.io]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":722,"href":"/OpenBBTerminal/terminal/crypto/dd/liquidations/","title":"Liquidations","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: liquidations [--export {csv,json,xlsx}] [-h] Display the liquidation data for a certain cryptocurrency. [Source: https://coinglass.github.io/API-Reference/] Crypto must be loaded (e.g., load btc) before running this feature.\nThe Liquidations counts the daily Liquidations of futures contracts across all exchanges and currencies. The liquidation history across all exchanges can be viewed through the historical Liquidations.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":723,"href":"/OpenBBTerminal/terminal/crypto/dd/market/","title":"Market","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: market [--export {csv,json,xlsx}] [-h] Market data for loaded coin. There you find metrics like: Market Cap, Supply, Circulating Supply, Price, Volume and many others.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:41 (✨) /crypto/dd/ $ market Market Data ┌──────────────────────────────────────────┬─────────────────┐ │ Metric │ Value │ ├──────────────────────────────────────────┼─────────────────┤ │ Market Cap Rank │ 1.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Total Supply │ 21000000.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Max Supply │ 21000000.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Circulating Supply │ 18958987.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Price Change Percentage 24H │ 4.47 │ ├──────────────────────────────────────────┼─────────────────┤ │ Price Change Percentage 7D │ 0.82 │ ├──────────────────────────────────────────┼─────────────────┤ │ Price Change Percentage 30D │ 2.41 │ ├──────────────────────────────────────────┼─────────────────┤ │ Price Change Percentage 60D │ -7.18 │ ├──────────────────────────────────────────┼─────────────────┤ │ Price Change Percentage 1Y │ -8.93 │ ├──────────────────────────────────────────┼─────────────────┤ │ Market Cap Change 24H │ 39455964995.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Market Cap Btc │ 18958987.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Market Cap Eth │ 270479740.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Market Cap Usd │ 839296434756.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Fully Diluted Valuation Btc │ 21000000.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Fully Diluted Valuation Eth │ 299597998.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Fully Diluted Valuation Usd │ 929650151133.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Total Volume Btc │ 470419.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Total Volume Eth │ 6711079.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Total Volume Usd │ 20824423212.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ High 24H Btc │ 1.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ High 24H Eth │ 14.66 │ ├──────────────────────────────────────────┼─────────────────┤ │ High 24H Usd │ 44410.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Low 24H Btc │ 1.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Low 24H Eth │ 14.23 │ ├──────────────────────────────────────────┼─────────────────┤ │ Low 24H Usd │ 42026.00 │ ├──────────────────────────────────────────┼─────────────────┤ │ Circulating Supply To Total Supply Ratio │ 0.90 │ └──────────────────────────────────────────┴─────────────────┘ "},{"id":724,"href":"/OpenBBTerminal/terminal/crypto/dd/mcapdom/","title":"Mcapdom","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: mcapdom [-i {5m,15m,30m,1h,1d,1w}] [-s START] [-end END] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Display asset\u0026rsquo;s percentage share of total crypto circulating market cap [Source: https://messari.io]\noptional arguments: -i {5m,15m,30m,1h,1d,1w}, --interval {5m,15m,30m,1h,1d,1w} Frequency interval. Default: 1d (default: 1d) -s START, --start START Initial date. Default: A year ago (default: 2021-03-14) -end END, --end END End date. Default: Today (default: 2022-03-14) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":725,"href":"/OpenBBTerminal/terminal/crypto/dd/mkt/","title":"Mkt","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: mkt [--vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK}] [-l N] [-s {pct_volume_share,exchange,pair,trust_score,volume,price}] [--descend] [-u] [--export {csv,json,xlsx}] [-h] Get all markets found for given coin. You can display only N number of markets with \u0026ndash;limit parameter. You can sort data by pct_volume_share, exchange, pair, trust_score, volume, price \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. You can use additional flag \u0026ndash;urls to see urls for each market Displays: exchange, pair, trust_score, volume, price, pct_volume_share,\noptional arguments: --vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK} Quoted currency. Default USD (default: USD) -t TOP, --top TOP Limit of records (default: 20) -s {pct_volume_share,exchange,pair,trust_score,volume,price}, --sort {pct_volume_share,exchange,pair,trust_score,volume,price} Sort by given column. Default: pct_volume_share (default: pct_volume_share) --descend Flag to sort in descending order (lowest first) (default: False) -u, --urls Flag to show urls. If you will use that flag you will see only: exchange, pair, trust_score, market_url columns (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:41 (✨) /crypto/dd/ $ mkt All Markets ┌─────────────────────┬──────────┬─────────────┬──────────────────┬───────────┬────────────────┐ │ exchange │ pair │ trust_score │ pct_volume_share │ usd_price │ usd_volume │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ QB │ BTC/USDT │ low │ 76.66 │ 44335.56 │ 83125013156.79 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Bitenium │ BTC/USDT │ no_data │ 1.70 │ 44337.16 │ 1840286891.89 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Binance │ BTC/USDT │ high │ 1.69 │ 44340.62 │ 1829582324.62 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Crypto.com Exchange │ BTC/USDT │ low │ 1.41 │ 44329.00 │ 1524907447.06 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Indoex │ BTC/USD │ no_data │ 0.71 │ 44257.37 │ 767372786.82 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Coinbase │ BTC/USD │ high │ 0.65 │ 44305.95 │ 700692544.59 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Gleec BTC Exchange │ BTC/USDT │ no_data │ 0.63 │ 44353.43 │ 681039760.57 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ HitBTC │ BTC/USDT │ high │ 0.63 │ 44351.01 │ 681002641.50 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Bequant │ BTC/USDT │ low │ 0.63 │ 44331.91 │ 679750799.42 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ FMFW.io │ BTC/USD │ low │ 0.63 │ 44205.77 │ 678518719.32 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Binance │ BTC/BUSD │ high │ 0.53 │ 44309.66 │ 572365752.88 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ FTX (Spot) │ BTC/USD │ medium │ 0.45 │ 44209.00 │ 492815904.21 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Huobi │ BTC/USDT │ low │ 0.44 │ 44340.66 │ 479152896.05 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Indoex │ BTC/EUR │ no_data │ 0.42 │ 44250.15 │ 453236652.77 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Kucoin │ BTC/USDT │ low │ 0.40 │ 44341.16 │ 436318305.41 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Bitrue │ BTC/USDT │ low │ 0.37 │ 44337.33 │ 403067095.03 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Lbank │ BTC/USDT │ low │ 0.36 │ 44343.55 │ 385493474.14 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ BigONE │ BTC/USDT │ low │ 0.35 │ 44334.78 │ 377459785.89 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ Simex │ BTC/USD │ low │ 0.33 │ 44237.02 │ 355967120.52 │ ├─────────────────────┼──────────┼─────────────┼──────────────────┼───────────┼────────────────┤ │ DigiFinex │ BTC/USDT │ high │ 0.31 │ 44394.03 │ 339944185.15 │ └─────────────────────┴──────────┴─────────────┴──────────────────┴───────────┴────────────────┘ "},{"id":726,"href":"/OpenBBTerminal/terminal/crypto/dd/mt/","title":"Mt","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: mt [--list] [-t {exch.bittrex.flow.net,...}] [-i {5m,15m,30m,1h,1d,1w}] [-s START] [-end END] [--include-paid] [-q QUERY [QUERY ...]] [-h] [--export EXPORT] [-l LIMIT]\nDisplay messari timeseries [Source: https://messari.io]\noptional arguments: --list Flag to show available timeseries (default: False) -t {exch.bittrex.flow.net,exch.sply.bitstamp,addr.bal.100k.ntv.cnt,exch.sply.binance,utxo.age.med,exch.kraken.flow.out.ntv,exch.flow.out.ntv,diff.avg,utxo.age.val.avg,twitter.followers,blk.cnt,hashrate.30d,sply.addr.bal.1m.ntv,addr.bal.1m.cnt,exch.huobi.flow.in.ntv,min.rev.usd,utxo.prof.cnt,blk.int.avg,exch.binance.flow.in,sply.act.4y,txn.tfr.val.adj.ntv,exch.sply.bittrex.ntv,sply.rvv.4y,blk.unc.rew,exch.sply,exch.sply.usd,exch.binance.flow.net.ntv,fees.ntv,sply.total.iss,hashrate,sply.act.30d,txn.tfr.erc721.cnt,exch.gemini.flow.net.ntv,exch.poloniex.flow.out,exch.sply.kraken.ntv,exch.flow.in.usd,addr.bal.10.cnt,exch.bitstamp.flow.net.ntv,exch.sply.binance.ntv,telegram.users,exch.huobi.flow.net,nvt.adj,addr.bal.1.ntv.cnt,exch.gemini.flow.in,cg.sply.circ,exch.sply.bitfinex.ntv,exch.bitmex.flow.in.ntv,exch.bittrex.flow.out,miner.1hop.sply.ntv,txn.tkn.cnt,addr.bal.1m.ntv.cnt,exch.bitstamp.flow.in.ntv,hash.rev.ntv,txn.tfr.val.ntv,utxo.cnt,addr.bal.0.01.ntv.cnt,exch.bitmex.flow.out.ntv,rvt.adj.90d.ma,sply.act.3y,sply.addr.bal.1k.ntv,sply.addr.bal.1.ntv,sply.rvv.5y,sply.shld,addr.bal.0.001.ntv.cnt,exch.bitfinex.flow.net,exch.poloniex.flow.in,exch.sply.bitmex,txn.tfr.avg.ntv,txn.gas,blk.hgt,exch.gemini.flow.out,exch.sply.bitfinex,sply.act.180d,sply.addr.bal.1m,txn.cnt,exch.binance.flow.in.ntv,exch.poloniex.flow.out.ntv,mcap.realized,sply.act.90d,exch.bitstamp.flow.in,exch.bittrex.flow.in,exch.poloniex.flow.in.ntv,exch.sply.huobi.ntv,exch.flow.out.usd,price,addr.bal.1k.ntv.cnt,addr.bal.100.ntv.cnt,exch.kraken.flow.net.ntv,txn.fee.med,sply.act.1y,txn.cont.call.succ.cnt,txn.tfr.erc20.cnt,addr.bal.10k.ntv.cnt,blk.size.bytes.avg,exch.binance.flow.net,exch.binance.flow.out,sply.rvv.180d,sply.rvv.7d,addr.cnt,exch.bittrex.flow.out.ntv,sply.addr.bal.100.ntv,sply.rvv.2y,sply.top.100,txn.cnt.sec,exch.bitfinex.flow.in,exch.bitfinex.flow.out.ntv,exch.sply.poloniex.ntv,sply.cont.usd,exch.bittrex.flow.net.ntv,exch.flow.out.ntv.incl,sply.addr.bal.0.001.ntv,txn.vol,txn.fee.avg,txn.fee.avg.ntv,real.vol,exch.poloniex.flow.net,exch.kraken.flow.in.ntv,txn.cont.call.cnt,exch.flow.out.usd.incl,exch.flow.in.ntv.incl,new.iss.ntv,fees.pct.rev,exch.gemini.flow.net,exch.bitstamp.flow.out,exch.gemini.flow.out.ntv,exch.kraken.flow.out,addr.act.sent.cnt,exch.bittrex.flow.in.ntv,exch.sply.gemini,sply.act.2y,sply.act.7d,sply.top.1pct,txn.cont.cnt,sply.liquid,addr.bal.100k.cnt,exch.bitfinex.flow.net.ntv,exch.huobi.flow.out,txn.fee.med.ntv,blk.unc.rew.ntv,hashrate.rev,sply.addr.bal.100,sply.addr.bal.100k.ntv,sply.rvv.30d,txn.tsfr.cnt,mcap.dom,act.addr.cnt,exch.binance.flow.out.ntv,sply.act.pct.1y,blk.unc.rew.pct,exch.bitstamp.flow.out.ntv,exch.sply.bittrex,sply.total.iss.ntv,addr.bal.0.1.ntv.cnt,sply.addr.bal.0.1.ntv,sply.top.10pct,exch.sply.bitstamp.ntv,nvt.adj.90d.ma,txn.cont.creat.cnt,exch.huobi.flow.in,exch.flow.in.ntv,sply.act.evr,sply.addr.bal.100k,txn.erc721.cnt,exch.bitmex.flow.in,hashrate.rev.ntv,sply.addr.bal.10.ntv,sply.rvv.90d,mcap.out,miner.rev.total,sply.addr.bal.1k,exch.flow.in.usd.incl,sply.act.5y,txn.gas.limit.avg,mcap.circ,daily.shp,addr.bal.10m.cnt,blk.size.byte,miner.sply,reddit.active.users,exch.poloniex.flow.net.ntv,sply.rvv.1y,exch.bitmex.flow.net,exch.bitmex.flow.net.ntv,exch.bitfinex.flow.out,exch.sply.poloniex,txn.gas.limit,txn.tfr.val.med,addr.bal.1k.cnt,fees,sply.addr.bal.10k.ntv,sply.utxo.prof,addr.bal.10.ntv.cnt,exch.kraken.flow.net,blk.gas.limit.avg,iss.rate,txn.cont.dest.cnt,txn.tfr.val.med.ntv,sply.circ,new.iss.usd,miner.sply.ntv,sply.addr.bal.10,blk.wght.total,sply.addr.bal.1,txn.tsfr.val.avg,utxo.loss.cnt,rvt.adj,exch.bitstamp.flow.net,sply.out,txn.erc20.cnt,utxo.age.avg,reddit.subscribers,exch.huobi.flow.net.ntv,iss.rate.day,exch.sply.gemini.ntv,hash.rev,sply.act.1d,miner.1hop.sply,sply.act.10y,sply.rvv.3y,addr.bal.10k.cnt,exch.bitfinex.flow.in.ntv,exch.kraken.flow.in,exch.huobi.flow.out.ntv,txn.tsfr.val.adj,exch.sply.huobi,addr.bal.1.cnt,min.rev.ntv,sply.addr.bal.10k,addr.act.rcv.cnt,exch.sply.kraken,sply.addr.bal.10m,blk.wght.avg,sply.utxo.loss,addr.bal.100.cnt,exch.sply.bitmex.ntv,txn.gas.avg,sply.addr.bal.0.01.ntv,sply.cont.ntv,daily.vol,blk.unc.cnt,exch.gemini.flow.in.ntv,exch.bitmex.flow.out}, --timeseries {exch.bittrex.flow.net,exch.sply.bitstamp,addr.bal.100k.ntv.cnt,exch.sply.binance,utxo.age.med,exch.kraken.flow.out.ntv,exch.flow.out.ntv,diff.avg,utxo.age.val.avg,twitter.followers,blk.cnt,hashrate.30d,sply.addr.bal.1m.ntv,addr.bal.1m.cnt,exch.huobi.flow.in.ntv,min.rev.usd,utxo.prof.cnt,blk.int.avg,exch.binance.flow.in,sply.act.4y,txn.tfr.val.adj.ntv,exch.sply.bittrex.ntv,sply.rvv.4y,blk.unc.rew,exch.sply,exch.sply.usd,exch.binance.flow.net.ntv,fees.ntv,sply.total.iss,hashrate,sply.act.30d,txn.tfr.erc721.cnt,exch.gemini.flow.net.ntv,exch.poloniex.flow.out,exch.sply.kraken.ntv,exch.flow.in.usd,addr.bal.10.cnt,exch.bitstamp.flow.net.ntv,exch.sply.binance.ntv,telegram.users,exch.huobi.flow.net,nvt.adj,addr.bal.1.ntv.cnt,exch.gemini.flow.in,cg.sply.circ,exch.sply.bitfinex.ntv,exch.bitmex.flow.in.ntv,exch.bittrex.flow.out,miner.1hop.sply.ntv,txn.tkn.cnt,addr.bal.1m.ntv.cnt,exch.bitstamp.flow.in.ntv,hash.rev.ntv,txn.tfr.val.ntv,utxo.cnt,addr.bal.0.01.ntv.cnt,exch.bitmex.flow.out.ntv,rvt.adj.90d.ma,sply.act.3y,sply.addr.bal.1k.ntv,sply.addr.bal.1.ntv,sply.rvv.5y,sply.shld,addr.bal.0.001.ntv.cnt,exch.bitfinex.flow.net,exch.poloniex.flow.in,exch.sply.bitmex,txn.tfr.avg.ntv,txn.gas,blk.hgt,exch.gemini.flow.out,exch.sply.bitfinex,sply.act.180d,sply.addr.bal.1m,txn.cnt,exch.binance.flow.in.ntv,exch.poloniex.flow.out.ntv,mcap.realized,sply.act.90d,exch.bitstamp.flow.in,exch.bittrex.flow.in,exch.poloniex.flow.in.ntv,exch.sply.huobi.ntv,exch.flow.out.usd,price,addr.bal.1k.ntv.cnt,addr.bal.100.ntv.cnt,exch.kraken.flow.net.ntv,txn.fee.med,sply.act.1y,txn.cont.call.succ.cnt,txn.tfr.erc20.cnt,addr.bal.10k.ntv.cnt,blk.size.bytes.avg,exch.binance.flow.net,exch.binance.flow.out,sply.rvv.180d,sply.rvv.7d,addr.cnt,exch.bittrex.flow.out.ntv,sply.addr.bal.100.ntv,sply.rvv.2y,sply.top.100,txn.cnt.sec,exch.bitfinex.flow.in,exch.bitfinex.flow.out.ntv,exch.sply.poloniex.ntv,sply.cont.usd,exch.bittrex.flow.net.ntv,exch.flow.out.ntv.incl,sply.addr.bal.0.001.ntv,txn.vol,txn.fee.avg,txn.fee.avg.ntv,real.vol,exch.poloniex.flow.net,exch.kraken.flow.in.ntv,txn.cont.call.cnt,exch.flow.out.usd.incl,exch.flow.in.ntv.incl,new.iss.ntv,fees.pct.rev,exch.gemini.flow.net,exch.bitstamp.flow.out,exch.gemini.flow.out.ntv,exch.kraken.flow.out,addr.act.sent.cnt,exch.bittrex.flow.in.ntv,exch.sply.gemini,sply.act.2y,sply.act.7d,sply.top.1pct,txn.cont.cnt,sply.liquid,addr.bal.100k.cnt,exch.bitfinex.flow.net.ntv,exch.huobi.flow.out,txn.fee.med.ntv,blk.unc.rew.ntv,hashrate.rev,sply.addr.bal.100,sply.addr.bal.100k.ntv,sply.rvv.30d,txn.tsfr.cnt,mcap.dom,act.addr.cnt,exch.binance.flow.out.ntv,sply.act.pct.1y,blk.unc.rew.pct,exch.bitstamp.flow.out.ntv,exch.sply.bittrex,sply.total.iss.ntv,addr.bal.0.1.ntv.cnt,sply.addr.bal.0.1.ntv,sply.top.10pct,exch.sply.bitstamp.ntv,nvt.adj.90d.ma,txn.cont.creat.cnt,exch.huobi.flow.in,exch.flow.in.ntv,sply.act.evr,sply.addr.bal.100k,txn.erc721.cnt,exch.bitmex.flow.in,hashrate.rev.ntv,sply.addr.bal.10.ntv,sply.rvv.90d,mcap.out,miner.rev.total,sply.addr.bal.1k,exch.flow.in.usd.incl,sply.act.5y,txn.gas.limit.avg,mcap.circ,daily.shp,addr.bal.10m.cnt,blk.size.byte,miner.sply,reddit.active.users,exch.poloniex.flow.net.ntv,sply.rvv.1y,exch.bitmex.flow.net,exch.bitmex.flow.net.ntv,exch.bitfinex.flow.out,exch.sply.poloniex,txn.gas.limit,txn.tfr.val.med,addr.bal.1k.cnt,fees,sply.addr.bal.10k.ntv,sply.utxo.prof,addr.bal.10.ntv.cnt,exch.kraken.flow.net,blk.gas.limit.avg,iss.rate,txn.cont.dest.cnt,txn.tfr.val.med.ntv,sply.circ,new.iss.usd,miner.sply.ntv,sply.addr.bal.10,blk.wght.total,sply.addr.bal.1,txn.tsfr.val.avg,utxo.loss.cnt,rvt.adj,exch.bitstamp.flow.net,sply.out,txn.erc20.cnt,utxo.age.avg,reddit.subscribers,exch.huobi.flow.net.ntv,iss.rate.day,exch.sply.gemini.ntv,hash.rev,sply.act.1d,miner.1hop.sply,sply.act.10y,sply.rvv.3y,addr.bal.10k.cnt,exch.bitfinex.flow.in.ntv,exch.kraken.flow.in,exch.huobi.flow.out.ntv,txn.tsfr.val.adj,exch.sply.huobi,addr.bal.1.cnt,min.rev.ntv,sply.addr.bal.10k,addr.act.rcv.cnt,exch.sply.kraken,sply.addr.bal.10m,blk.wght.avg,sply.utxo.loss,addr.bal.100.cnt,exch.sply.bitmex.ntv,txn.gas.avg,sply.addr.bal.0.01.ntv,sply.cont.ntv,daily.vol,blk.unc.cnt,exch.gemini.flow.in.ntv,exch.bitmex.flow.out} Messari timeseries id. Default: txn.vol (default: txn.vol) -i {5m,15m,30m,1h,1d,1w}, --interval {5m,15m,30m,1h,1d,1w} Frequency interval. Default: 1d (default: 1d) -s START, --start START Initial date. Default: A year ago (default: 2021-04-26) -end END, --end END End date. Default: Today (default: 2022-04-26) --include-paid Flag to show both paid and free sources (default: False) -q QUERY [QUERY ...], --query QUERY [QUERY ...] Query to search across all messari timeseries (default: ) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10)``` "},{"id":727,"href":"/OpenBBTerminal/terminal/crypto/dd/news/","title":"News","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: news [-l LIMIT] [-k {news,media}] [--filter {rising,hot,bullish,bearish,important,saved,lol}] [-r {en,de,es,fr,nl,it,pt,ru}] [-s {published_at,domain,title,negative_votes,positive_votes}] [--descend] [-u] [-h] [--export EXPORT] Display most recent news on the given coin from CryptoPanic aggregator platform. [Source: https://cryptopanic.com/]\noptional arguments: -l LIMIT, --limit LIMIT display N number records (default: 10) -k {news,media}, --kind {news,media} Filter by category of news. Available values: news or media. (default: news) --filter {rising,hot,bullish,bearish,important,saved,lol} Filter by kind of news. One from list: rising|hot|bullish|bearish|important|saved|lol (default: None) -r {en,de,es,fr,nl,it,pt,ru}, --region {en,de,es,fr,nl,it,pt,ru} Filter news by regions. Available regions are: en (English), de (Deutsch), nl (Dutch), es (Español), fr (Français), it (Italiano), pt (Português), ru (Русский) (default: en) -s {published_at,domain,title,negative_votes,positive_votes}, --sort {published_at,domain,title,negative_votes,positive_votes} Sort by given column. Default: published_at (default: published_at) --descend Flag to sort in descending order (lowest first) (default: True) -u, --urls Flag to disable urls. If you will use the flag you will hide the column with urls (default: True) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) Example:\n2022 Apr 25, 09:49 (🦋) /crypto/dd/ $ news Most Recent News ┏━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ┃ published_at ┃ title ┃ link ┃ ┡━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ 2022-04-24 │ Major German Bank Applies For Crypto │ https://cryptopanic.com/news/15005355/Maj… │ │ │ Custody License │ │ ├──────────────┼─────────────────────────────────────────────┼────────────────────────────────────────────┤ │ 2022-04-24 │ These Two Companies Will Let You Buy a │ https://cryptopanic.com/news/15005488/The… │ │ │ House with Crypto │ │ ├──────────────┼─────────────────────────────────────────────┼──────────────────────────────────────────── "},{"id":728,"href":"/OpenBBTerminal/terminal/crypto/dd/nonzero/","title":"Nonzero","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: non-zero [-s INITIAL_DATE] [-u END_DATE] [-i {1h, 24h, 10m, 1w, 1month}] [--export {csv,json,xlsx}] [-h] Display addresses with non-zero balance on a certain blockchain over time [Source: https://glassnode.org]\nNumber of unique addresses holding a positive amount of coins.\nSupported assets: BTC, ETH, LTC, AAVE, ABT, AMPL, ANT, ARMOR, BADGER, BAL, BAND, BAT, BIX, BNT, BOND, BRD, BUSD, BZRX, CELR, CHSB, CND, COMP, CREAM, CRO, CRV, CVC, CVP, DAI, DDX, DENT, DGX, DHT, DMG, DODO, DOUGH, DRGN, ELF, ENG, ENJ, EURS, FET, FTT, FUN, GNO, GUSD, HEGIC, HOT, HPT, HT, HUSD, INDEX, KCS, LAMB, LBA, LDO, LEO, LINK, LOOM, LRC, MANA, MATIC, MCB, MCO, MFT, MIR, MKR, MLN, MTA, MTL, MX, NDX, NEXO, NFTX, NMR, Nsure, OCEAN, OKB, OMG, PAX, PAY, PERP, PICKLE, PNK, PNT, POLY, POWR, PPT, QASH, QKC, QNT, RDN, REN, REP, RLC, ROOK, RPL, RSR, SAI, SAN, SNT, SNX, STAKE, STORJ, sUSD, SUSHI, TEL, TOP, UBT, UMA, UNI, USDC, USDK, USDT, UTK, VERI, WaBi, WAX, WBTC, WETH, wNMX, WTC, YAM, YFI, ZRX\narguments: -s DATE --since DATE Start date (default: 2 years before, e.g., 2019-10-22) -u DATE --until DATE End date (default: year before, e.g., 2020-10-22) -i INTERV --interval INTERV Interval frequency (default: 24h) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":729,"href":"/OpenBBTerminal/terminal/crypto/dd/ob/","title":"Ob","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: ob [-e EXCHANGE] [--vs {usdt,usdc,btc}] [-h] [--export EXPORT]\nGet the order book for selected coin\noptional arguments: -e {aax,ascendex,bequant,bibox,bigone,binance,binancecoinm,binanceus,binanceusdm,bit2c,bitbank,bitbay,bitbns,bitcoincom,bitfinex,bitfinex2,bitflyer,bitforex,bitget,bithumb,bitmart,bitmex,bitopro,bitpanda,bitrue,bitso,bitstamp,bitstamp1,bittrex,bitvavo,bkex,bl3p,blockchaincom,btcalpha,btcbox,btcmarkets,btctradeua,btcturk,buda,bw,bybit,bytetrade,cdax,cex,coinbase,coinbaseprime,coinbasepro,coincheck,coinex,coinfalcon,coinflex,coinmate,coinone,coinspot,crex24,cryptocom,currencycom,delta,deribit,digifinex,eqonex,exmo,flowbtc,fmfwio,ftx,ftxus,gateio,gemini,hitbtc,hitbtc3,hollaex,huobi,huobijp,huobipro,idex,independentreserve,indodax,itbit,kraken,kucoin,kucoinfutures,kuna,latoken,lbank,lbank2,liquid,luno,lykke,mercado,mexc,mexc3,ndax,novadax,oceanex,okcoin,okex,okex5,okx,paymium,phemex,poloniex,probit,qtrade,ripio,stex,therock,tidebit,tidex,timex,upbit,vcc,wavesexchange,wazirx,whitebit,woo,xena,yobit,zaif,zb,zipmex,zonda}, --exchange {aax,ascendex,bequant,bibox,bigone,binance,binancecoinm,binanceus,binanceusdm,bit2c,bitbank,bitbay,bitbns,bitcoincom,bitfinex,bitfinex2,bitflyer,bitforex,bitget,bithumb,bitmart,bitmex,bitopro,bitpanda,bitrue,bitso,bitstamp,bitstamp1,bittrex,bitvavo,bkex,bl3p,blockchaincom,btcalpha,btcbox,btcmarkets,btctradeua,btcturk,buda,bw,bybit,bytetrade,cdax,cex,coinbase,coinbaseprime,coinbasepro,coincheck,coinex,coinfalcon,coinflex,coinmate,coinone,coinspot,crex24,cryptocom,currencycom,delta,deribit,digifinex,eqonex,exmo,flowbtc,fmfwio,ftx,ftxus,gateio,gemini,hitbtc,hitbtc3,hollaex,huobi,huobijp,huobipro,idex,independentreserve,indodax,itbit,kraken,kucoin,kucoinfutures,kuna,latoken,lbank,lbank2,liquid,luno,lykke,mercado,mexc,mexc3,ndax,novadax,oceanex,okcoin,okex,okex5,okx,paymium,phemex,poloniex,probit,qtrade,ripio,stex,therock,tidebit,tidex,timex,upbit,vcc,wavesexchange,wazirx,whitebit,woo,xena,yobit,zaif,zb,zipmex,zonda} Exchange to search for order book (default: binance) --vs {usdt,usdc,btc} Quote currency (what to view coin vs) (default: usdt) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":730,"href":"/OpenBBTerminal/terminal/crypto/dd/oi/","title":"Oi","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: oi [-i {0, 1, 2, 4}] [--export {csv,json,xlsx}] [-h] Display the open interest per exchange for a certain cryptocurrency. [Source: https://coinglass.github.io/API-Reference/] Crypto must be loaded (e.g., load btc) before running this feature.\nThe total Bitcoin futures open interest across cryptocurrency exchanges, where open interest is calculated as the estimated notional value of all open futures positions, or the aggregate dollar value of outstanding contract specified BTC deliverables. Includes the largest exchanges with trustworthy reporting of exchange volume metrics.\nInterval:\n ALL: 0 1H: 2 4H: 1 12H: 4  optional arguments: -i INTERV --interval INTERV Interval frequency (default: 0) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":731,"href":"/OpenBBTerminal/terminal/crypto/dd/pi/","title":"Pi","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: pi [-h] [--export EXPORT]\nDisplay asset\u0026rsquo;s project info [Source: https://messari.io]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) Example:\n2022 Jul 13, 07:51 (🦋) /crypto/dd/ $ pi BTC General Info ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Metric ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Project Details │ Bitcoin is the first distributed consensus-based censorship-resistant, permissionless, peer-to-peer payment settlement network with a provably scarce, programmable, native currency. │ │ │ Bitcoin (BTC), the native asset of the Bitcoin blockchain, is the world's first digital currency without a central bank or administrator. The Bitcoin network is an emergent decentralized monetary institution that exists through the interplay │ │ │ between full nodes, miners, and developers. It is set by a social contract that is created and opted into by the users of the network and hardened │ │ │ through \u0026gt;game theory and cryptography. Bitcoin is the first, oldest, and largest cryptocurrency in the world. │ ├────────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Technology Details │ \u0026quot;Bitcoin\u0026quot; is a label used for a protocol and a currency. │ │ │ │ │ │ Bitcoin, the currency, is bits of data usable outside the limitations of the protocol using second-layer solutions like \u0026lt;a href=\u0026quot;https://messari.io/resource/lightning-network\u0026quot;\u0026gt;Lightning Network\u0026lt;/a\u0026gt; payment channels. │ │ │ │ │ │ Bitcoin, the protocol, is a distributed, time-stamped ledger of \u0026lt;a href=\u0026quot;https://messari.io/resource/utxo\u0026quot;\u0026gt;unspent transaction output\u0026lt;/a\u0026gt; (UTXO) transfers stored in an append-only chain of 1MB data blocks. A network of mining and economic \u0026lt;a │ │ │ href=\u0026quot;https://messari.io/resource/node\u0026quot;\u0026gt;nodes\u0026lt;/a\u0026gt; maintains this ledger by validating, propagating, and fighting to include \u0026lt;a href=\u0026quot;https://messari.io/resource/mempool\u0026quot;\u0026gt;mempool\u0026lt;/a\u0026gt; transactions in new blocks. Economic nodes (aka \u0026quot;full nodes\u0026quot;) │ │ │ receive transactions from other network participants, validate them against network consensus rules and double-spend vectors, and propagate the transactions to other full nodes that also validate and propagate. Valid transactions are sent to the │ │ │ network's mempool waiting for mining nodes to confirm them via inclusion in the next block. │ │ │ │ │ │ Mining nodes work to empty the mempool usually in a highest-to-lowest fee order by picking transactions to include in the next block and racing against each other to generate a hash less than the target number set by Bitcoin's difficulty │ │ │ adjustment algorithm. Bitcoin uses a Proof-of-Work (PoW) consensus mechanism to establish the chain of blocks with the most accumulated “work” (a.k.a., energy spent on solved hashes) as the valid chain. Other network peers can cheaply verify the │ │ │ chain’s work. │ │ │ │ │ │ Mining difficulty regularly adjusts to maintain Bitcoin's average ten-minute block schedule. Mining nodes add new blocks to whatever chain has the largest accumulated proof of work maintained by a network of economic nodes with downloaded copies │ │ │ of the same chain. │ │ │ │ │ │ Learn More: │ │ │ Bitcoin Developer's Guide │ │ │ Mastering Bitcoin │ └────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ BTC Public Repositories ┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ Name ┃ Link ┃ License_type ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ Bitcoin Core Repository │ https://github.com/bitcoin/bitcoin │ MIT License │ └─────────────────────────┴────────────────────────────────────┴──────────────┘ BTC Vulnerabilities ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Title ┃ Date ┃ Type ┃ Details ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Value Overflow Incident │ 2010-08-06 04:00:00+00:00 │ Inflation │ On 6 August 2010, a major vulnerability in the bitcoin protocol was spotted. Transactions weren't properly verified before they were included in the transaction log or blockchain, which let │ │ │ │ │ users bypass bitcoin's economic restrictions and create an indefinite number of bitcoins. On 15 August, the vulnerability was exploited; over 184 billion bitcoins were generated in a transaction │ │ │ │ │ and sent to two addresses on the network. Within hours, the transaction was spotted and erased from the transaction log after the bug was fixed and the network forked to an updated version of │ │ │ │ │ the bitcoin protocol. This was the only major security flaw found and exploited in bitcoin's history. │ ├─────────────────────────────────┼───────────────────────────┼───────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Denial of Service Vulnerability │ 2018-09-20 04:00:00+00:00 │ Inflation │ On September 17, Bitcoin Core developers discovered that older versions of Bitcoin Core will crash if they try to process a block containing a transaction that attempts to spend the same input │ │ │ │ │ twice. Such blocks are invalid, so they can only be created by a miner willing to sacrifice their allowed income for creating a block of at least 12.5 BTC (about $80,000 USD as of this writing). │ │ │ │ │ │ │ │ │ │ Soon after discovering the DDoS attack vulnerability, Bitcoin Core developers also discovered an inflation bug which they quickly determined had the same root cause and fix. They decided to │ │ │ │ │ disclose the DDoS vulnerability immediately while keeping the inflation bug quiet. This provided developers time to reach out to miners, businesses, and other affected systems about upgrading │ │ │ │ │ their software, while also providing additional time to fix the exploit. │ │ │ │ │ │ │ │ │ │ https://bitcoincore.org/en/2018/09/18/release-0.16.3/ │ │ │ │ │ https://bitcoincore.org/en/2018/09/20/notice/ │ └─────────────────────────────────┴───────────────────────────┴───────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ "},{"id":732,"href":"/OpenBBTerminal/terminal/crypto/dd/ps/","title":"Ps","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: ps [--vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK}] [--export {csv,json,xlsx}] [-h] Get price and supply related metrics for given coin.\noptional arguments: --vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK} Quoted currency. Default USD (default: USD) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 07:46 (✨) /crypto/dd/ $ ps Coin Information ┌────────────────────────────┬─────────────────────┐ │ Metric │ Value │ ├────────────────────────────┼─────────────────────┤ │ id │ btc-bitcoin │ ├────────────────────────────┼─────────────────────┤ │ name │ Bitcoin │ ├────────────────────────────┼─────────────────────┤ │ symbol │ BTC │ ├────────────────────────────┼─────────────────────┤ │ rank │ 1 │ ├────────────────────────────┼─────────────────────┤ │ circulating_supply │ 18.959 M │ ├────────────────────────────┼─────────────────────┤ │ total_supply │ 18.959 M │ ├────────────────────────────┼─────────────────────┤ │ max_supply │ 21 M │ ├────────────────────────────┼─────────────────────┤ │ beta_value │ 0.896 │ ├────────────────────────────┼─────────────────────┤ │ first_data_at │ 2010-07-17 00:00:00 │ ├────────────────────────────┼─────────────────────┤ │ last_updated │ 2022-02-15 12:43:09 │ ├────────────────────────────┼─────────────────────┤ │ usd_price │ 44.331 K │ ├────────────────────────────┼─────────────────────┤ │ usd_volume_24h │ 108.460 B │ ├────────────────────────────┼─────────────────────┤ │ usd_volume_24h_change_24h │ 122.920 │ ├────────────────────────────┼─────────────────────┤ │ usd_market_cap │ 840.463 B │ ├────────────────────────────┼─────────────────────┤ │ usd_market_cap_change_24h │ 4.540 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_15m │ 0.020 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_30m │ -0.200 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_1h │ -0.100 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_6h │ 1.450 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_12h │ 3.980 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_24h │ 4.530 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_7d │ 2.010 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_30d │ 2.860 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_change_1y │ -6.670 │ ├────────────────────────────┼─────────────────────┤ │ usd_ath_price │ 68.692 K │ ├────────────────────────────┼─────────────────────┤ │ usd_ath_date │ 2021-11-10 16:51:15 │ ├────────────────────────────┼─────────────────────┤ │ usd_percent_from_price_ath │ -35.370 │ └────────────────────────────┴─────────────────────┘ "},{"id":733,"href":"/OpenBBTerminal/terminal/crypto/dd/rm/","title":"Rm","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: rm [--chart] [-h] [--export EXPORT]\nDisplay asset\u0026rsquo;s roadmap [Source: https://messari.io]\noptional arguments: --chart Flag to show chart with coin price and roadmap dates (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":734,"href":"/OpenBBTerminal/terminal/crypto/dd/score/","title":"Score","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: score [--export {csv,json,xlsx}] [-h] In this view you can find different kind of scores for loaded coin. Those scores represents different rankings, sentiment metrics, some user stats and others. You will see CoinGecko scores, Developer Scores, Community Scores, Sentiment, Reddit scores and many others.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:47 (✨) /crypto/dd/ $ score Different Scores for Loaded Coin ┌─────────────────────────────────┬────────────┐ │ Metric │ Value │ ├─────────────────────────────────┼────────────┤ │ Coingecko Rank │ 1.00 │ ├─────────────────────────────────┼────────────┤ │ Coingecko Score │ 80.77 │ ├─────────────────────────────────┼────────────┤ │ Developer Score │ 98.91 │ ├─────────────────────────────────┼────────────┤ │ Community Score │ 72.62 │ ├─────────────────────────────────┼────────────┤ │ Liquidity Score │ 100.25 │ ├─────────────────────────────────┼────────────┤ │ Sentiment Votes Up Percentage │ 83.17 │ ├─────────────────────────────────┼────────────┤ │ Sentiment Votes Down Percentage │ 16.83 │ ├─────────────────────────────────┼────────────┤ │ Public Interest Score │ 0.34 │ ├─────────────────────────────────┼────────────┤ │ Facebook Likes │ │ ├─────────────────────────────────┼────────────┤ │ Twitter Followers │ 4669906.00 │ ├─────────────────────────────────┼────────────┤ │ Reddit Average Posts 48H │ 7.46 │ ├─────────────────────────────────┼────────────┤ │ Reddit Average Comments 48H │ 1298.00 │ ├─────────────────────────────────┼────────────┤ │ Reddit Subscribers │ 3908131.00 │ ├─────────────────────────────────┼────────────┤ │ Reddit Accounts Active 48H │ 5154.00 │ ├─────────────────────────────────┼────────────┤ │ Telegram Channel User Count │ │ ├─────────────────────────────────┼────────────┤ │ Alexa Rank │ 9440.00 │ ├─────────────────────────────────┼────────────┤ │ Bing Matches │ │ └─────────────────────────────────┴────────────┘ "},{"id":735,"href":"/OpenBBTerminal/terminal/crypto/dd/social/","title":"Social","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: social [--export {csv,json,xlsx}] [-h] Shows social media corresponding to loaded coin. You can find there name of telegram channel, urls to twitter, reddit, bitcointalk, facebook and discord.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:47 (✨) /crypto/dd/ $ social Social Media for Loaded Coin ┌───────────┬───────────────────────────────────┐ │ Metric │ Value │ ├───────────┼───────────────────────────────────┤ │ Telegram │ │ ├───────────┼───────────────────────────────────┤ │ Twitter │ https://twitter.com/bitcoin │ ├───────────┼───────────────────────────────────┤ │ Subreddit │ https://www.reddit.com/r/Bitcoin/ │ ├───────────┼───────────────────────────────────┤ │ Facebook │ bitcoins │ └───────────┴───────────────────────────────────┘ "},{"id":736,"href":"/OpenBBTerminal/terminal/crypto/dd/stats/","title":"Stats","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: stats [--vs {UST,EUR,USDC,USDT,GBP,USD}] [--export {csv,json,xlsx}] [-h] Display coin stats\noptional arguments: --vs {UST,EUR,USDC,USDT,GBP,USD} Quote currency (what to view coin vs) (default: USDT) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:47 (✨) /crypto/dd/ $ stats 24 hr Product Stats ┌──────────────┬────────────────┐ │ Metric │ Value │ ├──────────────┼────────────────┤ │ open │ 42551.99 │ ├──────────────┼────────────────┤ │ high │ 44428.47 │ ├──────────────┼────────────────┤ │ low │ 41800 │ ├──────────────┼────────────────┤ │ volume │ 743.03129474 │ ├──────────────┼────────────────┤ │ last │ 44183.84 │ ├──────────────┼────────────────┤ │ volume_30day │ 22665.06104665 │ └──────────────┴────────────────┘ "},{"id":737,"href":"/OpenBBTerminal/terminal/crypto/dd/team/","title":"Team","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: team [-h] [--export EXPORT]\nDisplay asset\u0026rsquo;s team [Source: https://messari.io]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":738,"href":"/OpenBBTerminal/terminal/crypto/dd/tk/","title":"Tk","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: tk [-h] [--export EXPORT\nDisplay asset\u0026rsquo;s tokenomics [Source: https://messari.io]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":739,"href":"/OpenBBTerminal/terminal/crypto/dd/trades/","title":"Trades","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: trades [-e EXCHANGE] [--vs {usdt,usdc,btc}] [-h] [--export EXPORT] [-l LIMIT]\nGet the latest trades for selected coin\noptional arguments: -e {aax,ascendex,bequant,bibox,bigone,binance,binancecoinm,binanceus,binanceusdm,bit2c,bitbank,bitbay,bitbns,bitcoincom,bitfinex,bitfinex2,bitflyer,bitforex,bitget,bithumb,bitmart,bitmex,bitopro,bitpanda,bitrue,bitso,bitstamp,bitstamp1,bittrex,bitvavo,bkex,bl3p,blockchaincom,btcalpha,btcbox,btcmarkets,btctradeua,btcturk,buda,bw,bybit,bytetrade,cdax,cex,coinbase,coinbaseprime,coinbasepro,coincheck,coinex,coinfalcon,coinflex,coinmate,coinone,coinspot,crex24,cryptocom,currencycom,delta,deribit,digifinex,eqonex,exmo,flowbtc,fmfwio,ftx,ftxus,gateio,gemini,hitbtc,hitbtc3,hollaex,huobi,huobijp,huobipro,idex,independentreserve,indodax,itbit,kraken,kucoin,kucoinfutures,kuna,latoken,lbank,lbank2,liquid,luno,lykke,mercado,mexc,mexc3,ndax,novadax,oceanex,okcoin,okex,okex5,okx,paymium,phemex,poloniex,probit,qtrade,ripio,stex,therock,tidebit,tidex,timex,upbit,vcc,wavesexchange,wazirx,whitebit,woo,xena,yobit,zaif,zb,zipmex,zonda}, --exchange {aax,ascendex,bequant,bibox,bigone,binance,binancecoinm,binanceus,binanceusdm,bit2c,bitbank,bitbay,bitbns,bitcoincom,bitfinex,bitfinex2,bitflyer,bitforex,bitget,bithumb,bitmart,bitmex,bitopro,bitpanda,bitrue,bitso,bitstamp,bitstamp1,bittrex,bitvavo,bkex,bl3p,blockchaincom,btcalpha,btcbox,btcmarkets,btctradeua,btcturk,buda,bw,bybit,bytetrade,cdax,cex,coinbase,coinbaseprime,coinbasepro,coincheck,coinex,coinfalcon,coinflex,coinmate,coinone,coinspot,crex24,cryptocom,currencycom,delta,deribit,digifinex,eqonex,exmo,flowbtc,fmfwio,ftx,ftxus,gateio,gemini,hitbtc,hitbtc3,hollaex,huobi,huobijp,huobipro,idex,independentreserve,indodax,itbit,kraken,kucoin,kucoinfutures,kuna,latoken,lbank,lbank2,liquid,luno,lykke,mercado,mexc,mexc3,ndax,novadax,oceanex,okcoin,okex,okex5,okx,paymium,phemex,poloniex,probit,qtrade,ripio,stex,therock,tidebit,tidex,timex,upbit,vcc,wavesexchange,wazirx,whitebit,woo,xena,yobit,zaif,zb,zipmex,zonda} Exchange to search for order book (default: binance) --vs {usdt,usdc,btc} Quote currency (what to view coin vs) (default: usdt) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":740,"href":"/OpenBBTerminal/terminal/crypto/dd/twitter/","title":"Twitter","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: twitter [-l N] [-s {date,user_name,status,retweet_count,like_count}] [--descend] [--export {csv,json,xlsx}] [-h] Show last 10 tweets for given coin. You can display only N number of tweets with \u0026ndash;limit parameter. You can sort data by date, user_name, status, retweet_count, like_count \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. Displays: date, user_name, status, retweet_count, like_count\noptional arguments: -l N, --limit N Limit of records (default: 10) -s {date,user_name,status,retweet_count,like_count}, --sort {date,user_name,status,retweet_count,like_count} Sort by given column. Default: date (default: date) --descend Flag to sort in descending order (lowest first) (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:49 (✨) /crypto/dd/ $ twitter Twitter Timeline ┌────────────┬────────────────┬──────────────────────────────────────────────────────────────────────────────────┬───────────────┬────────────┐ │ date │ user_name │ status │ retweet_count │ like_count │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-10-27 │ bitcoincoreorg │ Bitcoin Core 0.20.2 (backports) was released It is available from │ 67 │ 153 │ │ 10:55:48 │ │ https://t.co/ea0sMBjrp2 Release mail: https://t.co/KahVJFcZ9d │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-09-13 │ bitcoincoreorg │ Bitcoin Core 22.0 was released! It is available from https://t.co/WpMuMaejz1 │ 366 │ 1065 │ │ 22:01:09 │ │ Release mail: https://t.co/ZvZKXZ0iLD │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-07-20 │ LukeDashjr │ PSA: @BitcoinCoreOrg (#Bitcoin Core) is NOT soliciting or performing closed │ 88 │ 0 │ │ 21:51:31 │ │ testing of any beta or other software.If you get an email inviting you, be │ │ │ │ │ │ aware it is spam and their \u0026quot;testing version\u0026quot; is almost certainly malware.Note: │ │ │ │ │ │ the \u0026quot;From\u0026quot; on emails is NOT secure and faked. │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-07-03 │ bitcoincoreorg │ A reminder that Bitcoin Core is available for download worldwide through │ 192 │ 577 │ │ 08:25:13 │ │ https://t.co/WpMuMaejz1 . It is also available through BitTorrent. │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-06-03 │ pwuille │ In version 0.21 @bitcoincoreorg added support for Tor V3: │ 73 │ 0 │ │ 17:16:25 │ │ https://t.co/yIUqYjqQnGFor the next major release we're dropping V2 support. │ │ │ │ │ │ Their usability will rapidly diminish the next few months, as they're deprecated │ │ │ │ │ │ and @torproject will soon remove support. https://t.co/XEUbSnVmCe │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-05-02 │ bitcoincoreorg │ Bitcoin Core 0.21.1 was released! It is available from https://t.co/WpMuMaejz1 │ 159 │ 583 │ │ 07:21:00 │ │ Release mail: https://t.co/TuFxSkQABE │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-04-19 │ bitcoincoreorg │ Bitcoin Core 0.21.1 release candidate 1 available https://t.co/BSQjJiRuHw │ 59 │ 222 │ │ 04:59:28 │ │ https://t.co/KQMiZFHnZy │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-01-19 │ achow101 │ I'm launching a Bitcoin Core usage survey: https://t.co/O3mbn4vnCPThe survey │ 106 │ 0 │ │ 20:59:02 │ │ will help us learn about who, how, and why people use Bitcoin Core so that we │ │ │ │ │ │ can improve it in the future. If you have any feedback about the software you │ │ │ │ │ │ want to leave, this is the place to do it. │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2021-01-14 │ bitcoincoreorg │ Bitcoin Core 0.21.0 was released It is available from https://t.co/jnWN8LRX75 │ 283 │ 907 │ │ 14:09:31 │ │ Release mail: https://t.co/6dFNUj3K4d │ │ │ ├────────────┼────────────────┼──────────────────────────────────────────────────────────────────────────────────┼───────────────┼────────────┤ │ 2020-08-01 │ bitcoincoreorg │ Bitcoin Core 0.20.1 was released It is available from https://t.co/Uy9NJ11mih │ 216 │ 544 │ │ 13:15:33 │ │ (main website update pending) Release mail: https://t.co/95MXgRvN7Z │ │ │ └────────────┴────────────────┴──────────────────────────────────────────────────────────────────────────────────┴───────────────┴────────────┘ "},{"id":741,"href":"/OpenBBTerminal/terminal/crypto/dd/web/","title":"Web","parent":"Introduction to Cryptocurrency Due Diligence","content":"usage: web [--export {csv,json,xlsx}] [-h] Websites found for given Coin. You can find there urls to homepage, forum, announcement site and others.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:49 (✨) /crypto/dd/ $ web Websites for Loaded Coin ┌────────────────────┬──────────────────────────┐ │ Metric │ Value │ ├────────────────────┼──────────────────────────┤ │ Homepage │ http://www.bitcoin.org │ ├────────────────────┼──────────────────────────┤ │ Official Forum Url │ https://bitcointalk.org/ │ ├────────────────────┼──────────────────────────┤ │ Announcement Url │ │ └────────────────────┴──────────────────────────┘ "},{"id":742,"href":"/OpenBBTerminal/terminal/crypto/defi/anchor/","title":"Anchor","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: anchor [--transactions] [--address ADDRESS] [-h] [--export {csv,json,xlsx}] Displays anchor protocol earnings data of a certain terra address [Source: https://cryptosaurio.com/]\noptional arguments: --transactions Flag to show transactions history in anchor earn --address ADDRESS Terra address. Valid terra addresses start with 'terra' (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Mar 18, 14:29 (✨) /crypto/defi/ $ anchor terra13kc0x8kr3sq8226myf4nmanmn2mrk9s5s9wsnz --transactions "},{"id":743,"href":"/OpenBBTerminal/terminal/crypto/defi/aterra/","title":"Aterra","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: aterra [--asset {ust,luna,sdt}] [--address ADDRESS] [-h] [--export {csv,json,xlsx}] Displays the 30-day history of an asset in a certain terra address. [Source: https://terra.engineer/]\noptional arguments: --asset {ust,luna,sdt} Terra asset {ust,luna,sdt} Default: ust (default: ust) --address ADDRESS Terra address. Valid terra addresses start with 'terra' (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:00 (✨) /crypto/defi/ $ aterra --asset luna --address terra18vnrzlzm2c4xfsx382pj2xndqtt00rvhu24sqe "},{"id":744,"href":"/OpenBBTerminal/terminal/crypto/defi/ayr/","title":"Ayr","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: ayr [-h] [--export {csv,json,xlsx}] Displays the 30-day history of the Anchor Yield Reserve. An increasing yield reserve indicates that the return on collateral staked by borrowers in Anchor is greater than the yield paid to depositors. A decreasing yield reserve means yield paid to depositors is outpacing the staking returns of borrower\u0026rsquo;s collateral. TLDR: Shows the address that contains UST that is paid on anchor interest earn. [Source: https://terra.engineer/]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":745,"href":"/OpenBBTerminal/terminal/crypto/defi/dpi/","title":"Dpi","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: dpi [-l LIMIT] [-s {Rank,Name,Chain,Category,TVL,Change_1D}] [--ascend] [-h] [--export {csv,json,xlsx}] Displays DeFi Pulse crypto protocols. [Source: https://defipulse.com/]\noptional arguments: -l LIMIT, --limit LIMIT Number of records to display (default: 15) -s {Rank,Name,Chain,Category,TVL,Change_1D}, --sort {Rank,Name,Chain,Category,TVL,Change_1D} Sort by given column. Default: Rank (default: Rank) --ascend Flag to sort in ascending order (lowest first) (default: True) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:06 (✨) /crypto/defi/ $ dpi DeFi Pulse Crypto Protocols ┌──────┬────────────────┬────────────┬─────────────┬─────────┬───────────┐ │ Rank │ Name │ Chain │ Sector │ TVL │ 1 Day (%) │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 0 │ Maker │ Ethereum │ Lending │ $17.29B │ 2.82% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 1 │ Curve Finance │ Ethereum │ DEXes │ $11.40B │ -1.05% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 2 │ Aave │ Multichain │ Lending │ $10.73B │ -1.51% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 3 │ Convex Finance │ Ethereum │ Assets │ $10.34B │ 2.07% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 4 │ Compound │ Ethereum │ Lending │ $7.17B │ 3.39% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 5 │ InstaDApp │ Ethereum │ Lending │ $5.75B │ 1.62% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 6 │ yearn.finance │ Ethereum │ Assets │ $3.15B │ 1.27% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 7 │ Uniswap │ ethereum │ DEXes │ $2.28B │ 50.80% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 8 │ Balancer │ Ethereum │ DEXes │ $2.19B │ -1.68% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 9 │ Bancor │ Ethereum │ DEXes │ $1.84B │ -0.05% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 10 │ SushiSwap │ Ethereum │ DEXes │ $1.83B │ 4.16% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 11 │ Liquity │ Ethereum │ Lending │ $1.49B │ 4.37% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 12 │ dYdX │ Ethereum │ Derivatives │ $986.7M │ -0.36% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 13 │ Rari Capital │ Ethereum │ Assets │ $935.3M │ 3.25% │ ├──────┼────────────────┼────────────┼─────────────┼─────────┼───────────┤ │ 14 │ Flexa │ Ethereum │ Payments │ $842.1M │ 0.36% │ └──────┴────────────────┴────────────┴─────────────┴─────────┴───────────┘ "},{"id":746,"href":"/OpenBBTerminal/terminal/crypto/defi/dtvl/","title":"Dtvl","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: dtvl [-d DAPPS] [--export {csv,json,xlsx}] [-h] Displays historical TVL of different dApps. [Source: https://docs.llama.fi/api]\noptional arguments: -d DAPPS, --dapps DAPPS dApps to search historical TVL. Should be split by , e.g.: anchor,sushiswap,pancakeswap (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\nThe available dApps are:\n0.exchange 1bch 1inch-network 1swap 88mph 8ightdao aave aavegotchi abracadabra acoconut across acryptos acumen adamant-finance adena-finance afraswap agarthadao agave aladdin-dao alchemist alchemix aldrin algofi aliensfarm alita-finance alium-swap alkemi allbridge allinx almond alpaca-city alpaca-finance alpha-finance amogus-dao amun-tokens amy-finance anchor anchorswap angle ankr annex ante-finance aperocket apeswap apollodao apricot-finance apwine apy-finance aquarius ara-finance arbicheems arbinyan arbirise-finance arbis-finance arcx arenaswap arkadiko armor arrow artemis-protocol asgard-dao asgard-finance asol astroport atlantis-loans atlas-usv atmossoft atrix auctus augmented-finance augur augury-finance auroraswap autofarm autoshark avalaunch avalps avaviking avaware axedao axial aztec b.protocol babylon-finance babypig-finance babyswap back-finance bacondao badger-dao bagels-finance baguette baker-guild bakeryswap balanced balancer bamboodefi bananafarm banano bancor banksy-farm bao-finance barnbridge base-protocol basis-cash basketdao beanstalk bear-finance bearn becoswap beefy-finance beethoven-x beglobal-finance behodler bella-protocol belt-finance benqi benswap bepswap beta-finance bifi big-data-protocol billion-happiness bishares biswap bitant bitpif blackbird-finance blackpool blizzard blizz-finance bnbminer-finance bogged-finance bondappetit boofinance borgswap boringdao bossswap bouje-finance bourbon-dao brahma bridge-mutual brinc bring.finance brokoli-network bscstation bscswap bt.finance btc-proxy btcst buffaloswap bumper-finance bunny bunnypark bxh cafeswap cakedao canary cap capital-dao carbon-finance carbonswap cardstarter caribou-finance cashcow-finance cashcow-protocol cashio cbridge cerberusdao chad-finance chainge-finance chainport channels-finance chargedefi charm-finance cheesedao cherryswap chest-finance chfry-finance chickenswap chikn-farm chronicle chronoswap clipper cobraswap coffin-finance cofix coinswap-space coinwind colony cometh complifi complus-network component composable-finance compound connext convergence convex-finance cook-finance corgiswap cougarswap coup-farm cover-protocol cozy-finance cream-finance creamswap crodex cronaswap crow-finance crunchy-network cryptex cryptoyieldfocus crystl-finance cub-finance curve cvault-finance cvi-finance cyber-dog cyberfantasyfembots cybertime cycle-finance cyclone cyclos dao-maker daoventures dapp-account-dao dark-matter ddex decubate deepseadao deerfi defibox defichain-dex defichain-loans defidollar-dao defi-halal defi-kingdoms defily definer definix defiplaza defirex defisaver defis-network defi-swap defi-yield-protocol defrost defyswap dehive demeter depth deri-protocol derivadex deversifi dev-protocol dforce dfx-finance dfyn-network dhedge dino.exchange dinosaur-eggs dinoswap dios-finance dodo doki-doki-finance domani-protocol donkey dopex dopple-finance draco-force dracula drift drops duckydefi dungeonswap dydx ecurve eggtartswap element-finance elephantdex eleven-finance elk ellipsis-finance embr-finance emerald-swap emiswap empiredex energiswap enterdao entropyfi enzyme-finance eosauthority-rex erasure ergodex ester-finance ethernity-chain euler euphoria everestdao everipedia everrise evolutionland exinswap exodia fabric fantohm fantompup farmersonly farm-hero feeder-finance fegex fei-protocol ferrum fiat-dao filda finnexus firebird firedao flame-defi flamincome flamingo-finance flare-loans flarex flashstake flexa float-capital float-protocol fluity flux-protocol fodl-finance forcedao fortress fortube fortune-dao fractional-art francium frax freeliquid freeriver friktion frost-finance ftm-frens fuji-dao furucombo fusefi futureswap fuzz-finance gains-network gaj-finance galatea-cash galaxygoogle-dao gamma gearbox geist-finance genesis-finance genesys genshiro geyser gibxswap giza-dao glide-finance globiance gmx gnosis goldfinch golff-protocol gondola-finance goose-finance goswap governor-dao grassland-finance gravity-finance grim-finance gro growth-defi guard(helmet) g-uni gyro hades-swap hakka-finance halodao handle-fi harvest-finance hbtc hector-dao hegic helios-prime hermes-defi hex hfione honeyfarm honeyswap hop-protocol hotpot-finance hpdex hswap huckleberry hundred-finance hunny-finance hurricaneswap hyper-finance hyperswap ice-colony ice-dao ichi-farm ideamarket idex idle-finance ifpool ifswap illuvium impermax-finance impossible-finance imtoken index-coop indexed-finance injective-protocol ink-protocol instadapp instrumental-finance insurace integral inverse-finance invictusdao iron-finance itrust-finance jade-protocol jaguarswap jarvis-network jet jetfuel-finance jetswap jpool jswap justcryptos justlend juststables kaco-finance kafe-finance kaidex kalata karma-dao karura-dollar-(kusd) karura-liquid-staking karura-swap katana katana-dex kava kava-lend kava-swap kawaiiswap kebab-finance keep3r-network keeperdao keep-network kimochi kine-finance kingdefi kitty-finance klayswap klend klima-dao klondike-finance knightswap-finance knit-finance koala-defi kogefarm kokomoswap kokoswap kolibri kronos-dao kryptodex kswap-finance kuswap kuu-finance kwikswap kyber larix latteswap layer2-finance leaguedao lemonswap lendhub leonicornswap levinswap lido lien life-dao lightning-network linear-finance liqee liquid-driver liquidrium liquidswap liquity lixir-finance lobis longdrink loop-finance loopring lootswap loterra louverture luaswap lumenswap luxor-money lydia lyra macaronswap magic-land magnet-dao maiar-exchange makerdao makiswap mama-dao mango-markets manifest mantra-dao maple marginswap marinade-finance market mars-ecosystem marshmallowdefi mars-poolin matrix-farm maximizer mcdex mdex mean-finance mensa-protocol mento meowswap mercurial-finance mercurity merit-circle merlin meso-finance metacrono meta-pool metareserve metaversepro metronome mfinance midasdao mimas-finance mimo-defi miningtycoon miniswap minmax-finance mint-club mintswap mirai mirror mistswap mm-finance mm-optimizer mobius-finance mobius-money mobox mochifi mochiswap mojitoswap moneyonchain monox moola-market moondao moonfarm mooniswap moonpot moonswap morpheus-swap mstable muesliswap multichain multi-chain-miner multiplier mushrooms-finance n3rd-finance nacho-finance naos-finance nasdex nearpad necc neku nemesis-dao nerve nerve-network nest-protocol netswap neutrino newdex newland nexus-mutual nexus-protocol nft20 nftb nftx nidhi-dao niifi nileriver niob-finance notional nowswap nsure nuls numbers-protocol o2-dao o3-swap oakfarm obswap ocean-protocol ocp-finance oddz oh-finance ola-finance olive-cash olympus-dao omicron omm ondo-finance one-cash onedao-finance oneswap only1 onx-finance ooki oolongswap opendao openleverage openocean openswap opium optidoge optinyan opyn oraichain orca orcadao origin-dollar orion-money orion-protocol osmosis otterclam ouchi-finance overnight ovr oxygen pacoca padswap paint-swap pala paladin-finance pancakeswap pandaswap pando pangolin pantherswap papa-dao paraswap parrot-defi parrot-protocol partyswap peakdefi pendle penguin-finance percent-finance perlin perpetual-protocol phoenix-finance photonswap-finance pickle pidao-finance piedao piggy piggybank-dao piggy-finance pika-protocol pilot-protocol pinkswap pinyottas pippi piratedao pizza planet-finance platypus-finance plenty-defi pnetwork pods-finance pole-aggregator polkaex polkamarkets polkastarter polkaswap polly-finance polycat polydex polydex-cryption-network polygon-bridge-\u0026amp;-staking polygonfarm-finance polymarket polyquity polyroll polyshield polywhale-finance polyyeld-finance poof-cash pooltogether popsicle-finance pop-town port-finance position-exchange potluck-protocol powerbomb-finance powerpool predictcoin premia primitive pstake psyoptions pumpkin-dao purefi pureswap pylon-protocol qian qidao qilin quarry qubit quickswap quipuswap rabbit-finance radao ragnarokdao ramp ram-protocol rari-capital rarify raven raydium realt reaper-farm redacted-cartel ref-finance reflexer renvm reserve retreeb retrodefi revault reverse revest-finance ribbon-finance risq-protocol rivrkitty robiniaswap robo-advisor-for-yield robo-vault rocket-pool rocketswap romedao rose rskswap rubicon r-u-generous ruler saber sablier-finance saddle-finance safedollar safeohm safeswap saffron-finance sakeperp salem-finance samodao sapphire-defi sashimiswap scarab-finance scarecrow-finance scientix scream seadex secret-bridge secret-network secretswap securedao seeder-finance sencha senpaiswap sentre serum serum-swap set-protocol s-finance shadecash shapeshift sharedstake sheepdex sheesha-finance shell-protocol sherlock shiba-fantom shibance shibaswap shield shinobi sifchain singular-farm siren skeleton-finance smartcoin smartdex smolswap smoothy snowball snowbank snowcatdao snowdog snowswap socean socialswap soda-protocol solana-farm solarbeam solend solo-top solyard sonicswap soulswap sovryn soy-finance spartacus spectrum-protocol sperax-usd spicy-dao spicyswap spiritdao spiritswap spookyswap squiddao squid-defi squid-stake stabilize stacker-ventures stacks-staking stader stafi stakedao stakehound stakesteak stakewise standard-protocol stand-cash stargate-finance starterra steakbank-finance stellarx stonedefi stormswap strike strudel-finance summit-defi sumswap sun.io sunflower-finance sunflowerswap sunny sunrise-gaming sunswap superfarm superfluid sushiswap suterusu swamp-finance swap-cat swapmatic swapp swapperchan swapr swarm-markets swerve swift-finance swing-dao swipe swop symmetric synapse sync-network synlev synthetify synthetix taichi talent-protocol tangoswap tarot tectonic teddy-cash telcoin telos-swap templar-dao temple-dao tempodao tempus-finance tendieswap tenet ten-finance terraswap tesseract tethys-finance tetu tezos-liquidity-baking thales the-dragons-lair the-grand-banks the-sandbox the-seed-farm thetanuts thorchain thoreum-finance thorstarter thorusfi tidal-finance timewarp tinlake tinyman tokemak tokenlon tomb-finance tomofinance ton-swap topshelf tornadao tornado-cash totemfi tracer trader-joe tranche-finance tranchess tranquil-finance trava-finance treedefi trick-or-treat-farm trisolaris tropical-finance truefi ttswap tulip-protocol twindex typhoon-cash ubeswap ubiquity-dao umami-finance uma-protocol umbrella-network umbria-network unagii undead-finance unfederalreserve unicly unifarm unifi unilend union-finance unipower unirex-finance uniswap unite-finance unit-protocol unitrade universe-finance universe-xyz unore unslashed unusdao upfi-network valhalladao valkyrie valuedefi value-liquid vampireswap vanilla vaporwave varen vaulty-finance vee-finance venus vesper vexchange vigor vikingsfinance viperswap vires-finance volmex vortex-dao voyager vultureswap vvs-finance wagmidao wagyuswap waka-finance wannaswap wanswap-dex wardenswap warp-protocol wasabix waterloan wault waves-exchange wbtc wepiggy westarter whale-loans wheat-protocol whiteheart wild-credit wing-finance wingswap wisteria-swap witswap wonderland wraithswap wrapped wrapped-bnb wrap-protocol xdai-stake-bridge xdefi xdollar xenophon xensa xeus xmas-past xsigma xtoken xusd-money yam-finance yapeswap yaxis yearn-finance yel-finance yetiswap yfdai yfii yieldly yield-protocol yield-yak yogi-finance yokaiswap yoshi-exchange youswap youves ysl.io zabu-finance zai-finance zencha-finance zenlink zeus-finance zigzag zilswap zkswap zlot zodiacdao zoocoin zookeeper zoomswap zunami zyxswap "},{"id":747,"href":"/OpenBBTerminal/terminal/crypto/defi/gacc/","title":"Gacc","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: gacc [-l LIMIT] [--cumulative] [-k {active,total}] [--descend] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Displays terra blockchain account growth history. [Source: https://fcd.terra.dev/swagger]\noptional arguments: -l LIMIT, --limit LIMIT Number of days to show (default: 90) --cumulative Show cumulative or discrete values. For active accounts only discrete value are available (default: True) -k {active,total}, --kind {active,total} Total account count or active account count. Default: total (default: total) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":748,"href":"/OpenBBTerminal/terminal/crypto/defi/gdapps/","title":"Gdapps","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: gdapps [-l LIMIT] [-h] [--export {csv,json,xlsx}] Display top dApps (in terms of TVL) grouped by chain. [Source: https://docs.llama.fi/api]\noptional arguments: -l LIMIT, --limit LIMIT Number of top dApps to display (default: 40) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":749,"href":"/OpenBBTerminal/terminal/crypto/defi/govp/","title":"Govp","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: govp [-l LIMIT] [-s {submitTime,id,depositEndTime,status,type,title,Yes,No}] [--status {voting,deposit,passed,rejected,all}] [--descend] [-h] [--export {csv,json,xlsx}] Displays terra blockchain governance proposals list. [Source: https://fcd.terra.dev/swagger]\noptional arguments: -l LIMIT, --limit LIMIT Number of proposals to show (default: 10) -s {submitTime,id,depositEndTime,status,type,title,Yes,No}, --sort {submitTime,id,depositEndTime,status,type,title,Yes,No} Sort by given column. Default: id (default: id) --status {voting,deposit,passed,rejected,all} Status of proposal. Default: all (default: all) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:19 (✨) /crypto/defi/ $ govp ┌─────┬──────────────────┬──────────────────┬──────────┬──────────────────────┬────────────────────────────────────────┬─────┬────┬─────────┬──────────────┐ │ Id │ Submit time │ Deposit end time │ Status │ Type │ Title │ Yes │ No │ Abstain │ No with veto │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 191 │ 2022-02-14 04:11 │ 2022-02-28 04:11 │ Deposit │ Text Proposal │ Whithdraw money on cash machine with │ 0 │ 0 │ 0 │ 0 │ │ │ │ │ │ │ QRcode using Terra mobile app │ │ │ │ │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 190 │ 2022-02-12 09:42 │ 2022-02-26 09:42 │ Deposit │ Text Proposal │ test vote │ 0 │ 0 │ 0 │ 0 │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 189 │ 2022-02-05 12:28 │ 2022-02-19 12:28 │ Deposit │ Text Proposal │ The former CEO of Ozys (TK) refuses to │ 0 │ 0 │ 0 │ 0 │ │ │ │ │ │ │ join the TFL. │ │ │ │ │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 188 │ 2022-02-04 00:41 │ 2022-02-18 00:41 │ Deposit │ Text Proposal │ Keeping an eye on the emerging market │ 0 │ 0 │ 0 │ 0 │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 187 │ 2022-02-03 02:13 │ 2022-02-17 02:13 │ Deposit │ Text Proposal │ Movement of locked values ​​between │ 0 │ 0 │ 0 │ 0 │ │ │ │ │ │ │ accounts of the same validator │ │ │ │ │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 186 │ 2022-02-02 01:54 │ 2022-02-16 01:54 │ Passed │ Community-pool Spend │ 5-Yr. [REDACTED] Sports Partnership \u0026amp; │ 91 │ 0 │ 0 │ 0 │ │ │ │ │ │ │ Terra Community Trust (TCT) Formation │ │ │ │ │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 185 │ 2022-02-02 01:35 │ 2022-02-16 01:35 │ Passed │ Parameter-change │ Improvements to Liquidity/Minting │ 75 │ 9 │ 12 │ 0 │ │ │ │ │ │ │ Parameters │ │ │ │ │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 181 │ 2022-01-31 02:00 │ 2022-02-14 02:00 │ Passed │ Community-pool Spend │ Terra Bites v2 2022 │ 77 │ 13 │ 5 │ 1 │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 180 │ 2022-01-27 01:26 │ 2022-02-10 01:26 │ Passed │ Community-pool Spend │ Onboard UST to zkSync and StarkNet │ 97 │ 0 │ 1 │ 0 │ │ │ │ │ │ │ through ZigZag Exchange │ │ │ │ │ ├─────┼──────────────────┼──────────────────┼──────────┼──────────────────────┼────────────────────────────────────────┼─────┼────┼─────────┼──────────────┤ │ 179 │ 2022-01-19 00:05 │ 2022-02-02 00:05 │ Rejected │ Parameter-change │ Increase The Wasm Code Size │ 80 │ 3 │ 5 │ 0 │ └─────┴──────────────────┴──────────────────┴──────────┴──────────────────────┴────────────────────────────────────────┴─────┴────┴─────────┴──────────────┘ "},{"id":750,"href":"/OpenBBTerminal/terminal/crypto/defi/lcsc/","title":"Lcsc","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: lcsc [-d DAYS] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [-l LIMIT] Display Luna circulating supply changes stats. [Source: Smartstake.io] Follow these steps to get the key token:\n Head to https://terra.smartstake.io/ Right click on your browser and choose Inspect Select Network tab (by clicking on the expand button next to Source tab) Go to Fetch/XHR tab, and refresh the page Get the option looks similar to the following: listData?type=history\u0026amp;dayCount=30 Extract the key and token out of the URL  optional arguments: -d DAYS, --days DAYS Number of days to display. Default: 30 days (default: 30) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 5) "},{"id":751,"href":"/OpenBBTerminal/terminal/crypto/defi/ldapps/","title":"Ldapps","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: ldapps [-l LIMIT] [-s {tvl,symbol,category,chains,change_1h,change_1d,change_7d,name}] [--descend] [--desc] [-h] [--export {csv,json,xlsx}] Display information about listed DeFi Protocols on DeFi Llama. [Source:https://docs.llama.fi/api]\noptional arguments: -l LIMIT, --limit LIMIT Number of records to display (default: 10) -s {tvl,symbol,category,chains,change_1h,change_1d,change_7d,name}, --sort {tvl,symbol,category,chains,change_1h,change_1d,change_7d,name} Sort by given column. Default: tvl (default: tvl) --descend Flag to sort in descending order (lowest first) (default: False) --desc Flag to display description of protocol (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:24 (✨) /crypto/defi/ $ ldapps ┌──────────────────────────┬────────┬──────────┬──────────────────────────────────────────────────┬───────────────┬───────────────┬───────────────┬──────────┐ │ Name │ Symbol │ Category │ Chains │ Change 1H (%) │ Change 1D (%) │ Change 7D (%) │ TVL ($) │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ Curve │ CRV │ Dexes │ Ethereum, Avalanche, Fantom, Polygon, Arbitrum, │ 0.00 │ 1.26 │ 1.24 │ 19.752 B │ │ │ │ │ xDai, Harmony, Optimism │ │ │ │ │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ MakerDAO │ MKR │ CDP │ Ethereum │ 0.00 │ 4.68 │ -0.35 │ 17.551 B │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ Convex Finance │ CVX │ Yield │ Ethereum │ -0.00 │ 1.98 │ 0.40 │ 13.657 B │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ AAVE │ AAVE │ Lending │ Ethereum, Avalanche, Polygon │ 0.00 │ 3.06 │ -0.02 │ 13.597 B │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ WBTC │ WBTC │ Bridge │ Ethereum │ 0.13 │ 5.03 │ 1.06 │ 11.633 B │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ Polygon Bridge \u0026amp; Staking │ MATIC │ Chain │ Polygon │ 0.00 │ -1.84 │ 1.42 │ 10.344 B │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ Lido │ LDO │ Staking │ Ethereum, Terra, Solana │ 0.00 │ 8.70 │ 0.42 │ 9.626 B │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ Anchor │ ANC │ Lending │ Terra │ -0.00 │ 5.25 │ 5.51 │ 8.401 B │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ Uniswap │ UNI │ Dexes │ Ethereum, Polygon, Arbitrum, Optimism │ 0.78 │ 5.38 │ 0.13 │ 7.652 B │ ├──────────────────────────┼────────┼──────────┼──────────────────────────────────────────────────┼───────────────┼───────────────┼───────────────┼──────────┤ │ Multichain │ MULTI │ Bridge │ Fantom, Avalanche, Ethereum, Binance, Moonriver, │ 0.00 │ 3.05 │ -5.37 │ 7.305 B │ │ │ │ │ Arbitrum, Harmony, OKExChain, Polygon, Telos, │ │ │ │ │ │ │ │ │ Heco, xDai, Kucoin, Syscoin │ │ │ │ │ └──────────────────────────┴────────┴──────────┴──────────────────────────────────────────────────┴───────────────┴───────────────┴───────────────┴──────────┘ "},{"id":752,"href":"/OpenBBTerminal/terminal/crypto/defi/newsletter/","title":"Newsletter","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: newsletter [-l LIMIT] [-h] [--export {csv,json,xlsx}] Display DeFi related substack newsletters. [Source: substack.com]\noptional arguments: -l LIMIT, --limit LIMIT Number of records to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:26 (✨) /crypto/defi/ $ newsletter Substack Newsletters ┌───────────────────────────────────────────────────┬─────────────────────┬─────────────────────────────────────────────────────────────────────────┐ │ Title │ Date │ Link │ ├───────────────────────────────────────────────────┼─────────────────────┼─────────────────────────────────────────────────────────────────────────┤ │ DEBRIEF - Crypto in Washington | Congressman Tom │ 2022-02-14 11:30:49 │ https://shows.banklesshq.com/p/debrief-crypto-in-washington-congressman │ │ Emmer │ │ │ ├───────────────────────────────────────────────────┼─────────────────────┼─────────────────────────────────────────────────────────────────────────┤ │ 105 - Crypto in Washington | Congressman Tom │ 2022-02-14 11:30:48 │ https://shows.banklesshq.com/p/-105-crypto-in-washington-congressman │ │ Emmer │ │ │ ├───────────────────────────────────────────────────┼─────────────────────┼─────────────────────────────────────────────────────────────────────────┤ │ EARLY ACCESS - Crypto in Washington | Congressman │ 2022-02-11 23:14:23 │ https://shows.banklesshq.com/p/early-access-crypto-in-washington │ │ Tom Emmer │ │ │ ├───────────────────────────────────────────────────┼─────────────────────┼─────────────────────────────────────────────────────────────────────────┤ │ ROLLUP: Bitfinex Hack | Super Crypto Bowl | Aave │ 2022-02-11 13:23:29 │ https://shows.banklesshq.com/p/-rollup-bitfinex-hack-super-crypto │ │ Social Network | Vitalik Supports Assange DAO11 │ │ │ ├───────────────────────────────────────────────────┼─────────────────────┼─────────────────────────────────────────────────────────────────────────┤ │ Syscoin Ecosystem Update: Pegasys DEX Launch │ 2022-01-28 18:59:03 │ https://defislate.substack.com/p/syscoin-ecosystem-update-pegasys │ └───────────────────────────────────────────────────┴─────────────────────┴─────────────────────────────────────────────────────────────────────────┘ "},{"id":753,"href":"/OpenBBTerminal/terminal/crypto/defi/pairs/","title":"Pairs","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: pairs [-l LIMIT] [-v VOL] [-tx TX] [--days DAYS] [-s {created,pair,token0,token1,volumeUSD,txCount,totalSupply}] [--descend] [-h] [--export {csv,json,xlsx}] Display Lastly added pairs on Uniswap DEX. [Source: https://thegraph.com/en/]\noptional arguments: -l LIMIT, --limit LIMIT Number of records to display (default: 10) -v VOL, --vol VOL Minimum trading volume (default: 100) -tx TX, --tx TX Minimum number of transactions (default: 100) --days DAYS Number of days the pair has been active, (default: 10) -s {created,pair,token0,token1,volumeUSD,txCount,totalSupply}, --sort {created,pair,token0,token1,volumeUSD,txCount,totalSupply} Sort by given column. Default: created (default: created) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:27 (✨) /crypto/defi/ $ pairs Latest Added Pairs on Uniswap DEX ┌─────────────────────┬────────────────┬──────────────────────────────────────┬────────────────────┬───────────┬─────────┬─────────────┐ │ created │ pair │ token0 │ token1 │ volumeUSD │ txCount │ totalSupply │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-15 07:28:54 │ LIKI/WETH │ Lion King │ Wrapped Ether │ 1.3M │ 327 │ 0 │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-15 05:26:25 │ X2Y2/WETH │ X2Y2Token │ Wrapped Ether │ 51.1M │ 2550 │ 124K │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-14 20:09:09 │ SIN/WETH │ Sins │ Wrapped Ether │ 2.5M │ 1334 │ 0 │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-14 19:41:24 │ YouTube/WETH │ YouTube Metaverse │ Wrapped Ether │ 637.5K │ 105 │ 1.2M │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-14 18:13:14 │ ALI/USDC │ Artificial Liquid Intelligence Token │ USD//C │ 4.3M │ 490 │ 3 │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-14 16:49:02 │ SuperBowl/WETH │ SuperBowl Metaverse │ Wrapped Ether │ 3.1M │ 161 │ 1.3M │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-14 13:31:57 │ LUSHI/WETH │ LuckyShinu │ Wrapped Ether │ 485.3K │ 770 │ 1.3K │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-14 13:22:44 │ Google/WETH │ Google Metaverse │ Wrapped Ether │ 3.4M │ 189 │ 745.7K │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-13 18:04:58 │ WETH/SKYWALKER │ Wrapped Ether │ Skywalker Protocol │ 888.2K │ 104 │ 54 │ ├─────────────────────┼────────────────┼──────────────────────────────────────┼────────────────────┼───────────┼─────────┼─────────────┤ │ 2022-02-13 17:56:36 │ McDonalds/WETH │ McDonalds Metaverse │ Wrapped Ether │ 2.6M │ 208 │ 1.9M │ └─────────────────────┴────────────────┴──────────────────────────────────────┴────────────────────┴───────────┴─────────┴─────────────┘ "},{"id":754,"href":"/OpenBBTerminal/terminal/crypto/defi/pools/","title":"Pools","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: pairs [-l LIMIT] [-s {volumeUSD,token0.name,token0.symbol,token1.name,token1.symbol,volumeUSD,txCount}] [--descend] [-h] [--export {csv,json,xlsx}] Display uniswap pools by volume. [Source: https://thegraph.com/en/]\noptional arguments: -l LIMIT, --limit LIMIT Number of records to display (default: 10) -s {volumeUSD,token0.name,token0.symbol,token1.name,token1.symbol,volumeUSD,txCount}, --sort {volumeUSD,token0.name,token0.symbol,token1.name,token1.symbol,volumeUSD,txCount} Sort by given column. Default: volumeUSD (default: volumeUSD) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:28 (✨) /crypto/defi/ $ pools Uniswap Pools ┌───────────────────────┬───────────────┬───────────────────┬───────────────┬───────────┬─────────┐ │ token0.name │ token0.symbol │ token1.name │ token1.symbol │ volumeUSD │ txCount │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ INFI │ INFI │ Wrapped Ether │ WETH │ 99.5M │ 41195 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ UnFederalReserveToken │ eRSDL │ Wrapped Ether │ WETH │ 994M │ 148106 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ Dinger Token │ DINGER │ Wrapped Ether │ WETH │ 99.4M │ 27552 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ CliffordInu │ CLIFF │ Wrapped Ether │ WETH │ 99.2M │ 38398 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ Wrapped Ether │ WETH │ Gen Shards │ GS │ 99M │ 16773 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ Wrapped Ether │ WETH │ 0x Protocol Token │ ZRX │ 98.9M │ 37163 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ GET │ GET │ Wrapped Ether │ WETH │ 98.9M │ 21632 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ AMPnet APX Token │ AAPX │ Wrapped Ether │ WETH │ 98.7M │ 22957 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ Wrapped Ether │ WETH │ RMPL │ RMPL │ 97.7M │ 46404 │ ├───────────────────────┼───────────────┼───────────────────┼───────────────┼───────────┼─────────┤ │ DSLA │ DSLA │ Wrapped Ether │ WETH │ 97.5M │ 37901 │ └───────────────────────┴───────────────┴───────────────────┴───────────────┴───────────┴─────────┘ "},{"id":755,"href":"/OpenBBTerminal/terminal/crypto/defi/sinfo/","title":"Sinfo","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: sinfo [-a ADDRESS] [-l LIMIT] [-h] [--export {csv,json,xlsx}] Displays staking info of a certain terra address. [Source: https://fcd.terra.dev/swagger]\noptional arguments: -a ADDRESS, --address ADDRESS Terra address. Valid terra addresses start with 'terra' (default: None) -l LIMIT, --limit LIMIT Number of delegations (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":756,"href":"/OpenBBTerminal/terminal/crypto/defi/sratio/","title":"Sratio","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: sratio [-l LIMIT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Displays terra blockchain staking ratio history. [Source: https://fcd.terra.dev/swagger]\noptional arguments: -l LIMIT, --limit LIMIT Number of days to show (default: 90) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":757,"href":"/OpenBBTerminal/terminal/crypto/defi/sreturn/","title":"Sreturn","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: sreturn [-l LIMIT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Displays terra blockchain staking returns history. [Source: https://fcd.terra.dev/swagger]\noptional arguments: -l LIMIT, --limit LIMIT Number of days to show (default: 90) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":758,"href":"/OpenBBTerminal/terminal/crypto/defi/stats/","title":"Stats","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: stats [-h] [--export {csv,json,xlsx}] Display base statistics about Uniswap DEX. [Source: https://thegraph.com/en/]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:33 (✨) /crypto/defi/ $ stats Uniswap DEX Base Statistics ┌───────────────────┬────────┐ │ Metric │ Value │ ├───────────────────┼────────┤ │ totalVolumeUSD │ 393.2B │ ├───────────────────┼────────┤ │ totalLiquidityUSD │ 3.3B │ ├───────────────────┼────────┤ │ pairCount │ 63.3K │ ├───────────────────┼────────┤ │ txCount │ 73.6M │ ├───────────────────┼────────┤ │ totalLiquidityETH │ 1.1M │ └───────────────────┴────────┘ "},{"id":759,"href":"/OpenBBTerminal/terminal/crypto/defi/stvl/","title":"Stvl","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: stvl [-l LIMIT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}]] Displays historical values of the total sum of TVLs from all listed dApps. [Source: https://docs.llama.fi/api]\noptional arguments: -l LIMIT, --limit LIMIT Number of records to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":760,"href":"/OpenBBTerminal/terminal/crypto/defi/swaps/","title":"Swaps","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: swaps [-l LIMIT] [-s {timestamp,token0,token1,amountUSD}] [--descend] [-h] [--export {csv,json,xlsx}] Display last swaps done on Uniswap DEX. [Source: https://thegraph.com/en/]\noptional arguments: -l LIMIT, --limit LIMIT Number of records to display (default: 10) -s {timestamp,token0,token1,amountUSD}, --sort {timestamp,token0,token1,amountUSD} Sort by given column. Default: timestamp (default: timestamp) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:34 (✨) /crypto/defi/ $ swaps Last Uniswap Swaps ┌─────────────────────────────────────┬─────────┬────────┬─────────────────────┐ │ timestamp │ token0 │ token1 │ amountUSD │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 989.8036910116636250215132843852658 │ SAITAMA │ WETH │ 2022-02-15 12:34:21 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 96.90289143394234014296291034812848 │ WETH │ RBIS │ 2022-02-15 12:34:16 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 96.13166689256472937997500656514648 │ CRO │ WETH │ 2022-02-15 12:34:16 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 5870.220427980296531839870124291824 │ BASD │ WETH │ 2022-02-15 12:34:16 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 58.91252385247121053891350741753916 │ WETH │ RIOT │ 2022-02-15 12:34:21 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 3429.451646829620606429002872853048 │ STRONG │ WETH │ 2022-02-15 12:34:16 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 197.7374918341423326217509222074952 │ HEX │ WETH │ 2022-02-15 12:34:16 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 19.09615292253938809540600951822232 │ SAITAMA │ WETH │ 2022-02-15 12:34:21 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 1550.329575065031856287197563619452 │ WETH │ NFT │ 2022-02-15 12:34:16 │ ├─────────────────────────────────────┼─────────┼────────┼─────────────────────┤ │ 13146.79479655147014131543533949295 │ WETH │ MIND │ 2022-02-15 12:34:16 │ └─────────────────────────────────────┴─────────┴────────┴─────────────────────┘ "},{"id":761,"href":"/OpenBBTerminal/terminal/crypto/defi/tokens/","title":"Tokens","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: tokens [--skip SKIP] [--limit LIMIT] [-s {index,symbol,name,tradeVolumeUSD,totalLiquidity,txCount}] [--descend] [-h] [--export {csv,json,xlsx}] Display tokens trade-able on Uniswap DEX [Source: https://thegraph.com/en/]\noptional arguments: --skip SKIP Number of records to skip (default: 0) --limit LIMIT Number of records to display (default: 20) -s {index,symbol,name,tradeVolumeUSD,totalLiquidity,txCount}, --sort {index,symbol,name,tradeVolumeUSD,totalLiquidity,txCount} Sort by given column. Default: index (default: index) --descend Flag to sort in descending order (lowest first) (default: True) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:36 (✨) /crypto/defi/ $ tokens UniSwarp DEX Trade-able Tokens ┌───────┬──────────────┬────────────────────────────┬────────────────┬────────────────┬─────────┐ │ index │ symbol │ name │ tradeVolumeUSD │ totalLiquidity │ txCount │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 0 │ BID │ TopBidder │ 17.9M │ 1.9M │ 2496 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 1 │ CHI │ Chi Gastoken by 1inch │ 19.4M │ 25K │ 75833 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 2 │ XDEX │ XDEFI Governance Token │ 18.7M │ 6.1M │ 4316 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 3 │ TUSD │ TrueUSD │ 176.2M │ 71.5K │ 46582 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 4 │ LON │ Tokenlon │ 504M │ 2.3M │ 56107 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 5 │ dDai │ Dharma Dai │ 0 │ 4 │ 1 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 6 │ STRIP │ StripInu2 │ 0 │ 0 │ 614 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 7 │ GST2 │ Gastoken.io │ 2.1M │ 142 │ 10888 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 8 │ XGME │ GameStonk.online │ 0 │ 35.7K │ 65 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 9 │ SHKOOBYSHNAX │ SHKOOBY INU SHNAX │ 0 │ 0 │ 47 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 10 │ PORN │ Porn DAO │ 2.3M │ 1.9K │ 321 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 11 │ TGBP │ TrueGBP │ 24.1K │ 4.1K │ 740 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 12 │ $STEALTH │ Stealth Standard │ 9.2M │ 165.5M │ 1622 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 13 │ ADIDAS │ Adidas Originals Metaverse │ 4.5M │ 0 │ 488 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 14 │ Nike │ Nike RTFKT Studio │ 75.8K │ 0 │ 15 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 15 │ DLTA │ delta.theta │ 3.1M │ 2M │ 2611 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 16 │ Nike │ Nike Metaverse │ 4.5M │ 0 │ 669 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 17 │ Nike │ Nike RTFKT Studio │ 131.6K │ 0 │ 35 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 18 │ PRADA │ Prada Metaverse │ 894.8K │ 0 │ 196 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 19 │ TCAD │ TrueCAD │ 6.5K │ 599 │ 141 │ └───────┴──────────────┴────────────────────────────┴────────────────┴────────────────┴─────────┘ "},{"id":762,"href":"/OpenBBTerminal/terminal/crypto/defi/validators/","title":"Validators","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: validators [-l LIMIT] [-s {validatorName,tokensAmount,votingPower,commissionRate,status,uptime}] [--descend] [-h] [--export {csv,json,xlsx}] Displays information about terra validators. [Source: https://fcd.terra.dev/swagger]\noptional arguments: -l LIMIT, --limit LIMIT Number of validators to show (default: 10) -s {validatorName,tokensAmount,votingPower,commissionRate,status,uptime}, --sort {validatorName,tokensAmount,votingPower,commissionRate,status,uptime} Sort by given column. Default: votingPower (default: votingPower) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:36 (✨) /crypto/defi/ $ validators ┌──────────────────────────────────────────────┬─────────────────────┬───────────────┬────────────────┬───────────────────┬────────┬──────────┐ │ Account address │ Validator name │ Tokens amount │ Voting power % │ Commission rate % │ Status │ Uptime % │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra1259cmu5zyklsdkmgstxhwqpe0utfe5hhyygjdc │ Orion.Money │ 21.9M │ 7.20 │ 5.00 │ active │ 100.00 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra15zcjduavxc5mkp8qcqs9eyhwlqwdlrzy6anwpg │ B-Harvest │ 17.9M │ 5.88 │ 5.00 │ active │ 100.00 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra123gn6j23lmexu0qx5qhmgxgunmjcqsx8g5ueq2 │ Staking Fund │ 15.7M │ 5.17 │ 10.00 │ active │ 100.00 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra1v5hrqlv8dqgzvy0pwzqzg0gxy899rm4kdn0jp4 │ DokiaCapital │ 10.3M │ 3.38 │ 5.00 │ active │ 100.00 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra1kprce6kc08a6l03gzzh99hfpazfjeczfpd6td0 │ Certus One │ 9M │ 2.96 │ 10.00 │ active │ 100.00 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra1p54hc4yy2ajg67j645dn73w3378j6k05v52cnk │ hashed │ 7.7M │ 2.53 │ 10.00 │ active │ 100.00 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra1va2ew92dtkhffduswr83elf3nfvl4xg48rguwl │ NOD Games │ 7.4M │ 2.44 │ 0.00 │ active │ 99.99 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra175hhkyxmkp8hf2zrzka7cnn7lk6mudtv4nsp2x │ DSRV - CHAISCAN.com │ 6.7M │ 2.22 │ 10.00 │ active │ 100.00 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra162892yn0tf8dxl8ghgneqykyr8ufrwmcs6vft5 │ Luna Maximalists │ 6.5M │ 2.14 │ 20.00 │ active │ 99.98 │ ├──────────────────────────────────────────────┼─────────────────────┼───────────────┼────────────────┼───────────────────┼────────┼──────────┤ │ terra1h6rf7y2ar5vz64q8rchz5443s3tqnswrpxe69f │ Staked │ 6.3M │ 2.08 │ 10.00 │ active │ 100.00 │ └──────────────────────────────────────────────┴─────────────────────┴───────────────┴────────────────┴───────────────────┴────────┴──────────┘ "},{"id":763,"href":"/OpenBBTerminal/terminal/crypto/defi/vaults/","title":"Vaults","parent":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","content":"usage: vaults [-c {ethereum,polygon,avalanche,bsc,terra,fantom,moonriver,celo,heco,okex,cronos,arbitrum,eth,harmony,fuse,defichain,solana,optimism,kusama}] [-p {aave,acryptos,alpaca,anchor,autofarm,balancer,bancor,beefy,belt,compound,convex,cream,curve,defichain,geist,lido,liquity,mirror,pancakeswap,raydium,sushi,tarot,traderjoe,tulip,ubeswap,uniswap,venus,yearn}] [-k {lp,single,noimploss,stable}] [-t LIMIT] [-s {name,chain,protocol,apy,tvl,link}] [--descend] [-l] [-h] [--export {csv,json,xlsx}] Display Top DeFi Vaults. [Source: https://coindix.com/]\noptional arguments: -c {ethereum,polygon,avalanche,bsc,terra,fantom,moonriver,celo,heco,okex,cronos,arbitrum,eth,harmony,fuse,defichain,solana,optimism,kusama}, --chain {ethereum,polygon,avalanche,bsc,terra,fantom,moonriver,celo,heco,okex,cronos,arbitrum,eth,harmony,fuse,defichain,solana,optimism,kusama} Blockchain name e.g. ethereum, terra (default: None) -p {aave,acryptos,alpaca,anchor,autofarm,balancer,bancor,beefy,belt,compound,convex,cream,curve,defichain,geist,lido,liquity,mirror,pancakeswap,raydium,sushi,tarot,traderjoe,tulip,ubeswap,uniswap,venus,yearn}, --protocol {aave,acryptos,alpaca,anchor,autofarm,balancer,bancor,beefy,belt,compound,convex,cream,curve,defichain,geist,lido,liquity,mirror,pancakeswap,raydium,sushi,tarot,traderjoe,tulip,ubeswap,uniswap,venus,yearn} DeFi protocol name e.g. aave, uniswap (default: None) -k {lp,single,noimploss,stable}, --kind {lp,single,noimploss,stable} Kind/type of vault e.g. lp, single, noimploss, stable (default: None) -t LIMIT, --top LIMIT Number of records to display (default: 10) -s {name,chain,protocol,apy,tvl,link}, --sort {name,chain,protocol,apy,tvl,link} Sort by given column. Default: timestamp (default: apy) --descend Flag to sort in descending order (lowest first) (default: False) -l, --links Flag to show vault link (default: True) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 May 26, 07:19 (�) /crypto/defi/ $ vaults Top DeFi Vaults ┌──────────────────────┬───────────┬──────────┬───────────┬──────────┐ │ Name │ Chain │ Protocol │ APY (%) │ TVL ($) │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ ESHARE-BNB │ BNB Chain │ Beefy │ 3034.87 % │ 1.587 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ BSHARE-FTM │ Fantom │ Beefy │ 1545.3 % │ 1.637 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ ust-wormholeUST-3Crv │ Ethereum │ Convex │ 1471.74 % │ 2.600 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ GRAPE-MIM │ Avalanche │ Beefy │ 1404.84 % │ 1.110 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ BASED-TOMB │ Fantom │ Beefy │ 527.77 % │ 1.139 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ EMP-ETH │ BNB Chain │ Beefy │ 362.55 % │ 1.257 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ BADGER-WBTC │ Ethereum │ Balancer │ 340.54 % │ 15.150 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ BSW-BNB │ BNB Chain │ Alpaca │ 280.7 % │ 1.863 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ WBTC-OSMO │ Osmosis │ Osmosis │ 231.2 % │ 4.730 M │ ├──────────────────────┼───────────┼──────────┼───────────┼──────────┤ │ ROWAN-OSMO │ Osmosis │ Osmosis │ 228.72 % │ 1.834 M │ └──────────────────────┴───────────┴──────────┴───────────┴──────────┘ "},{"id":764,"href":"/OpenBBTerminal/terminal/crypto/disc/dapps/","title":"Dapps","parent":"Introduction to Cryptocurrency Discovery","content":"usage: dapps [-l N] [-s {Name,Category,Protocols,Daily Users,Daily Volume [$]}] [--descend] [-l] [--export {csv,json,xlsx}] [-h] Shows top decentralized applications [Source: https://dappradar.com/]\nAccepts \u0026ndash;sort {Name,Category,Protocols,Daily Users,Daily Volume [$]} to sort by column\noptional arguments: -l N, --limit N display N records (default: 15) -s --sort {Name,Category,Protocols,Daily Users,Daily Volume [$]} Sort by given column --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 06:52 (✨) /crypto/disc/ $ dapps Top Decentralized Applications ┌───────────────┬──────────────┬─────────────────────────┬─────────────┬──────────────────┐ │ Name │ Category │ Protocols │ Daily Users │ Daily Volume [$] │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Splinterlands │ games │ hive,wax │ 305.1K │ 8K │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ PancakeSwap │ defi │ binance-smart-chain │ 289.3K │ 223.7M │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Alien Worlds │ games │ wax,binance-smart-chain │ 235.6K │ 759.2K │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Farmers World │ games │ wax │ 111.7K │ 2.3K │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ AtomicAssets │ other │ wax,eos │ 108.9K │ 226.3K │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Axie Infinity │ games │ ronin,ethereum │ 90.9K │ 11.6M │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Upland │ games │ eos │ 63.3K │ 0 │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ OpenSea │ marketplaces │ ethereum,polygon │ 54K │ 200M │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Katana │ defi │ ronin │ 45.9K │ 92.7M │ ├───────────────┼──────────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Magic Eden │ marketplaces │ solana │ 40.2K │ 18.5M │ └───────────────┴──────────────┴─────────────────────────┴─────────────┴──────────────────┘ "},{"id":765,"href":"/OpenBBTerminal/terminal/crypto/disc/dex/","title":"Dex","parent":"Introduction to Cryptocurrency Discovery","content":"usage: dex [-l N] [-s {Name,Daily Users,Daily Volume [$]}] [--descend] [-l] [--export {csv,json,xlsx}] [-h] Shows top decentralized exchanges [Source: https://dappradar.com/]\nAccepts \u0026ndash;sort {Name,Daily Users,Daily Volume [$]} to sort by column\noptional arguments: -l N, --limit N display N records (default: 15) -s --sort {Name,Daily Users,Daily Volume [$]} Sort by given column --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 06:52 (✨) /crypto/disc/ $ dex Top Decentralized Exchanges ┌───────────────┬─────────────┬──────────────────┐ │ Name │ Daily Users │ Daily Volume [$] │ ├───────────────┼─────────────┼──────────────────┤ │ Splinterlands │ 305.1K │ 8K │ ├───────────────┼─────────────┼──────────────────┤ │ PancakeSwap │ 289.3K │ 223.7M │ ├───────────────┼─────────────┼──────────────────┤ │ Alien Worlds │ 235.6K │ 759.2K │ ├───────────────┼─────────────┼──────────────────┤ │ Farmers World │ 111.7K │ 2.3K │ ├───────────────┼─────────────┼──────────────────┤ │ AtomicAssets │ 108.9K │ 226.3K │ ├───────────────┼─────────────┼──────────────────┤ │ Axie Infinity │ 90.9K │ 11.6M │ ├───────────────┼─────────────┼──────────────────┤ │ Upland │ 63.3K │ 0 │ ├───────────────┼─────────────┼──────────────────┤ │ OpenSea │ 54K │ 200M │ ├───────────────┼─────────────┼──────────────────┤ │ Katana │ 45.9K │ 92.7M │ ├───────────────┼─────────────┼──────────────────┤ │ Magic Eden │ 40.2K │ 18.5M │ └───────────────┴─────────────┴──────────────────┘ "},{"id":766,"href":"/OpenBBTerminal/terminal/crypto/disc/gainers/","title":"Gainers","parent":"Introduction to Cryptocurrency Discovery","content":"usage: gainers [-p {14d,1h,1y,200d,24h,30d,7d}] [-l LIMIT] [-s SORTBY [SORTBY ...]] [-h] [--export {csv,json,xlsx}] Shows Largest Gainers - coins which gain the most in given period. You can use parameter \u0026ndash;period to set which timeframe are you interested in: {14d,1h,1y,200d,24h,30d,7d} You can look on only N number of records with \u0026ndash;limit, You cansort by {Symbol, Name, Price [$], Market Cap [$], Market Cap Rank, Volume [$]} with \u0026ndash;sort.\noptional arguments: -p {14d,1h,1y,200d,24h,30d,7d}, --period {14d,1h,1y,200d,24h,30d,7d} time period, one from {14d,1h,1y,200d,24h,30d,7d} (default: 1h) -l LIMIT, --limit LIMIT Number of records to display (default: 15) -s SORTBY [SORTBY ...], --sort SORTBY [SORTBY ...] Sort by given column. Default: Market Cap Rank (default: Market Cap Rank) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:38 (✨) /crypto/disc/ $ gainers ┌────────┬─────────────────┬───────────┬────────────────┬─────────────────┬────────────┬───────────────┐ │ Symbol │ Name │ Price [$] │ Market Cap [$] │ Market Cap Rank │ Volume [$] │ Change 1h [%] │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ xrp │ XRP │ 0.84 │ 39.9B │ 6 │ 3.2B │ 0.29 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ luna │ Terra │ 56.50 │ 22.4B │ 9 │ 1B │ 0.14 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ usdc │ USD Coin │ 1.00 │ 52.6B │ 5 │ 3B │ 0.12 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ bnb │ Binance Coin │ 429.85 │ 72.2B │ 4 │ 709.6M │ 0.12 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ btc │ Bitcoin │ 44275.00 │ 838.8B │ 1 │ 20.6B │ 0.11 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ usdt │ Tether │ 1.00 │ 78.5B │ 3 │ 43.3B │ 0.08 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ busd │ Binance USD │ 1.00 │ 17.6B │ 13 │ 3B │ -0.04 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ dot │ Polkadot │ 19.79 │ 21.4B │ 11 │ 672.9M │ -0.12 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ eth │ Ethereum │ 3100.92 │ 370.6B │ 2 │ 14.4B │ -0.24 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ shib │ Shiba Inu │ 0.00 │ 17.2B │ 14 │ 1.1B │ -0.34 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ ada │ Cardano │ 1.09 │ 34.9B │ 7 │ 1B │ -0.41 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ doge │ Dogecoin │ 0.15 │ 19.9B │ 12 │ 604.3M │ -0.50 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ AVAX │ Avalanche │ 88.42 │ 21.7B │ 10 │ 894.8M │ -0.65 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ sol │ Solana │ 102.75 │ 32.7B │ 8 │ 1.8B │ -0.76 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ cro │ Crypto.com Coin │ 0.50 │ 12.5B │ 15 │ 200.8M │ -1.21 │ └────────┴─────────────────┴───────────┴────────────────┴─────────────────┴────────────┴───────────────┘ "},{"id":767,"href":"/OpenBBTerminal/terminal/crypto/disc/games/","title":"Games","parent":"Introduction to Cryptocurrency Discovery","content":"usage: games [-l N] [-s {Name,Daily Users,Daily Volume [$]}] [--descend] [-l] [--export {csv,json,xlsx}] [-h] Shows top blockchain games [Source: https://dappradar.com/]\nAccepts \u0026ndash;sort {Name,Daily Users,Daily Volume [$]} to sort by column\noptional arguments: -l N, --limit N display N records (default: 15) -s --sort {Name,Daily Users,Daily Volume [$]} Sort by given column --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 06:53 (✨) /crypto/disc/ $ games Top Blockchain Games ┌───────────────┬─────────────┬──────────────────┐ │ Name │ Daily Users │ Daily Volume [$] │ ├───────────────┼─────────────┼──────────────────┤ │ Splinterlands │ 305.1K │ 8K │ ├───────────────┼─────────────┼──────────────────┤ │ PancakeSwap │ 289.3K │ 223.7M │ ├───────────────┼─────────────┼──────────────────┤ │ Alien Worlds │ 235.6K │ 759.2K │ ├───────────────┼─────────────┼──────────────────┤ │ Farmers World │ 111.7K │ 2.3K │ ├───────────────┼─────────────┼──────────────────┤ │ AtomicAssets │ 108.9K │ 226.3K │ ├───────────────┼─────────────┼──────────────────┤ │ Axie Infinity │ 90.9K │ 11.6M │ ├───────────────┼─────────────┼──────────────────┤ │ Upland │ 63.3K │ 0 │ ├───────────────┼─────────────┼──────────────────┤ │ OpenSea │ 54K │ 200M │ ├───────────────┼─────────────┼──────────────────┤ │ Katana │ 45.9K │ 92.7M │ ├───────────────┼─────────────┼──────────────────┤ │ Magic Eden │ 40.2K │ 18.5M │ └───────────────┴─────────────┴──────────────────┘ "},{"id":768,"href":"/OpenBBTerminal/terminal/crypto/disc/losers/","title":"Losers","parent":"Introduction to Cryptocurrency Discovery","content":"usage: losers [-p {14d,1h,1y,200d,24h,30d,7d}] [-l LIMIT] [-s SORTBY [SORTBY ...]] [-h] [--export {csv,json,xlsx}] Shows Largest Losers - coins which price dropped the most in given period You can use parameter \u0026ndash;period to set which timeframe are you interested in: {14d,1h,1y,200d,24h,30d,7d} You can look on only N number of records with \u0026ndash;limit. You can sort by {Symbol,Name,Price [$],Market Cap [$],Market Cap Rank,Volume [$]} with \u0026ndash;sort.\noptional arguments: -p {14d,1h,1y,200d,24h,30d,7d}, --period {14d,1h,1y,200d,24h,30d,7d} time period, one from {14d,1h,1y,200d,24h,30d,7d} (default: 1h) -l LIMIT, --limit LIMIT Number of records to display (default: 15) -s SORTBY [SORTBY ...], --sort SORTBY [SORTBY ...] Sort by given column. Default: Market Cap Rank (default: Market Cap Rank) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:43 (✨) /crypto/disc/ $ losers ┌────────┬─────────────────┬───────────┬────────────────┬─────────────────┬────────────┬───────────────┐ │ Symbol │ Name │ Price [$] │ Market Cap [$] │ Market Cap Rank │ Volume [$] │ Change 1h [%] │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ cro │ Crypto.com Coin │ 0.50 │ 12.5B │ 15 │ 200.8M │ -1.21 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ sol │ Solana │ 102.75 │ 32.7B │ 8 │ 1.8B │ -0.76 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ doge │ Dogecoin │ 0.15 │ 19.9B │ 12 │ 604.3M │ -0.50 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ AVAX │ Avalanche │ 88.66 │ 21.7B │ 10 │ 899.9M │ -0.38 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ ada │ Cardano │ 1.09 │ 34.9B │ 7 │ 1B │ -0.31 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ shib │ Shiba Inu │ 0.00 │ 17.2B │ 14 │ 1.1B │ -0.26 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ eth │ Ethereum │ 3100.92 │ 370.6B │ 2 │ 14.4B │ -0.24 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ dot │ Polkadot │ 19.79 │ 21.4B │ 11 │ 672.9M │ -0.12 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ busd │ Binance USD │ 1.00 │ 17.6B │ 13 │ 3B │ -0.06 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ bnb │ Binance Coin │ 429.57 │ 72.2B │ 4 │ 1.8B │ 0.05 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ usdt │ Tether │ 1.00 │ 78.5B │ 3 │ 43.3B │ 0.08 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ luna │ Terra │ 56.47 │ 22.4B │ 9 │ 1B │ 0.08 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ btc │ Bitcoin │ 44275.00 │ 838.8B │ 1 │ 20.6B │ 0.11 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ usdc │ USD Coin │ 1.00 │ 52.6B │ 5 │ 3B │ 0.12 │ ├────────┼─────────────────┼───────────┼────────────────┼─────────────────┼────────────┼───────────────┤ │ xrp │ XRP │ 0.84 │ 39.9B │ 6 │ 3.2B │ 0.29 │ └────────┴─────────────────┴───────────┴────────────────┴─────────────────┴────────────┴───────────────┘ "},{"id":769,"href":"/OpenBBTerminal/terminal/crypto/disc/nft/","title":"Nft","parent":"Introduction to Cryptocurrency Discovery","content":"usage: nft [-l N] [-s {Name,Protocols,Floor Price [$],Avg Price [$],Market Cap [$],Volume [$]}] [--descend] [-l] [--export {csv,json,xlsx}] [-h] Shows top NFT collections [Source: https://dappradar.com/]\nAccepts \u0026ndash;sort {Name,Protocols,Floor Price [$],Avg Price [$],Market Cap [$],Volume [$]} to sort by column\noptional arguments: -l N, --limit N display N records (default: 15) -s --sort {Name,Protocols,Floor Price [$],Avg Price [$],Market Cap [$],Volume [$]} Sort by given column --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":770,"href":"/OpenBBTerminal/terminal/crypto/disc/search/","title":"Search","parent":"Introduction to Cryptocurrency Discovery","content":"usage: search [-q QUERY [QUERY ...]] [-c {currencies,exchanges,icos,people,tags,all}] [-l LIMIT] [-s {category,id,name}] [--descend] [-h] [--export {csv,json,xlsx}] Search over CoinPaprika API You can display only top N number of results with \u0026ndash;top parameter. You can sort data by id, name , category \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. To choose category in which you are searching for use \u0026ndash;cat/-c parameter. Available categories: currencies|exchanges|icos|people|tags|all Displays: id, name, category\noptional arguments: -q QUERY [QUERY ...], --query QUERY [QUERY ...] phrase for search (default: None) -c {currencies,exchanges,icos,people,tags,all}, --cat {currencies,exchanges,icos,people,tags,all} Categories to search: currencies|exchanges|icos|people|tags|all. Default: all (default: all) -l LIMIT, --limit LIMIT Limit of records (default: 10) -s {category,id,name}, --sort {category,id,name} Sort by given column. Default: id (default: id) --descend Flag to sort in descending order (lowest first) (default: True) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:51 (✨) /crypto/disc/ $ search -q bitcoin CoinPaprika Results ┌─────────────────────────┬──────────────────────┬────────────┐ │ id │ name │ category │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bbtc-baby-bitcoin │ Baby Bitcoin │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bc-bitcoin-confidential │ Bitcoin Confidential │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bca-bitcoin-atom │ Bitcoin Atom │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bcd-bitcoin-diamond │ Bitcoin Diamond │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bcf-bitcoin-fast │ Bitcoin Fast │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bch-bitcoin-cash │ Bitcoin Cash │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bch-bitcoin-cash-token │ Bitcoin Cash Token │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bci-bitcoin-interest │ Bitcoin Interest │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bcr-bitcoinrock │ BITCOINROCK │ currencies │ ├─────────────────────────┼──────────────────────┼────────────┤ │ bct-bitcointrust │ BitcoinTrust │ currencies │ └─────────────────────────┴──────────────────────┴────────────┘ "},{"id":771,"href":"/OpenBBTerminal/terminal/crypto/disc/top/","title":"Top","parent":"Introduction to Cryptocurrency Discovery","content":"usage: cgtop top [-c CATEGORY] [-l LIMIT] [-s {Symbol,Name,Volume [$],Market Cap,Market Cap Rank,7D Change [%],24H Change [%]} [{Symbol,Name,Volume [$],Market Cap,Market Cap Rank,7D Change [%],24H Change [%]} ...]] [--descend] [-h] [--export EXPORT] [--source {CoinGecko,CoinMarketCap}] Display N coins from the data source, if the data source is CoinGecko it can receive a category as argument (-c decentralized-finance-defi or -c stablecoins) and will show only the top coins in that category. can also receive sort arguments (these depend on the source), e.g., \u0026ndash;sort Volume [$] You can sort by {Symbol,Name,Price [$],Market Cap,Market Cap Rank,Volume [$]} with CoinGecko Number of coins to show: -l 10\n -c CATEGORY, --category CATEGORY Category (e.g., stablecoins). Empty for no category. Only works for 'CoinGecko' source. (default: ) -l LIMIT, --limit LIMIT Limit of records (default: 10) -s {Symbol,Name,Volume [$],Market Cap,Market Cap Rank,7D Change [%],24H Change [%]} [{Symbol,Name,Volume [$],Market Cap,Market Cap Rank,7D Change [%],24H Change [%]} ...], --sort {Symbol,Name,Volume [$],Market Cap,Market Cap Rank,7D Change [%],24H Change [%]} [{Symbol,Name,Volume [$],Market Cap,Market Cap Rank,7D Change [%],24H Change [%]} ...] Sort by given column. Default: Market Cap Rank (default: Market Cap Rank) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --source {CoinGecko,CoinMarketCap} Data source to select from (default: CoinGecko) Example:\n2022 Feb 15, 06:44 (✨) /crypto/disc/ $ top ┌────────┬──────────────┬────────────┬────────────────┬─────────────────┬───────────────┬────────────────┐ │ Symbol │ Name │ Volume [$] │ Market Cap [$] │ Market Cap Rank │ 7D Change [%] │ 24H Change [%] │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ btc │ Bitcoin │ 20.6B │ 838.8B │ 1 │ 0.93 │ 4.77 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ eth │ Ethereum │ 14.4B │ 370.6B │ 2 │ -1.53 │ 7.77 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ usdt │ Tether │ 43.3B │ 78.5B │ 3 │ -0.01 │ -0.05 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ bnb │ Binance Coin │ 1.8B │ 72.2B │ 4 │ -1.01 │ 8.18 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ usdc │ USD Coin │ 3B │ 52.6B │ 5 │ 0.25 │ 0.17 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ xrp │ XRP │ 3.2B │ 39.9B │ 6 │ 0.71 │ 5.51 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ ada │ Cardano │ 1B │ 34.9B │ 7 │ -9.04 │ 5.52 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ sol │ Solana │ 1.8B │ 32.7B │ 8 │ -12.54 │ 10.07 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ luna │ Terra │ 1B │ 22.4B │ 9 │ -5.26 │ 8.67 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ AVAX │ Avalanche │ 899.9M │ 21.7B │ 10 │ 6.28 │ 12.72 │ └────────┴──────────────┴────────────┴────────────────┴─────────────────┴───────────────┴────────────────┘ "},{"id":772,"href":"/OpenBBTerminal/terminal/crypto/disc/trending/","title":"Trending","parent":"Introduction to Cryptocurrency Discovery","content":"usage: trending [-h] [--export {csv,json,xlsx}] Discover trending coins. Use \u0026ndash;limit parameter to display only top N number of records.\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:45 (✨) /crypto/disc/ $ trending Trending coins on CoinGecko ┌────────────────────┬────────────────────┬─────────────────┐ │ Symbol │ Name │ Market Cap Rank │ ├────────────────────┼────────────────────┼─────────────────┤ │ cellframe │ Cellframe │ 751 │ ├────────────────────┼────────────────────┼─────────────────┤ │ dehub │ DeHub │ 858 │ ├────────────────────┼────────────────────┼─────────────────┤ │ richquack │ Rich Quack │ 476 │ ├────────────────────┼────────────────────┼─────────────────┤ │ smooth-love-potion │ Smooth Love Potion │ 101 │ ├────────────────────┼────────────────────┼─────────────────┤ │ gala │ Gala │ 56 │ ├────────────────────┼────────────────────┼─────────────────┤ │ looksrare │ LooksRare │ 157 │ ├────────────────────┼────────────────────┼─────────────────┤ │ doge-dash │ Doge Dash │ 950 │ └────────────────────┴────────────────────┴─────────────────┘ "},{"id":773,"href":"/OpenBBTerminal/terminal/crypto/find/","title":"Find","parent":"Introduction to Cryptocurrency","content":"usage: find [-c COIN] [-k {id,symbol,name}] [-t TOP] [--source {cp,cg,bin,cb}] [--export {csv,json,xlsx}] [-h] Find similar coin by coin name,symbol or id. If you don\u0026rsquo;t remember exact name or id of the Coin at CoinGecko, Binance, Coinbase or CoinPaprika you can use this command to display coins with similar name, symbol or id to your search query. Example of usage: coin name is something like \u0026ldquo;polka\u0026rdquo;. So I can try: find -c polka -k name -t 25 It will search for coin that has similar name to polka and display top 25 matches. -c, \u0026ndash;coin stands for coin\n you provide here your search query -k, \u0026ndash;key it\u0026rsquo;s a searching key. You can search by symbol, id or name of coin -t, \u0026ndash;top it displays top N number of records.  optional arguments: -c COIN, --coin COIN Symbol Name or Id of Coin (default: None) -k {id,symbol,name}, --key {id,symbol,name} Specify by which column you would like to search: symbol, name, id (default: symbol) -t TOP, --top TOP Limit of records (default: 10) --source {cp,cg,bin,cb} Source of data. (default: cg) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) usage: coins [-c COIN] [-s SKIP] [-l N] [--source SOURCE] [--export {csv,json,xlsx}] [-h] Shows list of coins available on CoinGecko, CoinPaprika and Binance.If you provide name of coin then in result you will see ids of coins with best match for all mentioned services. If you provide ALL keyword in your search query, then all coins will be displayed. To move over coins you can use pagination mechanism with skip, top params. E.g. coins ALL \u0026ndash;skip 100 \u0026ndash;limit 30 then all coins from 100 to 130 will be displayed. By default skip = 0, limit = 10. If you won\u0026rsquo;t provide source of the data everything will be displayed (CoinGecko, CoinPaprika, Binance). If you want to search only in given source then use \u0026ndash;source flag. E.g. if you want to find coin with name uniswap on CoinPaprika then use: coins uniswap \u0026ndash;source cp \u0026ndash;limit 10\noptional arguments: -c COIN, --coin COIN Coin you search for (default: None) -s SKIP, --skip SKIP Skip n of records (default: 0) -l N, --limit N display N records (default: 10) --source SOURCE Source of data. (default: None) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:52 (✨) /crypto/ $ find -c btc Similar Coins ┌───────┬────────┬──────────────────────────────┬──────────────────────────────┐ │ index │ symbol │ id │ name │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 0 │ btc │ bitcoin │ Bitcoin │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 1 │ zbtc │ zetta-bitcoin-hashrate-token │ Zetta Bitcoin Hashrate Token │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 2 │ xbtc │ dforce-btc │ dForce BTC │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 2 │ xbtc │ synthetic-btc │ Synthetic BTC │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 2 │ xbtc │ wrapped-bitcoin-stacks │ Wrapped Bitcoin-Stacks │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 3 │ xbtc │ dforce-btc │ dForce BTC │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 3 │ xbtc │ synthetic-btc │ Synthetic BTC │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 3 │ xbtc │ wrapped-bitcoin-stacks │ Wrapped Bitcoin-Stacks │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 4 │ xbtc │ dforce-btc │ dForce BTC │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 4 │ xbtc │ synthetic-btc │ Synthetic BTC │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 4 │ xbtc │ wrapped-bitcoin-stacks │ Wrapped Bitcoin-Stacks │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 5 │ wbtc │ wrapped-bitcoin │ Wrapped Bitcoin │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 5 │ wbtc │ wrapped-btc-wormhole │ Wrapped BTC (Wormhole) │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 6 │ wbtc │ wrapped-bitcoin │ Wrapped Bitcoin │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 6 │ wbtc │ wrapped-btc-wormhole │ Wrapped BTC (Wormhole) │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 7 │ vbtc │ venus-btc │ Venus BTC │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 8 │ ubtc │ united-bitcoin │ United Bitcoin │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 9 │ tbtc │ t-bitcoin │ τBitcoin │ ├───────┼────────┼──────────────────────────────┼──────────────────────────────┤ │ 9 │ tbtc │ tbtc │ tBTC │ └───────┴────────┴──────────────────────────────┴──────────────────────────────┘ Similar Coins ┌───────┬───────┬───────┐ │ index │ id │ name │ ├───────┼───────┼───────┤ │ 0 │ tbtc │ tBTC │ ├───────┼───────┼───────┤ │ 1 │ sbtc │ sBTC │ ├───────┼───────┼───────┤ │ 2 │ wwbtc │ wWBTC │ ├───────┼───────┼───────┤ │ 3 │ tzbtc │ tzBTC │ ├───────┼───────┼───────┤ │ 4 │ nhbtc │ nHBTC │ ├───────┼───────┼───────┤ │ 5 │ bxbtc │ bxBTC │ └───────┴───────┴───────┘ "},{"id":774,"href":"/OpenBBTerminal/terminal/crypto/headlines/","title":"Headlines","parent":"Introduction to Cryptocurrency","content":"usage: headlines [-c COIN] [--export {csv,json,xlsx}] [-h] Display sentiment analysis from FinBrain for chosen Cryptocurrencies\noptional arguments: -c COIN, --coin COIN Symbol of coin to load data for, ~100 symbols are available (default: BTC) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 07:52 (✨) /crypto/ $ headlines date 2022-02-06 0.137 2022-02-07 0.137 2022-02-08 0.237 2022-02-09 0.123 2022-02-10 0.131 2022-02-11 0.014 2022-02-12 -0.057 2022-02-13 0.02 2022-02-14 0.103 2022-02-15 0.158 "},{"id":775,"href":"/OpenBBTerminal/terminal/crypto/load/","title":"Load","parent":"Introduction to Cryptocurrency","content":"usage: load [-c COIN] [-s START] [--exchange EXCHANGE] [-e END] [-i {1,5,15,30,60,240,1440,10080,43200}] [--vs VS] [--source {ccxt,yf,cg}] [-h]\nLoad crypto currency to perform analysis on. Yahoo Finance is used as default source. Other sources can be used such as \u0026lsquo;ccxt\u0026rsquo; or \u0026lsquo;cg\u0026rsquo; with \u0026ndash;source. If you select \u0026lsquo;ccxt\u0026rsquo;, you can then select any exchange with \u0026ndash;exchange. You can also select a specific interval with \u0026ndash;interval.\noptional arguments: -c COIN, --coin COIN Coin to get. Must be coin symbol (e.g., btc, eth) (default: None) -s START, --start START The starting date (format YYYY-MM-DD) of the crypto (default: 2019-08-19) --exchange {aax,ascendex,bequant,bibox,bigone,binance,binancecoinm,binanceus,binanceusdm,bit2c,bitbank,bitbay,bitcoincom,bitfinex,bitfinex2,bitflyer,bitforex,bitget,bithumb,bitmart,bitmex,bitopro,bitpanda,bitrue,bitso,bitstamp,bitstamp1,bittrex,bitvavo,bkex,bl3p,btcalpha,btcbox,btcex,btcmarkets,btctradeua,btcturk,buda,bw,bybit,bytetrade,cdax,cex,coinbaseprime,coinbasepro,coincheck,coinex,coinfalcon,coinmate,coinone,coinspot,crex24,cryptocom,currencycom,delta,deribit,digifinex,eqonex,exmo,flowbtc,fmfwio,ftx,ftxus,gate,gateio,gemini,hitbtc,hitbtc3,hollaex,huobi,huobijp,huobipro,idex,independentreserve,indodax,itbit,kraken,kucoin,kucoinfutures,kuna,latoken,lbank,lbank2,liquid,luno,lykke,mercado,mexc,mexc3,ndax,novadax,oceanex,okcoin,okex,okex5,okx,paymium,phemex,poloniex,probit,qtrade,ripio,stex,therock,tidebit,tidex,timex,tokocrypto,upbit,wavesexchange,whitebit,woo,xena,yobit,zaif,zb,zipmex,zonda} Exchange to search (default: binance) -e END, --end END The ending date (format YYYY-MM-DD) of the crypto (default: 2022-08-23) -i {1,5,15,30,60,240,1440,10080,43200}, --interval {1,5,15,30,60,240,1440,10080,43200} The interval of the crypto (default: 1440) --vs VS Quote currency (what to view coin vs). e.g., usdc, usdt, ... if source is ccxt, usd, eur, ... otherwise (default: usdt) --source {ccxt,yf,cg} Data source to select from (default: yf) -h, --help show this help message (default: False) "},{"id":776,"href":"/OpenBBTerminal/terminal/crypto/nft/collections/","title":"Collections","parent":"Introduction to Non Fungible Token (NFT)","content":"usage: collections [-l LIMIT] [-h] [--export {csv,json,xlsx}] Display top ethereum collections [Source: https://nftpricefloor.com/]\noptional arguments: -l LIMIT number of collections to show (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n NFT Collections ┏━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ slug ┃ name ┃ floorPriceETH ┃ totalSupply ┃ countOnSale ┃ blockchain ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ cryptopunks │ CryptoPunks │ 67.95 │ 10000 │ 1145 │ ethereum │ ├───────────────────────┼─────────────────────────┼───────────────┼─────────────┼─────────────┼────────────┤ │ bored-ape-yacht-club │ Bored Ape Yacht Club │ 65.68 │ 10000 │ 775 │ ethereum │ ├───────────────────────┼─────────────────────────┼───────────────┼─────────────┼─────────────┼────────────┤ │ mutant-ape-yacht-club │ Mutant Ape Yacht Club │ 11.99 │ 19423 │ 1075 │ ethereum │ ├───────────────────────┼─────────────────────────┼───────────────┼─────────────┼─────────────┼────────────┤ │ otherdeed │ Otherdeed for Otherside │ 1.57 │ 100000 │ 3932 │ ethereum │ ├───────────────────────┼─────────────────────────┼───────────────┼─────────────┼─────────────┼────────────┤ │ proof-moonbirds │ Moonbirds │ 13.25 │ 10000 │ 145 │ ethereum │ └───────────────────────┴─────────────────────────┴───────────────┴─────────────┴─────────────┴────────────┘ Example with --fp:\n"},{"id":777,"href":"/OpenBBTerminal/terminal/crypto/nft/fp/","title":"Fp","parent":"Introduction to Non Fungible Token (NFT)","content":"usage: fp [-s SLUG] [--raw] [-h] [--export {csv,json,xlsx}] Display floor price and sales of a certain collection [Source: https://nftpricefloor.com/]\noptional arguments: -s SLUG, --slug SLUG Opensea collection slug to check stats (e.g., bored-ape-yacht-club) --raw show raw data -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n"},{"id":778,"href":"/OpenBBTerminal/terminal/crypto/nft/stats/","title":"Stats","parent":"Introduction to Non Fungible Token (NFT)","content":"usage: stats [-s SLUG] [-h] [--export {csv,json,xlsx}] Display the statistics of a certain opensea collection [Source: opensea.io]\noptional arguments: -s SLUG, --slug SLUG Opensea collection slug to check stats (e.g., mutant-ape-yacht-club) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 07:56 (✨) /crypto/nft/ $ stats mutant-ape-yacht-club Collection Stats ┌────────────────────────────────┬───────────────────────┐ │ Metric │ Value │ ├────────────────────────────────┼───────────────────────┤ │ Name │ Mutant Ape Yacht Club │ ├────────────────────────────────┼───────────────────────┤ │ Floor Price (ETH) │ 20.00 │ ├────────────────────────────────┼───────────────────────┤ │ Number of Owners │ 11739.00 │ ├────────────────────────────────┼───────────────────────┤ │ Market Cap (ETH) │ 394162.01 │ ├────────────────────────────────┼───────────────────────┤ │ Average Price ETH │ 9.41 │ ├────────────────────────────────┼───────────────────────┤ │ One day volume (ETH) │ 529.62 │ ├────────────────────────────────┼───────────────────────┤ │ One day change (%) │ 3.65 │ ├────────────────────────────────┼───────────────────────┤ │ One day sales (ETH) │ 24.00 │ ├────────────────────────────────┼───────────────────────┤ │ One day average price (ETH) │ 22.07 │ ├────────────────────────────────┼───────────────────────┤ │ Thirty day volume (ETH) │ 50336.61 │ ├────────────────────────────────┼───────────────────────┤ │ Thirty day change (%) │ -19.89 │ ├────────────────────────────────┼───────────────────────┤ │ Thirty day sales (ETH) │ 2269.00 │ ├────────────────────────────────┼───────────────────────┤ │ Thirty day average price (ETH) │ 22.18 │ ├────────────────────────────────┼───────────────────────┤ │ Total Supply (ETH) │ 17958.00 │ ├────────────────────────────────┼───────────────────────┤ │ Total Sales (ETH) │ 25728.00 │ ├────────────────────────────────┼───────────────────────┤ │ Total Volume (ETH) │ 242008.36 │ ├────────────────────────────────┼───────────────────────┤ │ Creation Date │ Aug 29, 2021 │ ├────────────────────────────────┼───────────────────────┤ │ URL │ - │ └────────────────────────────────┴───────────────────────┘ "},{"id":779,"href":"/OpenBBTerminal/terminal/crypto/onchain/address/","title":"Address","parent":"Introduction to Cryptocurrency Onchain","content":"usage: address [-a] [-t] [-tx] [--address ADDRESS] [-h] Load address for further analysis. You can analyze account address, token address or transaction hash. [Source: Ethplorer]\noptional arguments: -a Account address (default: False) -t ERC20 token address (default: False) -tx Transaction hash (default: False) --address ADDRESS Ethereum address (default: False) -h, --help show this help message (default: False) "},{"id":780,"href":"/OpenBBTerminal/terminal/crypto/onchain/baas/","title":"Baas","parent":"Introduction to Cryptocurrency Onchain","content":"usage: baas [-c COIN] [-l N] [-vs VS] [-d DAYS] [-s {date,baseCurrency,quoteCurrency,dailySpread,averageBidPrice,averageAskPrice}] [--descend] [-h] [--export {csv,json,xlsx}] Display average bid, ask prices, spread for given crypto pair for chosen time period [Source: https://graphql.bitquery.io/]\noptional arguments: -c COIN, --coin COIN ERC20 token symbol or address. (default: None) -l N, --limit N display N number records (default: 10) -vs VS, --vs VS Quote currency (default: USDT) -d DAYS, --days DAYS Number of days to display data for. (default: 10) -s {date,baseCurrency,quoteCurrency,dailySpread,averageBidPrice,averageAskPrice}, --sort {date,baseCurrency,quoteCurrency,dailySpread,averageBidPrice,averageAskPrice} Sort by given column. (default: date) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":781,"href":"/OpenBBTerminal/terminal/crypto/onchain/balance/","title":"Balance","parent":"Introduction to Cryptocurrency Onchain","content":"usage: balance [-l N] [-s {index,balance,tokenName,tokenSymbol}] [--descend] [--export {csv,json,xlsx}] [-h] Display info about tokens on given ethereum blockchain address. [Source: Ethplorer]\noptional arguments: -l N, --limit N display N number records (default: 10) -s {index,balance,tokenName,tokenSymbol}, --sort {index,balance,tokenName,tokenSymbol} Sort by given column. Default: index (default: index) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":782,"href":"/OpenBBTerminal/terminal/crypto/onchain/btccp/","title":"Btccp","parent":"Introduction to Cryptocurrency Onchain","content":"usage: btccp [-s INITIAL_DATE] [-u END_DATE] [--export {csv,json,xlsx}] [-h] Displays bitcoin circulating supply. [Source: https://api.blockchain.info/]\narguments: -s DATE --since DATE Initial date. Default is initial BTC date: 2010-01-01 -u DATE --until DATE Final date. Default is current date --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":783,"href":"/OpenBBTerminal/terminal/crypto/onchain/btcct/","title":"Btcct","parent":"Introduction to Cryptocurrency Onchain","content":"usage: btcct [-s INITIAL_DATE] [-u END_DATE] [--export {csv,json,xlsx}] [-h] Displays bitcoin confirmed transactions. [Source: https://api.blockchain.info/]\narguments: -s DATE --since DATE Initial date. Default is initial BTC date: 2010-01-01 -u DATE --until DATE Final date. Default is current date --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":784,"href":"/OpenBBTerminal/terminal/crypto/onchain/ds/","title":"Ds","parent":"Introduction to Cryptocurrency Onchain","content":"usage: ds [-p {uniswap-v3,uniswap-v2,sushiswap,curve}] [-h] [--export EXPORT] [--raw] [-l LIMIT] Get daily transactions for certain symbols in ethereum blockchain [Source: https://sdk.flipsidecrypto.xyz/shroomdk]\noptions: -p {uniswap-v3,uniswap-v2,sushiswap,curve}, --platform {uniswap-v3,uniswap-v2,sushiswap,curve} Ethereum platform to check fees/number of users over time (default: curve) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":785,"href":"/OpenBBTerminal/terminal/crypto/onchain/dt/","title":"Dt","parent":"Introduction to Cryptocurrency Onchain","content":"usage: dt [-h] [--export EXPORT]\nGet daily transactions for certain symbols in ethereum blockchain [Source: https://sdk.flipsidecrypto.xyz/shroomdk]\noptions: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":786,"href":"/OpenBBTerminal/terminal/crypto/onchain/dvcp/","title":"Dvcp","parent":"Introduction to Cryptocurrency Onchain","content":"usage: tv [-c COIN] [-vs {ETH,USD,BTC,USDT}] [-l N] [-s {exchange,tradeAmount,trades}] [--descend] [-h] [--export {csv,json,xlsx}] Display daily volume for given crypto pair [Source: https://graphql.bitquery.io/]\noptional arguments: -c COIN, --coin COIN ERC20 token symbol or address. (default: None) -vs {ETH,USD,BTC,USDT}, --vs {ETH,USD,BTC,USDT} Currency of displayed trade amount. (default: USD) -l N, --limit N display N number records (default: 10) -s {exchange,tradeAmount,trades}, --sort {exchange,tradeAmount,trades} Sort by given column. (default: trades) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":787,"href":"/OpenBBTerminal/terminal/crypto/onchain/gwei/","title":"Gwei","parent":"Introduction to Cryptocurrency Onchain","content":"usage: onchain [--export {csv,json,xlsx}] [-h] Display ETH gas fees [Source: https://ethgasstation.info]\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example output:\n   Tx Type Fee (gwei) Duration (min)     Fastest 108 0.4   Fast 95 0.5   Average 72 4.0   Slow 68 11.9    "},{"id":788,"href":"/OpenBBTerminal/terminal/crypto/onchain/hist/","title":"Hist","parent":"Introduction to Cryptocurrency Onchain","content":"usage: hist [-l N] [-s {timestamp,transactionHash,token,value}] [--descend] [--export {csv,json,xlsx}] [-h] Display history for given ethereum blockchain address. e.g. 0x3cD751E6b0078Be393132286c442345e5DC49699 [Source: Ethplorer]\noptional arguments: -l N, --limit N display N number records (default: 10) -s {timestamp,transactionHash,token,value}, --sort {timestamp,transactionHash,token,value} Sort by given column. Default: timestamp (default: timestamp) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":789,"href":"/OpenBBTerminal/terminal/crypto/onchain/holders/","title":"Holders","parent":"Introduction to Cryptocurrency Onchain","content":"usage: holders [-l N] [-s {balance,balance,share}] [--descend] [--export {csv,json,xlsx}] [-h] Display top ERC20 token holders: e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 [Source: Ethplorer]\noptional arguments: -l N, --limit N display N number records (default: 10) -s {balance,balance,share}, --sort {balance,balance,share} Sort by given column. Default: share (default: share) --descend Flag to sort in descending order (lowest first) (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":790,"href":"/OpenBBTerminal/terminal/crypto/onchain/hr/","title":"Hr","parent":"Introduction to Cryptocurrency Onchain","content":"usage: hr [-c COIN] [-s INITIAL_DATE] [-u END_DATE] [-i {1h, 24h, 10m, 1w, 1month}] [--export {csv,json,xlsx}] [-h] Display the average hash rate of a certain network.[Source: https://glassnode.org]\nSupported assets: BTC, ETH\narguments: -c COIN --coin COIN Coin to check hashrate (BTC or ETH) -s DATE --since DATE Start date (default: 1 year before, e.g., 2020-10-22) -u DATE --until DATE End date (default: current day, e.g., 2021-10-22) -i INTERV --interval INTERV Interval frequency (default: 24h) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":791,"href":"/OpenBBTerminal/terminal/crypto/onchain/info/","title":"Info","parent":"Introduction to Cryptocurrency Onchain","content":"usage: info [--social] [--export {csv,json,xlsx}] [-h] Display info about ERC20 token. e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 [Source: Ethplorer]\noptional arguments: --social Flag to show social media links (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":792,"href":"/OpenBBTerminal/terminal/crypto/onchain/lt/","title":"Lt","parent":"Introduction to Cryptocurrency Onchain","content":"usage: lt [-k {dex,time}] [-vs {ETH,USD,BTC,USDT}] [-l N] [-d DAYS] [-s {trades,tradeAmount,exchange}] [--descend] [-h] [--export {csv,json,xlsx}] Display Trades on Decentralized Exchanges aggregated by DEX or Month [Source: https://graphql.bitquery.io/]\noptional arguments: -k {dex,time}, --kind {dex,time} Aggregate trades by dex or time Default: dex (default: dex) -vs {ETH,USD,BTC,USDT}, --vs {ETH,USD,BTC,USDT} Currency of displayed trade amount. (default: USD) -l N, --limit N display N number records (default: 10) -d DAYS, --days DAYS Number of days to display data for. (default: 90) -s {trades,tradeAmount,exchange}, --sort {trades,tradeAmount,exchange} Sort by given column. Default: tradeAmount. For monthly trades date. (default: tradeAmount) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":793,"href":"/OpenBBTerminal/terminal/crypto/onchain/prices/","title":"Prices","parent":"Introduction to Cryptocurrency Onchain","content":"usage: prices [-l N] [-s {date,cap,volumeConverted,open,high,close,low}] [--descend] [--export {csv,json,xlsx}] [-h] Display token historical prices. e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 [Source: Ethplorer]\noptional arguments: -l N, --limit N display N number records (default: 10) -s {date,cap,volumeConverted,open,high,close,low}, --sort {date,cap,volumeConverted,open,high,close,low} Sort by given column. Default: date (default: date) --descend Flag to sort in descending order (lowest first) (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":794,"href":"/OpenBBTerminal/terminal/crypto/onchain/th/","title":"Th","parent":"Introduction to Cryptocurrency Onchain","content":"usage: th [-l N] [-s {value}] [--descend] [--hash] [--export {csv,json,xlsx}] [-h] Displays info about token history. e.g. 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984 [Source: Ethplorer]\noptional arguments: -l N, --limit N display N number records (default: 10) -s {value}, --sort {value} Sort by given column. Default: value (default: value) --descend Flag to sort in descending order (lowest first) (default: True) --hash Flag to show transaction hash (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":795,"href":"/OpenBBTerminal/terminal/crypto/onchain/top/","title":"Top","parent":"Introduction to Cryptocurrency Onchain","content":"usage: top [-l N] [-s {rank,name,symbol,price,txsCount,transfersCount,holdersCount,address}] [--descend] [--export {csv,json,xlsx}] [-h] Display top ERC20 tokens. [Source: Ethplorer]\noptional arguments: -l N, --limit N display N number records (default: 10) -s {rank,name,symbol,price,txsCount,transfersCount,holdersCount,address}, --sort {rank,name,symbol,price,txsCount,transfersCount,holdersCount,address} Sort by given column. Default: rank (default: rank) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:04 (✨) /crypto/onchain/ $ top Top ERC20 Tokens ┌──────┬───────────────┬────────┬─────────┬──────────┬────────────────┬──────────────┬────────────────┬───────────────┐ │ rank │ name │ symbol │ price │ txsCount │ transfersCount │ holdersCount │ twitter │ coingecko │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 1 │ WETH │ WETH │ 3099.54 │ 6M │ 90M │ 440.2K │ │ weth │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 2 │ Tether USD │ USDT │ 1.00 │ 125.5M │ 138.8M │ 4.4M │ Tether_to │ tether │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 3 │ USD Coin │ USDC │ 1.00 │ 19M │ 34.8M │ 1.4M │ │ usd-coin │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 4 │ Strong │ STRONG │ 393.38 │ 464.9K │ 4.7M │ 31.5K │ Strongblock_io │ strong │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 5 │ LooksRare │ LOOKS │ 2.14 │ 263.9K │ 1.2M │ 19.6K │ LooksRareNFT │ looksrare │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 6 │ Dai │ DAI │ 1.00 │ 4.1M │ 13.1M │ 453.7K │ MakerDAO │ dai │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 7 │ Shiba Inu │ SHIB │ 0.00 │ 4.6M │ 6.8M │ 1.2M │ Shibtoken │ shiba-inu │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 8 │ Matic Network │ MATIC │ 1.79 │ 2.8M │ 3.5M │ 367.6K │ maticnetwork │ matic-network │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 9 │ Chainlink │ LINK │ 16.81 │ 5.5M │ 10.9M │ 651.2K │ chainlink │ chainlink │ ├──────┼───────────────┼────────┼─────────┼──────────┼────────────────┼──────────────┼────────────────┼───────────────┤ │ 10 │ Gala │ GALA │ 0.34 │ 678.5K │ 869.8K │ 105.5K │ GoGalaGames │ gala │ └──────┴───────────────┴────────┴─────────┴──────────┴────────────────┴──────────────┴────────────────┴───────────────┘ "},{"id":796,"href":"/OpenBBTerminal/terminal/crypto/onchain/ttcp/","title":"Ttcp","parent":"Introduction to Cryptocurrency Onchain","content":"usage: ttcp [-l N] [-e {1inch,afrodex,airswap,amplbitcratic,balancer,bestswap,bitox,cellswap,cofix,coinchangex,curve,ddex,dubiex,decentrex,deversifi,dodo,ethercexchange,etherblockchain,etherdelta,ethernext,ethfinex,fegex,fffswap,fordex,gudecks,gudeks,hiswap,idex,ledgerdex,mat cha,miniswap,mooniswap,oasis,openrelay,s.finance,sakeswap,seeddex,singularx,starbitex,sushiswap,swapx,switchdex,tacoswap,tokenjar,tokenstore,tokentrove,tokenlon,tradexone,uniswap,zeusswap,dydx,dex.blue}] [-d DAYS] [-s {base,quoted,trades,tradeAmount}] [--descend] [-h] [--export {csv,json,xlsx}] Display most traded crypto pairs on given decentralized exchange in chosen time period [Source: https://graphql.bitquery.io/]\noptional arguments: -l N, --limit N display N number records (default: 10) -e {1inch,afrodex,airswap,amplbitcratic,balancer,bestswap,bitox,cellswap,cofix,coinchangex,curve,ddex,dubiex,decentrex,deversifi,dodo,ethercexchange,etherblockchain,etherdelta,ethernext,ethfinex,fegex,fffswap,fordex,gudecks,gudeks,hiswap,idex,ledgerdex,matcha,miniswa p,mooniswap,oasis,openrelay,s.finance,sakeswap,seeddex,singularx,starbitex,sushiswap,swapx,switchdex,tacoswap,tokenjar,tokenstore,tokentrove,tokenlon,tradexone,uniswap,zeusswap,dydx,dex.blue}, --exchange {1inch,afrodex,airswap,amplbitcratic,balancer,bestswap,bitox,cell swap,cofix,coinchangex,curve,ddex,dubiex,decentrex,deversifi,dodo,ethercexchange,etherblockchain,etherdelta,ethernext,ethfinex,fegex,fffswap,fordex,gudecks,gudeks,hiswap,idex,ledgerdex,matcha,miniswap,mooniswap,oasis,openrelay,s.finance,sakeswap,seeddex,singularx,starb itex,sushiswap,swapx,switchdex,tacoswap,tokenjar,tokenstore,tokentrove,tokenlon,tradexone,uniswap,zeusswap,dydx,dex.blue} Decentralized exchange name. (default: Uniswap) -d DAYS, --days DAYS Number of days to display data for. (default: 30) -s {base,quoted,trades,tradeAmount}, --sort {base,quoted,trades,tradeAmount} Sort by given column. (default: tradeAmount) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":797,"href":"/OpenBBTerminal/terminal/crypto/onchain/tv/","title":"Tv","parent":"Introduction to Cryptocurrency Onchain","content":"usage: volt [-c COIN] [-vs {ETH,USD,BTC,USDT}] [-l N] [-s {exchange,coin,tradeAmount,trades}] [--descend] [-h] [--export {csv,json,xlsx}] Display token volume on different Decentralized Exchanges [Source: https://graphql.bitquery.io/]\noptional arguments: -c COIN, --coin COIN ERC20 token symbol or address. (default: ETH) -vs {ETH,USD,BTC,USDT}, --vs {ETH,USD,BTC,USDT} Currency of displayed trade amount. (default: USD) -l N, --limit N display N number records (default: 10) -s {exchange,coin,tradeAmount,trades}, --sort {exchange,coin,tradeAmount,trades} Sort by given column. (default: trades) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":798,"href":"/OpenBBTerminal/terminal/crypto/onchain/tvl/","title":"Tvl","parent":"Introduction to Cryptocurrency Onchain","content":"usage: tvl [-u USERADDRESS] [-a ADDRESSNAME] [-s SYMBOL] [-i INTERVAL] [-h] [--export EXPORT] Total value locked (TVL) metric - Ethereum ERC20 [Source:https://docs.flipsidecrypto.com/]\nuseraddress OR addressname must be provided\noptions: -u USERADDRESS, --useraddress USERADDRESS User address we'd like to take a balance reading of against the contract (e.g., 0xa5407eae9ba41422680e2e00537571bcc53efbfd) (default: None) -a ADDRESSNAME, --addressname ADDRESSNAME Address name corresponding to the user address (e.g., makerdao) (default: None) -s SYMBOL, --symbol SYMBOL Contract symbol (default: USDC) -i INTERVAL, --interval INTERVAL Interval in months (default: 1) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":799,"href":"/OpenBBTerminal/terminal/crypto/onchain/tx/","title":"Tx","parent":"Introduction to Cryptocurrency Onchain","content":"usage: tx [--export {csv,json,xlsx}] [-h] Display info ERC20 token transaction on ethereum blockchain. e.g. 0x9dc7b43ad4288c624fdd236b2ecb9f2b81c93e706b2ffd1d19b112c1df7849e6 [Source: Ethplorer]\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":800,"href":"/OpenBBTerminal/terminal/crypto/onchain/ueat/","title":"Ueat","parent":"Introduction to Cryptocurrency Onchain","content":"usage: ueat [-l N] [-s {date,uniqueSenders,transactions,averageGasPrice,mediumGasPrice,maximumGasPrice}] [-i {day,month,week}] [--descend] [-h] [--export {csv,json,xlsx}] Display number of unique ethereum addresses which made a transaction in given time interval [Source: https://graphql.bitquery.io/]\noptional arguments: -l N, --limit N display N number records. (Maximum available time period is 90 days.Depending on chosen time period, top N records will be recalculated. E.g.For interval: month, and top: 10, period of calculation equals to 300, but because of max days limit: 90, it will only return last 3 months (3 records). (default: 10) -s {date,uniqueSenders,transactions,averageGasPrice,mediumGasPrice,maximumGasPrice}, --sort {date,uniqueSenders,transactions,averageGasPrice,mediumGasPrice,maximumGasPrice} Sort by given column. (default: date) -i {day,month,week}, --interval {day,month,week} Time interval in which ethereum address made transaction. month, week or day. Maximum time period is 90 days (3 months, 14 weeks) (default: day) --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":801,"href":"/OpenBBTerminal/terminal/crypto/onchain/whales/","title":"Whales","parent":"Introduction to Cryptocurrency Onchain","content":"usage: whales [-m MIN] [-l N] [-s {date,symbol,blockchain,amount,amount_usd,from,to}] [--descend] [-a] [--export {csv,json,xlsx}] [-h] Display huge value transactions from major blockchains. [Source: https://docs.whale-alert.io/]\noptional arguments: -m MIN, --min MIN Minimum value of transactions. (default: 1000000) -l N, --limit N display N number of records (default: 10) -s {date,symbol,blockchain,amount,amount_usd,from,to}, --sort {date,symbol,blockchain,amount,amount_usd,from,to} Sort by given column (default: date) --descend Flag to sort in descending order (lowest first) (default: True) -a, --address Flag to show addresses of transactions (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":802,"href":"/OpenBBTerminal/terminal/crypto/ov/altindex/","title":"Altindex","parent":"Introduction to Cryptocurrency Overview","content":"usage: altindex [-s INITIAL_DATE] [-u END_DATE] [-p {30, 90, 365}] [--export {csv,json,xlsx}] [-h] Display altcoin index overtime [Source: https://blockchaincenter.net] If 75% of the Top 50 coins performed better than Bitcoin over periods of time (30, 90 or 365 days) it is Altcoin Season. Excluded from the Top 50 are Stablecoins (Tether, DAI…) and asset backed tokens (WBTC, stETH, cLINK,…)\narguments: -s DATE --since DATE Start date (default: 1 year before, e.g., 2021-01-01) -u DATE --until DATE End date (default: current day, e.g., 2022-01-01) -p DAYS --period DAYS Period of days to check performance (default: 365) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":803,"href":"/OpenBBTerminal/terminal/crypto/ov/btcrb/","title":"Btcrb","parent":"Introduction to Cryptocurrency Overview","content":"usage: btcrb [-s INITIAL_DATE] [-u END_DATE] [--export {csv,json,xlsx}] [-h] Displays bitcoin rainbow chart. It also includes halving dates.\n[Price data from source: https://glassnode.com]\n[Inspired by: https://blockchaincenter.net]\narguments: -s DATE --since DATE Initial date. Default is initial BTC date: 2010-01-01 -u DATE --until DATE Final date. Default is current date --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":804,"href":"/OpenBBTerminal/terminal/crypto/ov/categories/","title":"Categories","parent":"Introduction to Cryptocurrency Overview","content":"usage: categories [-l N] [-s {Rank,Name,Change_1h,Change_24h,Change_7d,Market_Cap,Volume_24h,Coins}] [--descend] [-l] [--export {csv,json,xlsx}] [--pie] [-h] Shows top cryptocurrency categories by market capitalization. It includes categories like: stablecoins, defi, solana ecosystem, polkadot ecosystem and many others. You can sort by each column using \u0026ndash;sort parameter\noptional arguments: -l N, --limit N display N number records (default: 15) -s {Rank,Name,Change_1h,Change_24h,Change_7d,Market_Cap,Volume_24h,Coins}, --sort {Rank,Name,Change_1h,Change_24h,Change_7d,Market_Cap,Volume_24h,Coins} Sort by given column. Default: Rank (default: Rank) --pie Show pie chart with market cap distribution --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:10 (✨) /crypto/ov/ $ categories ┌──────────────────────────────────┬────────────┬───────────────────────┬───────────────────────────────────────────────────────┬────────────┐ │ Name │ Market Cap │ Market Cap Change 24H │ Top 3 Coins │ Volume 24H │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Smart Contract Platform │ 678.047 B │ 8.095 │ ethereum,binance-coin-logo,cardano │ 27.408 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Binance Smart Chain Ecosystem │ 339.679 B │ 3.876 │ Tether-logo,binance-coin-logo,USD_Coin_icon │ 58.906 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Polygon Ecosystem │ 311.497 B │ 3.644 │ Tether-logo,binance-coin-logo,USD_Coin_icon │ 58.872 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Avalanche Ecosystem │ 299.726 B │ 3.620 │ Tether-logo,binance-coin-logo,USD_Coin_icon │ 53.420 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Moonriver Ecosystem │ 288.048 B │ 3.709 │ Tether-logo,binance-coin-logo,USD_Coin_icon │ 55.035 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Fantom Ecosystem │ 215.497 B │ 1.760 │ Tether-logo,USD_Coin_icon,luna1557227471663 │ 53.904 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Stablecoins │ 182.561 B │ -0.108 │ Tether-logo,USD_Coin_icon,BUSD │ 50.694 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Arbitrum Ecosystem │ 180.827 B │ 1.536 │ Tether-logo,USD_Coin_icon,wrapped_bitcoin_wbtc │ 49.169 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Near Protocol Ecosystem │ 173.873 B │ 1.585 │ Tether-logo,USD_Coin_icon,4943 │ 49.034 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Exchange-based Tokens │ 129.556 B │ 7.082 │ binance-coin-logo,cypto,F │ 6.532 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Decentralized Finance (DeFi) │ 115.516 B │ 6.310 │ luna1557227471663,4943,chainlink-new-logo │ 5.141 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Centralized Exchange Token (CEX) │ 109.267 B │ 6.734 │ binance-coin-logo,cypto,F │ 2.138 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Gnosis Chain Ecosystem │ 86.569 B │ 3.015 │ USD_Coin_icon,wrapped_bitcoin_wbtc,chainlink-new-logo │ 5.255 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Cosmos Ecosystem │ 56.514 B │ 7.509 │ luna1557227471663,cypto,cosmos_hub │ 2.653 B │ ├──────────────────────────────────┼────────────┼───────────────────────┼───────────────────────────────────────────────────────┼────────────┤ │ Solana Ecosystem │ 51.051 B │ 8.194 │ solana,chainlink-new-logo,Graph_Token │ 2.925 B │ └──────────────────────────────────┴────────────┴───────────────────────┴───────────────────────────────────────────────────────┴────────────┘ "},{"id":805,"href":"/OpenBBTerminal/terminal/crypto/ov/ch/","title":"Ch","parent":"Introduction to Cryptocurrency Overview","content":"usage: ch [-l N] [-s {Platform,Date,Amount [$],Audit,Slug,URL}] [--descend] [-h] [--export {csv,json,xlsx}] Display list of major crypto-related hacks [Source: https://rekt.news] Can be sorted by {Platform,Date,Amount [$],Audit,Slug,URL} with \u0026ndash;sort and reverse the display order with \u0026ndash;descend Show only N elements with \u0026ndash;limit N Accepts \u0026ndash;slug or -s to check individual crypto hack (e.g., -s polynetwork-rekt)\noptional arguments: -s SLUG, --slug SLUG Rekt news slug to check (e.g., polynetwork-rekt) -l N, --limit N display N number records (default: 15) --sort {Platform,Date,Amount [$],Audit,Slug,URL} Sort by given column. Default: Amount [$] --descend Flag to sort in descending order (lowest first) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 08:16 (✨) /crypto/ov/ $ ch Major Crypto Hacks ┌────────────────────────┬────────────┬────────────┬────────────────────────┬────────────────────┬───────────────────────────────────────┐ │ Platform │ Date │ Amount [$] │ Audit │ Slug │ URL │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Poly Network - REKT │ 2021-08-10 │ 611 M │ Unaudited │ polynetwork-rekt │ https://rekt.news/polynetwork-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Wormhole - REKT │ 2022-02-02 │ 326 M │ Neodyme │ wormhole-rekt │ https://rekt.news/wormhole-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ BitMart - REKT │ 2021-12-04 │ 196 M │ N/A │ bitmart-rekt │ https://rekt.news/bitmart-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Compound - REKT │ 2021-09-29 │ 147 M │ Unaudited │ compound-rekt │ https://rekt.news/compound-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Vulcan Forged - REKT │ 2021-12-13 │ 140 M │ Unaudited │ vulcan-forged-rekt │ https://rekt.news/vulcan-forged-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Cream Finance - REKT 2 │ 2021-10-27 │ 130 M │ Unaudited │ cream-rekt-2 │ https://rekt.news/cream-rekt-2/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Badger - REKT │ 2021-12-02 │ 120 M │ Unaudited │ badger-rekt │ https://rekt.news/badger-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Qubit Finance - REKT │ 2022-01-28 │ 80 M │ Unaudited │ qubit-rekt │ https://rekt.news/qubit-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Ascendex - REKT │ 2021-12-12 │ 77.700 M │ Unaudited │ ascendex-rekt │ https://rekt.news/ascendex-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ EasyFi - REKT │ 2021-04-19 │ 59 M │ Unaudited │ easyfi-rekt │ https://rekt.news/easyfi-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Uranium Finance - REKT │ 2021-04-28 │ 57.200 M │ Unaudited │ uranium-rekt │ https://rekt.news/uranium-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ bZx - REKT │ 2021-11-05 │ 55 M │ Unaudited │ bzx-rekt │ https://rekt.news/bzx-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ PancakeBunny - REKT │ 2021-05-19 │ 45 M │ Unaudited │ pancakebunny-rekt │ https://rekt.news/pancakebunny-rekt/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Kucoin - REKT │ 2020-09-29 │ 45 M │ Internal audit │ epic-hack-homie │ https://rekt.news/epic-hack-homie/ │ ├────────────────────────┼────────────┼────────────┼────────────────────────┼────────────────────┼───────────────────────────────────────┤ │ Alpha Finance - REKT │ 2021-02-13 │ 37.500 M │ Quantstamp, Peckshield │ alpha-finance-rekt │ https://rekt.news/alpha-finance-rekt/ │ └────────────────────────┴────────────┴────────────┴────────────────────────┴────────────────────┴───────────────────────────────────────┘ "},{"id":806,"href":"/OpenBBTerminal/terminal/crypto/ov/contracts/","title":"Contracts","parent":"Introduction to Cryptocurrency Overview","content":"usage: contracts [-p {btc-bitcoin,eos-eos,eth-ethereum,xrp-xrp,bch-bitcoin-cash,xem-nem,neo-neo,xlm-stellar,etc-ethereum-classic,qtum-qtum,zec-zcash,bts-bitshares,waves-waves,nxt-nxt,act-achain,ubq-ubiq,xcp-counterparty,etp-metaverse-etp,burst-burst,omni-omni,trx-tron,bnb-binance-coin,ardr-ardor,ht-huobi-token,blvr-believer,cake-pancakeswap,fsxu-flashx-ultra,chik-chickenkebab-finance,jgn-juggernaut7492,crx-cryptex,whirl-whirl-finance,eubi-eubi-token,swam-swapmatic-token,shells-shells}] [-l N] [-s {id,type,active,address}] [--descend] [--export {csv,json,xlsx}] [-h] Gets all contract addresses for given platform. Provide platform id with -p/\u0026ndash;platform parameter You can display only N number of smart contracts with \u0026ndash;limit parameter. You can sort data by id, type, active, address \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. Displays: id, type, active, address\noptional arguments: -p {btc-bitcoin,eos-eos,eth-ethereum,xrp-xrp,bch-bitcoin-cash,xem-nem,neo-neo,xlm-stellar,etc-ethereum-classic,qtum-qtum,zec-zcash,bts-bitshares,waves-waves,nxt-nxt,act-achain,ubq-ubiq,xcp-counterparty,etp-metaverse-etp,burst-burst,omni-omni,trx-tron,bnb-binance-coin,ardr-ardor,ht-huobi-token,blvr-believer,cake-pancakeswap,fsxu-flashx-ultra,chik-chickenkebab-finance,jgn-juggernaut7492,crx-cryptex,whirl-whirl-finance,eubi-eubi-token,swam-swapmatic-token,shells-shells}, --platform {btc-bitcoin,eos-eos,eth-ethereum,xrp-xrp,bch-bitcoin-cash,xem-nem,neo-neo,xlm-stellar,etc-ethereum-classic,qtum-qtum,zec-zcash,bts-bitshares,waves-waves,nxt-nxt,act-achain,ubq-ubiq,xcp-counterparty,etp-metaverse-etp,burst-burst,omni-omni,trx-tron,bnb-binance-coin,ardr-ardor,ht-huobi-token,blvr-believer,cake-pancakeswap,fsxu-flashx-ultra,chik-chickenkebab-finance,jgn-juggernaut7492,crx-cryptex,whirl-whirl-finance,eubi-eubi-token,swam-swapmatic-token,shells-shells} Blockchain platform like eth-ethereum (default: eth-ethereum) -l N, --limit N Limit of records (default: 15) -s {id,type,active,address}, --sort {id,type,active,address} Sort by given column (default: id) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:16 (✨) /crypto/ov/ $ contracts Contract Addresses ┌────────────────────────────────────────────────────┬───────┬────────┐ │ id │ type │ active │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ - │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ -dogeinu │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ -exotix │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ -onlychads │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ -pcore │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ -the-ether-collection │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0175-geely-automobile │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0241-alibaba-health-information-technology-limited │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0347-angang-steel │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0358-jiangxi-copper │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0522-asm-pacific-technology-limited │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0728-china-telecom │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0753-air-china │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0857-petrochina │ ERC20 │ True │ ├────────────────────────────────────────────────────┼───────┼────────┤ │ 0916-china-longyuan-power │ ERC20 │ True │ └────────────────────────────────────────────────────┴───────┴────────┘ "},{"id":807,"href":"/OpenBBTerminal/terminal/crypto/ov/cr/","title":"Cr","parent":"Introduction to Cryptocurrency Overview","content":"usage: cr [-t {borrow,supply}] [-c CRYPTOCURRENCIES] [-p PLATFORMS] [-h] [--export EXPORT] [-l LIMIT]\nDisplays crypto {borrow,supply} interest rates for cryptocurrencies across several platforms. [Source: https://loanscan.io] You can select rate type with \u0026ndash;type {borrow,supply} You can display only N number of platforms with \u0026ndash;limit parameter. You can check for specific coins with -c and in specific platforms with -p\noptional arguments: -t {borrow,supply}, --type {borrow,supply} Select interest rate type (default: supply) -c CRYPTOCURRENCIES, --cryptocurrrencies CRYPTOCURRENCIES Cryptocurrencies to search interest rates for separated by comma. Options: ZRX,BAT,REP,ETH,SAI,BTC,X RP,LTC,EOS,BCH,XMR,DOGE,USDC,USDT,BSV,NEO,ETC,OMG,ZEC,BTG,SAN,DAI,UNI,WBTC,COMP,LUNA,UST,BUSD,KNC,LEND,LINK,MANA,MKR,SNX,SUSD,TUS D,eCRV-DAO,HEGIC,YFI,1INCH,CRV-IB,CRV-HBTC,BOOST,CRV-sBTC,CRV-renBTC,CRV-sAave,CRV-oBTC,CRV-pBTC,CRV-LUSD,CRV-BBTC,CRV-tBTC,CRV- FRAX,CRV-yBUSD,CRV-COMP,CRV-GUSD,yUSD,CRV-3pool,CRV-TUSD,CRV-BUSD,CRV-DUSD,CRV-UST,CRV-mUSD,sUSD,CRV-sUSD,CRV-LINK,CRV-USDN,CRV- USDP,CRV-alUSD,CRV-Aave,CRV-HUSD,CRV-EURS,RAI,CRV-triCrypto,CRV-Pax,CRV-USDT,CRV-USDK,CRV-RSV,CRV-3Crypto,GUSD,PAX,USD,ILK,BNB,PA XG,ADA,FTT,SOL,SRM,RAY,XLM,SUSHI,CRV,BAL,AAVE,MATIC,GRT,ENJ,USDP,IOST,AMP,PERP,SHIB,ALICE,ALPHA,ANKR,ATA,AVA,AXS,BAKE,BAND,BNT,BT CST,CELR,CFX,CHR,COS,COTI,CTSI,DUSK,EGLD,ELF,FET,FLOW,FTM,INJ,IOTX,MDX,NEAR,OCEAN,ONT,POLS,REEF,WRX,XEC,XTZ,XVS,ZIL,DOT,FIL,TRX,C AKE,ADX,FIRO,SXP,ATOM,IOTA,AKRO,AUDIO,BADGER,CVC,DENT,DYDX,FORTH,GNO,HOT,LPT,LRC,NKN,NMR,NU,OGN,OXT,POLY,QNT,RLC,RSR,SAND,SKL,STM X,STORJ,TRB,UMA,DPI,VSP,CHSB,EURT,GHST,3CRV,CRVRENWBTC,MIR-UST UNI LP,ALCX,ALUSD,USDP3CRV,RENBTC,YVECRV,CVX,USDTTRC20,AUD,HKD,GBP,EUR,HUSD,HT,DASH,EURS,AVAX,BTT,GALA,ILV,APE (default: BTC,ETH,USDT,USDC) -p PLATFORMS, --platforms PLATFORMS Platforms to search interest rates in separated by comma. Options: MakerDao,Compound, Poloniex,Bitfinex,dYdX,CompoundV2,Linen,Hodlonaut,InstaDapp,Zerion,Argent,DeFiSaver,MakerDaoV2,Ddex,AaveStable,AaveVariable,Yearn Finance,BlockFi,Nexo,CryptoCom,Soda,Coinbase,SaltLending,Ledn,Bincentive,Inlock,Bitwala,Zipmex,Vauld,Delio,Yield,Vesper,Reflexer, SwissBorg,MushroomsFinance,ElementFi,Maple,CoinRabbit,WirexXAccounts,Youhodler,YieldApp,NotionalFinance,IconFi (default: BlockFi,Ledn,SwissBorg,Youhodler) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":808,"href":"/OpenBBTerminal/terminal/crypto/ov/defi/","title":"Defi","parent":"Introduction to Cryptocurrency Overview","content":"usage: defi [--export {csv,json,xlsx}] [-h] Shows global DeFi statistics DeFi or Decentralized Finance refers to financial services that are built on top of distributed networks with no central intermediaries. Displays metrics like: Market Cap, Trading Volume, Defi Dominance, Top Coins\u0026hellip;\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:11 (✨) /crypto/ov/ $ defi Global DEFI Statistics ┌─────────────────────────┬─────────────────┐ │ Metric │ Value │ ├─────────────────────────┼─────────────────┤ │ Defi Market Cap │ 110361000917.64 │ ├─────────────────────────┼─────────────────┤ │ Eth Market Cap │ 372708922218.61 │ ├─────────────────────────┼─────────────────┤ │ Defi To Eth Ratio │ 29.61 │ ├─────────────────────────┼─────────────────┤ │ Trading Volume 24H │ 4839623761.93 │ ├─────────────────────────┼─────────────────┤ │ Defi Dominance │ 5.32 │ ├─────────────────────────┼─────────────────┤ │ Top Coin Name │ Terra │ ├─────────────────────────┼─────────────────┤ │ Top Coin Defi Dominance │ 20.40 │ └─────────────────────────┴─────────────────┘ "},{"id":809,"href":"/OpenBBTerminal/terminal/crypto/ov/derivatives/","title":"Derivatives","parent":"Introduction to Cryptocurrency Overview","content":"usage: derivatives [-l N] [-s {Rank,Market,Symbol,Price,Pct_Change_24h,Contract_Type,Basis,Spread,Funding_Rate,Volume_24h}] [--descend] [--export {csv,json,xlsx}] [-h] Shows list of crypto derivatives from CoinGecko Crypto derivatives are secondary contracts or financial tools that derive their value from a primary underlying asset. In this case, the primary asset would be a cryptocurrency such as Bitcoin. The most popular crypto derivatives are crypto futures, crypto options, and perpetual contracts. You can look on only display N number records with \u0026ndash;limit, You can sort by Rank, Market, Symbol, Price, Pct_Change_24h, Contract_Type, Basis, Spread, Funding_Rate, Volume_24h with \u0026ndash;sort and also with \u0026ndash;descend flag to set it to sort descending. Displays: Rank, Market, Symbol, Price, Pct_Change_24h, Contract_Type, Basis, Spread, Funding_Rate, Volume_24h\noptional arguments: -l N, --limit N display N number records (default: 15) -s {Rank,Market,Symbol,Price,Pct_Change_24h,Contract_Type,Basis,Spread,Funding_Rate,Volume_24h}, --sort {Rank,Market,Symbol,Price,Pct_Change_24h,Contract_Type,Basis,Spread,Funding_Rate,Volume_24h} Sort by given column. Default: Rank (default: Rank) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:11 (✨) /crypto/ov/ $ derivatives Crypto Derivatives ┌──────┬───────────────────────────────┬───────────────┬──────────┬────────────────┬───────────────┬───────┬────────┬──────────────┬────────────────┐ │ Rank │ Market │ Symbol │ Price │ Pct_Change_24h │ Contract_Type │ Basis │ Spread │ Funding_Rate │ Volume_24h │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 1 │ Binance (Futures) │ BTCUSDT │ 44268.84 │ 4.20 │ perpetual │ 0.02 │ 0.01 │ -0.01 │ 14058514627.71 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 2 │ FTX (Derivatives) │ BTC-PERP │ 44320.00 │ 4.26 │ perpetual │ -0.07 │ 0.01 │ 0.05 │ 3855173273.68 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 3 │ MEXC Global (Futures) │ ETH_USDT │ 3113.88 │ 6.05 │ perpetual │ 0.06 │ 0.01 │ -0.02 │ 742832083.24 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 4 │ Gate.io (Futures) │ BTC_USDT │ 44255.93 │ 4.07 │ perpetual │ 0.07 │ 0.01 │ -0.01 │ 1323562150.90 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 5 │ Binance (Futures) │ ETHUSDT │ 3116.95 │ 6.44 │ perpetual │ 0.04 │ 0.01 │ -0.02 │ 6311502301.53 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 6 │ Prime XBT │ BTC/USD │ 44250.70 │ 4.25 │ perpetual │ 0.00 │ 0.02 │ 0.00 │ 237445592.24 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 7 │ Bitget Futures │ BTCUSDT_UMCBL │ 44240.81 │ 3.93 │ perpetual │ -0.01 │ 0.01 │ -0.01 │ 4770121162.81 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 8 │ FTX (Derivatives) │ ETH-PERP │ 3115.00 │ 6.25 │ perpetual │ 0.03 │ 0.01 │ 0.00 │ 2193700085.40 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 9 │ Bitfinex (Futures) │ ETHF0:USTF0 │ 3116.90 │ 6.59 │ perpetual │ 0.05 │ 0.01 │ 0.00 │ 35390334.64 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 10 │ Bybit │ BTCUSDT │ 44213.89 │ 3.90 │ perpetual │ 0.06 │ 0.01 │ -0.01 │ 2873696641.99 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 11 │ C-Trade │ BTCUSD │ 44172.50 │ 3.65 │ perpetual │ 0.16 │ 0.01 │ 0.01 │ 25634007.98 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 12 │ Crypto.com Exchange (Futures) │ BTCUSD-PERP │ 44295.00 │ 4.21 │ perpetual │ -0.00 │ 0.02 │ 0.00 │ 882778425.04 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 13 │ Binance (Futures) │ BTCUSD_PERP │ 44273.80 │ 4.16 │ perpetual │ 0.05 │ 0.01 │ -0.01 │ 5207414861.13 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 14 │ Bybit │ BTCUSD │ 44200.50 │ 3.89 │ perpetual │ 0.10 │ 0.01 │ -0.01 │ 1365988606.18 │ ├──────┼───────────────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 15 │ BTSE (Futures) │ BTCPFC │ 44220.00 │ 4.10 │ perpetual │ 0.03 │ 0.01 │ 0.00 │ 1022965434.27 │ └──────┴───────────────────────────────┴───────────────┴──────────┴────────────────┴───────────────┴───────┴────────┴──────────────┴────────────────┘ "},{"id":810,"href":"/OpenBBTerminal/terminal/crypto/ov/ewf/","title":"Ewf","parent":"Introduction to Cryptocurrency Overview","content":"usage: ewf [-l N] [--export {png,jpg,pdf,svg}] Display exchange withdrawal fees [Source: https://withdrawalfees.com/]\noptional arguments: --export {png,jpg,pdf,svg} Export or figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 15, 08:20 (✨) /crypto/ov/ $ ewf Withdrawal fees per exchange: Withdrawal Fees ┌─────────────────────┬───────┬────────────────┬──────────────────┬────────┬─────────────────────┐ │ Exchange │ Coins │ Lowest │ Average │ Median │ Highest │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ FixedFloat │ 19 │ FREE │ FREE │ FREE │ FREE │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ CREX24 │ 218 │ $0.000000001 │ $0.97 │ $0.003 │ $35.42 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ GetBTC │ 20 │ FREE │ $1.54 │ $0.03 │ $22.13 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Deribit │ 2 │ $0.89 │ $2.30 │ $2.30 │ $3.72 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ CoinFalcon │ 9 │ $0.00000000008 │ $3.41 │ $0.15 │ $24.83 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Bitfinex │ 139 │ FREE │ $3.59 │ $4.92 │ $51.83 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Bleutrade │ 14 │ FREE │ $4.76 │ FREE │ $44.27 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Kraken │ 101 │ $0.0002 │ $7.23 │ $6.62 │ $33.92 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Coindeal │ 17 │ $0.01 │ $7.52 │ $1.08 │ $46.55 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ OKCoin │ 75 │ $0.0002 │ $8.27 │ $2.40 │ $45.93 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ CoinTiger │ 40 │ $0.00006 │ $10.40 │ $0.44 │ $217.00 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Kucoin │ 598 │ FREE │ $11.12 │ $10.22 │ $60.89 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ AscendEX │ 278 │ FREE │ $11.29 │ $12.22 │ $418.86 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Coincheck │ 17 │ $0.002 │ $11.45 │ $0.33 │ $56.70 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Coinone │ 213 │ FREE │ $11.79 │ $12.41 │ $403.08 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ CoinEx │ 376 │ FREE │ $12.11 │ $15.15 │ $64.73 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Bitrue │ 73 │ FREE │ $12.67 │ $2.42 │ $137.85 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Crypto.com Exchange │ 179 │ FREE │ $13.59 │ $8.02 │ $229.75 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ DSX │ 14 │ $0.0004 │ $14.40 │ $1.23 │ $146.63 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Poloniex │ 301 │ FREE │ $15.83 │ $16.22 │ $100.00 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Binance │ 417 │ FREE │ $16.80 │ $25.00 │ $83.27 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Bitkub │ 55 │ $0.002 │ $18.17 │ $20.10 │ $83.27 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ BitMart │ 135 │ FREE │ $18.78 │ $0.34 │ $706.20 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ TOKOK │ 125 │ FREE │ $18.99 │ $3.59 │ $598.00 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Flyp.me │ 46 │ $0.0002 │ $19.23 │ $31.78 │ $36.72 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ HitBTC │ 520 │ FREE │ $31.11 │ $30.17 │ $744.58 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Liquid │ 207 │ FREE │ $31.42 │ $0.44 │ $5074.75 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Gate.io │ 1184 │ FREE │ $35.04 │ $44.53 │ $3049.92 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Bittrex │ 475 │ FREE │ $43.35 │ $38.05 │ $6421.06 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ BitForex │ 84 │ FREE │ $47.57 │ $0.16 │ $2797.80 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ BTSE │ 89 │ $0.002 │ $48.92 │ $14.31 │ $2954.31 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Tidex │ 78 │ $0.00000002 │ $93.25 │ $3.99 │ $6511.71 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Huobi Global │ 425 │ FREE │ $137.17 │ $13.88 │ $52838.35 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ BW │ 86 │ $0.00000002 │ $185.48 │ $3.22 │ $13857.00 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ SouthXchange │ 156 │ FREE │ $989.69 │ $0.001 │ $151890.50 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ WhiteBit │ 200 │ FREE │ $2530.07 │ $4.59 │ $441294.24 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ OKEx │ 353 │ FREE │ $44033.70 │ $14.30 │ $15539000.00 │ ├─────────────────────┼───────┼────────────────┼──────────────────┼────────┼─────────────────────┤ │ Coinsbit │ 580 │ FREE │ $302866468285.59 │ $3.94 │ $175505321255000.00 │ └─────────────────────┴───────┴────────────────┴──────────────────┴────────┴─────────────────────┘ "},{"id":811,"href":"/OpenBBTerminal/terminal/crypto/ov/exchanges/","title":"Exchanges","parent":"Introduction to Cryptocurrency Overview","content":"usage: exchanges [-l LIMIT] [-s {rank,name,currencies,markets,fiats,confidence,volume_24h,volume_7d,volume_30d,sessions_per_month}] [--descend] [-u] [--vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK}] [-h] [--export EXPORT] [--source {CoinGecko,CoinPaprika}] Shows Top Crypto Exchanges You can display only N number exchanges with \u0026ndash;limit parameter. You can sort data by Trust_Score, Id, Name, Country, Year_Established, Trade_Volume_24h_BTC with \u0026ndash;sort and also with \u0026ndash;descend flag to sort descending. Flag \u0026ndash;urls will display urls. Displays: Trust_Score, Id, Name, Country, Year_Established, Trade_Volume_24h_BTC\noptional arguments: -l LIMIT, --limit LIMIT display N number records (default: 15) -s {rank,name,currencies,markets,fiats,confidence,volume_24h,volume_7d,volume_30d,sessions_per_month}, --sort {rank,name,currencies,markets,fiats,confidence,volume_24h,volume_7d,volume_30d,sessions_per_month} Sort by given column. Default: Rank (default: Rank) --descend Flag to sort in descending order (lowest first) (default: True) -u, --urls Flag to add a url column. Works only with CoinGecko source (default: False) --vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK} Quoted currency. Default: USD. Works only with CoinPaprika source (default: USD) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --source {CoinGecko,CoinPaprika} Data source to select from (default: CoinGecko) Example:\n2022 Feb 15, 08:12 (✨) /crypto/ov/ $ exchanges Top CoinGecko Exchanges ┌──────┬─────────────┬────────────┬─────────────────────┬────────────────────────┬──────────────────┬──────────────────────┐ │ Rank │ Trust_Score │ Id │ Name │ Country │ Year_Established │ Trade_Volume_24h_BTC │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 1 │ 10.00 │ binance │ Binance │ Cayman Islands │ 2017.00 │ 307450.76 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 2 │ 10.00 │ okex │ OKX │ Belize │ 2013.00 │ 80452.05 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 3 │ 10.00 │ gdax │ Coinbase Exchange │ United States │ 2012.00 │ 68358.93 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 4 │ 10.00 │ crypto_com │ Crypto.com Exchange │ Cayman Islands │ 2019.00 │ 60342.43 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 5 │ 10.00 │ kucoin │ KuCoin │ Seychelles │ 2014.00 │ 53539.44 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 6 │ 10.00 │ ftx_spot │ FTX │ Antigua and Barbuda │ 2019.00 │ 40360.67 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 7 │ 10.00 │ huobi │ Huobi Global │ Seychelles │ 2013.00 │ 34851.50 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 8 │ 10.00 │ gate │ Gate.io │ Hong Kong │ None │ 30159.12 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 9 │ 10.00 │ bitmart │ BitMart │ Cayman Islands │ 2017.00 │ 21782.37 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 10 │ 10.00 │ kraken │ Kraken │ United States │ 2011.00 │ 19819.63 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 11 │ 10.00 │ bitfinex │ Bitfinex │ British Virgin Islands │ 2014.00 │ 13254.81 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 12 │ 10.00 │ bybit_spot │ Bybit (spot) │ None │ 2018.00 │ 7823.03 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 13 │ 10.00 │ binance_us │ Binance US │ United States │ 2019.00 │ 7384.36 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 14 │ 10.00 │ gemini │ Gemini │ United States │ 2014.00 │ 2876.09 │ ├──────┼─────────────┼────────────┼─────────────────────┼────────────────────────┼──────────────────┼──────────────────────┤ │ 15 │ 10.00 │ bitkub │ Bitkub │ Thailand │ 2018.00 │ 2163.91 │ └──────┴─────────────┴────────────┴─────────────────────┴────────────────────────┴──────────────────┴──────────────────────┘ "},{"id":812,"href":"/OpenBBTerminal/terminal/crypto/ov/exmarkets/","title":"Exmarkets","parent":"Introduction to Cryptocurrency Overview","content":"usage: exmarkets [-e EXCHANGE] [-l N] [-s {pair,base_currency_name,quote_currency_name,category,reported_volume_24h_share,trust_score,market_url}] [--descend] [-l] [--export {csv,json,xlsx}] [-h] Get all exchange markets found for given exchange You can display only display N number records with \u0026ndash;limit parameter. You can sort data by pair, base_currency_name, quote_currency_name, market_url, category, reported_volume_24h_share, trust_score \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. You can use additional flag \u0026ndash;urls to see urls for each market Displays: exchange_id, pair, base_currency_name, quote_currency_name, market_url, category, reported_volume_24h_share, trust_score,\noptional arguments: -e EXCHANGE, --exchange EXCHANGE Identifier of exchange e.g for Binance Exchange -\u0026gt; binance (default: binance) -l N, --limit N Limit of records (default: 10) -s {pair,base_currency_name,quote_currency_name,category,reported_volume_24h_share,trust_score,market_url}, --sort {pair,base_currency_name,quote_currency_name,category,reported_volume_24h_share,trust_score,market_url} Sort by given column. Default: reported_volume_24h_share (default: reported_volume_24h_share) --descend Flag to sort in descending order (lowest first) (default: False) -u, --urls Flag to show urls. If you will use that flag you will see only: exchange, pair, trust_score, market_url columns (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:18 (✨) /crypto/ov/ $ exmarkets Exchange Markets ┌─────────────┬───────────┬────────────────────┬─────────────────────┬──────────┬───────────────────────────┬─────────────┐ │ exchange_id │ pair │ base_currency_name │ quote_currency_name │ category │ reported_volume_24h_share │ trust_score │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ BTC/USDT │ Bitcoin │ Tether │ Spot │ 14.25 │ high │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ ETH/USDT │ Ethereum │ Tether │ Spot │ 11.87 │ high │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ BTC/BUSD │ Bitcoin │ Binance USD │ Spot │ 4.44 │ high │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ BNB/USDT │ Binance Coin │ Tether │ Spot │ 3.58 │ medium │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ BUSD/USDT │ Binance USD │ Tether │ Spot │ 3.54 │ high │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ ETH/BUSD │ Ethereum │ Binance USD │ Spot │ 2.97 │ high │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ SLP/USDT │ Smooth Love Potion │ Tether │ Spot │ 2.86 │ medium │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ SHIB/USDT │ Shiba Inu │ Tether │ Spot │ 2.41 │ high │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ XRP/USDT │ XRP │ Tether │ Spot │ 2.01 │ high │ ├─────────────┼───────────┼────────────────────┼─────────────────────┼──────────┼───────────────────────────┼─────────────┤ │ binance │ SOL/USDT │ Solana │ Tether │ Spot │ 1.95 │ high │ └─────────────┴───────────┴────────────────────┴─────────────────────┴──────────┴───────────────────────────┴─────────────┘ "},{"id":813,"href":"/OpenBBTerminal/terminal/crypto/ov/exrates/","title":"Exrates","parent":"Introduction to Cryptocurrency Overview","content":"usage: exrates [-l N] [-s {Index,Name,Unit,Value,Type}] [--descend] [--export {csv,json,xlsx}] [-h] Shows list of crypto, fiats, commodity exchange rates from CoinGecko You can look on only display N number records with \u0026ndash;limit, You can sort by Index, Name, Unit, Value, Type, and also use \u0026ndash;descend flag to sort descending.\noptional arguments: -l N, --limit N display N number records (default: 15) -s {Index,Name,Unit,Value,Type}, --sort {Index,Name,Unit,Value,Type} Sort by given column. Default: Index (default: Index) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:12 (✨) /crypto/ov/ $ exrates Exchange Rates ┌───────┬─────────────────────────────┬──────┬────────────┬────────┐ │ Index │ Name │ Unit │ Value │ Type │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 1 │ Bitcoin │ BTC │ 1.00 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 2 │ Ether │ ETH │ 14.20 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 3 │ Litecoin │ LTC │ 337.43 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 4 │ Bitcoin Cash │ BCH │ 130.59 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 5 │ Binance Coin │ BNB │ 103.36 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 6 │ EOS │ EOS │ 17907.80 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 7 │ XRP │ XRP │ 53041.60 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 8 │ Lumens │ XLM │ 201835.99 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 9 │ Chainlink │ LINK │ 2619.11 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 10 │ Polkadot │ DOT │ 2235.39 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 11 │ Yearn.finance │ YFI │ 1.85 │ crypto │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 12 │ US Dollar │ $ │ 44258.09 │ fiat │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 13 │ United Arab Emirates Dirham │ DH │ 162560.27 │ fiat │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 14 │ Argentine Peso │ $ │ 4711797.18 │ fiat │ ├───────┼─────────────────────────────┼──────┼────────────┼────────┤ │ 15 │ Australian Dollar │ A$ │ 61998.28 │ fiat │ └───────┴─────────────────────────────┴──────┴────────────┴────────┘ "},{"id":814,"href":"/OpenBBTerminal/terminal/crypto/ov/fun/","title":"Fun","parent":"Introduction to Cryptocurrency Overview","content":"usage: fun [-m {twitter_followers,gmv_annualized,market_cap,take_rate,revenue,revenue_protocol,tvl,pe,pe_circulating,ps,ps_circulating}] [-c {Asset Management,Blockchain,DeFi,Exchange,Gaming,Insurance,Interoperability,Lending,NFT,Other,Prediction Market,Stablecoin}] [-t {24h,7d,30d,90d,180d,365d}] [-a] [-l LIMIT] [-h] [--export EXPORT] Display fundamental metrics overview [Source: Token Terminal]\noptional arguments: -m {twitter_followers,gmv_annualized,market_cap,take_rate,revenue,revenue_protocol,tvl,pe,pe_circulating,ps,ps_circulating}, --metric {twitter_followers,gmv_annualized,market_cap,take_rate,revenue,revenue_protocol,tvl,pe,pe_circulating,ps,ps_circulating} Choose metric of interest (default: ) -c {Asset Management,Blockchain,DeFi,Exchange,Gaming,Insurance,Interoperability,Lending,NFT,Other,Prediction Market,Stablecoin}, --category {Asset Management,Blockchain,DeFi,Exchange,Gaming,Insurance,Interoperability,Lending,NFT,Other,Prediction Market,Stablecoin} Choose category of interest (default: ) -t {24h,7d,30d,90d,180d,365d}, --timeline {24h,7d,30d,90d,180d,365d} Choose timeline of interest (default: 24h) -a, --ascend Flag to sort in ascending order (default: False) -l LIMIT, --limit LIMIT Display N items (default: 10) -h, --help show this help message (default: False) Example:\n2022 Aug 28, 20:02 (🦋) /crypto/ov/ $ fun -m market_cap -c Blockchain "},{"id":815,"href":"/OpenBBTerminal/terminal/crypto/ov/global/","title":"Global","parent":"Introduction to Cryptocurrency Overview","content":"usage: global [--pie] [-h] [--export EXPORT] [--source {CoinGecko,CoinPaprika}] Shows global statistics about Crypto Market\noptional arguments: --pie Flag to show pie chart with market cap distribution. Works only with CoinGecko source (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --source {CoinGecko,CoinPaprika} Data source to select from (default: CoinGecko) Example:\n2022 Feb 15, 08:13 (✨) /crypto/ov/ $ global Global Statistics ┌──────────────────────────────────────┬──────────┐ │ Metric │ Value │ ├──────────────────────────────────────┼──────────┤ │ Active Cryptocurrencies │ 12589.00 │ ├──────────────────────────────────────┼──────────┤ │ Upcoming Icos │ 0.00 │ ├──────────────────────────────────────┼──────────┤ │ Ongoing Icos │ 49.00 │ ├──────────────────────────────────────┼──────────┤ │ Ended Icos │ 3376.00 │ ├──────────────────────────────────────┼──────────┤ │ Markets │ 741.00 │ ├──────────────────────────────────────┼──────────┤ │ Market Cap Change Percentage 24H Usd │ 5.08 │ ├──────────────────────────────────────┼──────────┤ │ Btc Market Cap In Pct │ 40.46 │ ├──────────────────────────────────────┼──────────┤ │ Eth Market Cap In Pct │ 17.95 │ ├──────────────────────────────────────┼──────────┤ │ Altcoin Market Cap In Pct │ 41.59 │ └──────────────────────────────────────┴──────────┘ "},{"id":816,"href":"/OpenBBTerminal/terminal/crypto/ov/hm/","title":"Hm","parent":"Introduction to Cryptocurrency Overview","content":"usage: hm [-c CATEGORY] [-l LIMIT] [-h] [--export {csv,json,xlsx}] Displays cryptocurrencies heatmap. [Source: https://coingecko.com] Accepts \u0026ndash;category or -c to display only coins of a certain category (default no category to display all coins ranked by market cap). You can look on only top N number of records with \u0026ndash;limit.\noptional arguments: -c CATEGORY, --category CATEGORY Category (e.g., stablecoins). Empty for no category (default: ) -l LIMIT, --limit LIMIT Limit of records (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 06:44 (✨) /crypto/disc/ $ cgtop ┌────────┬──────────────┬────────────┬────────────────┬─────────────────┬───────────────┬────────────────┐ │ Symbol │ Name │ Volume [$] │ Market Cap [$] │ Market Cap Rank │ 7D Change [%] │ 24H Change [%] │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ btc │ Bitcoin │ 20.6B │ 838.8B │ 1 │ 0.93 │ 4.77 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ eth │ Ethereum │ 14.4B │ 370.6B │ 2 │ -1.53 │ 7.77 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ usdt │ Tether │ 43.3B │ 78.5B │ 3 │ -0.01 │ -0.05 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ bnb │ Binance Coin │ 1.8B │ 72.2B │ 4 │ -1.01 │ 8.18 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ usdc │ USD Coin │ 3B │ 52.6B │ 5 │ 0.25 │ 0.17 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ xrp │ XRP │ 3.2B │ 39.9B │ 6 │ 0.71 │ 5.51 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ ada │ Cardano │ 1B │ 34.9B │ 7 │ -9.04 │ 5.52 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ sol │ Solana │ 1.8B │ 32.7B │ 8 │ -12.54 │ 10.07 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ luna │ Terra │ 1B │ 22.4B │ 9 │ -5.26 │ 8.67 │ ├────────┼──────────────┼────────────┼────────────────┼─────────────────┼───────────────┼────────────────┤ │ AVAX │ Avalanche │ 899.9M │ 21.7B │ 10 │ 6.28 │ 12.72 │ └────────┴──────────────┴────────────┴────────────────┴─────────────────┴───────────────┴────────────────┘ "},{"id":817,"href":"/OpenBBTerminal/terminal/crypto/ov/hold/","title":"Hold","parent":"Introduction to Cryptocurrency Overview","content":"usage: hold [-c {ethereum,bitcoin}] [--bar] [--export {csv,json,xlsx}] [-h] Shows overview of public companies that holds ethereum or bitcoin. You can find there most important metrics like: Total Bitcoin Holdings, Total Value (USD), Public Companies Bitcoin Dominance, Companies\noptional arguments: -c {ethereum,bitcoin}, --coin {ethereum,bitcoin} companies with ethereum or bitcoin (default: bitcoin) --bar Shows bar chart comparing companies holding {ethereum,bitcoin} --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example\n2022 Feb 15, 08:13 (✨) /crypto/ov/ $ hold 27 companies hold a total of 217.240 K bitcoin (1.15% of market cap dominance) with the current value of 9.618 B USD dollars Public Companies Holding BTC or ETH ┌─────────────────────────┬──────────────┬─────────┬────────────────┬───────────────────────┬─────────────────────────┬────────────────────────────┐ │ Name │ Symbol │ Country │ Total Holdings │ Total Entry Value Usd │ Total Current Value Usd │ Percentage Of Total Supply │ ├─────────────────────────┼──────────────┼─────────┼────────────────┼───────────────────────┼─────────────────────────┼────────────────────────────┤ │ MicroStrategy Inc. │ NASDAQ:MSTR │ US │ 121.044 K │ 3.574 B │ 5.359 B │ 0.576 │ ├─────────────────────────┼──────────────┼─────────┼────────────────┼───────────────────────┼─────────────────────────┼────────────────────────────┤ │ Tesla │ NASDAQ: TSLA │ US │ 48 K │ 1.500 B │ 2.125 B │ 0.229 │ ├─────────────────────────┼──────────────┼─────────┼────────────────┼───────────────────────┼─────────────────────────┼────────────────────────────┤ │ Galaxy Digital Holdings │ TSE:GLXY │ CA │ 16.402 K │ 134 M │ 726.154 M │ 0.078 │ ├─────────────────────────┼──────────────┼─────────┼────────────────┼───────────────────────┼─────────────────────────┼────────────────────────────┤ │ Square Inc. │ NASDAQ:SQ │ US │ 8.027 K │ 220 M │ 355.374 M │ 0.038 │ ├─────────────────────────┼──────────────┼─────────┼────────────────┼───────────────────────┼─────────────────────────┼────────────────────────────┤ │ Marathon Patent Group │ NASDAQ:MARA │ US │ 4.813 K │ 150 M │ 213.083 M │ 0.023 │ └─────────────────────────┴──────────────┴─────────┴────────────────┴───────────────────────┴─────────────────────────┴────────────────────────────┘ "},{"id":818,"href":"/OpenBBTerminal/terminal/crypto/ov/indexes/","title":"Indexes","parent":"Introduction to Cryptocurrency Overview","content":"usage: indexes [-l N] [-s {Rank,Name,Id,Market,Last,MultiAsset}] [--descend] [--export {csv,json,xlsx}] [-h] Shows list of crypto indexes from CoinGecko. Each crypto index is made up of a selection of cryptocurrencies, grouped together and weighted by market cap. You can display only N number of indexes with \u0026ndash;limit parameter. You can sort data by Rank, Name, Id, Market, Last, MultiAsset with \u0026ndash;sort and also with \u0026ndash;descend flag to sort descending. Displays: Rank, Name, Id, Market, Last, MultiAsset\noptional arguments: -l N, --limit N display N number records (default: 15) -s {Rank,Name,Id,Market,Last,MultiAsset}, --sort {Rank,Name,Id,Market,Last,MultiAsset} Sort by given column. Default: Rank (default: Rank) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:13 (✨) /crypto/ov/ $ indexes Crypto Indexes ┌──────┬─────────────────────────────┬────────┬───────────────────────┬───────┬────────────┐ │ Rank │ Name │ Id │ Market │ Last │ MultiAsset │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 1 │ CoinFLEX (Futures) DFN │ DFN │ CoinFLEX (Futures) │ nan │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 2 │ Perpetual Protocol ZIL │ ZIL │ Perpetual Protocol │ 0.11 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 3 │ Bibox (Futures) LINK │ LINK │ Bibox (Futures) │ 0.11 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 4 │ CME Bitcoin Futures BTC │ BTC │ CME Group │ 0.11 │ False │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 5 │ Bibox (Futures) XRP │ XRP │ Bibox (Futures) │ 0.11 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 6 │ Bibox (Futures) AXS │ AXS │ Bibox (Futures) │ 0.11 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 7 │ ZBG Futures BSV │ BSV │ ZBG Futures │ 0.11 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 8 │ MEXC Global (Futures) ATLAS │ ATLAS │ MEXC Global (Futures) │ 4.54 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 9 │ CoinFLEX (Futures) BCHABC │ BCHABC │ CoinFLEX (Futures) │ 0.00 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 10 │ Prime XBT USDC │ USDC │ Prime XBT │ 0.00 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 11 │ Poloniex Futures AXS │ AXS │ Poloniex Futures │ 60.56 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 12 │ Bibox (Futures) ETC │ ETC │ Bibox (Futures) │ 60.56 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 13 │ MyCoinStory SUN │ SUN │ MCS │ 13.41 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 14 │ dYdX │ DYDX │ FTX (Derivatives) │ 7.57 │ None │ ├──────┼─────────────────────────────┼────────┼───────────────────────┼───────┼────────────┤ │ 15 │ Ronin │ RON │ FTX (Derivatives) │ 2.83 │ False │ └──────┴─────────────────────────────┴────────┴───────────────────────┴───────┴────────────┘ "},{"id":819,"href":"/OpenBBTerminal/terminal/crypto/ov/info/","title":"Info","parent":"Introduction to Cryptocurrency Overview","content":"usage: info [--vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK}] [-l N] [-s {rank,name,symbol,price,volume_24h,circulating_supply,total_supply,max_supply,ath_price,market_cap,beta_value}] [--descend] [--export {csv,json,xlsx}] [-h] Show basic coin information for all coins from CoinPaprika API You can display only N number of coins with \u0026ndash;limit parameter. You can sort data by rank, name, symbol, price, volume_24h, circulating_supply, total_supply, max_supply, market_cap, beta_value, ath_price \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. Displays: rank, name, symbol, price, volume_24h, circulating_supply, total_supply, max_supply, market_cap, beta_value, ath_price\noptional arguments: --vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK} Quoted currency. Default USD (default: USD) -l N, --limit N Limit of records (default: 20) -s {rank,name,symbol,price,volume_24h,circulating_supply,total_supply,max_supply,ath_price,market_cap,beta_value}, --sort {rank,name,symbol,price,volume_24h,circulating_supply,total_supply,max_supply,ath_price,market_cap,beta_value} Sort by given column. Default: rank (default: rank) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:18 (✨) /crypto/ov/ $ info Displaying data vs USD Basic Coin Information ┌──────┬───────────────────────────┬────────────┬────────┬────────────┬────────────────────┬──────────────┬────────────┬────────────┬────────────┬───────────┐ │ rank │ name │ symbol │ price │ volume_24h │ circulating_supply │ total_supply │ max_supply │ market_cap │ beta_value │ ath_price │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ ZcCoin │ ZCC │ 0.004 │ 1.249 K │ 0 │ 0 │ 0 │ 0 │ 0.222 │ 0.014 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Icolcoin │ ICOL │ 0.011 │ 0.000 │ 0 │ 20.234 M │ 0 │ 0 │ -0.090 │ 1.099 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Poodle Dog Coin │ POODLE DOG │ 0.000 │ 635.137 │ 0 │ 0 │ 0 │ 0 │ 0 │ nan │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ REDANCOIN │ REDAN │ 0.006 │ 396.232 │ 0 │ 0 │ 0 │ 0 │ 0.967 │ 0.017 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Fado Go │ FADO │ 0.010 │ 10.257 M │ 0 │ 1 B │ 0 │ 0 │ 9.635 │ 0.021 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ OK Fly │ OKFLY │ 0.000 │ 178.900 │ 0 │ 0 │ 0 │ 0 │ 1.004 │ 0.000 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Leonardo SPA │ LDO │ 7.623 │ 53.360 │ 0 │ 0 │ 426.388 K │ 650.063 K │ 0.040 │ 8.860 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ HappyDoge │ HAPPYDOGE │ 0.000 │ 56.544 │ 0 │ 0 │ 0 │ 0 │ 2.840 │ 0.000 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Hyper DAO │ HDAO │ 0.030 │ 4.797 │ 0 │ 0 │ 0 │ 0 │ 0.021 │ 0.031 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ SweetGirl │ SWTG │ 0.001 │ 16.067 │ 0 │ 0 │ 0 │ 0 │ 1.435 │ 0.001 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Gaj Finance │ GAJ │ 0.047 │ 598.888 │ 1.941 M │ 1.941 M │ 0 │ 90.617 K │ 1.357 │ 0.568 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Noachis Terra │ NTT │ 0.000 │ 1.263 │ 0 │ 0 │ 0 │ 0 │ -2.052 │ 0.000 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Connect Coin │ XCON │ 0.000 │ 25.370 │ 38.997 M │ 70 M │ 0 │ 10.359 K │ 0.863 │ 0.696 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ ECOSCU │ ECU │ 0.003 │ 21.205 │ 0 │ 0 │ 0 │ 0 │ 1.376 │ 0.004 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Under Armour Cl A │ UAA │ 17.190 │ 429.750 │ 0 │ 236.518 K │ 236.518 K │ 0 │ 0.181 │ 27.140 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Multiplier │ MXX │ 0.007 │ 902.638 │ 137.665 M │ 186.586 M │ 0 │ 946.127 K │ 0.793 │ 0.014 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ SmartPad │ PAD │ 0.017 │ 4.454 K │ 0 │ 1 B │ 0 │ 0 │ 1.159 │ 0.043 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Home Coin │ HOME │ 0.000 │ 23.056 │ 0 │ 0 │ 0 │ 0 │ 0.853 │ 0.000 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Teva Pharma Ind Adr Rep 1 │ TEVA │ 8.455 │ 8.455 │ 0 │ 317.460 K │ 317.460 K │ 0 │ 0.101 │ 13.210 │ ├──────┼───────────────────────────┼────────────┼────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 0 │ Virtual Quest Room Coin │ VQR │ 0.010 │ 0.965 │ 0 │ 567.838 K │ 52.560 M │ 0 │ 1.417 │ 0.055 │ └──────┴───────────────────────────┴────────────┴────────┴────────────┴────────────────────┴──────────────┴────────────┴────────────┴────────────┴───────────┘ "},{"id":820,"href":"/OpenBBTerminal/terminal/crypto/ov/markets/","title":"Markets","parent":"Introduction to Cryptocurrency Overview","content":"usage: markets [--vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK}] [-l N] [-s {rank,name,symbol,price,volume_24h,mcap_change_24h,pct_change_1h,pct_change_24h,ath_price,pct_from_ath}] [--descend] [--export {csv,json,xlsx}] [-h] Show market related (price, supply, volume) coin information for all coins on CoinPaprika. You can display only N number of coins with \u0026ndash;limit parameter. You can sort data by rank, name, symbol, price, volume_24h, mcap_change_24h, pct_change_1h, pct_change_24h, ath_price, pct_from_ath, \u0026ndash;sort parameter and also with \u0026ndash;descend flag to sort descending. Displays: rank, name, symbol, price, volume_24h, mcap_change_24h, pct_change_1h, pct_change_24h, ath_price, pct_from_ath,\noptional arguments: --vs {BTC,ETH,USD,EUR,PLN,KRW,GBP,CAD,JPY,RUB,TRY,NZD,AUD,CHF,UAH,HKD,SGD,NGN,PHP,MXN,BRL,THB,CLP,CNY,CZK,DKK,HUF,IDR,ILS,INR,MYR,NOK,PKR,SEK,TWD,ZAR,VND,BOB,COP,PEN,ARS,ISK} Quoted currency. Default USD (default: USD) -l N, --limit N Limit of records (default: 15) -s {rank,name,symbol,price,volume_24h,mcap_change_24h,pct_change_1h,pct_change_24h,ath_price,pct_from_ath}, --sort {rank,name,symbol,price,volume_24h,mcap_change_24h,pct_change_1h,pct_change_24h,ath_price,pct_from_ath} Sort by given column. Default: rank (default: rank) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:19 (✨) /crypto/ov/ $ markets Displaying data vs USD Basic Market Information ┌──────┬───────────────────┬────────────┬────────┬────────────┬─────────────────┬───────────────┬────────────────┬───────────┬──────────────┐ │ rank │ name │ symbol │ price │ volume_24h │ mcap_change_24h │ pct_change_1h │ pct_change_24h │ ath_price │ pct_from_ath │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ ZcCoin │ ZCC │ 0.004 │ 1.249 K │ 0 │ -0.230 │ -1.290 │ 0.014 │ -72.510 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Icolcoin │ ICOL │ 0.011 │ 0.000 │ 0 │ -0.040 │ 3.100 │ 1.099 │ -98.990 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Poodle Dog Coin │ POODLE DOG │ 0.000 │ 635.137 │ 0 │ 0 │ 0 │ nan │ nan │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ REDANCOIN │ REDAN │ 0.006 │ 396.232 │ 0 │ -0.040 │ 4.110 │ 0.017 │ -66.030 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Fado Go │ FADO │ 0.010 │ 10.257 M │ 0 │ 1.250 │ -25.140 │ 0.021 │ -49.900 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ OK Fly │ OKFLY │ 0.000 │ 178.900 │ 0 │ -0.340 │ 0.540 │ 0.000 │ -6.600 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Leonardo SPA │ LDO │ 7.623 │ 53.360 │ 0 │ -0.260 │ -0.180 │ 8.860 │ -13.930 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ HappyDoge │ HAPPYDOGE │ 0.000 │ 56.544 │ 0 │ -0.210 │ -5 │ 0.000 │ -23.840 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Hyper DAO │ HDAO │ 0.030 │ 4.797 │ 0 │ -0.230 │ -0.130 │ 0.031 │ -2.500 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ SweetGirl │ SWTG │ 0.001 │ 16.067 │ 0 │ -0.210 │ 6.340 │ 0.001 │ -1 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Gaj Finance │ GAJ │ 0.047 │ 598.888 │ 5.090 │ 0.280 │ 5.090 │ 0.568 │ -91.780 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Noachis Terra │ NTT │ 0.000 │ 1.263 │ 0 │ -0.210 │ 6.250 │ 0.000 │ -85.260 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Connect Coin │ XCON │ 0.000 │ 25.370 │ -2.620 │ -0.040 │ -2.620 │ 0.696 │ -99.960 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ ECOSCU │ ECU │ 0.003 │ 21.205 │ 0 │ -0.210 │ 1.680 │ 0.004 │ -23.090 │ ├──────┼───────────────────┼────────────┼────────┼────────────┼─────────────────┼───────────────┼────────────────┼───────────┼──────────────┤ │ 0 │ Under Armour Cl A │ UAA │ 17.190 │ 429.750 │ 0 │ 0 │ -1.770 │ 27.140 │ -36.660 │ └──────┴───────────────────┴────────────┴────────┴────────────┴─────────────────┴───────────────┴────────────────┴───────────┴──────────────┘ "},{"id":821,"href":"/OpenBBTerminal/terminal/crypto/ov/news/","title":"News","parent":"Introduction to Cryptocurrency Overview","content":"usage: news [-l N] [-k {news,media}] [--filter {rising,hot,bullish,bearish,important,saved,lol}] [-r {en,de,es,fr,nl,it,pt,ru}] [-s {published_at,domain,title,negative_votes,positive_votes}] [--descend] [-l] [-h] [--export {png,jpg,pdf,svg}] Display recent posts from CryptoPanic news aggregator platform. [Source:https://cryptopanic.com/]\noptional arguments: -l N, --limit N N number of news \u0026gt;=10 (default: 20) -k {news,media}, --kind {news,media} Filter by category of news. Available values: news or media. (default: news) --filter {rising,hot,bullish,bearish,important,saved,lol} Filter by kind of news. One from list: rising|hot|bullish|bearish|important|saved|lol (default: None) -r {en,de,es,fr,nl,it,pt,ru}, --region {en,de,es,fr,nl,it,pt,ru} Filter news by regions. Available regions are: en (English), de (Deutsch), nl (Dutch), es (Español), fr (Français), it (Italiano), pt (Português), ru (Русский) (default: en) -s {published_at,domain,title,negative_votes,positive_votes}, --sort {published_at,domain,title,negative_votes,positive_votes} Sort by given column. Default: published_at (default: published_at) --descend Flag to sort in descending order (lowest first) (default: True) -u, --urls Flag to show urls. If you will use that flag you will additional column with urls (default: False) -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export or figure into png, jpg, pdf, svg (default: ) "},{"id":822,"href":"/OpenBBTerminal/terminal/crypto/ov/pairs/","title":"Pairs","parent":"Introduction to Cryptocurrency Overview","content":"usage: pairs [-l N] [-s {id,display_name,base_currency,quote_currency,base_min_size,base_max_size,min_market_funds,max_market_funds}] [--descend] [--export {csv,json,xlsx}] [-h] Shows available trading pairs on Coinbase\noptional arguments: -l N, --limit N N number of news \u0026gt;=10 (default: 15) -s {id,display_name,base_currency,quote_currency,base_min_size,base_max_size,min_market_funds,max_market_funds}, --sort {id,display_name,base_currency,quote_currency,base_min_size,base_max_size,min_market_funds,max_market_funds} Sort by given column. Default: id (default: id) --descend Flag to sort in descending order (lowest first) (default: True) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:09 (✨) /crypto/ov/ $ pairs Available Pairs for Trading ┌───────────┬──────────────┬───────────────┬────────────────┬───────────────┬───────────────┬──────────────────┬──────────────────┐ │ id │ display_name │ base_currency │ quote_currency │ base_min_size │ base_max_size │ min_market_funds │ max_market_funds │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ 1INCH-BTC │ 1INCH/BTC │ 1INCH │ BTC │ 0.23 │ 91 K │ 0.000016 │ 10 │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ 1INCH-EUR │ 1INCH/EUR │ 1INCH │ EUR │ 0.22 │ 88 K │ 0.84 │ 170 K │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ 1INCH-GBP │ 1INCH/GBP │ 1INCH │ GBP │ 0.23 │ 90 K │ 0.72 │ 150 K │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ 1INCH-USD │ 1INCH/USD │ 1INCH │ USD │ 0.23 │ 320 K │ 1 │ 710 K │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ AAVE-BTC │ AAVE/BTC │ AAVE │ BTC │ 0.003 │ 2.500 K │ 0.000016 │ 13 │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ AAVE-EUR │ AAVE/EUR │ AAVE │ EUR │ 0.003 │ 2.400 K │ 0.84 │ 470 K │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ AAVE-GBP │ AAVE/GBP │ AAVE │ GBP │ 0.003 │ 1.500 K │ 0.72 │ 240 K │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ AAVE-USD │ AAVE/USD │ AAVE │ USD │ 0.003 │ 8.900 K │ 1 │ 2 M │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ ACH-USD │ ACH/USD │ ACH │ USD │ 11 │ 20 M │ 1 │ 1.100 M │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ ADA-BTC │ ADA/BTC │ ADA │ BTC │ 0.5 │ 820 K │ 0.000016 │ 27 │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ ADA-ETH │ ADA/ETH │ ADA │ ETH │ 0.5 │ 660 K │ 0.00022 │ 290 │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ ADA-EUR │ ADA/EUR │ ADA │ EUR │ 0.48 │ 880 K │ 0.84 │ 1.100 M │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ ADA-GBP │ ADA/GBP │ ADA │ GBP │ 0.49 │ 640 K │ 0.72 │ 650 K │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ ADA-USD │ ADA/USD │ ADA │ USD │ 0.5 │ 3.600 M │ 1 │ 5 M │ ├───────────┼──────────────┼───────────────┼────────────────┼───────────────┼───────────────┼──────────────────┼──────────────────┤ │ ADA-USDC │ ADA/USDC │ ADA │ USDC │ 0.5 │ 580 K │ 1 │ 800 K │ └───────────┴──────────────┴───────────────┴────────────────┴───────────────┴───────────────┴──────────────────┴──────────────────┘ "},{"id":823,"href":"/OpenBBTerminal/terminal/crypto/ov/platforms/","title":"Platforms","parent":"Introduction to Cryptocurrency Overview","content":"usage: platforms [--export {csv,json,xlsx}] [-h] List all smart contract platforms like ethereum, solana, cosmos, polkadot, kusama\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:19 (✨) /crypto/ov/ $ platforms Smart Contract Platforms ┌───────┬───────────────────────────┐ │ index │ platform_id │ ├───────┼───────────────────────────┤ │ 1 │ btc-bitcoin │ ├───────┼───────────────────────────┤ │ 2 │ eos-eos │ ├───────┼───────────────────────────┤ │ 3 │ eth-ethereum │ ├───────┼───────────────────────────┤ │ 4 │ xrp-xrp │ ├───────┼───────────────────────────┤ │ 5 │ bch-bitcoin-cash │ ├───────┼───────────────────────────┤ │ 6 │ xem-nem │ ├───────┼───────────────────────────┤ │ 7 │ neo-neo │ ├───────┼───────────────────────────┤ │ 8 │ xlm-stellar │ ├───────┼───────────────────────────┤ │ 9 │ etc-ethereum-classic │ ├───────┼───────────────────────────┤ │ 10 │ qtum-qtum │ ├───────┼───────────────────────────┤ │ 11 │ zec-zcash │ ├───────┼───────────────────────────┤ │ 12 │ vet-vechain │ ├───────┼───────────────────────────┤ │ 13 │ bts-bitshares │ ├───────┼───────────────────────────┤ │ 14 │ waves-waves │ ├───────┼───────────────────────────┤ │ 15 │ nxt-nxt │ ├───────┼───────────────────────────┤ │ 16 │ act-achain │ ├───────┼───────────────────────────┤ │ 17 │ ubq-ubiq │ ├───────┼───────────────────────────┤ │ 18 │ xcp-counterparty │ ├───────┼───────────────────────────┤ │ 19 │ html-htmlcoin │ ├───────┼───────────────────────────┤ │ 20 │ etp-metaverse-etp │ ├───────┼───────────────────────────┤ │ 21 │ signa-signa │ ├───────┼───────────────────────────┤ │ 22 │ omni-omni │ ├───────┼───────────────────────────┤ │ 23 │ trx-tron │ ├───────┼───────────────────────────┤ │ 24 │ bnb-binance-coin │ ├───────┼───────────────────────────┤ │ 25 │ ardr-ardor │ ├───────┼───────────────────────────┤ │ 26 │ ht-huobi-token │ ├───────┼───────────────────────────┤ │ 27 │ ftm-fantom │ ├───────┼───────────────────────────┤ │ 28 │ matic-polygon │ ├───────┼───────────────────────────┤ │ 29 │ avax-avalanche │ ├───────┼───────────────────────────┤ │ 30 │ sol-solana │ ├───────┼───────────────────────────┤ │ 31 │ blvr-believer │ ├───────┼───────────────────────────┤ │ 32 │ cake-pancakeswap │ ├───────┼───────────────────────────┤ │ 33 │ fsxu-flashx-ultra │ ├───────┼───────────────────────────┤ │ 34 │ chik-chickenkebab-finance │ ├───────┼───────────────────────────┤ │ 35 │ jgn-juggernaut7492 │ ├───────┼───────────────────────────┤ │ 36 │ crx-cryptex │ ├───────┼───────────────────────────┤ │ 37 │ whirl-whirl-finance │ ├───────┼───────────────────────────┤ │ 38 │ eubi-eubi-token │ ├───────┼───────────────────────────┤ │ 39 │ swam-swapmatic-token │ ├───────┼───────────────────────────┤ │ 40 │ shells-shells │ ├───────┼───────────────────────────┤ │ 41 │ slx-solex-finance │ └───────┴───────────────────────────┘ "},{"id":824,"href":"/OpenBBTerminal/terminal/crypto/ov/stables/","title":"Stables","parent":"Introduction to Cryptocurrency Overview","content":"usage: stables [-l N] [-s {Rank,Name,Symbol,Price,Change_24h,Exchanges,Market_Cap,Change_30d}] [--export {csv,json,xlsx}] [-h] Shows stablecoins by market capitalization. Stablecoins are cryptocurrencies that attempt to peg their market value to some external reference like the U.S. dollar or to a commodity\u0026rsquo;s price such as gold. You can display only N number of coins with \u0026ndash;limit parameter. You can sort data by Rank, Name, Symbol, Price, Change_24h, Exchanges, Market_Cap, Change_30d with \u0026ndash;sort.\noptional arguments: -l N, --limit N display N number records (default: 15) -s {Rank,Name,Symbol,Price,Change_24h,Exchanges,Market_Cap,Change_30d}, --sort {Rank,Name,Symbol,Price,Change_24h,Exchanges,Market_Cap,Change_30d} Sort by given column. Default: Rank (default: Rank) --pie displays market cap distribution across stablecoins --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:16 (✨) /crypto/ov/ $ stables First 15 stablecoins have a total 182.582 B dollars of market cap. Stablecoin Data ┌─────────┬──────────────────────┬───────────┬────────────────┬─────────────────┬────────────────┬───────────────┬────────────┬──────────────────────────┐ │ Symbol │ Name │ Price [$] │ Market Cap [$] │ Market Cap Rank │ Change 24h [%] │ Change 7d [%] │ Volume [$] │ Percentage [%] of top 15 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ usdt │ Tether │ 1.001 │ 78.556 B │ 3 │ -0.014 │ -0.063 │ 43.035 B │ 43.025 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ usdc │ USD Coin │ 1 │ 52.519 B │ 5 │ 0.120 │ -0.052 │ 2.976 B │ 28.765 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ busd │ Binance USD │ 1.001 │ 17.557 B │ 13 │ 0.041 │ -0.105 │ 3.124 B │ 9.616 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ ust │ TerraUSD │ 1.001 │ 11.616 B │ 17 │ 0.132 │ -0.053 │ 318.818 M │ 6.362 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ dai │ Dai │ 1.001 │ 9.820 B │ 19 │ 0.069 │ 0.059 │ 237.136 M │ 5.378 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ mim │ Magic Internet Money │ 1.001 │ 2.788 B │ 51 │ 0.419 │ 0.107 │ 42.304 M │ 1.527 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ frax │ Frax │ 1.001 │ 2.660 B │ 53 │ 0.553 │ -0.490 │ 25.748 M │ 1.457 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ tusd │ TrueUSD │ 1.001 │ 1.487 B │ 80 │ 0.014 │ 0.017 │ 92.185 M │ 0.814 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ usdp │ Pax Dollar │ 1.001 │ 1.034 B │ 100 │ -0.164 │ -0.003 │ 13.857 M │ 0.566 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ fei │ Fei USD │ 1.002 │ 556.435 M │ 147 │ 0.248 │ -0.048 │ 14.805 M │ 0.305 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ lusd │ Liquity USD │ 1.010 │ 498.292 M │ 159 │ 0.210 │ 0.038 │ 6.557 M │ 0.273 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ usdn │ Neutrino USD │ 0.999 │ 443.663 M │ 169 │ 1.023 │ 0.073 │ 11.068 M │ 0.243 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ xaut │ Tether Gold │ 1.851 K │ 418.617 M │ 173 │ 2.029 │ -0.250 │ 4.853 M │ 0.229 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ mimatic │ MAI │ 0.999 │ 264.095 M │ 235 │ 0.043 │ 0.085 │ 3.754 M │ 0.145 │ ├─────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ husd │ HUSD │ 1.005 │ 263.061 M │ 236 │ 0.686 │ 0.524 │ 35.886 M │ 0.144 │ └─────────┴──────────────────────┴───────────┴────────────────┴─────────────────┴────────────────┴───────────────┴────────────┴──────────────────────────┘ "},{"id":825,"href":"/OpenBBTerminal/terminal/crypto/ov/wf/","title":"Wf","parent":"Introduction to Cryptocurrency Overview","content":"usage: wf [-l LIMIT] [--export {png,jpg,pdf,svg}] Display withdrawal fees of cryptocurrencies ordered by market cap [Source: https://withdrawalfees.com/]\noptional arguments: -l N, --limit N show N number of coins (default: 10) --export {png,jpg,pdf,svg} Export or figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 15, 08:21 (✨) /crypto/ov/ $ wf Withdrawal fees on exchanges: Top Withdrawal Fees ┌──────────────┬──────────────┬─────────┬────────┬──────────────────────┬────────────────────┐ │ Coin │ Lowest │ Average │ Median │ Highest │ Exchanges Compared │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ Bitcoin │ FREE │ $20.01 │ $22.13 │ $66.40 (0.0015 BTC) │ 38 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ Ethereum │ FREE │ $22.54 │ $19.39 │ $74.48 (0.024 ETH) │ 37 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ Tether │ FREE │ $19.24 │ $15.55 │ $100.00 (100 USDT) │ 30 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ Binance Coin │ FREE │ $4.06 │ $0.64 │ $21.38 (0.05 BNB) │ 16 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ USD Coin │ FREE │ $21.39 │ $19.98 │ $50.96 (51 USDC) │ 27 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ XRP │ FREE │ $1.79 │ $0.21 │ $30.02 (36 XRP) │ 29 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ Cardano │ $0.330.3 ADA │ $6.94 │ $1.08 │ $146.63 (135.14 ADA) │ 26 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ Solana │ FREE │ $1.17 │ $1.02 │ $5.00 (0.049 SOL) │ 18 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ Terra │ FREE │ $4.11 │ $1.13 │ $30.53 (0.54 LUNA) │ 15 │ ├──────────────┼──────────────┼─────────┼────────┼──────────────────────┼────────────────────┤ │ Avalanche │ FREE │ $1.77 │ $0.88 │ $8.83 (0.1 AVAX) │ 15 │ └──────────────┴──────────────┴─────────┴────────┴──────────────────────┴────────────────────┘ "},{"id":826,"href":"/OpenBBTerminal/terminal/crypto/ov/wfpe/","title":"Wfpe","parent":"Introduction to Cryptocurrency Overview","content":"usage: wfpe [-c COIN] [--export {png,jpg,pdf,svg}] Display coin withdrawal fees per exchange [Source: https://withdrawalfees.com/]\noptional arguments: -c COIN, --coin COIN cryptocurrency to check withdrawal fees in long format (default: bitcoin) --export {png,jpg,pdf,svg} Export or figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 15, 08:21 (✨) /crypto/ov/ $ wfpe Withdrawal fees for bitcoin: bitcoin is available on 38 exchanges with alowest fee of FREE(0 BTC), average of $20.01(0.0004519 BTC) and median of $22.13(0.0005 BTC) Withdrawal Fees per Exchange ┌─────────────────────┬───────────────────────┬───────────────────────────┐ │ Exchange │ Withdrawal Fee │ Minimum Withdrawal Amount │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ FixedFloat │ FREE │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Deribit │ $0.89 (0.00002 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Kraken │ $0.89 (0.00002 BTC) │ $22.13 (0.0005 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ OKCoin │ $0.89 (0.00002 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ CoinEx │ $4.43 (0.0001 BTC) │ $44.27 (0.001 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ CoinFalcon │ $4.43 (0.0001 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Crypto.com Exchange │ $4.43 (0.0001 BTC) │ $8.85 (0.0002 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Flyp.me │ $4.43 (0.0001 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ SouthXchange │ $6.64 (0.00015 BTC) │ $8.85 (0.0002 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ OKEx │ $8.85 (0.0002 BTC) │ $44.27 (0.001 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Bittrex │ $13.28 (0.0003 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Coindeal │ $16.60 (0.000375 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Tidex │ $17.71 (0.0004 BTC) │ $22.13 (0.0005 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Bitfinex │ $17.71 (0.0004 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ DSX │ $17.71 (0.0004 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Huobi Global │ $17.71 (0.0004 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ WhiteBit │ $17.71 (0.0004 BTC) │ $44.27 (0.001 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Liquid │ $22.13 (0.0005 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ BitForex │ $22.13 (0.0005 BTC) │ $44.27 (0.001 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ BitMart │ $22.13 (0.0005 BTC) │ $221.34 (0.005 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Coinsbit │ $22.13 (0.0005 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Kucoin │ $22.13 (0.0005 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Poloniex │ $22.13 (0.0005 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ AscendEX │ $22.13 (0.0005 BTC) │ $442.69 (0.01 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Bitkub │ $22.13 (0.0005 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Bitrue │ $22.13 (0.0005 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ BTSE │ $22.13 (0.0005 BTC) │ $44.27 (0.001 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ BW │ $22.13 (0.0005 BTC) │ $110.67 (0.0025 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Coincheck │ $22.13 (0.0005 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ CoinTiger │ $22.13 (0.0005 BTC) │ $442.69 (0.01 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ GetBTC │ $22.13 (0.0005 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Binance │ $30.55 (0.00069 BTC) │ $61.98 (0.0014 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ CREX24 │ $35.42 (0.0008 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ TOKOK │ $35.42 (0.0008 BTC) │ $44.27 (0.001 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ HitBTC │ $39.84 (0.0009 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Bleutrade │ $44.27 (0.001 BTC) │ │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Gate.io │ $44.27 (0.001 BTC) │ $486.96 (0.011 BTC) │ ├─────────────────────┼───────────────────────┼───────────────────────────┤ │ Coinone │ $66.40 (0.0015 BTC) │ $4.43 (0.0001 BTC) │ └─────────────────────┴───────────────────────┴───────────────────────────┘ "},{"id":827,"href":"/OpenBBTerminal/terminal/crypto/prt/","title":"Prt","parent":"Introduction to Cryptocurrency","content":"usage: prt [--vs COIN] [--price NUM] [--top NUM] [--export {csv,json,xlsx}] [-h] Tool to calculate potential returns of a certain coin. It will take the loaded coin and compare with either another coin specified with argument --vs, with a target price specified with argument --price, or with the current N coins with biggest market cap with --top.\noptional arguments: --vs COIN Symbol of coin to compare loaded coin with (e.g., BTC) -p NUM --price NUM Target price to compute potential returns (e.g., 5) -t NUM --top NUM Top NUM coins to compare with (e.g., 5) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Examples:\nload algo/prt --price 2 load algo/prt --vs btc load algo/prt --top 5\n"},{"id":828,"href":"/OpenBBTerminal/terminal/crypto/tools/","title":"Tools","parent":"Introduction to Cryptocurrency","content":"Available commands:    Aprtoapy     Il     "},{"id":829,"href":"/OpenBBTerminal/terminal/crypto/tools/aprtoapy/","title":"Aprtoapy","parent":"Tools","content":"usage: aprtoapy [--apr APR] [-c COMPOUNDING] [-n] [-h] [--export EXPORT]\nTool to calculate APY from APR value. Compounding periods, i.e., the number of times compounded per year can be defined with -c argument.\noptional arguments: --apr APR APR value in percentage to convert (default: 100) -c COMPOUNDING, --compounding COMPOUNDING Number of compounded periods in a year. 12 means compounding monthly (default: 12) -n, --narrative Flag to show narra`ive instead of dataframe (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":830,"href":"/OpenBBTerminal/terminal/crypto/tools/il/","title":"Il","parent":"Tools","content":"usage: il [-pcA PRICECHANGEA] [-pcB PRICECHANGEB] [-p PROPORTION] [-v VALUE] [-n] [-h] [--export EXPORT\nTool to calculate Impermanent Loss in a custom liquidity pool. Users can provide percentages increases for two tokens (and their weight in the liquidity pool) and verify the impermanent loss that can occur.\noptional arguments: -pcA PRICECHANGEA, --priceChangeA PRICECHANGEA Token A price change in percentage (default: 0) -pcB PRICECHANGEB, --priceChangeB PRICECHANGEB Token B price change in percentage (default: 100) -p PROPORTION, --proportion PROPORTION Pool proportion. E.g., 50 means that pool contains 50% of token A and 50% of token B, 30 means that pool contains 30% of token A and 70% of token B (default: 50) -v VALUE, --value VALUE Initial amount of dollars that user provides to liquidity pool (default: 1000) -n, --narrative Flag to show narrative instead of dataframe (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":831,"href":"/OpenBBTerminal/terminal/econometrics/add/","title":"Add","parent":"Introduction to Econometrics","content":"usage: add [-n NEWDATASETCOL] [-b BASEDATASETCOL] [-s {div,mul,add,sub,mod,pow,\u0026gt;,\u0026lt;,\u0026gt;=,\u0026lt;=,==}] [-c CRITERIAORDATASETCOL] [-h] Can be used to create new columns for your dataset. It can use any operator and allows for creating specific dummy variables or ratios. For example: add -n wp.after_1990 -b wp.year -s \u0026gt; -c 1990 will create a new column with the name \u0026lsquo;after_1990\u0026rsquo; which is True when the year is above 1990 and False if the year is below or equal to 1990.\noptional arguments: -n NEWDATASETCOL, --newdatasetcol NEWDATASETCOL New dataset column to be added with format: dataset.column (default: None) -b BASEDATASETCOL, --basedatasetcol BASEDATASETCOL Base dataset column to be used as base with format: dataset.column (default: None) -s {div,mul,add,sub,mod,pow,\u0026gt;,\u0026lt;,\u0026gt;=,\u0026lt;=,==}, --sign {div,mul,add,sub,mod,pow,\u0026gt;,\u0026lt;,\u0026gt;=,\u0026lt;=,==} Sign to be applied to the base dataset column (default: None) -c CRITERIAORDATASETCOL, --criteriaordatasetcol CRITERIAORDATASETCOL Either dataset column to be applied on top of base dataset or criteria (default: None) -h, --help show this help message (default: False) Example:\n2022 May 31, 04:50 (🦋) /econometrics/ $ load wage_panel -a wp 2022 May 31, 04:49 (🦋) /econometrics/ $ add -n wp.after_1990 -b wp.year -s \u0026gt; -c 1990 2022 May 31, 04:49 (🦋) /econometrics/ $ show wp Dataset wp | Showing 10 of 4360 rows ┏━━━┳━━━━┳━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ after_1990 ┃ ┡━━━╇━━━━╇━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 13 │ 1980 │ 0 │ 1 │ 0 │ 2672 │ 0 │ 14 │ 0 │ 1.20 │ 1 │ 9 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 1 │ 13 │ 1981 │ 0 │ 2 │ 0 │ 2320 │ 0 │ 14 │ 1 │ 1.85 │ 4 │ 9 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 2 │ 13 │ 1982 │ 0 │ 3 │ 0 │ 2940 │ 0 │ 14 │ 0 │ 1.34 │ 9 │ 9 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 3 │ 13 │ 1983 │ 0 │ 4 │ 0 │ 2960 │ 0 │ 14 │ 0 │ 1.43 │ 16 │ 9 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 4 │ 13 │ 1984 │ 0 │ 5 │ 0 │ 3071 │ 0 │ 14 │ 0 │ 1.57 │ 25 │ 5 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 5 │ 13 │ 1985 │ 0 │ 6 │ 0 │ 2864 │ 0 │ 14 │ 0 │ 1.70 │ 36 │ 2 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 6 │ 13 │ 1986 │ 0 │ 7 │ 0 │ 2994 │ 0 │ 14 │ 0 │ -0.72 │ 49 │ 2 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 7 │ 13 │ 1987 │ 0 │ 8 │ 0 │ 2640 │ 0 │ 14 │ 0 │ 1.67 │ 64 │ 2 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 8 │ 17 │ 1980 │ 0 │ 4 │ 0 │ 2484 │ 0 │ 13 │ 0 │ 1.68 │ 16 │ 2 │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┤ │ 9 │ 17 │ 1981 │ 0 │ 5 │ 0 │ 2804 │ 0 │ 13 │ 0 │ 1.52 │ 25 │ 2 │ False │ └───┴────┴──────┴───────┴───────┴──────┴───────┴─────────┴──────┴───────┴───────┴─────────┴────────────┴────────────┘ 2022 May 31, 04:49 (🦋) /econometrics/ $ add -n wp.after_1985 -b wp.year -s \u0026gt; -c 1985 2022 May 31, 04:50 (🦋) /econometrics/ $ show wp Dataset wp | Showing 10 of 4360 rows ┏━━━┳━━━━┳━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ after_1990 ┃ after_1985 ┃ ┡━━━╇━━━━╇━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 13 │ 1980 │ 0 │ 1 │ 0 │ 2672 │ 0 │ 14 │ 0 │ 1.20 │ 1 │ 9 │ False │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 1 │ 13 │ 1981 │ 0 │ 2 │ 0 │ 2320 │ 0 │ 14 │ 1 │ 1.85 │ 4 │ 9 │ False │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 2 │ 13 │ 1982 │ 0 │ 3 │ 0 │ 2940 │ 0 │ 14 │ 0 │ 1.34 │ 9 │ 9 │ False │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 3 │ 13 │ 1983 │ 0 │ 4 │ 0 │ 2960 │ 0 │ 14 │ 0 │ 1.43 │ 16 │ 9 │ False │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 4 │ 13 │ 1984 │ 0 │ 5 │ 0 │ 3071 │ 0 │ 14 │ 0 │ 1.57 │ 25 │ 5 │ False │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 5 │ 13 │ 1985 │ 0 │ 6 │ 0 │ 2864 │ 0 │ 14 │ 0 │ 1.70 │ 36 │ 2 │ False │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 6 │ 13 │ 1986 │ 0 │ 7 │ 0 │ 2994 │ 0 │ 14 │ 0 │ -0.72 │ 49 │ 2 │ False │ True │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 7 │ 13 │ 1987 │ 0 │ 8 │ 0 │ 2640 │ 0 │ 14 │ 0 │ 1.67 │ 64 │ 2 │ False │ True │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 8 │ 17 │ 1980 │ 0 │ 4 │ 0 │ 2484 │ 0 │ 13 │ 0 │ 1.68 │ 16 │ 2 │ False │ False │ ├───┼────┼──────┼───────┼───────┼──────┼───────┼─────────┼──────┼───────┼───────┼─────────┼────────────┼────────────┼────────────┤ │ 9 │ 17 │ 1981 │ 0 │ 5 │ 0 │ 2804 │ 0 │ 13 │ 0 │ 1.52 │ 25 │ 2 │ False │ False │ └───┴────┴──────┴───────┴───────┴──────┴───────┴─────────┴──────┴───────┴───────┴─────────┴────────────┴────────────┴────────────┘ "},{"id":832,"href":"/OpenBBTerminal/terminal/econometrics/bgod/","title":"Bgod","parent":"Introduction to Econometrics","content":"usage: bgod [-l LAGS] [-h] [--export {csv,json,xlsx}] Show Breusch-Godfrey autocorrelation test results. Needs OLS to be run in advance with independent and dependent variables\noptional arguments: -l LAGS, --lags LAGS The lags for the Breusch-Godfrey test (default: 3) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Jun 01, 06:29 (🦋) /econometrics/ $ load longley -a ll 2022 Jun 01, 06:29 (🦋) /econometrics/ $ ols -d ll.totemp -i ll.gnpdefl,ll.gnp,ll.unemp,ll.armed,ll.pop,ll.year OLS Regression Results ======================================================================================= Dep. Variable: ll.totemp R-squared (uncentered): 1.000 Model: OLS Adj. R-squared (uncentered): 1.000 Method: Least Squares F-statistic: 5.052e+04 Date: Wed, 01 Jun 2022 Prob (F-statistic): 8.20e-22 Time: 12:29:44 Log-Likelihood: -117.56 No. Observations: 16 AIC: 247.1 Df Residuals: 10 BIC: 251.8 Df Model: 6 Covariance Type: nonrobust ============================================================================== coef std err t P\u0026gt;|t| [0.025 0.975] ------------------------------------------------------------------------------ ll.gnpdefl -52.9936 129.545 -0.409 0.691 -341.638 235.650 ll.gnp 0.0711 0.030 2.356 0.040 0.004 0.138 ll.unemp -0.4235 0.418 -1.014 0.335 -1.354 0.507 ll.armed -0.5726 0.279 -2.052 0.067 -1.194 0.049 ll.pop -0.4142 0.321 -1.289 0.226 -1.130 0.302 ll.year 48.4179 17.689 2.737 0.021 9.003 87.832 ============================================================================== Omnibus: 1.443 Durbin-Watson: 1.277 Prob(Omnibus): 0.486 Jarque-Bera (JB): 0.605 Skew: 0.476 Prob(JB): 0.739 Kurtosis: 3.031 Cond. No. 4.56e+05 ============================================================================== Notes: [1] R² is computed without centering (uncentered) since the model does not contain a constant. [2] Standard Errors assume that the covariance matrix of the errors is correctly specified. [3] The condition number is large, 4.56e+05. This might indicate that there are strong multicollinearity or other numerical problems. Warnings: kurtosistest only valid for n\u0026gt;=20 ... continuing anyway, n=16 2022 Jun 01, 06:29 (🦋) /econometrics/ $ bgod Breusch-Godfrey autocorrelation test [Lags: 3] ┏━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ ┃ Breusch-Godfrey ┃ ┡━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ LM-stat │ 10.35 │ ├──────────┼─────────────────┤ │ p-value │ 0.02 │ ├──────────┼─────────────────┤ │ f-stat │ 0.10 │ ├──────────┼─────────────────┤ │ fp-value │ 0.96 │ └──────────┴─────────────────┘ The result 0.02 indicates no existence of autocorrelation. "},{"id":833,"href":"/OpenBBTerminal/terminal/econometrics/bpag/","title":"Bpag","parent":"Introduction to Econometrics","content":"usage: dwat [-h] [--export {csv,json,xlsx}] Show Breusch-Pagan heteroscedasticity test results. Needs OLS to be run in advance with independent and dependent variables\nIn statistics, heteroskedasticity (or heteroscedasticity) happens when the standard deviations of a predicted variable, monitored over different values of an independent variable or as related to prior time periods, are non-constant. With heteroskedasticity, the tell-tale sign upon visual inspection of the residual errors is that they will tend to fan out over time. [Source: Investopedia]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Jun 01, 06:29 (🦋) /econometrics/ $ load longley -a ll 2022 Jun 01, 06:29 (🦋) /econometrics/ $ ols -d ll.totemp -i ll.gnpdefl,ll.gnp,ll.unemp,ll.armed,ll.pop,ll.year OLS Regression Results ======================================================================================= Dep. Variable: ll.totemp R-squared (uncentered): 1.000 Model: OLS Adj. R-squared (uncentered): 1.000 Method: Least Squares F-statistic: 5.052e+04 Date: Wed, 01 Jun 2022 Prob (F-statistic): 8.20e-22 Time: 12:29:44 Log-Likelihood: -117.56 No. Observations: 16 AIC: 247.1 Df Residuals: 10 BIC: 251.8 Df Model: 6 Covariance Type: nonrobust ============================================================================== coef std err t P\u0026gt;|t| [0.025 0.975] ------------------------------------------------------------------------------ ll.gnpdefl -52.9936 129.545 -0.409 0.691 -341.638 235.650 ll.gnp 0.0711 0.030 2.356 0.040 0.004 0.138 ll.unemp -0.4235 0.418 -1.014 0.335 -1.354 0.507 ll.armed -0.5726 0.279 -2.052 0.067 -1.194 0.049 ll.pop -0.4142 0.321 -1.289 0.226 -1.130 0.302 ll.year 48.4179 17.689 2.737 0.021 9.003 87.832 ============================================================================== Omnibus: 1.443 Durbin-Watson: 1.277 Prob(Omnibus): 0.486 Jarque-Bera (JB): 0.605 Skew: 0.476 Prob(JB): 0.739 Kurtosis: 3.031 Cond. No. 4.56e+05 ============================================================================== Notes: [1] R² is computed without centering (uncentered) since the model does not contain a constant. [2] Standard Errors assume that the covariance matrix of the errors is correctly specified. [3] The condition number is large, 4.56e+05. This might indicate that there are strong multicollinearity or other numerical problems. Warnings: kurtosistest only valid for n\u0026gt;=20 ... continuing anyway, n=16 2022 Jun 01, 06:30 (🦋) /econometrics/ $ bpag Breusch-Pagan heteroscedasticity test ┏━━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ ┃ Breusch-Pagan ┃ ┡━━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ lm-stat │ 7.90 │ ├──────────┼───────────────┤ │ p-value │ 0.16 │ ├──────────┼───────────────┤ │ f-stat │ 1.63 │ ├──────────┼───────────────┤ │ fp-value │ 0.24 │ └──────────┴───────────────┘ The result 0.16 indicates the existence of heteroscedasticity. Consider taking the log or a rate for the dependent variable. "},{"id":834,"href":"/OpenBBTerminal/terminal/econometrics/clean/","title":"Clean","parent":"Introduction to Econometrics","content":"usage: clean [-n NAME] [--fill {rfill,cfill,rbfill,cbfill,rffill,bffill}] [-d {rdrop,cdrop}] [-l LIMIT] [-h] Clean a dataset by filling and/or dropping NaN values.\noptional arguments: -n NAME, --name NAME The name of the dataset you want to clean up (default: None) --fill {rfill,cfill,rbfill,cbfill,rffill,bffill} The method of filling NaNs. This has options to fill rows (rfill, rbfill, rffill) or fill columns (cfill, cbfill, cffill). Furthermore, it has the option to forward fill and backward fill (up to --limit) which refer to how many rows/columns can be set equal to the last non-NaN value (default: ) -d {rdrop,cdrop}, --drop {rdrop,cdrop} The method of dropping NaNs. This either has the option rdrop (drop rows that contain NaNs) or cdrop (drop columns that contain NaNs) (default: ) -l LIMIT, --limit LIMIT The max amount of columns/rows backward filled or forward filled that have NaNs or the max amount of columns/rows that have NaNs before being dropped. (default: 5) -h, --help show this help message (default: False) Example:\n2022 Feb 24, 04:58 (✨) /econometrics/ $ show thesis thesis ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓ ┃ ┃ current_assets ┃ assets ┃ debt ┃ depr_amor ┃ income ┃ current_liabilities ┃ revenue ┃ equity ┃ interest_expense ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2016-01-01 00:00:00\u0026#39;)) │ 970.70 │ 1522.00 │ 160.00 │ 18.50 │ 9.90 │ 359.70 │ 412.10 │ 858.30 │ 1.70 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2016-04-01 00:00:00\u0026#39;)) │ 873.10 │ 1442.10 │ 136.10 │ 17.80 │ 11.80 │ 329.00 │ 468.60 │ 865.80 │ 1.20 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2016-07-01 00:00:00\u0026#39;)) │ 849.40 │ 1427.00 │ 142.80 │ nan │ 9.90 │ 314.40 │ 404.80 │ 858.50 │ 1.30 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2016-10-01 00:00:00\u0026#39;)) │ 901.80 │ 1486.60 │ 154.10 │ nan │ 11.40 │ 350.90 │ 328.30 │ 872.40 │ 1.10 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2017-01-01 00:00:00\u0026#39;)) │ 893.10 │ 1502.10 │ 168.70 │ nan │ 14.40 │ 342.80 │ 407.20 │ 885.70 │ 1.40 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2017-04-01 00:00:00\u0026#39;)) │ 888.50 │ 1504.10 │ 155.30 │ nan │ 16.30 │ 335.10 │ 450.50 │ 914.20 │ 1.50 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2017-07-01 00:00:00\u0026#39;)) │ 904.70 │ 1531.70 │ 189.00 │ 10.20 │ 11.00 │ 312.10 │ 397.90 │ 924.70 │ 1.70 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2017-10-01 00:00:00\u0026#39;)) │ 892.20 │ 1544.30 │ 215.80 │ 10.60 │ 13.30 │ 336.50 │ 420.60 │ 906.50 │ 1.90 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2018-01-01 00:00:00\u0026#39;)) │ 933.60 │ 1512.20 │ 194.30 │ 10.60 │ 31.30 │ 326.60 │ 456.30 │ 915.20 │ 2.20 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ (\u0026#39;AAR Corp\u0026#39;, Timestamp(\u0026#39;2018-04-01 00:00:00\u0026#39;)) │ 942.70 │ 1524.70 │ 177.20 │ 9.10 │ 18.10 │ 333.30 │ 473.50 │ 936.30 │ 2.20 │ └────────────────────────────────────────────────┴────────────────┴─────────┴────────┴───────────┴────────┴─────────────────────┴─────────┴────────┴──────────────────┘ 2022 Feb 24, 04:58 (✨) /econometrics/ $ clean thesis --fill rfill 2022 Feb 24, 04:59 (✨) /econometrics/ $ show thesis thesis ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓ ┃ ┃ current_assets ┃ assets ┃ debt ┃ depr_amor ┃ income ┃ current_liabilities ┃ revenue ┃ equity ┃ interest_expense ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩ │ ('AAR Corp', Timestamp('2016-01-01 00:00:00')) │ 970.70 │ 1522.00 │ 160.00 │ 18.50 │ 9.90 │ 359.70 │ 412.10 │ 858.30 │ 1.70 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2016-04-01 00:00:00')) │ 873.10 │ 1442.10 │ 136.10 │ 17.80 │ 11.80 │ 329.00 │ 468.60 │ 865.80 │ 1.20 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2016-07-01 00:00:00')) │ 849.40 │ 1427.00 │ 142.80 │ 0.00 │ 9.90 │ 314.40 │ 404.80 │ 858.50 │ 1.30 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2016-10-01 00:00:00')) │ 901.80 │ 1486.60 │ 154.10 │ 0.00 │ 11.40 │ 350.90 │ 328.30 │ 872.40 │ 1.10 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2017-01-01 00:00:00')) │ 893.10 │ 1502.10 │ 168.70 │ 0.00 │ 14.40 │ 342.80 │ 407.20 │ 885.70 │ 1.40 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2017-04-01 00:00:00')) │ 888.50 │ 1504.10 │ 155.30 │ 0.00 │ 16.30 │ 335.10 │ 450.50 │ 914.20 │ 1.50 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2017-07-01 00:00:00')) │ 904.70 │ 1531.70 │ 189.00 │ 10.20 │ 11.00 │ 312.10 │ 397.90 │ 924.70 │ 1.70 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2017-10-01 00:00:00')) │ 892.20 │ 1544.30 │ 215.80 │ 10.60 │ 13.30 │ 336.50 │ 420.60 │ 906.50 │ 1.90 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2018-01-01 00:00:00')) │ 933.60 │ 1512.20 │ 194.30 │ 10.60 │ 31.30 │ 326.60 │ 456.30 │ 915.20 │ 2.20 │ ├────────────────────────────────────────────────┼────────────────┼─────────┼────────┼───────────┼────────┼─────────────────────┼─────────┼────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2018-04-01 00:00:00')) │ 942.70 │ 1524.70 │ 177.20 │ 9.10 │ 18.10 │ 333.30 │ 473.50 │ 936.30 │ 2.20 │ └────────────────────────────────────────────────┴────────────────┴─────────┴────────┴───────────┴────────┴─────────────────────┴─────────┴────────┴──────────────────┘ 2022 Feb 24, 04:59 (✨) /econometrics/ $ clean thesis -d rdrop 2022 Feb 24, 05:00 (✨) /econometrics/ $ show thesis thesis ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓ ┃ ┃ current_assets ┃ assets ┃ debt ┃ depr_amor ┃ income ┃ current_liabilities ┃ revenue ┃ equity ┃ interest_expense ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩ │ ('AAR Corp', Timestamp('2016-01-01 00:00:00')) │ 970.70 │ 1522.00 │ 160.00 │ 18.50 │ 9.90 │ 359.70 │ 412.10 │ 858.30 │ 1.70 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2016-04-01 00:00:00')) │ 873.10 │ 1442.10 │ 136.10 │ 17.80 │ 11.80 │ 329.00 │ 468.60 │ 865.80 │ 1.20 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2017-07-01 00:00:00')) │ 904.70 │ 1531.70 │ 189.00 │ 10.20 │ 11.00 │ 312.10 │ 397.90 │ 924.70 │ 1.70 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2017-10-01 00:00:00')) │ 892.20 │ 1544.30 │ 215.80 │ 10.60 │ 13.30 │ 336.50 │ 420.60 │ 906.50 │ 1.90 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2018-01-01 00:00:00')) │ 933.60 │ 1512.20 │ 194.30 │ 10.60 │ 31.30 │ 326.60 │ 456.30 │ 915.20 │ 2.20 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2018-04-01 00:00:00')) │ 942.70 │ 1524.70 │ 177.20 │ 9.10 │ 18.10 │ 333.30 │ 473.50 │ 936.30 │ 2.20 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2018-07-01 00:00:00')) │ 982.40 │ 1537.80 │ 209.10 │ 10.10 │ 18.90 │ 315.10 │ 466.30 │ 929.10 │ 2.10 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2018-10-01 00:00:00')) │ 1040.70 │ 1604.20 │ 218.90 │ 10.40 │ 11.20 │ 344.20 │ 493.30 │ 935.60 │ 2.50 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('AAR Corp', Timestamp('2019-01-01 00:00:00')) │ 993.40 │ 1546.50 │ 177.20 │ 10.80 │ 27.40 │ 359.60 │ 529.50 │ 899.40 │ 2.60 │ ├───────────────────────────────────────────────────────────────────┼────────────────┼──────────┼──────────┼───────────┼────────┼─────────────────────┼─────────┼─────────┼──────────────────┤ │ ('American Airlines Group Inc', Timestamp('2016-01-01 00:00:00')) │ 10802.00 │ 49909.00 │ 19134.00 │ 423.00 │ 700.00 │ 15277.00 │ 9435.00 │ 4710.00 │ 250.00 │ └───────────────────────────────────────────────────────────────────┴────────────────┴──────────┴──────────┴───────────┴────────┴─────────────────────┴─────────┴─────────┴──────────────────┘ "},{"id":835,"href":"/OpenBBTerminal/terminal/econometrics/coint/","title":"Coint","parent":"Introduction to Econometrics","content":"usage: coint [-ts {OPTIONS}] [-p] [-s SIGNIFICANT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Show co-integration between timeseries.\nCointegration is a statistical property of a collection (X1, X2, \u0026hellip;, Xk) of time series variables. First, all of the series must be integrated of order d (see Order of integration). Next, if a linear combination of this collection is integrated of order less than d, then the collection is said to be co-integrated. Formally, if (X,Y,Z) are each integrated of order d, and there exist coefficients a,b,c such that aX + bY + cZ is integrated of order less than d, then X, Y, and Z are cointegrated. Cointegration has become an important property in contemporary time series analysis. Time series often have trends—either deterministic or stochastic. In an influential paper, Charles Nelson and Charles Plosser (1982) provided statistical evidence that many US macroeconomic time series (like GNP, wages, employment, etc.) have stochastic trends. [Source: Wikipedia]\noptional arguments: -ts {OPTIONS}, --timeseries {OPTIONS} The time series you wish to test co-integration on. Can hold multiple timeseries. (default: None) -p, --plot Plot Z-Values (default: False) -s SIGNIFICANT, --significant SIGNIFICANT Show only companies that have p-values lower than this percentage (default: 0) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 24, 06:03 (✨) /econometrics/ $ coint msft.adj_close aapl.adj_close tsla.adj_close googl.adj_close -p Cointegration Tests ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━┓ ┃ Pairs ┃ Constant ┃ Gamma ┃ Alpha ┃ Dickey-Fuller ┃ P Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━┩ │ adj_close-msft/adj_close-aapl │ 46.62 │ 1.58 │ 0.00 │ -1.86 │ 0.35 │ ├────────────────────────────────┼──────────┼───────┼───────┼───────────────┼─────────┤ │ adj_close-msft/adj_close-tsla │ 130.28 │ 0.18 │ -0.01 │ -2.82 │ 0.06 │ ├────────────────────────────────┼──────────┼───────┼───────┼───────────────┼─────────┤ │ adj_close-msft/adj_close-googl │ 21.38 │ 0.10 │ -0.01 │ -2.51 │ 0.11 │ ├────────────────────────────────┼──────────┼───────┼───────┼───────────────┼─────────┤ │ adj_close-aapl/adj_close-tsla │ 53.92 │ 0.11 │ -0.01 │ -2.94 │ 0.04 │ ├────────────────────────────────┼──────────┼───────┼───────┼───────────────┼─────────┤ │ adj_close-aapl/adj_close-googl │ -7.83 │ 0.06 │ -0.00 │ -1.62 │ 0.47 │ ├────────────────────────────────┼──────────┼───────┼───────┼───────────────┼─────────┤ │ adj_close-tsla/adj_close-googl │ -505.14 │ 0.51 │ -0.01 │ -2.28 │ 0.18 │ └────────────────────────────────┴──────────┴───────┴───────┴───────────────┴─────────┘ "},{"id":836,"href":"/OpenBBTerminal/terminal/econometrics/combine/","title":"Combine","parent":"Introduction to Econometrics","content":"usage: combine [-d {wp}] [-c COLUMNS] [-h] Makes it possible to add a column to a different dataset.\noptional arguments: -d {wp}, --dataset {wp} Dataset to add columns to (default: None) -c COLUMNS, --columns COLUMNS The columns we want to add \u0026lt;dataset.column\u0026gt;,\u0026lt;datasetb.column2\u0026gt; (default: None) -h, --help show this help message (default: False) Example:\n2022 May 31, 04:54 (🦋) /econometrics/ $ load nile 2022 May 31, 04:54 (🦋) /econometrics/ $ load nile -a nile_2 2022 May 31, 04:54 (🦋) /econometrics/ $ combine nile -c nile_2.volume 2022 May 31, 04:55 (🦋) /econometrics/ $ show nile Dataset nile | Showing 10 of 100 rows ┏━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ ┃ year ┃ volume ┃ nile_2_volume ┃ ┡━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ 0 │ 1871.00 │ 1120.00 │ 1120.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 1 │ 1872.00 │ 1160.00 │ 1160.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 2 │ 1873.00 │ 963.00 │ 963.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 3 │ 1874.00 │ 1210.00 │ 1210.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 4 │ 1875.00 │ 1160.00 │ 1160.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 5 │ 1876.00 │ 1160.00 │ 1160.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 6 │ 1877.00 │ 813.00 │ 813.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 7 │ 1878.00 │ 1230.00 │ 1230.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 8 │ 1879.00 │ 1370.00 │ 1370.00 │ ├───┼─────────┼─────────┼───────────────┤ │ 9 │ 1880.00 │ 1140.00 │ 1140.00 │ └───┴─────────┴─────────┴───────────────┘ "},{"id":837,"href":"/OpenBBTerminal/terminal/econometrics/compare/","title":"Compare","parent":"Introduction to Econometrics","content":"usage: compare [-h] [--export {csv,json,xlsx}] Compare results between all activated regression models via panel command.\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Below you can find a comparison of the regression estimates based on the dataset from Vella and M. Verbeek (1998), “Whose Wages Do Unions Raise? A Dynamic Model of Unionism and Wage Rate Determination for Young Men,” Journal of Applied Econometrics 13, 163-183. This is a well-known dataset also used within Chapter 14 of Introduction to Econometrics by Jeffrey Wooldridge.\nTo replicate this result, please have a look at panel.\n2022 Feb 25, 08:56 (✨) /econometrics/ $ compare Model Comparison ========================================================================================================================================================== POLS BOLS RE FE FE_EE FE_IE FE_EE_IE FDOLS ---------------------------------------------------------------------------------------------------------------------------------------------------------- Dep. Variable lwage_wp lwage_wp lwage_wp lwage_wp lwage_wp lwage_wp lwage_wp lwage_wp Estimator PooledOLS BetweenOLS RandomEffects PanelOLS PanelOLS PanelOLS PanelOLS FirstDifferenceOLS No. Observations 4360 545 4360 4360 4360 4360 4360 3815 Cov. Est. Unadjusted Unadjusted Unadjusted Unadjusted Unadjusted Unadjusted Unadjusted Unadjusted R-squared 0.1893 0.2155 0.1806 0.1246 0.1806 0.0535 0.0216 0.0268 R-Squared (Within) 0.1692 0.1141 0.1799 0.1646 0.1806 -0.1037 -0.4809 0.1763 R-Squared (Between) 0.2066 0.2155 0.1853 0.0902 -0.0052 0.0902 -0.0052 0.5491 R-Squared (Overall) 0.1893 0.1686 0.1828 0.1246 0.0807 0.0005 -0.2253 0.5328 F-statistic 72.459 24.633 68.409 61.920 83.851 81.891 27.959 26.208 P-value (F-stat) 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 ===================== ============ ============ =============== ============ ============ ============ ============ ==================== const 0.0921 0.2836 0.0234 1.3454 1.4260 1.6440 1.8706 (1.1761) (1.5897) (0.1546) (60.606) (77.748) (94.902) (49.430) black_wp -0.1392 -0.1414 -0.1394 (-5.9049) (-2.8915) (-2.9054) hisp_wp 0.0160 0.0100 0.0217 (0.7703) (0.2355) (0.5078) exper_wp 0.0672 0.0278 0.1058 0.1158 (4.9095) (2.4538) (6.8706) (5.9096) expersq_wp -0.0024 -0.0047 -0.0021 -0.0052 -0.0021 -0.0052 -0.0039 (-2.9413) (-6.8623) (-7.5081) (-7.3612) (-7.5081) (-7.3612) (-2.8005) married_wp 0.1083 0.1416 0.0638 0.1521 0.0467 0.1521 0.0467 0.0381 (6.8997) (3.4346) (3.8035) (9.5417) (2.5494) (9.5417) (2.5494) (1.6633) educ_wp 0.0913 0.0913 0.0919 (17.442) (8.5159) (8.5744) union_wp 0.1825 0.2587 0.1059 0.1768 0.0800 0.1768 0.0800 0.0428 (10.635) (5.6214) (5.9289) (10.032) (4.1430) (10.032) (4.1430) (2.1767) year_wp.1981 0.0583 0.0404 0.1187 0.1512 (1.9214) (1.6362) (3.9144) (6.8883) year_wp.1982 0.0628 0.0309 0.1843 0.2530 (1.8900) (0.9519) (6.0168) (10.360) year_wp.1983 0.0620 0.0202 0.2431 0.3544 (1.6915) (0.4840) (7.7581) (12.121) year_wp.1984 0.0905 0.0430 0.3322 0.4901 (2.2566) (0.8350) (10.236) (13.529) year_wp.1985 0.1092 0.0577 0.4112 0.6175 (2.5200) (0.9383) (12.048) (13.648) year_wp.1986 0.1420 0.0918 0.5039 0.7655 (3.0580) (1.2834) (13.806) (13.638) year_wp.1987 0.1738 0.1348 0.5952 0.9250 (3.5165) (1.6504) (15.026) (13.450) ======================= ============== ============== ================= ============== ============== ============== ============== ====================== Effects Entity Time Entity Time ---------------------------------------------------------------------------------------------------------------------------------------------------------- T-stats reported in parentheses "},{"id":838,"href":"/OpenBBTerminal/terminal/econometrics/delete/","title":"Delete","parent":"Introduction to Econometrics","content":"usage: delete [-d DELETE] [-h] Allows you to remove any column from your dataset. For example delete wp.nr\noptional arguments: -d DELETE, --delete DELETE The columns you want to delete from a dataset. Use format: \u0026lt;dataset.column\u0026gt; or multiple with \u0026lt;dataset.column\u0026gt;,\u0026lt;datasetb.column2\u0026gt; (default: None) -h, --help show this help message (default: False) Example:\n2022 May 31, 04:53 (🦋) /econometrics/ $ load wage_panel -a wp 2022 May 31, 04:53 (🦋) /econometrics/ $ show wp Dataset wp | Showing 10 of 4360 rows ┏━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 13.00 │ 1980.00 │ 0.00 │ 1.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 1 │ 13.00 │ 1981.00 │ 0.00 │ 2.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 2 │ 13.00 │ 1982.00 │ 0.00 │ 3.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 3 │ 13.00 │ 1983.00 │ 0.00 │ 4.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 4 │ 13.00 │ 1984.00 │ 0.00 │ 5.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 5 │ 13.00 │ 1985.00 │ 0.00 │ 6.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 6 │ 13.00 │ 1986.00 │ 0.00 │ 7.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 7 │ 13.00 │ 1987.00 │ 0.00 │ 8.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 8 │ 17.00 │ 1980.00 │ 0.00 │ 4.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 9 │ 17.00 │ 1981.00 │ 0.00 │ 5.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └───┴───────┴─────────┴───────┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ 2022 May 31, 04:53 (🦋) /econometrics/ $ delete wp.year,wp.black,wp.exper 2022 May 31, 04:53 (🦋) /econometrics/ $ show wp Dataset wp | Showing 10 of 4360 rows ┏━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 13.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 1 │ 13.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 2 │ 13.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 3 │ 13.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 4 │ 13.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 5 │ 13.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 6 │ 13.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 7 │ 13.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 8 │ 17.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├───┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 9 │ 17.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └───┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ "},{"id":839,"href":"/OpenBBTerminal/terminal/econometrics/desc/","title":"Desc","parent":"Introduction to Econometrics","content":"usage: desc [-n {OPTIONS}] [-h] [--export {csv,json,xlsx}] Show the descriptive statistics of a dataset.\noptional arguments: -n {OPTIONS}, --name {OPTIONS} The name of the database you want to show the descriptive statistics for (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Jun 01, 06:50 (🦋) /econometrics/ $ load anes96 2022 Jun 01, 06:51 (🦋) /econometrics/ $ desc anes96 Statistics for dataset: 'anes96' ┏━━━━━━━┳━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ popul ┃ tvnews ┃ selflr ┃ clinlr ┃ dolelr ┃ pid ┃ age ┃ educ ┃ income ┃ vote ┃ logpopul ┃ ┡━━━━━━━╇━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━┩ │ count │ 944.00 │ 944.00 │ 944.00 │ 944.00 │ 944.00 │ 944.00 │ 944.00 │ 944.00 │ 944.00 │ 944.00 │ 944.00 │ ├───────┼─────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼──────────┤ │ mean │ 306.38 │ 3.73 │ 4.33 │ 2.94 │ 5.39 │ 2.84 │ 47.04 │ 4.57 │ 16.33 │ 0.42 │ 2.47 │ ├───────┼─────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼──────────┤ │ std │ 1082.61 │ 2.68 │ 1.44 │ 1.38 │ 1.27 │ 2.27 │ 16.42 │ 1.60 │ 5.97 │ 0.49 │ 3.19 │ ├───────┼─────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼──────────┤ │ min │ 0.00 │ 0.00 │ 1.00 │ 1.00 │ 1.00 │ 0.00 │ 19.00 │ 1.00 │ 1.00 │ 0.00 │ -2.30 │ ├───────┼─────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼──────────┤ │ 25% │ 1.00 │ 1.00 │ 3.00 │ 2.00 │ 5.00 │ 1.00 │ 34.00 │ 3.00 │ 14.00 │ 0.00 │ 0.10 │ ├───────┼─────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼──────────┤ │ 50% │ 22.00 │ 3.00 │ 4.00 │ 3.00 │ 6.00 │ 2.00 │ 44.00 │ 4.00 │ 17.00 │ 0.00 │ 3.10 │ ├───────┼─────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼──────────┤ │ 75% │ 110.00 │ 7.00 │ 6.00 │ 4.00 │ 6.00 │ 5.00 │ 58.00 │ 6.00 │ 21.00 │ 1.00 │ 4.70 │ ├───────┼─────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼────────┼──────────┤ │ max │ 7300.00 │ 7.00 │ 7.00 │ 7.00 │ 7.00 │ 6.00 │ 91.00 │ 7.00 │ 24.00 │ 1.00 │ 8.90 │ └───────┴─────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴────────┴──────────┘ 2022 Jun 01, 06:51 (🦋) /econometrics/ $ desc anes96.educ Statistics for dataset: 'anes96' ┏━━━━━━━┳━━━━━━━━┓ ┃ ┃ educ ┃ ┡━━━━━━━╇━━━━━━━━┩ │ count │ 944.00 │ ├───────┼────────┤ │ mean │ 4.57 │ ├───────┼────────┤ │ std │ 1.60 │ ├───────┼────────┤ │ min │ 1.00 │ ├───────┼────────┤ │ 25% │ 3.00 │ ├───────┼────────┤ │ 50% │ 4.00 │ ├───────┼────────┤ │ 75% │ 6.00 │ ├───────┼────────┤ │ max │ 7.00 │ └───────┴────────┘ "},{"id":840,"href":"/OpenBBTerminal/terminal/econometrics/dwat/","title":"Dwat","parent":"Introduction to Econometrics","content":"usage: dwat [-p] [-h] [--export {csv,json,xlsx}] Show autocorrelation tests from Durbin-Watson\nThe Durbin Watson (DW) statistic is a test for autocorrelation in the residuals from a statistical model or regression analysis. The Durbin-Watson statistic will always have a value ranging between 0 and 4. A value of 2.0 indicates there is no autocorrelation detected in the sample. Values from 0 to less than 2 point to positive autocorrelation and values from 2 to 4 means negative autocorrelation. [Source: Investopedia]\noptional arguments: -p, --plot Plot the residuals (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 24, 05:59 (✨) /econometrics/ $ ols -d adj_close-msft -i adj_close-aapl -i adj_close-googl -i adj_close-tsla OLS Regression Results ============================================================================== Dep. Variable: adj_close_msft R-squared: 0.977 Model: OLS Adj. R-squared: 0.977 Method: Least Squares F-statistic: 1.068e+04 Date: Thu, 24 Feb 2022 Prob (F-statistic): 0.00 Time: 12:00:01 Log-Likelihood: -2830.6 No. Observations: 759 AIC: 5669. Df Residuals: 755 BIC: 5688. Df Model: 3 Covariance Type: nonrobust =================================================================================== coef std err t P\u0026gt;|t| [0.025 0.975] ----------------------------------------------------------------------------------- Intercept 27.7984 2.166 12.832 0.000 23.546 32.051 adj_close_aapl 0.8662 0.034 25.503 0.000 0.800 0.933 adj_close_googl 0.0508 0.002 30.374 0.000 0.048 0.054 adj_close_tsla -0.0007 0.004 -0.181 0.856 -0.009 0.007 ============================================================================== Omnibus: 41.445 Durbin-Watson: 0.044 Prob(Omnibus): 0.000 Jarque-Bera (JB): 47.398 Skew: 0.612 Prob(JB): 5.10e-11 Kurtosis: 2.995 Cond. No. 1.16e+04 ============================================================================== Notes: [1] Standard Errors assume that the covariance matrix of the errors is correctly specified. [2] The condition number is large, 1.16e+04. This might indicate that there are strong multicollinearity or other numerical problems. 2022 Feb 24, 06:00 (✨) /statistics/ $ dwat -p The result 0.04 is outside the range 1.5 and 2.5 and therefore autocorrelation can be problematic. Please consider lags of the dependent or independent variable. "},{"id":841,"href":"/OpenBBTerminal/terminal/econometrics/export/","title":"Export","parent":"Introduction to Econometrics","content":"usage: export [-n NAME] [-t {csv,xlsx}] [-h] Export dataset to Excel. It properly recognizes changes made with the index, clean and modify commands.\noptional arguments: -n NAME, --name NAME The name of the dataset you wish to export (default: None) -t {csv,xlsx}, --type {csv,xlsx} The file type you wish to export to (default: xlsx) -h, --help show this help message (default: False) Example:\n2022 Feb 24, 04:35 (✨) /econometrics/ $ load ThesisData.xlsx thesis 2022 Feb 24, 04:36 (✨) /econometrics/ $ export thesis -t csv Saved file: /Users/jeroenbouma/My Drive/Programming/Python/OpenBBTerminal/exports/statistics/thesis_20220224_103614.csv "},{"id":842,"href":"/OpenBBTerminal/terminal/econometrics/granger/","title":"Granger","parent":"Introduction to Econometrics","content":"usage: granger [ts {OPTIONS}] [-l LAGS] [-cl CONFIDENCE] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Show Granger causality between two timeseries\nThe Granger causality test is a statistical hypothesis test for determining whether one time series is useful in forecasting another, first proposed in 1969. Ordinarily, regressions reflect \u0026ldquo;mere\u0026rdquo; correlations, but Clive Granger argued that causality in economics could be tested for by measuring the ability to predict the future values of a time series using prior values of another time series. Since the question of \u0026ldquo;true causality\u0026rdquo; is deeply philosophical, and because of the post hoc ergo propter hoc fallacy of assuming that one thing preceding another can be used as a proof of causation, econometricians assert that the Granger test finds only \u0026ldquo;predictive causality\u0026rdquo;. Using the term \u0026ldquo;causality\u0026rdquo; alone is a misnomer, as Granger-causality is better described as \u0026ldquo;precedence\u0026rdquo;, or, as Granger himself later claimed in 1977, \u0026ldquo;temporally related\u0026rdquo;. Rather than testing whether X causes Y, the Granger causality tests whether X forecasts Y. [Source: Wikipedia]\noptional arguments:ols -ts {OPTIONS}, --timeseries {OPTIONS} Requires two time series, the first time series is assumed to be Granger-caused by the second time series. (default: None) -l LAGS, --lags LAGS How many lags should be included (default: 3) -cl CONFIDENCE, --confidence CONFIDENCE Set the confidence level (default: 0.05) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Jun 01, 06:35 (🦋) /econometrics/ $ load strikes 2022 Jun 01, 06:36 (🦋) /econometrics/ $ granger strikes.duration,strikes.iprod Granger Causality Test [Y: strikes.duration | X: strikes.iprod | Lags: 3] ┏━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━┓ ┃ ┃ F-test ┃ P-value ┃ Count ┃ Lags ┃ ┡━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━┩ │ ssr_ftest │ 0.81 │ 0.49 │ 52.00 │ 3.00 │ ├──────────────┼────────┼─────────┼───────┼──────┤ │ ssr_chi2test │ 2.75 │ 0.43 │ - │ 3 │ ├──────────────┼────────┼─────────┼───────┼──────┤ │ lrtest │ 2.69 │ 0.44 │ - │ 3 │ ├──────────────┼────────┼─────────┼───────┼──────┤ │ params_ftest │ 0.81 │ 0.49 │ 52.00 │ 3.00 │ └──────────────┴────────┴─────────┴───────┴──────┘ As the p-value of the F-test is 0.495, we can not reject the null hypothesis at the 0.05 confidence level. "},{"id":843,"href":"/OpenBBTerminal/terminal/econometrics/index/","title":"Index","parent":"Introduction to Econometrics","content":"usage: index [-n NAME [NAME ...]] [-i] [-h] Set a (multi) index for a dataset, specified by --name. When setting two indices, it is assumed it follows the structure   (e.g. company names and quarter)\noptional arguments: -n NAME [NAME ...], --name NAME [NAME ...] The first argument is the name of the database, further arguments are the columns you wish to set as index (default: None) -a, --adjustment Whether to allow for making adjustments to the dataset to align it with the use case for Timeseries and Panel Data regressions (default: False) -d, --drop Whether to drop the column(s) the index is set for. (default: False) -h, --help show this help message (default: False) Example:\n2022 Jun 01, 06:39 (🦋) /econometrics/ $ load wage_panel -a wp 2022 Jun 01, 06:39 (🦋) /econometrics/ $ show wp Dataset wp | Showing 10 of 4360 rows ┏━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 13.00 │ 1980.00 │ 0.00 │ 1.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 1 │ 13.00 │ 1981.00 │ 0.00 │ 2.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 2 │ 13.00 │ 1982.00 │ 0.00 │ 3.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 3 │ 13.00 │ 1983.00 │ 0.00 │ 4.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 4 │ 13.00 │ 1984.00 │ 0.00 │ 5.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 5 │ 13.00 │ 1985.00 │ 0.00 │ 6.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 6 │ 13.00 │ 1986.00 │ 0.00 │ 7.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 7 │ 13.00 │ 1987.00 │ 0.00 │ 8.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 8 │ 17.00 │ 1980.00 │ 0.00 │ 4.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 9 │ 17.00 │ 1981.00 │ 0.00 │ 5.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └───┴───────┴─────────┴───────┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ 2022 Jun 01, 06:39 (🦋) /econometrics/ $ index wp -i nr,year Successfully updated 'wp' index to be 'nr, year' 2022 Jun 01, 06:39 (🦋) /econometrics/ $ show wp Dataset wp | Showing 10 of 4360 rows ┏━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ (13, 1980) │ 13.00 │ 1980.00 │ 0.00 │ 1.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1981) │ 13.00 │ 1981.00 │ 0.00 │ 2.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1982) │ 13.00 │ 1982.00 │ 0.00 │ 3.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1983) │ 13.00 │ 1983.00 │ 0.00 │ 4.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1984) │ 13.00 │ 1984.00 │ 0.00 │ 5.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1985) │ 13.00 │ 1985.00 │ 0.00 │ 6.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1986) │ 13.00 │ 1986.00 │ 0.00 │ 7.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1987) │ 13.00 │ 1987.00 │ 0.00 │ 8.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (17, 1980) │ 17.00 │ 1980.00 │ 0.00 │ 4.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (17, 1981) │ 17.00 │ 1981.00 │ 0.00 │ 5.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └────────────┴───────┴─────────┴───────┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ "},{"id":844,"href":"/OpenBBTerminal/terminal/econometrics/load/","title":"Load","parent":"Introduction to Econometrics","content":"usage: load [-f FILE [FILE ...]] [-ex] [-h] Load custom data set into a DataFrame. If a column exists titled \u0026ldquo;date\u0026rdquo;, \u0026ldquo;time\u0026rdquo;, \u0026ldquo;timestamp\u0026rdquo;, \u0026ldquo;quarter\u0026rdquo; is automatically converted to a date format and is set as index of the DataFrame.\nThe load function also has the ability to load in custom datasets from Statsmodels. These datasets tend to be quite illustrative for different regression techniques and statistical tests. See the example below for the available options.\noptional arguments: -f FILE [FILE ...], --file FILE [FILE ...] File to load in and the alias you wish to give to the dataset (default: None) -ex, --examples Use this argument to show examples of Statsmodels to load in. See: https://www.statsmodels.org/devel/datasets/index.html (default: False) -h, --help show this help message (default: False) Example:\n2022 Feb 28, 04:19 (✨) /econometrics/ $ load MSFT_20220221_140503.xlsx -a msft 2022 Feb 28, 04:20 (✨) /econometrics/ $ show msft msft ┏━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━┩ │ 0 │ 2019-02-19 00:00:00 │ 107.79 │ 108.66 │ 107.78 │ 108.17 │ 104.38 │ 18038500 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 1 │ 2019-02-20 00:00:00 │ 107.86 │ 107.94 │ 106.29 │ 107.15 │ 103.84 │ 21607700 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 2 │ 2019-02-21 00:00:00 │ 106.90 │ 109.48 │ 106.87 │ 109.41 │ 106.03 │ 29063200 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 3 │ 2019-02-22 00:00:00 │ 110.05 │ 111.20 │ 109.82 │ 110.97 │ 107.54 │ 27763200 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 4 │ 2019-02-25 00:00:00 │ 111.76 │ 112.18 │ 111.26 │ 111.59 │ 108.14 │ 23750600 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 5 │ 2019-02-26 00:00:00 │ 111.26 │ 113.24 │ 111.17 │ 112.36 │ 108.89 │ 21536700 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 6 │ 2019-02-27 00:00:00 │ 111.69 │ 112.36 │ 110.88 │ 112.17 │ 108.71 │ 21487100 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 7 │ 2019-02-28 00:00:00 │ 112.04 │ 112.88 │ 111.73 │ 112.03 │ 108.57 │ 29083900 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 8 │ 2019-03-01 00:00:00 │ 112.89 │ 113.02 │ 111.67 │ 112.53 │ 109.06 │ 23501200 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 9 │ 2019-03-04 00:00:00 │ 113.02 │ 113.25 │ 110.80 │ 112.26 │ 108.79 │ 26608000 │ └───┴─────────────────────┴────────┴────────┴────────┴────────┴───────────┴──────────┘ 2022 Feb 28, 04:16 (✨) /econometrics/ $ load -e Examples from Statsmodels ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ file name ┃ description ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ anes96 │ American National Election Survey 1996 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ cancer │ Breast Cancer Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ ccard │ Bill Greene’s credit scoring data. │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ cancer_china │ Smoking and lung cancer in eight cities in China. │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ co2 │ Mauna Loa Weekly Atmospheric CO2 Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ committee │ First 100 days of the US House of Representatives 1995 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ copper │ World Copper Market 1951-1975 Dataset │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ cpunish │ US Capital Punishment dataset. │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ danish_data │ Danish Money Demand Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ elnino │ El Nino - Sea Surface Temperatures │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ engel │ Engel (1857) food expenditure data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ fair │ Affairs dataset │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ fertility │ World Bank Fertility Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ grunfeld │ Grunfeld (1950) Investment Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ health │ Transplant Survival Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ interest_inflation │ (West) German interest and inflation rate 1972-1998 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ longley │ Longley dataset │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ macrodata │ United States Macroeconomic data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ modechoice │ Travel Mode Choice │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ nile │ Nile River flows at Ashwan 1871-1970 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ randhie │ RAND Health Insurance Experiment Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ scotland │ Taxation Powers Vote for the Scottish Parliament 1997 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ spector │ Spector and Mazzeo (1980) - Program Effectiveness Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ stackloss │ Stack loss data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ star98 │ Star98 Educational Dataset │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ statecrim │ Statewide Crime Data 2009 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ strikes │ U.S. Strike Duration Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ sunspots │ Yearly sunspots data 1700-2008 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ wage_panel │ Veila and M. Verbeek (1998): Whose Wages Do Unions Raise? │ └────────────────────┴───────────────────────────────────────────────────────────┘ 2022 Feb 28, 04:17 (✨) /econometrics/ $ load grunfeld -a gf 2022 Feb 28, 04:20 (✨) /econometrics/ $ desc -a gf gf ┏━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┓ ┃ ┃ invest ┃ value ┃ capital ┃ year ┃ ┡━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━┩ │ count │ 220.00 │ 220.00 │ 220.00 │ 220.00 │ ├───────┼─────────┼─────────┼─────────┼─────────┤ │ mean │ 133.31 │ 988.58 │ 257.11 │ 1944.50 │ ├───────┼─────────┼─────────┼─────────┼─────────┤ │ std │ 210.59 │ 1287.30 │ 293.23 │ 5.78 │ ├───────┼─────────┼─────────┼─────────┼─────────┤ │ min │ 0.93 │ 30.28 │ 0.80 │ 1935.00 │ ├───────┼─────────┼─────────┼─────────┼─────────┤ │ 25% │ 27.38 │ 160.32 │ 67.10 │ 1939.75 │ ├───────┼─────────┼─────────┼─────────┼─────────┤ │ 50% │ 52.36 │ 404.65 │ 180.10 │ 1944.50 │ ├───────┼─────────┼─────────┼─────────┼─────────┤ │ 75% │ 99.78 │ 1605.93 │ 344.50 │ 1949.25 │ ├───────┼─────────┼─────────┼─────────┼─────────┤ │ max │ 1486.70 │ 6241.70 │ 2226.30 │ 1954.00 │ └───────┴─────────┴─────────┴─────────┴─────────┘ "},{"id":845,"href":"/OpenBBTerminal/terminal/econometrics/norm/","title":"Norm","parent":"Introduction to Econometrics","content":"usage: norm [-c {OPTIONS}] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Test whether the used data is normally distributed.\nNormal distribution, also known as the Gaussian distribution, is a probability distribution that is symmetric about the mean, showing that data near the mean are more frequent in occurrence than data far from the mean. In graph form, normal distribution will appear as a bell curve. [Source: Investopedia]\noptional arguments: -c {OPTIONS}, --column {OPTIONS} The column and name of the database you want to test normality for (default: None) -p, --plot Whether you wish to plot a histogram to visually depict normality (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example for stock data (which is not normally distributed):\n2022 Feb 24, 05:31 (✨) /econometrics/ $ norm tsla.adj_close -p Normality Test [Column: adj_close | Dataset: tsla] ┏━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Kurtosis ┃ Skewness ┃ Jarque-Bera ┃ Shapiro-Wilk ┃ Kolmogorov-Smirnov ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ Statistic │ -18.71 │ 4.85 │ 66.36 │ 0.88 │ 1.00 │ ├───────────┼──────────┼──────────┼─────────────┼──────────────┼────────────────────┤ │ p-value │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ └───────────┴──────────┴──────────┴─────────────┴──────────────┴────────────────────┘ Example for returns (which is usually normally distributed):\n2022 Feb 24, 05:36 (✨) /econometrics/ $ norm msft.return -p Normality Test [Column: return | Dataset: msft] ┏━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Kurtosis ┃ Skewness ┃ Jarque-Bera ┃ Shapiro-Wilk ┃ Kolmogorov-Smirnov ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ Statistic │ 7.89 │ -3.56 │ 336.34 │ 0.96 │ 0.48 │ ├───────────┼──────────┼──────────┼─────────────┼──────────────┼────────────────────┤ │ p-value │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ └───────────┴──────────┴──────────┴─────────────┴──────────────┴────────────────────┘ "},{"id":846,"href":"/OpenBBTerminal/terminal/econometrics/ols/","title":"Ols","parent":"Introduction to Econometrics","content":"usage: ols [-r OPTIONS [OPTIONS ...]] [-h] [-h] [--export {csv,json,xlsx}] Performs an OLS regression.\nIn statistics, ordinary least squares (OLS) is a type of linear least squares method for estimating the unknown parameters in a linear regression model. OLS chooses the parameters of a linear function of a set of explanatory variables by the principle of least squares: minimizing the sum of the squares of the differences between the observed dependent variable (values of the variable being observed) in the given dataset and those predicted by the linear function of the independent variable. [Source: Wikipedia]\noptional arguments: -r {OPTIONS} --regression {OPTIONS} The regression you would like to perform (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example (based on Longley\u0026rsquo;s Dataset):\n(✨) /econometrics/ $ load longley -a ll (✨) /econometrics/ $ desc ll ll ┏━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┓ ┃ ┃ totemp ┃ gnpdefl ┃ gnp ┃ unemp ┃ armed ┃ pop ┃ year ┃ ┡━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━┩ │ count │ 16.00 │ 16.00 │ 16.00 │ 16.00 │ 16.00 │ 16.00 │ 16.00 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ mean │ 65317.00 │ 101.68 │ 387698.44 │ 3193.31 │ 2606.69 │ 117424.00 │ 1954.50 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ std │ 3511.97 │ 10.79 │ 99394.94 │ 934.46 │ 695.92 │ 6956.10 │ 4.76 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ min │ 60171.00 │ 83.00 │ 234289.00 │ 1870.00 │ 1456.00 │ 107608.00 │ 1947.00 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 25% │ 62712.50 │ 94.53 │ 317881.00 │ 2348.25 │ 2298.00 │ 111788.50 │ 1950.75 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 50% │ 65504.00 │ 100.60 │ 381427.00 │ 3143.50 │ 2717.50 │ 116803.50 │ 1954.50 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 75% │ 68290.50 │ 111.25 │ 454085.50 │ 3842.50 │ 3060.75 │ 122304.00 │ 1958.25 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ max │ 70551.00 │ 116.90 │ 554894.00 │ 4806.00 │ 3594.00 │ 130081.00 │ 1962.00 │ └───────┴──────────┴─────────┴───────────┴─────────┴─────────┴───────────┴─────────┘ (✨) /econometrics/ $ ols -d ll.totemp -i ll.gnpdefl,ll.gnp,ll.unemp,ll.armed,ll.pop,ll.year OLS Regression Results ======================================================================================= Dep. Variable: totemp_ll R-squared (uncentered): 1.000 Model: OLS Adj. R-squared (uncentered): 1.000 Method: Least Squares F-statistic: 5.052e+04 Date: Fri, 25 Feb 2022 Prob (F-statistic): 8.20e-22 Time: 12:59:32 Log-Likelihood: -117.56 No. Observations: 16 AIC: 247.1 Df Residuals: 10 BIC: 251.8 Df Model: 6 Covariance Type: nonrobust ============================================================================== coef std err t P\u0026gt;|t| [0.025 0.975] ------------------------------------------------------------------------------ gnpdefl_ll -52.9936 129.545 -0.409 0.691 -341.638 235.650 gnp_ll 0.0711 0.030 2.356 0.040 0.004 0.138 unemp_ll -0.4235 0.418 -1.014 0.335 -1.354 0.507 armed_ll -0.5726 0.279 -2.052 0.067 -1.194 0.049 pop_ll -0.4142 0.321 -1.289 0.226 -1.130 0.302 year_ll 48.4179 17.689 2.737 0.021 9.003 87.832 ============================================================================== Omnibus: 1.443 Durbin-Watson: 1.277 Prob(Omnibus): 0.486 Jarque-Bera (JB): 0.605 Skew: 0.476 Prob(JB): 0.739 Kurtosis: 3.031 Cond. No. 4.56e+05 ============================================================================== Notes: [1] R² is computed without centering (uncentered) since the model does not contain a constant. [2] Standard Errors assume that the covariance matrix of the errors is correctly specified. [3] The condition number is large, 4.56e+05. This might indicate that there are strong multicollinearity or other numerical problems. Warnings: kurtosistest only valid for n\u0026gt;=20 ... continuing anyway, n=16 "},{"id":847,"href":"/OpenBBTerminal/terminal/econometrics/panel/","title":"Panel","parent":"Introduction to Econometrics","content":"usage: usage: panel [-r {OPTIONS} [{OPTIONS} ...]] [-t {pols,re,bols,fe,fdols,POLS,RE,BOLS,FE,FDOLS}] [-ee] [-te] [-h] [--export {csv,json,xlsx}]] Performs regression analysis on Panel Data. There are a multitude of options to select from to fit the needs of restrictions of the dataset.\nPanel data includes observations on multiple entities – individuals, firms, countries – over multiple time periods. In most classical applications of panel data the number of entities, N, is large and the number of time periods, T, is small (often between 2 and 5). Most asymptotic theory for these estimators has been developed under an assumption that N will diverge while T is fixed. [Source: LinearModels]\nPlease refer to the documentation of LinearModels (or any Econometrics Textbook) to understand the difference between the models.\noptional arguments: -r {OPTIONS}, --regression {OPTIONS} The regression you would like to perform, first variable is the dependent variable, consecutive variables the independent variables. -t {pols,re,bols,fe,fdols,POLS,RE,BOLS,FE,FDOLS}, --type {pols,re,bols,fe,fdols,POLS,RE,BOLS,FE,FDOLS} The type of regression you wish to perform. This can be either pols (Pooled OLS), re (Random Effects), bols (Between OLS), fe (Fixed Effects) or fdols (First Difference OLS) (default: pols)Effects) or fdols (First Difference OLS) (default: pols) -ee, --entity_effects Using this command creates entity effects, which is equivalent to including dummies for each entity. This is only used within Fixed Effects estimations (when type is set to 'fe') (default: False) -te, --time_effects Using this command creates time effects, which is equivalent to including dummies for each time. This is only used within Fixed Effects estimations (when type is set to 'fe') (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Below you can find examples of the dataset from Vella and M. Verbeek (1998), “Whose Wages Do Unions Raise? A Dynamic Model of Unionism and Wage Rate Determination for Young Men,” Journal of Applied Econometrics 13, 163-183. This is a well-known dataset also used within Chapter 14 of Introduction to Econometrics by Jeffrey Wooldridge. For these regressions, LinearModels is used.\n2022 Feb 25, 08:07 (✨) /econometrics/ $ load wage_panel -a wp 2022 Feb 25, 08:08 (✨) /econometrics/ $ type wp ┏━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ columns ┃ dtypes ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━┩ │ nr │ int64 │ ├────────────┼──────────┤ │ year │ category │ ├────────────┼──────────┤ │ black │ int64 │ ├────────────┼──────────┤ │ exper │ int64 │ ├────────────┼──────────┤ │ hisp │ int64 │ ├────────────┼──────────┤ │ hours │ int64 │ ├────────────┼──────────┤ │ married │ int64 │ ├────────────┼──────────┤ │ educ │ int64 │ ├────────────┼──────────┤ │ union │ int64 │ ├────────────┼──────────┤ │ lwage │ float64 │ ├────────────┼──────────┤ │ expersq │ int64 │ ├────────────┼──────────┤ │ occupation │ int64 │ └────────────┴──────────┘ 2022 Feb 25, 08:09 (✨) /econometrics/ $ index wp -i nr,year 2022 Feb 25, 08:10 (✨) /econometrics/ $ type wp.year --format category 2022 Feb 25, 08:10 (✨) /econometrics/ $ show wp wp ┏━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ (13, 1980) │ 13.00 │ 1980.00 │ 0.00 │ 1.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1981) │ 13.00 │ 1981.00 │ 0.00 │ 2.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1982) │ 13.00 │ 1982.00 │ 0.00 │ 3.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1983) │ 13.00 │ 1983.00 │ 0.00 │ 4.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1984) │ 13.00 │ 1984.00 │ 0.00 │ 5.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1985) │ 13.00 │ 1985.00 │ 0.00 │ 6.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1986) │ 13.00 │ 1986.00 │ 0.00 │ 7.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1987) │ 13.00 │ 1987.00 │ 0.00 │ 8.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (17, 1980) │ 17.00 │ 1980.00 │ 0.00 │ 4.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (17, 1981) │ 17.00 │ 1981.00 │ 0.00 │ 5.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └────────────┴───────┴─────────┴───────┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ Pooled OLS Estimation:\n(✨) /econometrics/ $ panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.expersq,wp.married,wp.educ,wp.union,wp.year PooledOLS Estimation Summary ================================================================================ Dep. Variable: lwage_wp R-squared: 0.1893 Estimator: PooledOLS R-squared (Between): 0.2066 No. Observations: 4360 R-squared (Within): 0.1692 Date: Fri, Feb 25 2022 R-squared (Overall): 0.1893 Time: 14:51:08 Log-likelihood -2982.0 Cov. Estimator: Unadjusted F-statistic: 72.459 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(14,4345) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 72.459 P-value 0.0000 Time periods: 8 Distribution: F(14,4345) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ================================================================================ Parameter Std. Err. T-stat P-value Lower CI Upper CI -------------------------------------------------------------------------------- const 0.0921 0.0783 1.1761 0.2396 -0.0614 0.2455 black_wp -0.1392 0.0236 -5.9049 0.0000 -0.1855 -0.0930 hisp_wp 0.0160 0.0208 0.7703 0.4412 -0.0248 0.0568 exper_wp 0.0672 0.0137 4.9095 0.0000 0.0404 0.0941 expersq_wp -0.0024 0.0008 -2.9413 0.0033 -0.0040 -0.0008 married_wp 0.1083 0.0157 6.8997 0.0000 0.0775 0.1390 educ_wp 0.0913 0.0052 17.442 0.0000 0.0811 0.1016 union_wp 0.1825 0.0172 10.635 0.0000 0.1488 0.2161 year_wp.1981 0.0583 0.0304 1.9214 0.0548 -0.0012 0.1178 year_wp.1982 0.0628 0.0332 1.8900 0.0588 -0.0023 0.1279 year_wp.1983 0.0620 0.0367 1.6915 0.0908 -0.0099 0.1339 year_wp.1984 0.0905 0.0401 2.2566 0.0241 0.0119 0.1691 year_wp.1985 0.1092 0.0434 2.5200 0.0118 0.0243 0.1942 year_wp.1986 0.1420 0.0464 3.0580 0.0022 0.0509 0.2330 year_wp.1987 0.1738 0.0494 3.5165 0.0004 0.0769 0.2707 ================================================================================ Between OLS Estimation:\n(✨) /econometrics/ $ panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.married,wp.educ,wp.union -r bols BetweenOLS Estimation Summary ================================================================================ Dep. Variable: lwage_wp R-squared: 0.2155 Estimator: BetweenOLS R-squared (Between): 0.2155 No. Observations: 545 R-squared (Within): 0.1141 Date: Fri, Feb 25 2022 R-squared (Overall): 0.1686 Time: 14:51:15 Log-likelihood -194.54 Cov. Estimator: Unadjusted F-statistic: 24.633 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(6,538) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 24.633 P-value 0.0000 Time periods: 8 Distribution: F(6,538) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ============================================================================== Parameter Std. Err. T-stat P-value Lower CI Upper CI ------------------------------------------------------------------------------ const 0.2836 0.1784 1.5897 0.1125 -0.0668 0.6340 black_wp -0.1414 0.0489 -2.8915 0.0040 -0.2375 -0.0453 hisp_wp 0.0100 0.0426 0.2355 0.8139 -0.0737 0.0938 exper_wp 0.0278 0.0113 2.4538 0.0144 0.0055 0.0501 married_wp 0.1416 0.0412 3.4346 0.0006 0.0606 0.2226 educ_wp 0.0913 0.0107 8.5159 0.0000 0.0702 0.1123 union_wp 0.2587 0.0460 5.6214 0.0000 0.1683 0.3491 ============================================================================== Random Effects Estimation:\n(✨) /econometrics/ $ panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.expersq,wp.married,wp.educ,wp.union,wp.year -r re RandomEffects Estimation Summary ================================================================================ Dep. Variable: lwage_wp R-squared: 0.1806 Estimator: RandomEffects R-squared (Between): 0.1853 No. Observations: 4360 R-squared (Within): 0.1799 Date: Fri, Feb 25 2022 R-squared (Overall): 0.1828 Time: 14:56:19 Log-likelihood -1622.5 Cov. Estimator: Unadjusted F-statistic: 68.409 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(14,4345) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 68.409 P-value 0.0000 Time periods: 8 Distribution: F(14,4345) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ================================================================================ Parameter Std. Err. T-stat P-value Lower CI Upper CI -------------------------------------------------------------------------------- const 0.0234 0.1514 0.1546 0.8771 -0.2735 0.3203 black_wp -0.1394 0.0480 -2.9054 0.0037 -0.2334 -0.0453 hisp_wp 0.0217 0.0428 0.5078 0.6116 -0.0622 0.1057 exper_wp 0.1058 0.0154 6.8706 0.0000 0.0756 0.1361 expersq_wp -0.0047 0.0007 -6.8623 0.0000 -0.0061 -0.0034 married_wp 0.0638 0.0168 3.8035 0.0001 0.0309 0.0967 educ_wp 0.0919 0.0107 8.5744 0.0000 0.0709 0.1129 union_wp 0.1059 0.0179 5.9289 0.0000 0.0709 0.1409 year_wp.1981 0.0404 0.0247 1.6362 0.1019 -0.0080 0.0889 year_wp.1982 0.0309 0.0324 0.9519 0.3412 -0.0327 0.0944 year_wp.1983 0.0202 0.0417 0.4840 0.6284 -0.0616 0.1020 year_wp.1984 0.0430 0.0515 0.8350 0.4037 -0.0580 0.1440 year_wp.1985 0.0577 0.0615 0.9383 0.3482 -0.0629 0.1782 year_wp.1986 0.0918 0.0716 1.2834 0.1994 -0.0485 0.2321 year_wp.1987 0.1348 0.0817 1.6504 0.0989 -0.0253 0.2950 ================================================================================ Fixed Effects Estimation (no effects):\n(✨) /econometrics/ $ panel -d wp.lwage -i wp.expersq,wp.union,wp.married,wp.year -r fe PanelOLS Estimation Summary ================================================================================ Dep. Variable: lwage_wp R-squared: 0.1246 Estimator: PanelOLS R-squared (Between): 0.0902 No. Observations: 4360 R-squared (Within): 0.1646 Date: Fri, Feb 25 2022 R-squared (Overall): 0.1246 Time: 14:51:21 Log-likelihood -3149.2 Cov. Estimator: Unadjusted F-statistic: 61.920 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(10,4349) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 61.920 P-value 0.0000 Time periods: 8 Distribution: F(10,4349) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ================================================================================ Parameter Std. Err. T-stat P-value Lower CI Upper CI -------------------------------------------------------------------------------- const 1.3454 0.0222 60.606 0.0000 1.3019 1.3889 expersq_wp -0.0021 0.0003 -7.5081 0.0000 -0.0026 -0.0015 union_wp 0.1768 0.0176 10.032 0.0000 0.1423 0.2114 married_wp 0.1521 0.0159 9.5417 0.0000 0.1209 0.1834 year_wp.1981 0.1187 0.0303 3.9144 0.0001 0.0592 0.1781 year_wp.1982 0.1843 0.0306 6.0168 0.0000 0.1243 0.2444 year_wp.1983 0.2431 0.0313 7.7581 0.0000 0.1817 0.3046 year_wp.1984 0.3322 0.0324 10.236 0.0000 0.2685 0.3958 year_wp.1985 0.4112 0.0341 12.048 0.0000 0.3443 0.4781 year_wp.1986 0.5039 0.0365 13.806 0.0000 0.4323 0.5754 year_wp.1987 0.5952 0.0396 15.026 0.0000 0.5176 0.6729 ================================================================================ Fixed Effects Estimation (entity effects):\n(✨) /econometrics/ $ panel -d wp.lwage -i wp.expersq,wp.married,wp.union,wp.year -r fe -e PanelOLS Estimation Summary ================================================================================ Dep. Variable: lwage_wp R-squared: 0.1806 Estimator: PanelOLS R-squared (Between): -0.0052 No. Observations: 4360 R-squared (Within): 0.1806 Date: Fri, Feb 25 2022 R-squared (Overall): 0.0807 Time: 14:52:24 Log-likelihood -1324.8 Cov. Estimator: Unadjusted F-statistic: 83.851 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(10,3805) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 83.851 P-value 0.0000 Time periods: 8 Distribution: F(10,3805) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ================================================================================ Parameter Std. Err. T-stat P-value Lower CI Upper CI -------------------------------------------------------------------------------- const 1.4260 0.0183 77.748 0.0000 1.3901 1.4620 expersq_wp -0.0052 0.0007 -7.3612 0.0000 -0.0066 -0.0038 union_wp 0.0800 0.0193 4.1430 0.0000 0.0421 0.1179 married_wp 0.0467 0.0183 2.5494 0.0108 0.0108 0.0826 year_wp.1981 0.1512 0.0219 6.8883 0.0000 0.1082 0.1942 year_wp.1982 0.2530 0.0244 10.360 0.0000 0.2051 0.3008 year_wp.1983 0.3544 0.0292 12.121 0.0000 0.2971 0.4118 year_wp.1984 0.4901 0.0362 13.529 0.0000 0.4191 0.5611 year_wp.1985 0.6175 0.0452 13.648 0.0000 0.5288 0.7062 year_wp.1986 0.7655 0.0561 13.638 0.0000 0.6555 0.8755 year_wp.1987 0.9250 0.0688 13.450 0.0000 0.7902 1.0599 ================================================================================ F-test for Poolability: 9.1568 P-value: 0.0000 Distribution: F(544,3805) Included effects: Entity Fixed Effects Estimation (time effects):\n(✨) /econometrics/ $ panel -d wp.lwage -i wp.expersq,wp.married,wp.union -r fe -t PanelOLS Estimation Summary ================================================================================ Dep. Variable: lwage_wp R-squared: 0.0535 Estimator: PanelOLS R-squared (Between): 0.0902 No. Observations: 4360 R-squared (Within): -0.1037 Date: Fri, Feb 25 2022 R-squared (Overall): 0.0005 Time: 14:52:45 Log-likelihood -3149.2 Cov. Estimator: Unadjusted F-statistic: 81.891 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(3,4349) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 81.891 P-value 0.0000 Time periods: 8 Distribution: F(3,4349) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ============================================================================== Parameter Std. Err. T-stat P-value Lower CI Upper CI ------------------------------------------------------------------------------ const 1.6440 0.0173 94.902 0.0000 1.6100 1.6779 expersq_wp -0.0021 0.0003 -7.5081 0.0000 -0.0026 -0.0015 union_wp 0.1768 0.0176 10.032 0.0000 0.1423 0.2114 married_wp 0.1521 0.0159 9.5417 0.0000 0.1209 0.1834 ============================================================================== F-test for Poolability: 39.988 P-value: 0.0000 Distribution: F(7,4349) Included effects: Time Fixed Effects Estimation (entity and time effects):\n(✨) /econometrics/ $ panel -d wp.lwage -i wp.expersq,wp.married,wp.union -r fe -t -e PanelOLS Estimation Summary ================================================================================ Dep. Variable: lwage_wp R-squared: 0.0216 Estimator: PanelOLS R-squared (Between): -0.0052 No. Observations: 4360 R-squared (Within): -0.4809 Date: Fri, Feb 25 2022 R-squared (Overall): -0.2253 Time: 14:52:53 Log-likelihood -1324.8 Cov. Estimator: Unadjusted F-statistic: 27.959 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(3,3805) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 27.959 P-value 0.0000 Time periods: 8 Distribution: F(3,3805) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ============================================================================== Parameter Std. Err. T-stat P-value Lower CI Upper CI ------------------------------------------------------------------------------ const 1.8706 0.0378 49.430 0.0000 1.7964 1.9448 expersq_wp -0.0052 0.0007 -7.3612 0.0000 -0.0066 -0.0038 union_wp 0.0800 0.0193 4.1430 0.0000 0.0421 0.1179 married_wp 0.0467 0.0183 2.5494 0.0108 0.0108 0.0826 ============================================================================== F-test for Poolability: 10.067 P-value: 0.0000 Distribution: F(551,3805) Included effects: Entity, Time First Difference OLS Estimation:\n(✨) /econometrics/ $ panel -d wp.lwage -i wp.exper,wp.expersq,wp.married,wp.union -r fdols FirstDifferenceOLS Estimation Summary ================================================================================ Dep. Variable: lwage_wp R-squared: 0.0268 Estimator: FirstDifferenceOLS R-squared (Between): 0.5491 No. Observations: 3815 R-squared (Within): 0.1763 Date: Fri, Feb 25 2022 R-squared (Overall): 0.5328 Time: 14:53:16 Log-likelihood -2305.5 Cov. Estimator: Unadjusted F-statistic: 26.208 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(4,3811) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 26.208 P-value 0.0000 Time periods: 8 Distribution: F(4,3811) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ============================================================================== Parameter Std. Err. T-stat P-value Lower CI Upper CI ------------------------------------------------------------------------------ exper_wp 0.1158 0.0196 5.9096 0.0000 0.0773 0.1542 expersq_wp -0.0039 0.0014 -2.8005 0.0051 -0.0066 -0.0012 union_wp 0.0428 0.0197 2.1767 0.0296 0.0042 0.0813 married_wp 0.0381 0.0229 1.6633 0.0963 -0.0068 0.0831 ============================================================================== "},{"id":848,"href":"/OpenBBTerminal/terminal/econometrics/plot/","title":"Plot","parent":"Introduction to Econometrics","content":"usage: plot [-c {OPTIONS}] [-h] [--export {png,jpg,pdf,svg}] Plot data based on the index. This functionality does not work for Panel Data unless creating a subset of the data that has only a singular index.\noptional arguments: -c {OPTIONS} --column {OPTIONS} Column to plot along the index (default: None) -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export figure into png, jpg, pdf, svg (default: ) Example:\n2022 Jun 01, 06:45 (🦋) /econometrics/ $ load macrodata -a us_macro 2022 Jun 01, 06:45 (🦋) /econometrics/ $ index us_macro -i year -d Successfully updated 'us_macro' index to be 'year' 2022 Jun 01, 06:46 (🦋) /econometrics/ $ show us_macro Dataset us_macro | Showing 10 of 203 rows ┏━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━━━━━┓ ┃ ┃ quarter ┃ realgdp ┃ realcons ┃ realinv ┃ realgovt ┃ realdpi ┃ cpi ┃ m1 ┃ tbilrate ┃ unemp ┃ pop ┃ infl ┃ realint ┃ ┡━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━━╇━━━━━━━━━┩ │ 1959.0 │ 1.00 │ 2710.35 │ 1707.40 │ 286.90 │ 470.05 │ 1886.90 │ 28.98 │ 139.70 │ 2.82 │ 5.80 │ 177.15 │ 0.00 │ 0.00 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1959.0 │ 2.00 │ 2778.80 │ 1733.70 │ 310.86 │ 481.30 │ 1919.70 │ 29.15 │ 141.70 │ 3.08 │ 5.10 │ 177.83 │ 2.34 │ 0.74 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1959.0 │ 3.00 │ 2775.49 │ 1751.80 │ 289.23 │ 491.26 │ 1916.40 │ 29.35 │ 140.50 │ 3.82 │ 5.30 │ 178.66 │ 2.74 │ 1.09 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1959.0 │ 4.00 │ 2785.20 │ 1753.70 │ 299.36 │ 484.05 │ 1931.30 │ 29.37 │ 140.00 │ 4.33 │ 5.60 │ 179.39 │ 0.27 │ 4.06 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1960.0 │ 1.00 │ 2847.70 │ 1770.50 │ 331.72 │ 462.20 │ 1955.50 │ 29.54 │ 139.60 │ 3.50 │ 5.20 │ 180.01 │ 2.31 │ 1.19 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1960.0 │ 2.00 │ 2834.39 │ 1792.90 │ 298.15 │ 460.40 │ 1966.10 │ 29.55 │ 140.20 │ 2.68 │ 5.20 │ 180.67 │ 0.14 │ 2.55 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1960.0 │ 3.00 │ 2839.02 │ 1785.80 │ 296.38 │ 474.68 │ 1967.80 │ 29.75 │ 140.90 │ 2.36 │ 5.60 │ 181.53 │ 2.70 │ -0.34 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1960.0 │ 4.00 │ 2802.62 │ 1788.20 │ 259.76 │ 476.43 │ 1966.60 │ 29.84 │ 141.10 │ 2.29 │ 6.30 │ 182.29 │ 1.21 │ 1.08 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1961.0 │ 1.00 │ 2819.26 │ 1787.70 │ 266.40 │ 475.85 │ 1984.50 │ 29.81 │ 142.10 │ 2.37 │ 6.80 │ 182.99 │ -0.40 │ 2.77 │ ├────────┼─────────┼─────────┼──────────┼─────────┼──────────┼─────────┼───────┼────────┼──────────┼───────┼────────┼───────┼─────────┤ │ 1961.0 │ 2.00 │ 2872.01 │ 1814.30 │ 286.25 │ 480.33 │ 2014.40 │ 29.92 │ 142.90 │ 2.29 │ 7.00 │ 183.69 │ 1.47 │ 0.81 │ └────────┴─────────┴─────────┴──────────┴─────────┴──────────┴─────────┴───────┴────────┴──────────┴───────┴────────┴───────┴─────────┘ 2022 Jun 01, 06:44 (🦋) /econometrics/ $ plot us_macro.unemp "},{"id":849,"href":"/OpenBBTerminal/terminal/econometrics/remove/","title":"Remove","parent":"Introduction to Econometrics","content":"usage: remove [-n NAME] [-h] Remove a dataset from the loaded dataset list\noptional arguments: -n NAME, --name NAME The name of the dataset you want to remove (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 24, 04:37 (✨) /econometrics/ $ remove thesis "},{"id":850,"href":"/OpenBBTerminal/terminal/econometrics/rename/","title":"Rename","parent":"Introduction to Econometrics","content":"usage: rename [-d {wp,nile,nile_2}] [-o OLDCOL] [-n NEWCOL] [-h] The column you want to rename from a dataset.\noptional arguments: -d {wp,nile,nile_2}, --dataset {wp,nile,nile_2} Dataset that will get a column renamed (default: None) -o OLDCOL, --oldcol OLDCOL Old column from dataset to be renamed (default: None) -n NEWCOL, --newcol NEWCOL New column from dataset to be renamed (default: None) -h, --help show this help message (default: False) Example:\n2022 May 31, 04:57 (🦋) /econometrics/ $ load wage_panel -a wp 2022 May 31, 04:58 (🦋) /econometrics/ $ rename wp -o year -n date 2022 May 31, 04:58 (🦋) /econometrics/ $ show wp Dataset wp | Showing 10 of 4360 rows ┏━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ date ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 13.00 │ 1980.00 │ 0.00 │ 1.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 1 │ 13.00 │ 1981.00 │ 0.00 │ 2.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 2 │ 13.00 │ 1982.00 │ 0.00 │ 3.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 3 │ 13.00 │ 1983.00 │ 0.00 │ 4.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 4 │ 13.00 │ 1984.00 │ 0.00 │ 5.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 5 │ 13.00 │ 1985.00 │ 0.00 │ 6.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 6 │ 13.00 │ 1986.00 │ 0.00 │ 7.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 7 │ 13.00 │ 1987.00 │ 0.00 │ 8.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 8 │ 17.00 │ 1980.00 │ 0.00 │ 4.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 9 │ 17.00 │ 1981.00 │ 0.00 │ 5.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └───┴───────┴─────────┴───────┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ "},{"id":851,"href":"/OpenBBTerminal/terminal/econometrics/root/","title":"Root","parent":"Introduction to Econometrics","content":"usage: root [-c {OPTIONS}] [-r {c,ct,ctt,nc}] [-k {c,ct}] [-h] [--export {csv,json,xlsx}] Show unit root tests of a column of a dataset.\nIn probability theory and statistics, a unit root is a feature of some stochastic processes (such as random walks) that can cause problems in statistical inference involving time series models. A linear stochastic process has a unit root if 1 is a root of the process\u0026rsquo;s characteristic equation. Such a process is non-stationary but does not always have a trend. [Source: Wikipedia]\noptional arguments: -c {OPTIONS}, --column {OPTIONS} The column and name of the database you want test unit root for (default: None) -r {c,ct,ctt,nc}, --fuller_reg {c,ct,ctt,nc} Type of regression. Can be ‘c’,’ct’,’ctt’,’nc’. c - Constant and t - trend order (default: c) -k {c,ct}, --kps_reg {c,ct} Type of regression. Can be ‘c’,’ct'. c - Constant and t - trend order (default: c) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Jun 01, 06:47 (🦋) /econometrics/ $ load fair 2022 Jun 01, 06:47 (🦋) /econometrics/ $ root fair.yrs_married Unitroot from dataset 'fair of 'yrs_married' ┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━┓ ┃ ┃ ADF ┃ KPSS ┃ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━┩ │ Test Statistic │ -8.08 │ 7.01 │ ├────────────────┼──────────┼───────┤ │ P-Value │ 0.00 │ 0.01 │ ├────────────────┼──────────┼───────┤ │ NLags │ 34.00 │ 26.00 │ ├────────────────┼──────────┼───────┤ │ Nobs │ 6331.00 │ 0.00 │ ├────────────────┼──────────┼───────┤ │ ICBest │ 42958.72 │ 0.00 │ └────────────────┴──────────┴───────┘ "},{"id":852,"href":"/OpenBBTerminal/terminal/econometrics/show/","title":"Show","parent":"Introduction to Econometrics","content":"usage: show [-n {OPTIONS}] [-l LIMIT] [-s SORTCOL [SORTCOL ...]] [-a] [-h] Show a portion of the, with --name defined, dataset or show a portion of all datasets when --name is not defined.\noptional arguments: -n {OPTIONS}, --name {OPTIONS} The name of the database you want to show data for (default: None) -l LIMIT, --limit LIMIT The amount of data you wish to show (default: 10) -s SORTCOL [SORTCOL ...], --sortcol SORTCOL [SORTCOL ...] Sort based on a column in the DataFrame (default: ) -a, --ascend Use this argument to sort in a descending order (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Mar 04, 05:57 (✨) /econometrics/ $ load longley -a ll 2022 Mar 04, 05:57 (✨) /econometrics/ $ index ll -i year -d 2022 Mar 04, 05:57 (✨) /econometrics/ $ show ll -s unemp Dataset ll | Showing 10 of 16 rows ┏━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ totemp ┃ gnpdefl ┃ gnp ┃ unemp ┃ armed ┃ pop ┃ ┡━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━┩ │ 1961.0 │ 69331.00 │ 115.70 │ 518173.00 │ 4806.00 │ 2572.00 │ 127852.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1958.0 │ 66513.00 │ 110.80 │ 444546.00 │ 4681.00 │ 2637.00 │ 121950.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1962.0 │ 70551.00 │ 116.90 │ 554894.00 │ 4007.00 │ 2827.00 │ 130081.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1960.0 │ 69564.00 │ 114.20 │ 502601.00 │ 3931.00 │ 2514.00 │ 125368.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1959.0 │ 68655.00 │ 112.60 │ 482704.00 │ 3813.00 │ 2552.00 │ 123366.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1949.0 │ 60171.00 │ 88.20 │ 258054.00 │ 3682.00 │ 1616.00 │ 109773.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1954.0 │ 63761.00 │ 100.00 │ 363112.00 │ 3578.00 │ 3350.00 │ 116219.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1950.0 │ 61187.00 │ 89.50 │ 284599.00 │ 3351.00 │ 1650.00 │ 110929.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1957.0 │ 68169.00 │ 108.40 │ 442769.00 │ 2936.00 │ 2798.00 │ 120445.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1955.0 │ 66019.00 │ 101.20 │ 397469.00 │ 2904.00 │ 3048.00 │ 117388.00 │ └────────┴──────────┴─────────┴───────────┴─────────┴─────────┴───────────┘ 2022 Mar 04, 05:57 (✨) /econometrics/ $ load wage_panel -a wp 2022 Mar 04, 05:58 (✨) /econometrics/ $ show Dataset ll | Showing 10 of 16 rows ┏━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ totemp ┃ gnpdefl ┃ gnp ┃ unemp ┃ armed ┃ pop ┃ ┡━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━┩ │ 1947.0 │ 60323.00 │ 83.00 │ 234289.00 │ 2356.00 │ 1590.00 │ 107608.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1948.0 │ 61122.00 │ 88.50 │ 259426.00 │ 2325.00 │ 1456.00 │ 108632.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1949.0 │ 60171.00 │ 88.20 │ 258054.00 │ 3682.00 │ 1616.00 │ 109773.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1950.0 │ 61187.00 │ 89.50 │ 284599.00 │ 3351.00 │ 1650.00 │ 110929.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1951.0 │ 63221.00 │ 96.20 │ 328975.00 │ 2099.00 │ 3099.00 │ 112075.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1952.0 │ 63639.00 │ 98.10 │ 346999.00 │ 1932.00 │ 3594.00 │ 113270.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1953.0 │ 64989.00 │ 99.00 │ 365385.00 │ 1870.00 │ 3547.00 │ 115094.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1954.0 │ 63761.00 │ 100.00 │ 363112.00 │ 3578.00 │ 3350.00 │ 116219.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1955.0 │ 66019.00 │ 101.20 │ 397469.00 │ 2904.00 │ 3048.00 │ 117388.00 │ ├────────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┤ │ 1956.0 │ 67857.00 │ 104.60 │ 419180.00 │ 2822.00 │ 2857.00 │ 118734.00 │ └────────┴──────────┴─────────┴───────────┴─────────┴─────────┴───────────┘ Dataset wp | Showing 10 of 4360 rows ┏━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 13.00 │ 1980.00 │ 0.00 │ 1.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 1 │ 13.00 │ 1981.00 │ 0.00 │ 2.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 2 │ 13.00 │ 1982.00 │ 0.00 │ 3.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 3 │ 13.00 │ 1983.00 │ 0.00 │ 4.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 4 │ 13.00 │ 1984.00 │ 0.00 │ 5.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 5 │ 13.00 │ 1985.00 │ 0.00 │ 6.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 6 │ 13.00 │ 1986.00 │ 0.00 │ 7.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 7 │ 13.00 │ 1987.00 │ 0.00 │ 8.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 8 │ 17.00 │ 1980.00 │ 0.00 │ 4.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 9 │ 17.00 │ 1981.00 │ 0.00 │ 5.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └───┴───────┴─────────┴───────┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ "},{"id":853,"href":"/OpenBBTerminal/terminal/econometrics/type/","title":"Type","parent":"Introduction to Econometrics","content":"usage: type -n {} --format {int,float,str,bool,category,date} [-h] Show the type of the columns of the dataset and/or change the type of the column\noptional arguments: -n {}, --name {} Provide dataset.column series to change type. (default: None) --format {int,float,str,bool,category,date} Set the format for the dataset.column defined. This can be: date, int, float, str, bool or category (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 28, 15:53 (✨) /econometrics/ $ load wage_panel -a wp 2022 Feb 28, 15:53 (✨) /econometrics/ $ type wp ┏━━━━━━━━━━━━┳━━━━━━━━━┓ ┃ column ┃ dtype ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━┩ │ nr │ int64 │ ├────────────┼─────────┤ │ year │ int64 │ ├────────────┼─────────┤ │ black │ int64 │ ├────────────┼─────────┤ │ exper │ int64 │ ├────────────┼─────────┤ │ hisp │ int64 │ ├────────────┼─────────┤ │ hours │ int64 │ ├────────────┼─────────┤ │ married │ int64 │ ├────────────┼─────────┤ │ educ │ int64 │ ├────────────┼─────────┤ │ union │ int64 │ ├────────────┼─────────┤ │ lwage │ float64 │ ├────────────┼─────────┤ │ expersq │ int64 │ ├────────────┼─────────┤ │ occupation │ int64 │ └────────────┴─────────┘ 2022 Feb 28, 15:54 (✨) /econometrics/ $ type wp.year --format category Update \u0026#39;wp.year\u0026#39; dataset with type \u0026#39;category\u0026#39; 2022 Feb 28, 15:55 (✨) /econometrics/ $ type wp ┏━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ column ┃ dtype ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━┩ │ nr │ int64 │ ├────────────┼──────────┤ │ year │ category │ ├────────────┼──────────┤ │ black │ int64 │ ├────────────┼──────────┤ │ exper │ int64 │ ├────────────┼──────────┤ │ hisp │ int64 │ ├────────────┼──────────┤ │ hours │ int64 │ ├────────────┼──────────┤ │ married │ int64 │ ├────────────┼──────────┤ │ educ │ int64 │ ├────────────┼──────────┤ │ union │ int64 │ ├────────────┼──────────┤ │ lwage │ float64 │ ├────────────┼──────────┤ │ expersq │ int64 │ ├────────────┼──────────┤ │ occupation │ int64 │ └────────────┴──────────┘ "},{"id":854,"href":"/OpenBBTerminal/terminal/economy/bigmac/","title":"Bigmac","parent":"Introduction to Economy","content":"usage: bigmac [--codes] [-c COUNTRIES] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] The notion that in the long run exchange rates should move towards the rate that would equalise the prices of an identical basket of goods and services (in this case, a burger) in any two countries. Burgernomics was never intended as a precise gauge of currency misalignment, merely a tool to make exchange-rate theory more digestible. Yet the Big Mac index has become a global standard, included in several economic textbooks and the subject of dozens of academic studies.\nBig Mac prices are from McDonald’s directly and from reporting around the world; exchange rates are from Thomson Reuters; GDP and population data used to calculate the euro area averages are from Eurostat and GDP per person data are from the IMF World Economic Outlook reports.\nThe Big Mac PPP exchange rate between two countries is obtained by dividing the price of a Big Mac in one country (in its currency) by the price of a Big Mac in another country (in its currency).\nSource of the data can be found here and a list of country codes for this feature can be found here.\noptional arguments: --codes Flag to show all country codes (default: False) -c COUNTRIES, --countries COUNTRIES Country codes to get data for. (default: USA) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) Sample usage, which gets the index for 5 different countries:\nbigmac -c USA,EUR,MEX,CAN,RUS "},{"id":855,"href":"/OpenBBTerminal/terminal/economy/edebt/","title":"Edebt","parent":"Introduction to Economy","content":"usage: edebt [-h] [--export EXPORT] [-l LIMIT] National debt statistics for various countries. [Source: Wikipedia]\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 20) For more information and examples, use 'about edebt' to access the related guide. Sample usage:\n2022 Aug 12, 16:51 (🦋) /economy/ $ edebt External Debt (USD) ┏━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ Country ┃ Debt ┃ Per Capita ┃ ┡━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 1 │ United States │ 30,400,000,000,000.0 │ 60,526.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 2 │ China │ 13,000,000,000,000.0 │ 8,248.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 3 │ United Kingdom │ 9,020,000,000,000.0 │ 127,000.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 4 │ France │ 7,320,000,000,000.0 │ 87,200.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 5 │ Germany │ 5,740,000,000,000.0 │ 69,000.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 6 │ Japan │ 4,770,000,000,000.0 │ 38,000.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 7 │ Italy │ 2,510,000,000,000.0 │ 42,300.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 8 │ Spain │ 2,260,000,000,000.0 │ 48,700.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 9 │ Canada │ 1,930,000,000,000.0 │ 52,300.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 10 │ Australia │ 1,830,000,000,000.0 │ 71,906.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 11 │ Switzerland │ 1,820,000,000,000.0 │ 213,100.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 12 │ Singapore │ 1,670,000,000,000.0 │ 231,000.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 13 │ Belgium │ 1,280,000,000,000.0 │ 112,000.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 14 │ Sweden │ 994,000,000,000.0 │ 94,500.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 15 │ Austria │ 757,000,000,000.0 │ 84,061.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 16 │ Norway │ 604,000,000,000.0 │ 117,000.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 17 │ India │ 614,900,000,000.0 │ 6,390.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 18 │ Brazil │ 556,000,000,000.0 │ 3,200.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 19 │ Netherlands │ 555,000,000,000.0 │ 26,540.0 │ ├────┼────────────────┼──────────────────────┼────────────┤ │ 20 │ Russia │ 489,000,000,000.0 │ 3,700.0 │ └────┴────────────────┴──────────────────────┴────────────┘ "},{"id":856,"href":"/OpenBBTerminal/terminal/economy/eval/","title":"Eval","parent":"Introduction to Economy","content":"usage: eval [-q QUERY [QUERY ...]] [-h] [--export EXPORT] Create custom data column from loaded datasets. Can be mathematical expressions supported by pandas.eval() function. Example. If I have loaded fred dgs2 dgs5 and I want to create a new column that is the difference between these two, I can create a new column by doing eval spread = dgs2 - dgs5.\nNote that for division, the / operator will cause issues, so one should do *N**-1 where N is the number you are dividing by\noptions: -q QUERY [QUERY ...], --query QUERY [QUERY ...] -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":857,"href":"/OpenBBTerminal/terminal/economy/events/","title":"Events","parent":"Introduction to Economy","content":"usage: events [-c COUNTRY] [-s START_DATE] [-e END_DATE] [-d SPEC_DATE] [-i {high,medium,low,all}] [--categories {employment,credit,balance,economic_activity,central_banks,bonds,inflation,confidence_index}] [-h] [--export EXPORT] [--raw] [-l LIMIT] [--source {Nasdaq,Investing}] Economic calendar. If no start or end dates, default is the current day. Note that using the Nasdaq flag is preferred due to issues with the investing.com api endpoints. optional arguments: -c COUNTRY, \u0026ndash;country COUNTRY Display calendar for specific country. Single countries should be separated with commas.(default: ) -s START_DATE, \u0026ndash;start START_DATE The start date of the data (format: YEAR-MONTH-DAY, i.e. 2010-12-31) (default: 2022-10-20) -e END_DATE, \u0026ndash;end END_DATE The start date of the data (format: YEAR-MONTH-DAY, i.e. 2010-12-31) (default: 2022-10-20) -d SPEC_DATE, \u0026ndash;date SPEC_DATE Get a specific date for events. Overrides start and end dates. (default: None) -i {high,medium,low,all}, \u0026ndash;importance {high,medium,low,all} [Investing only] Event importance classified as high, medium, low or all. (default: None) \u0026ndash;categories {employment,credit,balance,economic_activity,central_banks,bonds,inflation,confidence_index} [INVESTING source only] Event category. (default: None) -h, \u0026ndash;help show this help message (default: False) \u0026ndash;export EXPORT Export raw data into csv, json, xlsx (default: ) \u0026ndash;raw Flag to display raw data (default: False) -l LIMIT, \u0026ndash;limit LIMIT Number of entries to show in data. (default: 100) \u0026ndash;source {Nasdaq,Investing} Data source to select from (default: Nasdaq)\n Example: 2022 Oct 20, 15:19 (🦋) /economy/ $ events -c united_kingdom,spain -s 2022-10-20 -e 2022-11-05 -l 15\n Economic Calendar  ┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Time (GMT) ┃ Country ┃ Event ┃ actual ┃ consensus ┃ previous ┃ Date ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 04:40 │ Spain │ Spanish 3-Year Bonos Auction │ 2.663% │ - │ 1.416% │ 2022-10-20 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 04:40 │ Spain │ Spanish 7-Year Obligacion Auction │ 3.247% │ - │ 1.550% │ 2022-10-20 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 19:01 │ United Kingdom │ GfK Consumer Confidence │ - │ -52 │ -49 │ 2022-10-20 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 02:00 │ United Kingdom │ Core Retail Sales │ - │ -0.3% │ -1.6% │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 02:00 │ United Kingdom │ Core Retail Sales │ - │ -4.1% │ -5.0% │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 02:00 │ United Kingdom │ Public Sector Net Borrowing │ - │ 12.30B │ 11.06B │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 02:00 │ United Kingdom │ Public Sector Net Cash Requirement │ - │ - │ 5.321B │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 02:00 │ United Kingdom │ Retail Sales │ - │ -5.0% │ -5.4% │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 02:00 │ United Kingdom │ Retail Sales │ - │ -0.5% │ -1.6% │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 04:30 │ United Kingdom │ BoE Consumer Credit │ - │ - │ 1.077B │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 04:30 │ United Kingdom │ M4 Money Supply │ - │ - │ -0.2% │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 04:30 │ United Kingdom │ Mortgage Approvals │ - │ 62.00K │ 74.34K │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 04:30 │ United Kingdom │ Mortgage Lending │ - │ 4.90B │ 6.14B │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 15:30 │ United Kingdom │ CFTC GBP speculative net positions │ - │ - │ -39.2K │ 2022-10-21 │ ├────────────┼────────────────┼────────────────────────────────────┼────────┼───────────┼──────────┼────────────┤ │ 14:00 │ United Kingdom │ BoE MPC Member Mann │ - │ - │ - │ 2022-10-22 │ └────────────┴────────────────┴────────────────────────────────────┴────────┴───────────┴──────────┴────────────┘\n"},{"id":858,"href":"/OpenBBTerminal/terminal/economy/fred/","title":"Fred","parent":"Introduction to Economy","content":"usage: fred [-p PARAMETER [PARAMETER ...]] [-s START_DATE] [-e END_DATE] [-q QUERY [QUERY ...]] [-st] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] [--raw] [-l LIMIT] Query the FRED database and plot data based on the Series ID. [Source: FRED]\noptional arguments: -p PARAMETER [PARAMETER ...], --parameter PARAMETER [PARAMETER ...] Series ID of the Macro Economic data from FRED (default: None) -s START_DATE, --start_date START_DATE Starting date (YYYY-MM-DD) of data (default: None) -e END_DATE, --end_date END_DATE Ending date (YYYY-MM-DD) of data (default: None) -q QUERY [QUERY ...], --query QUERY [QUERY ...] Query the FRED database to obtain Series IDs given the query search term. (default: None) -st, --store Store the data to be used for plotting with the 'plot' command. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 5) Example:\n2022 Mar 15, 07:08 (✨) /economy/ $ fred -q treasuries Search results for treasuries ┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Series ID ┃ Title ┃ Description ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ T10Y2Y │ 10-Year Treasury Constant Maturity Minus 2-Year │ Starting with the update on June 21, 2019, the Treasury bond data used in calculating interest rate │ │ │ Treasury Constant Maturity │ spreads is obtained directly from the U.S. Treasury Department (https://www.treasury.gov/resource- │ │ │ │ center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yield). Series is calculated as │ │ │ │ the spread between 10-Year Treasury Constant Maturity (BC_10YEAR) and 2-Year Treasury Constant │ │ │ │ Maturity (BC_2YEAR). Both underlying series are published at the U.S. Treasury Department │ │ │ │ (https://www.treasury.gov/resource-center/data-chart-center/interest- │ │ │ │ rates/Pages/TextView.aspx?data=yield). │ ├───────────┼─────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ T10Y2YM │ 10-Year Treasury Constant Maturity Minus 2-Year │ Series is calculated as the spread between 10-Year Treasury Constant Maturity (BC_10YEARM) and │ │ │ Treasury Constant Maturity │ 2-Year Treasury Constant Maturity (BC_2YEARM). Starting with the update on June 21, 2019, the │ │ │ │ Treasury bond data used in calculating interest rate spreads is obtained directly from the U.S. │ │ │ │ Treasury Department (https://www.treasury.gov/resource-center/data-chart-center/interest- │ │ │ │ rates/Pages/TextView.aspx?data=yield). │ ├───────────┼─────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ DFII10 │ Market Yield on U.S. Treasury Securities at │ For further information regarding treasury constant maturity data, please refer to the Board of │ │ │ 10-Year Constant Maturity, Inflation-Indexed │ Governors ( http://www.federalreserve.gov/releases/h15/current/h15.pdf) and the Treasury │ │ │ │ (http://www.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/yieldmethod.aspx). │ ├───────────┼─────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ FII10 │ Market Yield on U.S. Treasury Securities at │ For further information regarding treasury constant maturity data, please refer to │ │ │ 10-Year Constant Maturity, Inflation-Indexed │ http://www.federalreserve.gov/releases/h15/current/h15.pdf and http://www.treasury.gov/resource- │ │ │ │ center/data-chart-center/interest-rates/Pages/yieldmethod.aspx. │ ├───────────┼─────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ WFII10 │ Market Yield on U.S. Treasury Securities at │ For further information regarding treasury constant maturity data, please refer to │ │ │ 10-Year Constant Maturity, Inflation-Indexed │ http://www.federalreserve.gov/releases/h15/current/h15.pdf and http://www.treasury.gov/resource- │ │ │ │ center/data-chart-center/interest-rates/Pages/yieldmethod.aspx. │ └───────────┴─────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────┘ 2022 Mar 15, 07:09 (✨) /economy/ $ fred T10Y2Y,DFII10 -s 2019-01-01 -e 2022-01-01 "},{"id":859,"href":"/OpenBBTerminal/terminal/economy/futures/","title":"Futures","parent":"Introduction to Economy","content":"usage: futures [-c {energy,metals,meats,grains,softs}] [-s {ticker,last,change,prevClose}] [-a] [-h] [--export {csv,json,xlsx}] Futures/Commodities frrom Wall St. Journal and FinViz.\noptional arguments: -c {energy,metals,meats,grains,softs}, --commodity {energy,metals,meats,grains,softs} Obtain commodity futures from FinViz (default: ) -s {ticker,last,change,prevClose}, --sortby {ticker,last,change,prevClose} -a, -ascend Flag to sort in ascending order (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Mar 15, 07:02 (✨) /economy/ $ futures Futures/Commodities [Source: Wall St. Journal] ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┓ ┃ ┃ Price ┃ Chg ┃ %Chg ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━┩ │ Crude Oil Futures │ 97.11 │ -5.90 │ -5.73 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Brent Crude Futures │ 101.01 │ -5.89 │ -5.51 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Gold Futures │ 1930.50 │ -30.30 │ -1.55 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Silver Futures │ 24.875 │ -0.423 │ -1.67 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Natural Gas Futures │ 4.601 │ -0.101 │ -2.15 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Unleaded Gasoline Futures │ 3.0197 │ -0.1492 │ -4.71 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Copper Futures │ 4.5005 │ -0.0225 │ -0.50 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Corn Futures │ 739.00 │ -9.25 │ -1.24 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Wheat Futures │ 1126.50 │ 30.25 │ 2.76 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Bloomberg Commodity Index │ 121.16 │ -2.64 │ -2.13 │ └───────────────────────────┴─────────┴─────────┴───────┘ 2022 Mar 15, 07:03 (✨) /economy/ $ futures energy Future Table [Source: FinViz] ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ prevClose ┃ last ┃ change (%) ┃ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━┩ │ Ethanol │ 2.16 │ 2.22 │ 2.78 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Gasoline RBOB │ 3.17 │ 3.02 │ -4.82 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Crude Oil Brent │ 106.90 │ 101.01 │ -5.51 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Natural Gas │ 4.66 │ 4.56 │ -2.10 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Heating Oil │ 3.28 │ 3.07 │ -6.44 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Crude Oil WTI │ 103.01 │ 97.14 │ -5.70 │ └─────────────────┴───────────┴────────┴────────────┘ 2022 Mar 15, 07:04 (✨) /economy/ $ futures metals Future Table [Source: FinViz] ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ prevClose ┃ last ┃ change (%) ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ Silver │ 25.30 │ 24.88 │ -1.65 │ ├───────────┼───────────┼─────────┼────────────┤ │ Platinum │ 1052.30 │ 1021.50 │ -2.93 │ ├───────────┼───────────┼─────────┼────────────┤ │ Palladium │ 2417.60 │ 2450.50 │ 1.36 │ ├───────────┼───────────┼─────────┼────────────┤ │ Copper │ 4.52 │ 4.49 │ -0.64 │ ├───────────┼───────────┼─────────┼────────────┤ │ Gold │ 1960.80 │ 1930.30 │ -1.56 │ └───────────┴───────────┴─────────┴────────────┘ 2022 Mar 15, 07:04 (✨) /economy/ $ futures meats Future Table [Source: FinViz] ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ prevClose ┃ last ┃ change (%) ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━┩ │ Lean Hogs │ 102.72 │ 102.17 │ -0.54 │ ├───────────────┼───────────┼────────┼────────────┤ │ Live Cattle │ 137.30 │ 140.35 │ 2.22 │ ├───────────────┼───────────┼────────┼────────────┤ │ Feeder Cattle │ 157.97 │ 162.43 │ 2.82 │ └───────────────┴───────────┴────────┴────────────┘ 2022 Mar 15, 07:04 (✨) /economy/ $ futures grains Future Table [Source: FinViz] ┏━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ prevClose ┃ last ┃ change (%) ┃ ┡━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ Wheat │ 1096.25 │ 1127.50 │ 2.85 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Soybeans │ 1670.50 │ 1646.00 │ -1.47 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Rough Rice │ 16.10 │ 16.14 │ 0.25 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Oats │ 662.00 │ 653.75 │ -1.25 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Soybean Meal │ 484.30 │ 476.40 │ -1.63 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Soybean oil │ 73.95 │ 72.90 │ -1.42 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Corn │ 748.25 │ 739.75 │ -1.14 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Canola │ 1139.10 │ 1113.40 │ -2.26 │ └──────────────┴───────────┴─────────┴────────────┘ 2022 Mar 15, 07:04 (✨) /economy/ $ futures softs Future Table [Source: FinViz] ┏━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ prevClose ┃ last ┃ change (%) ┃ ┡━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ Sugar │ 19.13 │ 18.74 │ -2.04 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Lumber │ 1159.20 │ 1104.00 │ -4.76 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Coffee │ 218.80 │ 215.05 │ -1.71 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Orange Juice │ 138.70 │ 142.00 │ 2.38 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Cotton │ 118.77 │ 118.06 │ -0.60 │ ├──────────────┼───────────┼─────────┼────────────┤ │ Cocoa │ 2611.00 │ 2556.00 │ -2.11 │ └──────────────┴───────────┴─────────┴────────────┘ "},{"id":860,"href":"/OpenBBTerminal/terminal/economy/index/","title":"Index","parent":"Introduction to Economy","content":"usage: index [-i INDICES [INDICES ...]] [--show] [--interval {1m,2m,5m,15m,30m,60m,90m,1h,1d,5d,1wk,1mo,3mo}] [-s START_DATE] [-e END_DATE] [-c COLUMN] [-q QUERY [QUERY ...]] [-r] [-h] [--export EXPORT] [--raw] [-l LIMIT] Obtain any set of indices and plot them together. With the \u0026ndash;show argument the major indices are shown. By using the arguments (for example \u0026lsquo;nasdaq\u0026rsquo; and \u0026lsquo;sp500\u0026rsquo;) you can collect data and plot the graphs together. [Source: Yahoo finance / FinanceDatabase]\noptional arguments: -i INDICES [INDICES ...], --indices INDICES [INDICES ...] One or multiple indices (default: None) --show Show the major indices, their arguments and ticker (default: False) --interval {1m,2m,5m,15m,30m,60m,90m,1h,1d,5d,1wk,1mo,3mo} The preferred interval data is shown at. This can be 1m, 2m, 5m, 15m, 30m, 60m, 90m, 1h, 1d, 5d, 1wk, 1mo or 3mo (default: 1d) -s START_DATE, --start START_DATE The start date of the data (format: YEAR-MONTH-DAY, i.e. 2010-12-31) (default: 2000-01-01) -e END_DATE, --end END_DATE The end date of the data (format: YEAR-MONTH-DAY, i.e. 2021-06-20) (default: None) -c COLUMN, --column COLUMN The column you wish to load in, by default this is the Adjusted Close column (default: Adj Close) -q QUERY [QUERY ...], --query QUERY [QUERY ...] Search for indices with given keyword (default: None) -r, --returns Flag to show compounded returns over interval. (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) Example:\n2022 Mar 15, 07:29 (✨) /economy/ $ index nasdaq,dowjones 2022 Mar 15, 07:29 (✨) /economy/ $ index vix 2022 Mar 15, 07:30 (✨) /economy/ $ index --show Major Indices ┏━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ Argument ┃ Name ┃ Ticker ┃ ┡━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ sp500 │ S\u0026amp;P 500 │ ^GSPC │ ├──────────┼──────────────────────────────┼───────────┤ │ nasdaq │ Nasdaq Composite │ ^IXIC │ ├──────────┼──────────────────────────────┼───────────┤ │ dowjones │ Dow Jones Industrial Average │ ^DJI │ ├──────────┼──────────────────────────────┼───────────┤ │ vix │ CBOE Volatility Index │ ^VIX │ ├──────────┼──────────────────────────────┼───────────┤ │ russel │ Russel 2000 Index │ ^RUT │ ├──────────┼──────────────────────────────┼───────────┤ │ tsx │ TSX Composite │ ^GSPTSE │ ├──────────┼──────────────────────────────┼───────────┤ │ nikkei │ Nikkei 255 Stock Average │ ^N225 │ ├──────────┼──────────────────────────────┼───────────┤ │ shanghai │ Shanghai Composite Index │ 000001.SS │ ├──────────┼──────────────────────────────┼───────────┤ │ ftse100 │ FTSE 100 Index ('footsie') │ ^FTSE │ ├──────────┼──────────────────────────────┼───────────┤ │ stoxx50 │ Euro STOXX 50 │ ^STOXX50E │ ├──────────┼──────────────────────────────┼───────────┤ │ dax │ DAX Performance Index │ ^GDAXI │ ├──────────┼──────────────────────────────┼───────────┤ │ cac40 │ CAC 40 Index │ ^FCHI │ └──────────┴──────────────────────────────┴───────────┘ "},{"id":861,"href":"/OpenBBTerminal/terminal/economy/macro/","title":"Macro","parent":"Introduction to Economy","content":"usage: macro [-p PARAMETERS [PARAMETERS ...]] [-c COUNTRIES [COUNTRIES ...]] [-sp] [-sc] [-s START_DATE] [-e END_DATE] [-cc CONVERT_CURRENCY] [-st] [-h] [--export {csv,json,xlsx}] [--raw] Get a broad selection of macro data from one or multiple countries. This includes Gross Domestic Product (RGDP \u0026amp; GDP) and the underlying components, Treasury Yields (Y10YD \u0026amp; M3YD), Employment figures (URATE, EMP, AC0I0 and EMRATIO), Government components (e.g. GBAL \u0026amp; GREV), Consumer and Producer Indices (CPI \u0026amp; PPI) and a variety of other indicators. [Source: EconDB]\noptional arguments: -p PARAMETERS [PARAMETERS ...], --parameters PARAMETERS [PARAMETERS ...] Abbreviation(s) of the Macro Economic data (default: ['CPI']) -c COUNTRIES [COUNTRIES ...], --countries COUNTRIES [COUNTRIES ...] The country or countries you wish to show data for (default: ['United_States']) -sp, --show_parameters Show all parameters and what they represent (default: False) -sc, --show_countries Show all countries and their currencies (default: False) -s START_DATE, --start_date START_DATE The start date of the data (format: YEAR-MONTH-DAY, i.e. 2010-12-31) (default: None) -e END_DATE, --end_date END_DATE The end date of the data (format: YEAR-MONTH-DAY, i.e. 2021-06-20) (default: None) -cc CONVERT_CURRENCY, --convert_currency CONVERT_CURRENCY Convert the currency of the chosen country to a specified currency. To find the currency symbols use the argument -sc (default: False) -st, --store Store the data to be used for plotting with the 'plot' command. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) --raw Flag to display raw data (default: False) Example:\n2022 Mar 15, 07:20 (✨) /economy/ $ macro -p CONF -c netherlands,germany,france -s 2005-01-01 -e 2022-01-01 2022 Mar 15, 07:22 (✨) /economy/ $ macro -p OILPROD -c canada,united_states -s 2004-01-01 2022 Mar 21, 07:33 (✨) /economy/ $ macro -p GDP,PRC,PUC -c argentina -cc USD 2022 Mar 21, 07:10 (✨) /economy/ $ macro -sp ┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Parameter ┃ Name ┃ Period ┃ Description ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ RGDP │ Real gross domestic product │ Quarterly │ Inflation-adjusted measure that reflects the value of all goods and services produced by an economy in a given year (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RPRC │ Real private consumption │ Quarterly │ All purchases made by consumers adjusted by inflation (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RPUC │ Real public consumption │ Quarterly │ All purchases made by the government adjusted by inflation (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RGFCF │ Real gross fixed capital formation │ Quarterly │ The acquisition of produced assets adjusted by inflation (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ REXP │ Real exports of goods and services │ Quarterly │ Transactions in goods and services from residents to non-residents adjusted for inflation (chain-linked series) │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RIMP │ Real imports of goods and services │ Quarterly │ Transactions in goods and services to residents from non-residents adjusted for inflation (chain-linked series) │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ GDP │ Gross domestic product │ Quarterly │ Measure that reflects the value of all goods and services produced by an economy in a given year (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ PRC │ Private consumption │ Quarterly │ All purchases made by consumers (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ PUC │ Public consumption │ Quarterly │ All purchases made by the government (chain-linked series) │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ GFCF │ Gross fixed capital formation │ Quarterly │ The acquisition of produced assets (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ EXP │ Exports of goods and services │ Quarterly │ Transactions in goods and services from residents to non-residents (chain-linked series) │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ IMP │ Imports of goods and services │ Quarterly │ Transactions in goods and services to residents from non-residents (chain-linked series) │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ CPI │ Consumer price index │ Monthly │ Purchasing power defined with base 2015 for Europe with varying bases for others. See: https://www.econdb.com/main-indicators │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ PPI │ Producer price index │ Monthly │ Change in selling prices with base 2015 for Europe with varying bases for others. See: https://www.econdb.com/main-indicators │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ CORE │ Core consumer price index │ Monthly │ Purchasing power excluding food and energy defined with base 2015 for Europe with varying bases for others. See: https://www.econdb.com/main-indicators │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ URATE │ Unemployment │ Monthly │ Monthly average % of the working-age population that is unemployed. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ EMP │ Employment │ Quarterly │ The employed population within a country (in thousands). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ ACOIO │ Active population │ Quarterly │ The active population, unemployed and employed, in thousands. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ EMRATIO │ Employment to working age population │ Quarterly │ Unlike the unemployment rate, the employment-to-population ratio includes unemployed people not looking for jobs. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RETA │ Retail trade │ Monthly │ Turnover of sales in wholesale and retail trade │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ CONF │ Consumer confidence index │ Monthly │ Measures how optimistic or pessimistic consumers are regarding their expected financial situation. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ IP │ Industrial production │ Monthly │ Measures monthly changes in the price-adjusted output of industry. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ CP │ Construction production │ Monthly │ Measures monthly changes in the price-adjusted output of construction. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ GBAL │ Government balance │ Quarterly │ The government balance (or EMU balance) is the overall difference between government revenues and spending. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ GREV │ General government total revenue │ Quarterly │ The total amount of revenues collected by governments is determined by past and current political decisions. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ GSPE │ General government total expenditure │ Quarterly │ Total expenditure consists of total expense and the net acquisition of non-financial assets. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ GDEBT │ Government debt │ Quarterly │ The financial liabilities of the government. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ CA │ Current account balance │ Monthly │ A record of a country's international transactions with the rest of the world │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ TB │ Trade balance │ Monthly │ The difference between the monetary value of a nation's exports and imports over a certain time period. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ NIIP │ Net international investment position │ Quarterly │ Measures the gap between a nation's stock of foreign assets and a foreigner's stock of that nation's assets │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ IIPA │ Net international investment position (Assets) │ Quarterly │ A nation's stock of foreign assets. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ IIPL │ Net international investment position (Liabilities) │ Quarterly │ A foreigner's stock of the nation's assets. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Y10YD │ Long term yield (10-year) │ Monthly │ The 10-year yield is used as a proxy for mortgage rates. It's also seen as a sign of investor sentiment about the country's economy. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ M3YD │ 3 month yield │ Monthly │ The yield received for investing in a government issued treasury security that has a maturity of 3 months │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ HOU │ House price index │ Monthly │ House price index defined with base 2015 for Europe with varying bases for others. See: https://www.econdb.com/main-indicators │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ OILPROD │ Oil production │ Monthly │ The amount of oil barrels produced per day in a month within a country. │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ POP │ Population │ Monthly │ The population of a country. This can be in thousands or, when relatively small, in actual units. │ └───────────┴─────────────────────────────────────────────────────┴───────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ 2022 Mar 15, 07:12 (✨) /economy/ $ macro -sc ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ Country ┃ Currency ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ Albania │ ALL │ ├────────────────────────┼──────────┤ │ Argentina │ ARS │ ├────────────────────────┼──────────┤ │ Australia │ AUD │ ├────────────────────────┼──────────┤ │ Austria │ EUR │ ├────────────────────────┼──────────┤ │ Azerbaijan │ AZN │ ├────────────────────────┼──────────┤ │ Bangladesh │ BDT │ ├────────────────────────┼──────────┤ │ Belarus │ BYR │ ├────────────────────────┼──────────┤ │ Belgium │ EUR │ ├────────────────────────┼──────────┤ │ Bhutan │ BTN │ ├────────────────────────┼──────────┤ │ Bosnia_and_Herzegovina │ BAM │ ├────────────────────────┼──────────┤ │ Botswana │ BWP │ ├────────────────────────┼──────────┤ │ Brazil │ BRL │ ├────────────────────────┼──────────┤ │ Bulgaria │ BGN │ ├────────────────────────┼──────────┤ │ Cambodia │ KHR │ ├────────────────────────┼──────────┤ │ Cameroon │ XAF │ ├────────────────────────┼──────────┤ │ Canada │ CAD │ ├────────────────────────┼──────────┤ │ Chile │ CLP │ ├────────────────────────┼──────────┤ │ China │ CNY │ ├────────────────────────┼──────────┤ │ Colombia │ COP │ ├────────────────────────┼──────────┤ │ Croatia │ HRK │ ├────────────────────────┼──────────┤ │ Cyprus │ EUR │ ├────────────────────────┼──────────┤ │ Czech_Republic │ CZK │ ├────────────────────────┼──────────┤ │ Denmark │ DKK │ ├────────────────────────┼──────────┤ │ Dominican_Republic │ DOP │ ├────────────────────────┼──────────┤ │ Egypt │ EGP │ ├────────────────────────┼──────────┤ │ Estonia │ EUR │ ├────────────────────────┼──────────┤ │ Finland │ EUR │ ├────────────────────────┼──────────┤ │ France │ EUR │ ├────────────────────────┼──────────┤ │ Germany │ EUR │ ├────────────────────────┼──────────┤ │ Greece │ EUR │ ├────────────────────────┼──────────┤ │ Honduras │ HNL │ ├────────────────────────┼──────────┤ │ Hong Kong │ HKD │ ├────────────────────────┼──────────┤ │ Hungary │ HUF │ ├────────────────────────┼──────────┤ │ India │ INR │ ├────────────────────────┼──────────┤ │ Indonesia │ IDR │ ├────────────────────────┼──────────┤ │ Iran │ IRR │ ├────────────────────────┼──────────┤ │ Ireland │ EUR │ ├────────────────────────┼──────────┤ │ Israel │ ILS │ ├────────────────────────┼──────────┤ │ Italy │ EUR │ ├────────────────────────┼──────────┤ │ Japan │ JPY │ ├────────────────────────┼──────────┤ │ Kazakhstan │ KZT │ ├────────────────────────┼──────────┤ │ Laos │ LAK │ ├────────────────────────┼──────────┤ │ Latvia │ EUR │ ├────────────────────────┼──────────┤ │ Lebanon │ LBP │ ├────────────────────────┼──────────┤ │ Lithuania │ EUR │ ├────────────────────────┼──────────┤ │ Luxembourg │ EUR │ ├────────────────────────┼──────────┤ │ Macedonia │ MKD │ ├────────────────────────┼──────────┤ │ Malaysia │ MYR │ ├────────────────────────┼──────────┤ │ Malta │ EUR │ ├────────────────────────┼──────────┤ │ Mexico │ MXN │ ├────────────────────────┼──────────┤ │ Mongolia │ MNT │ ├────────────────────────┼──────────┤ │ Netherlands │ EUR │ ├────────────────────────┼──────────┤ │ New_Zealand │ NZD │ ├────────────────────────┼──────────┤ │ Nigeria │ NGN │ ├────────────────────────┼──────────┤ │ Norway │ NOK │ ├────────────────────────┼──────────┤ │ Oman │ OMR │ ├────────────────────────┼──────────┤ │ Pakistan │ PKR │ ├────────────────────────┼──────────┤ │ Panama │ PAB │ ├────────────────────────┼──────────┤ │ Peru │ PEN │ ├────────────────────────┼──────────┤ │ Philippines │ PHP │ ├────────────────────────┼──────────┤ │ Poland │ PLN │ ├────────────────────────┼──────────┤ │ Portugal │ EUR │ ├────────────────────────┼──────────┤ │ Qatar │ QAR │ ├────────────────────────┼──────────┤ │ Romania │ RON │ ├────────────────────────┼──────────┤ │ Russia │ RUB │ ├────────────────────────┼──────────┤ │ Saudi_Arabia │ SAR │ ├────────────────────────┼──────────┤ │ Serbia │ RSD │ ├────────────────────────┼──────────┤ │ Singapore │ SGD │ ├────────────────────────┼──────────┤ │ Slovakia │ EUR │ ├────────────────────────┼──────────┤ │ Slovenia │ EUR │ ├────────────────────────┼──────────┤ │ South_Africa │ ZAR │ ├────────────────────────┼──────────┤ │ South_Korea │ KRW │ ├────────────────────────┼──────────┤ │ Spain │ EUR │ ├────────────────────────┼──────────┤ │ Sweden │ SEK │ ├────────────────────────┼──────────┤ │ Switzerland │ CHF │ ├────────────────────────┼──────────┤ │ Taiwan │ TWD │ ├────────────────────────┼──────────┤ │ Thailand │ THB │ ├────────────────────────┼──────────┤ │ Tunisia │ TND │ ├────────────────────────┼──────────┤ │ Turkey │ TRY │ ├────────────────────────┼──────────┤ │ Ukraine │ UAH │ ├────────────────────────┼──────────┤ │ United_Arab_Emirates │ AED │ ├────────────────────────┼──────────┤ │ United_States │ USD │ ├────────────────────────┼──────────┤ │ Uzbekistan │ UZS │ ├────────────────────────┼──────────┤ │ Venezuela │ VEF │ ├────────────────────────┼──────────┤ │ Vietnam │ VND │ └────────────────────────┴──────────┘ "},{"id":862,"href":"/OpenBBTerminal/terminal/economy/map/","title":"Map","parent":"Introduction to Economy","content":"usage: map [-p {1d,1w,1m,3m,6m,1y}] [-t {sp500,world,full,etf}] [-h] Performance index stocks map categorized by sectors and industries. Size represents market cap. Opens web-browser. [Source: Finviz]\noptional arguments: -p {1d,1w,1m,3m,6m,1y}, --period {1d,1w,1m,3m,6m,1y} Performance period. (default: 1d) -t {sp500,world,full,etf}, --type {sp500,world,full,etf} Map filter type. (default: sp500) -h, --help show this help message (default: False) "},{"id":863,"href":"/OpenBBTerminal/terminal/economy/options/","title":"Options","parent":"Introduction to Economy","content":"usage: options [-h] [--export {csv,json,xlsx}] [--raw] [-l LIMIT] Show the available options for the \u0026lsquo;plot\u0026rsquo; command. To save data, use the command -st on \u0026lsquo;macro\u0026rsquo;, \u0026lsquo;fred\u0026rsquo;, \u0026lsquo;index\u0026rsquo; and \u0026lsquo;treasury\u0026rsquo;. You can use these commands to plot data on a multi-axes graoh. Furthermore, this command also allows you to see and export all stored data.\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) Example:\n2022 Mar 16, 13:20 (✨) /economy/ $ treasury -m 3y 5y -st 2022 Mar 16, 13:20 (✨) /economy/ $ index vix sp500 dowjones -st 2022 Mar 16, 13:20 (✨) /economy/ $ macro -p RGDP GDP -c Netherlands Germany -st 2022 Mar 16, 13:21 (✨) /economy/ $ fred T10Y2y T10Y2YM -st 2022 Mar 16, 13:20 (✨) /economy/ $ options Options available to plot ┏━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Command ┃ Options ┃ ┡━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ treasury │ Nominal_3-year, Nominal_5-year │ ├──────────┼──────────────────────────────────────────────────────────────┤ │ index │ vix, sp500, dowjones │ ├──────────┼──────────────────────────────────────────────────────────────┤ │ macro │ Netherlands_RGDP, Netherlands_GDP, Germany_RGDP, Germany_GDP │ ├──────────┼──────────────────────────────────────────────────────────────┤ │ fred │ T10Y2y, T10Y2YM │ └──────────┴──────────────────────────────────────────────────────────────┘ "},{"id":864,"href":"/OpenBBTerminal/terminal/economy/overview/","title":"Overview","parent":"Introduction to Economy","content":"usage: overview [-t {indices,usbonds,glbonds,currencies}] [-h] [--export {csv,json,xlsx}] Provide a market overview of a variety of options. This can be a general overview, indices, bonds and currencies. [Source: Wall St. Journal]\noptional arguments: -t {indices,usbonds,glbonds,currencies}, --type {indices,usbonds,glbonds,currencies} Obtain either US indices, US Bonds, Global Bonds or Currencies (default: ) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Mar 15, 06:59 (✨) /economy/ $ overview Market Overview ┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┓ ┃ ┃ Price ┃ Chg ┃ %Chg ┃ ┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━┩ │ DJIA │ 32945.24 │ 1.05 │ 0.00 │ ├───────────────────┼──────────┼─────────┼───────┤ │ S\u0026amp;P 500 │ 4173.11 │ -31.20 │ -0.74 │ ├───────────────────┼──────────┼─────────┼───────┤ │ Nasdaq Composite │ 12581.22 │ -262.59 │ -2.04 │ ├───────────────────┼──────────┼─────────┼───────┤ │ Japan: Nikkei 225 │ 25346.48 │ 38.63 │ 0.15 │ ├───────────────────┼──────────┼─────────┼───────┤ │ UK: FTSE 100 │ 7117.67 │ -75.80 │ -1.05 │ ├───────────────────┼──────────┼─────────┼───────┤ │ Crude Oil Futures │ 97.12 │ -5.89 │ -5.72 │ ├───────────────────┼──────────┼─────────┼───────┤ │ Gold Futures │ 1932.30 │ -28.50 │ -1.45 │ ├───────────────────┼──────────┼─────────┼───────┤ │ Yen │ 118.01 │ -0.18 │ -0.15 │ ├───────────────────┼──────────┼─────────┼───────┤ │ Euro │ 1.0996 │ 0.0055 │ 0.50 │ └───────────────────┴──────────┴─────────┴───────┘ 2022 Mar 15, 07:00 (✨) /economy/ $ overview indices US Indices ┏━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┓ ┃ ┃ Price ┃ Chg ┃ %Chg ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━┩ │ DJIA │ 32945.24 │ 1.05 │ 0.00 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ Nasdaq Composite │ 12581.22 │ -262.59 │ -2.04 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ S\u0026amp;P 500 │ 4173.11 │ -31.20 │ -0.74 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ DJ Total Stock Market │ 42169.18 │ -412.17 │ -0.97 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ Russell 2000 │ 1941.72 │ -37.95 │ -1.92 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ NYSE Composite │ 15694.35 │ -59.35 │ -0.38 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ Barron's 400 │ 968.62 │ -6.27 │ -0.64 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ CBOE Volatility │ 32.57 │ 0.80 │ 2.52 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ DJIA Futures │ 32786 │ -52 │ -0.16 │ ├───────────────────────┼──────────┼─────────┼───────┤ │ S\u0026amp;P 500 Futures │ 4160.25 │ -3.25 │ -0.08 │ └───────────────────────┴──────────┴─────────┴───────┘ 2022 Mar 15, 07:00 (✨) /economy/ $ overview usbonds ov US Bonds ┏━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ ┃ Rate (%) ┃ Yld (%) ┃ Yld Chg (%) ┃ ┡━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━┩ │ 30-Year Bond │ 2.25 │ 2.462 │ -0.016 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 10-Year Note │ 1.88 │ 2.119 │ -0.025 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 7-Year Note │ 1.88 │ 2.131 │ -0.023 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 5-Year Note │ 1.88 │ 2.070 │ -0.023 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 3-Year Note │ 1.75 │ 2.020 │ -0.035 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 2-Year Note │ 1.50 │ 1.835 │ -0.032 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 1-Year Bill │ 0.00 │ 1.202 │ -0.003 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 6-Month Bill │ 0.00 │ 0.830 │ 0.087 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 3-Month Bill │ 0.00 │ 0.442 │ -0.019 │ ├──────────────┼──────────┼─────────┼─────────────┤ │ 1-Month Bill │ 0.00 │ 0.200 │ -0.007 │ └──────────────┴──────────┴─────────┴─────────────┘ 2022 Mar 15, 07:00 (✨) /economy/ $ overview glbonds Global Bonds ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ ┃ Rate (%) ┃ Yld (%) ┃ Yld Chg (%) ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━┩ │ U.S. 10 Year Treasury Note │ 1.875 │ 2.118 │ -0.026 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ Germany 10 Year Government Bond │ 0.000 │ 0.359 │ -0.009 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ U.K. 10 Year Gilt │ 4.250 │ 1.591 │ -0.006 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ Japan 10 Year Government Bond │ 0.100 │ 0.210 │ 0.015 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ Australia 10 Year Government Bond │ 1.000 │ 2.505 │ 0.061 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ China 10 Year Government Bond │ 2.890 │ 2.846 │ 0.055 │ └───────────────────────────────────┴──────────┴─────────┴─────────────┘ 2022 Mar 15, 07:00 (✨) /economy/ $ overview currencies Currencies ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┓ ┃ ┃ Last ┃ Chng ┃ %Chng ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━┩ │ Euro (EUR/USD) │ 1.0996 │ 0.0055 │ 0.50 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ Japanese Yen (USD/JPY) │ 118.03 │ -0.16 │ -0.14 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ U.K. Pound (GBP/USD) │ 1.3036 │ 0.0035 │ 0.27 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ Swiss Franc (USD/CHF) │ 0.9388 │ 0.0002 │ 0.02 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ Chinese Yuan (USD/CNY) │ 6.3740 │ 0.0086 │ 0.14 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ Canadian $ (USD/CAD) │ 1.2846 │ 0.0020 │ 0.16 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ Mexican Peso (USD/MXN) │ 20.8658 │ -0.0495 │ -0.24 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ Bitcoin (BTC/USD) │ 38691 │ -46 │ -0.12 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ WSJ Dollar Index │ 91.76 │ -0.21 │ -0.23 │ ├────────────────────────┼─────────┼─────────┼───────┤ │ U.S. Dollar Index │ 98.78 │ -0.22 │ -0.22 │ └────────────────────────┴─────────┴─────────┴───────┘ "},{"id":865,"href":"/OpenBBTerminal/terminal/economy/performance/","title":"Performance","parent":"Introduction to Economy","content":"usage: performance [-g GROUP [GROUP ...]] [-s {Name,Week,Month,3Month,6Month,1Year,YTD,Recom,AvgVolume,RelVolume,Change,Volume}] [-a] [-h] [--export {csv,json,xlsx}] View group (sectors, industry or country) performance data. [Source: Finviz]\noptional arguments: -g GROUP [GROUP ...], --group GROUP [GROUP ...] Data group (sector, industry or country) (default: sector) -s {Name,Week,Month,3Month,6Month,1Year,YTD,Recom,AvgVolume,RelVolume,Change,Volume}, --sortby {Name,Week,Month,3Month,6Month,1Year,YTD,Recom,AvgVolume,RelVolume,Change,Volume} Column to sort by (default: Name) -a, -ascend Flag to sort in ascending order (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 05:25 (✨) /economy/ $ performance Group Performance Data ┌────────────────────────┬───────┬───────┬────────┬────────┬───────┬───────┬───────┬────────────────┬───────────┬────────┬─────────────┐ │ Name │ Week │ Month │ 3Month │ 6Month │ 1Year │ YTD │ Recom │ AvgVolume [1M] │ RelVolume │ Change │ Volume [1M] │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Utilities │ -0.02 │ -0.04 │ -0.01 │ -0.03 │ 0.04 │ -0.07 │ 2.33 │ 148.49 │ 1.10 │ -0.01 │ 163.32 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Technology │ -0.02 │ -0.07 │ -0.13 │ -0.05 │ 0.01 │ -0.13 │ 1.98 │ 1590.00 │ 0.91 │ -0.00 │ 1440.00 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Real Estate │ -0.02 │ -0.08 │ -0.08 │ -0.04 │ 0.07 │ -0.12 │ 2.22 │ 331.13 │ 1.13 │ -0.01 │ 373.51 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Industrials │ -0.01 │ -0.07 │ -0.09 │ -0.06 │ 0.06 │ -0.08 │ 2.26 │ 627.31 │ 0.97 │ -0.00 │ 611.51 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Healthcare │ -0.02 │ -0.04 │ -0.10 │ -0.11 │ -0.05 │ -0.10 │ 2.05 │ 1600.00 │ 0.79 │ -0.01 │ 1260.00 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Financial │ -0.01 │ -0.03 │ -0.02 │ 0.01 │ 0.14 │ 0.01 │ 2.20 │ 969.06 │ 1.05 │ -0.01 │ 1020.00 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Energy │ -0.01 │ 0.07 │ 0.16 │ 0.34 │ 0.43 │ 0.20 │ 2.24 │ 675.13 │ 1.09 │ -0.02 │ 738.17 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Consumer Defensive │ -0.01 │ -0.03 │ -0.00 │ -0.01 │ 0.04 │ -0.03 │ 2.23 │ 443.50 │ 0.97 │ -0.00 │ 432.15 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Consumer Cyclical │ -0.00 │ -0.08 │ -0.15 │ -0.07 │ -0.12 │ -0.10 │ 2.05 │ 1250.00 │ 0.83 │ 0.00 │ 1040.00 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Communication Services │ -0.01 │ -0.07 │ -0.16 │ -0.14 │ -0.05 │ -0.10 │ 1.88 │ 731.80 │ 0.94 │ 0.00 │ 690.29 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Basic Materials │ 0.02 │ -0.03 │ -0.01 │ -0.03 │ 0.06 │ -0.02 │ 2.21 │ 461.26 │ 1.11 │ -0.01 │ 514.01 │ └────────────────────────┴───────┴───────┴────────┴────────┴───────┴───────┴───────┴────────────────┴───────────┴────────┴─────────────┘ "},{"id":866,"href":"/OpenBBTerminal/terminal/economy/plot/","title":"Plot","parent":"Introduction to Economy","content":"usage: plot [-y1 YAXIS1 [YAXIS1 ...]] [-y2 YAXIS2 [YAXIS2 ...]] [-h] [--export {csv,json,xlsx}] [--raw] [-l LIMIT] This command can plot any data on two y-axes obtained from the macro, fred, index and treasury commands. To be able to use this data, just load the available series from the previous commands. For example \u0026lsquo;macro -p GDP -c Germany Netherlands\u0026rsquo; will store the data for usage in this command. Therefore, it allows you to plot different time series in one graph. The example above could be plotted the following way: \u0026lsquo;plot \u0026ndash;y1 Germany_GDP \u0026ndash;y2 Netherlands_GDP\u0026rsquo; or \u0026lsquo;plot \u0026ndash;y1 Germany_GDP Netherlands_GDP\u0026rsquo;\noptional arguments: -y1 YAXIS1 [YAXIS1 ...], --yaxis1 YAXIS1 [YAXIS1 ...] Select the data you wish to plot on the first y-axis. You can select multiple variables here. (default: ) -y2 YAXIS2 [YAXIS2 ...], --yaxis2 YAXIS2 [YAXIS2 ...] Select the data you wish to plot on the second y-axis. You can select multiple variables here. (default: ) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) Comparing Unemployment Rates and Consumer Confidence of France and Italy\n2022 Mar 15, 07:43 (✨) /economy/ $ macro -p URATE CONF -c france,italy -s 2005-01-01 -st 2022 Mar 15, 07:45 (✨) /economy/ $ options Options available to plot ┏━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Command ┃ Options ┃ ┡━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ macro │ France_URATE, France_CONF, Italy_URATE, Italy_CONF │ └─────────┴────────────────────────────────────────────────────┘ 2022 Mar 15, 07:43 (✨) /economy/ $ plot -y1 France_URATE,Italy_URATE -y2 France_CONF,Italy_CONF Comparing U.S. treasury rate movements to the S\u0026amp;P 500\n2022 Mar 15, 07:39 (✨) /economy/ $ treasury -m 1y 10y -s 2005-01-01 -st 2022 Mar 15, 07:40 (✨) /economy/ $ index sp500 -s 2005-01-01 -st 2022 Mar 15, 07:40 (✨) /economy/ $ plot -y1 sp500 -y2 Nominal_1-year,Nominal_10-year "},{"id":867,"href":"/OpenBBTerminal/terminal/economy/rtps/","title":"Rtps","parent":"Introduction to Economy","content":"usage: rtps [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Real-time and historical sector performances calculated from S\u0026amp;P500 incumbents. [Source: Alpha Vantage]\noptional arguments: --raw Only output raw data (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":868,"href":"/OpenBBTerminal/terminal/economy/spectrum/","title":"Spectrum","parent":"Introduction to Economy","content":"usage: spectrum [-g GROUP [GROUP ...]] [-h] [--export {png,jpg,pdf,svg}] View group (sectors, industry or country) spectrum data. [Source: Finviz]\noptional arguments: -g GROUP [GROUP ...], --group GROUP [GROUP ...] Data group (sector, industry or country) (default: sector) -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export figure into png, jpg, pdf, svg (default: ) Example:\n"},{"id":869,"href":"/OpenBBTerminal/terminal/economy/spread/","title":"Spread","parent":"Introduction to Economy","content":"usage: spread [-g {G7,PIIGS,EZ,AMERICAS,EUROPE,ME,APAC,AFRICA}] [-c COUNTRIES [COUNTRIES ...]] [-m MATURITY] [--change CHANGE] [-h] [--export EXPORT] [--raw] Generate bond spread matrix.\n -g {G7,PIIGS,EZ,AMERICAS,EUROPE,ME,APAC,AFRICA}, --group {G7,PIIGS,EZ,AMERICAS,EUROPE,ME,APAC,AFRICA} Show bond spread matrix for group of countries. (default: G7) -c COUNTRIES [COUNTRIES ...], --countries COUNTRIES [COUNTRIES ...] Show bond spread matrix for explicit list of countries. (default: None) -m MATURITY, --maturity MATURITY Specify maturity to compare rates. (default: 10Y) --change CHANGE Get matrix of 1 day change in rates or spreads. (default: False) --color {rgb,binary,openbb} Set color palette on heatmap. (default: openbb) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --raw Flag to display raw data (default: False) "},{"id":870,"href":"/OpenBBTerminal/terminal/economy/treasury/","title":"Treasury","parent":"Introduction to Economy","content":"usage: treasury [-m MATURITY [MATURITY ...]] [-sm] [--freq {annually,monthly,weekly,daily}] [-t {nominal,inflation,average,secondary} [{nominal,inflation,average,secondary} ...]] [-s START_DATE] [-e END_DATE] [-st] [-h] [--export {csv,json,xlsx}] [--raw] [-l LIMIT] Obtain any set of U.S. treasuries and plot them together. These can be a range of maturities for nominal, inflation-adjusted (on long term average of inflation adjusted) and secondary markets over a lengthy period. Note: 3-month and 10-year treasury yields for other countries are available via the command \u0026lsquo;macro\u0026rsquo; and parameter \u0026lsquo;M3YD\u0026rsquo; and \u0026lsquo;Y10YD\u0026rsquo;. [Source: EconDB / FED]\noptional arguments: -m MATURITY [MATURITY ...], --maturity MATURITY [MATURITY ...] The preferred maturity which is dependent on the type of the treasury (default: [\u0026#39;1y\u0026#39;]) -sm, --show_maturities Show the maturities available for every instrument. (default: False) --freq {annually,monthly,weekly,daily} The frequency, this can be annually, monthly, weekly or daily (default: monthly) -t {nominal,inflation,average,secondary} [{nominal,inflation,average,secondary} ...], --type {nominal,inflation,average,secondary} [{nominal,inflation,average,secondary} ...] Whether to select nominal, inflation indexed, average inflation indexed or secondary market treasury rates (default: [\u0026#39;nominal\u0026#39;]) -s START_DATE, --start_date START_DATE The start date of the data (format: YEAR-MONTH-DAY, i.e. 2010-12-31) (default: 1934-01-31) -e END_DATE, --end_date END_DATE The end date of the data (format: YEAR-DAY-MONTH, i.e. 2021-06-02) (default: 2022-03-15) -st, --store Store the data to be used for plotting with the \u0026#39;plot\u0026#39; command. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) Example:\n2022 Mar 15, 07:33 (✨) /economy/ $ treasury -sm Maturity options per instrument ┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Instrument ┃ Maturities ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ nominal │ 1m, 3m, 6m, 1y, 2y, 3y, 5y, 7y, 10y, 20y, 30y │ ├────────────┼───────────────────────────────────────────────┤ │ inflation │ 5y, 7y, 10y, 20y, 30y │ ├────────────┼───────────────────────────────────────────────┤ │ average │ Defined by function │ ├────────────┼───────────────────────────────────────────────┤ │ secondary │ 4w, 3m, 6m, 1y │ └────────────┴───────────────────────────────────────────────┘ 2022 Mar 15, 07:33 (✨) /economy/ $ treasury -m 1y,3y,5y,10y,30y 2022 Mar 15, 07:35 (✨) /economy/ $ treasury -m 5y -t nominal,inflation,average -s 2005-01-01 "},{"id":871,"href":"/OpenBBTerminal/terminal/economy/valuation/","title":"Valuation","parent":"Introduction to Economy","content":"usage: valuation [-g GROUP [GROUP ...]] [-s {Name,MarketCap,P/E,FwdP/E,PEG,P/S,P/B,P/C,P/FCF,EPSpast5Y,EPSnext5Y,Salespast5Y,Change,Volume}] [-a] [-h] [--export {csv,json,xlsx}] View group (sectors, industry or country) valuation data. [Source: Finviz]\noptional arguments: -g GROUP [GROUP ...], --group GROUP [GROUP ...] Data group (sector, industry or country) (default: sector) -s {Name,MarketCap,P/E,FwdP/E,PEG,P/S,P/B,P/C,P/FCF,EPSpast5Y,EPSnext5Y,Salespast5Y,Change,Volume}, --sortby {Name,MarketCap,P/E,FwdP/E,PEG,P/S,P/B,P/C,P/FCF,EPSpast5Y,EPSnext5Y,Salespast5Y,Change,Volume} Column to sort by (default: Name) -a, -ascend Flag to sort in ascending order (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 05:44 (✨) /economy/ $ valuation Group Valuation Data ┌────────────────────────┬───────────┬───────┬────────┬──────┬──────┬──────┬───────┬───────┬───────────┬───────────┬─────────────┬────────┬─────────────┐ │ Name │ MarketCap │ P/E │ FwdP/E │ PEG │ P/S │ P/B │ P/C │ P/FCF │ EPSpast5Y │ EPSnext5Y │ Salespast5Y │ Change │ Volume [1M] │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Utilities │ 1358.78 │ 23.92 │ 3.08 │ 3.42 │ 1.89 │ 1.34 │ 27.21 │ 58.67 │ -0.01 │ 0.07 │ 0.02 │ -0.01 │ 163.32 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Technology │ 14633.47 │ 30.64 │ 23.23 │ 1.70 │ 5.35 │ 4.49 │ 16.77 │ 37.99 │ 0.23 │ 0.18 │ 0.14 │ -0.00 │ 1440.00 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Real Estate │ 1750.54 │ 28.61 │ 32.15 │ 2.85 │ 5.67 │ 1.84 │ 21.76 │ 60.06 │ 0.07 │ 0.10 │ 0.09 │ -0.01 │ 373.51 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Industrials │ 4912.21 │ 23.16 │ 16.15 │ 1.62 │ 2.00 │ 4.09 │ 12.84 │ 32.04 │ 0.06 │ 0.14 │ 0.04 │ -0.00 │ 611.51 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Healthcare │ 7545.19 │ 23.89 │ 15.09 │ 2.04 │ 2.17 │ 3.58 │ 12.48 │ 32.62 │ 0.12 │ 0.12 │ 0.12 │ -0.01 │ 1260.00 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Financial │ 10421.24 │ 13.02 │ 13.90 │ 1.01 │ 2.95 │ 0.01 │ 0.59 │ 16.51 │ 0.08 │ 0.13 │ 0.07 │ -0.01 │ 1020.00 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Energy │ 3287.09 │ 13.48 │ 9.81 │ 1.18 │ 0.89 │ 1.26 │ 9.53 │ 18.20 │ -0.08 │ 0.11 │ 0.00 │ -0.02 │ 738.17 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Consumer Defensive │ 3764.29 │ 25.71 │ 22.11 │ 2.72 │ 1.41 │ 4.15 │ 19.93 │ 48.20 │ 0.07 │ 0.09 │ 0.04 │ -0.00 │ 432.15 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Consumer Cyclical │ 7765.73 │ 25.61 │ 15.36 │ 1.14 │ 1.16 │ 3.68 │ 10.47 │ 43.62 │ 0.25 │ 0.22 │ 0.19 │ 0.00 │ 1040.00 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Communication Services │ 7657.15 │ 21.10 │ 14.48 │ 1.01 │ 3.55 │ 3.49 │ 14.31 │ 32.95 │ 0.18 │ 0.21 │ 0.19 │ 0.00 │ 690.29 │ ├────────────────────────┼───────────┼───────┼────────┼──────┼──────┼──────┼───────┼───────┼───────────┼───────────┼─────────────┼────────┼─────────────┤ │ Basic Materials │ 2168.52 │ 11.80 │ 11.73 │ 0.81 │ 1.63 │ 2.23 │ 12.24 │ 16.83 │ 0.26 │ 0.15 │ 0.08 │ -0.01 │ 514.01 │ └────────────────────────┴───────────┴───────┴────────┴──────┴──────┴──────┴───────┴───────┴───────────┴───────────┴─────────────┴────────┴─────────────┘ "},{"id":872,"href":"/OpenBBTerminal/terminal/economy/ycrv/","title":"Ycrv","parent":"Introduction to Economy","content":"usage: ycrv [-s {FRED,investpy}] [-c COUNTRY [COUNTRY ...]] [-d DATE] [-h] [--export EXPORT] [--raw] Generate country yield curve. The yield curve shows the bond rates at different maturities.\noptional arguments: -s {FRED,investpy}, --source {FRED,investpy} Source for the data. If not supplied, the most recent entry from investpy will be used. (default: investpy) -c COUNTRY [COUNTRY ...], --country COUNTRY [COUNTRY ...] Display yield curve for specific country. (default: united states) -d DATE, --date DATE Date to get data from FRED. If not supplied, the most recent entry will be used. (default: None) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --raw Flag to display raw data (default: False) "},{"id":873,"href":"/OpenBBTerminal/terminal/economy/yield/","title":"Yield","parent":"Introduction to Economy","content":"usage: yield [-d DATE] [-h] Generate the US yield curve for a specific date. The yield curve shows the bond rates at different maturities.\noptional arguments: -d DATE, --date DATE Date to get the curve for. If not supplied, the most recent entry from FRED will be used. (default: None) -h, --help show this help message (default: False) "},{"id":874,"href":"/OpenBBTerminal/terminal/etf/candle/","title":"Candle","parent":"Introduction to ETFs","content":"usage: candle [-p] [--sort {AdjClose,Open,Close,High,Low,Volume,Returns,LogRet}] [-d] [--raw] [-n NUM] [-t] [--ma MOV_AVG] [-h] [--export {csv,json,xlsx}] Shows historic data for an ETF\noptional arguments: -p, --plotly Flag to show interactive plotly chart. (default: True) --sort {AdjClose,Open,Close,High,Low,Volume,Returns,LogRet} Choose a column to sort by (default: ) -d, --descending Sort selected column descending (default: True) --raw Shows raw data instead of chart (default: False) -n NUM, --num NUM Number to show if raw selected (default: 20) -t, --trend Flag to add high and low trends to candle. (default: False) --ma MOV_AVG Add moving average in number of days to plot and separate by a comma. Value for ma (moving average) keyword needs to be greater than 1. (default: ) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":875,"href":"/OpenBBTerminal/terminal/etf/compare/","title":"Compare","parent":"Introduction to ETFs","content":"usage: compare [-e NAMES] [-h] [--export {csv,json,xlsx}] Compare selected ETFs [Source: StockAnalysis]\noptional arguments: -e NAMES, --etfs NAMES Symbols to compare (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 04:24 (✨) /etf/ $ compare VOO,SPY ETF Comparisons ┌────────────────┬────────────┬─────────────┐ │ │ VOO │ SPY │ ├────────────────┼────────────┼─────────────┤ │ Assets │ $283.52B │ $407.71B │ ├────────────────┼────────────┼─────────────┤ │ NAV │ $413.03 │ $449.25 │ ├────────────────┼────────────┼─────────────┤ │ Expense Ratio │ 0.03% │ 0.09% │ ├────────────────┼────────────┼─────────────┤ │ PE Ratio │ 24.90 │ 22.23 │ ├────────────────┼────────────┼─────────────┤ │ Shares Out │ 686.44M │ 907.53M │ ├────────────────┼────────────┼─────────────┤ │ Dividend (ttm) │ $5.44 │ $5.72 │ ├────────────────┼────────────┼─────────────┤ │ Dividend Yield │ 1.35% │ 1.30% │ ├────────────────┼────────────┼─────────────┤ │ Volume │ 10,167,584 │ 123,006,262 │ ├────────────────┼────────────┼─────────────┤ │ Open │ 404.43 │ 439.92 │ ├────────────────┼────────────┼─────────────┤ │ Previous Close │ 404.94 │ 440.46 │ ├────────────────┼────────────┼─────────────┤ │ 52-Week Low │ 341.92 │ 371.88 │ ├────────────────┼────────────┼─────────────┤ │ 52-Week High │ 341.92 │ 371.88 │ ├────────────────┼────────────┼─────────────┤ │ Beta │ 0.99 │ 0.99 │ ├────────────────┼────────────┼─────────────┤ │ Holdings │ 510 │ 507 │ └────────────────┴────────────┴─────────────┘ "},{"id":876,"href":"/OpenBBTerminal/terminal/etf/disc/","title":"Disc","parent":"Introduction to ETFs","content":"Available commands:    Active     Decliners     Gainers     "},{"id":877,"href":"/OpenBBTerminal/terminal/etf/disc/active/","title":"Active","parent":"Disc","content":"usage: active [-l LIMIT] [-h] [--export {csv,json,xlsx}] Displays most active ETF/Mutual funds from wsj.com/market-data\noptional arguments: -l LIMIT, --limit LIMIT Limit of ETFs to display -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example:\n2022 Feb 15, 04:26 (✨) /etf/disc/ $ active ETF Movers ┌───────────────────────────────────────────────────┬────────┬───────┬───────┬────────┐ │ │ Price │ Chg │ %Chg │ Vol │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ ProShares Ultra VIX Short-Term Futures ETF │ 16.93 │ 0.27 │ 1.62 │ 149.8M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ SPDR S\u0026amp;P 500 ETF Trust │ 439.02 │ -1.44 │ -0.33 │ 123.0M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ ProShares UltraPro Short QQQ │ 41.52 │ -0.10 │ -0.24 │ 110.2M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ iPath Series B S\u0026amp;P 500 VIX Short-Term Futures ETN │ 23.31 │ 0.07 │ 0.30 │ 103.6M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ ProShares UltraPro QQQ │ 53.43 │ 0.15 │ 0.28 │ 95.1M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ Invesco QQQ Trust Series I │ 347.49 │ 0.43 │ 0.12 │ 80.3M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ Financial Select Sector SPDR ETF │ 39.66 │ -0.45 │ -1.12 │ 71.5M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ Direxion Daily Semiconductor Bear 3X Shares │ 4.73 │ 0.00 │ 0.00 │ 64.3M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ iShares MSCI Emerging Markets ETF │ 48.38 │ -0.34 │ -0.70 │ 59.4M │ ├───────────────────────────────────────────────────┼────────┼───────┼───────┼────────┤ │ ProShares UltraPro Short S\u0026amp;P 500 │ 15.27 │ 0.15 │ 0.99 │ 58.8M │ └───────────────────────────────────────────────────┴────────┴───────┴───────┴────────┘ "},{"id":878,"href":"/OpenBBTerminal/terminal/etf/disc/decliners/","title":"Decliners","parent":"Disc","content":"usage: decliners [-l LIMIT] [-h] [--export {csv,json,xlsx}] Displays top ETF/Mutual fund decliners from wsj.com/market-data\noptional arguments: -l LIMIT, --limit LIMIT Limit of ETFs to display -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example:\n2022 Feb 15, 04:26 (✨) /etf/disc/ $ decliners ETF Movers ┌──────────────────────────────────────────────────────────┬────────┬────────┬───────┬────────┐ │ │ Price │ Chg │ %Chg │ Vol │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ ProShares UltraShort Bloomberg Natural Gas │ 33.36 │ -3.26 │ -8.90 │ 2.0M │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ Breakwave Dry Bulk Shipping ETF │ 22.78 │ -1.95 │ -7.89 │ 308.0K │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ MicroSectors Oil \u0026amp; Gas Exp. \u0026amp; Prod. 3x Leveraged ETN │ 37.56 │ -3.19 │ -7.83 │ 84.0K │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ MicroSectors U.S. Big Oil Index 3X Leveraged ETN │ 316.94 │ -24.99 │ -7.31 │ 471.9K │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ Direxion Daily S\u0026amp;P Biotech Bull 3X Shares │ 18.14 │ -0.96 │ -5.03 │ 17.8M │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ Direxion Daily S\u0026amp;P Oil \u0026amp; Gas Exp. \u0026amp; Prod. Bull 2X Shares │ 115.64 │ -5.98 │ -4.92 │ 2.5M │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ Global X Cannabis ETF │ 5.53 │ -0.28 │ -4.91 │ 187.2K │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ ETFMG Alternative Harvest ETF │ 10.33 │ -0.53 │ -4.88 │ 1.1M │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ MicroSectors Gold Miners 3X Inverse Leveraged ETN │ 14.81 │ -0.72 │ -4.64 │ 89.9K │ ├──────────────────────────────────────────────────────────┼────────┼────────┼───────┼────────┤ │ Direxion Daily Energy Bull 2X Shares │ 44.98 │ -2.12 │ -4.50 │ 8.8M │ └──────────────────────────────────────────────────────────┴────────┴────────┴───────┴────────┘ "},{"id":879,"href":"/OpenBBTerminal/terminal/etf/disc/gainers/","title":"Gainers","parent":"Disc","content":"usage: gainers [-l LIMIT] [-h] [--export {csv,json,xlsx}] Displays top ETF/Mutual fund gainers from wsj.com/market-data\noptional arguments: -l LIMIT, --limit LIMIT Limit of ETFs to display -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example:\n2022 Feb 15, 04:25 (✨) /etf/disc/ $ gainers ETF Movers ┌─────────────────────────────────────────────────────────────┬───────┬──────┬──────┬────────┐ │ │ Price │ Chg │ %Chg │ Vol │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ MicroSectors U.S. Big Banks Index -3X Inverse Leveraged ETN │ 8.69 │ 0.69 │ 8.69 │ 97.8K │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ ProShares Ultra Bloomberg Natural Gas │ 31.92 │ 2.54 │ 8.65 │ 4.1M │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ MicroSectors U.S. Big Oil Index -3X Inverse Leveraged ETN │ 3.37 │ 0.23 │ 7.32 │ 6.1M │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ MicroSectors Gold Miners 3X Leveraged ETN │ 11.51 │ 0.71 │ 6.57 │ 811.8K │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ Direxion Daily S\u0026amp;P Oil \u0026amp; Gas Exp. \u0026amp; Prod. Bear 2X Shares │ 3.76 │ 0.19 │ 5.32 │ 13.9M │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ Direxion Daily S\u0026amp;P Biotech Bear 3X Shares │ 39.64 │ 1.89 │ 5.01 │ 5.5M │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ Direxion Daily Russia Bull 2X Shares │ 20.84 │ 0.95 │ 4.78 │ 277.8K │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ Direxion Daily Energy Bear 2X Shares │ 6.98 │ 0.31 │ 4.65 │ 3.4M │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ United States Natural Gas Fund L.P. │ 14.55 │ 0.60 │ 4.30 │ 7.8M │ ├─────────────────────────────────────────────────────────────┼───────┼──────┼──────┼────────┤ │ ProShares UltraShort Oil \u0026amp; Gas │ 29.74 │ 1.17 │ 4.10 │ 122.5K │ └─────────────────────────────────────────────────────────────┴───────┴──────┴──────┴────────┘ "},{"id":880,"href":"/OpenBBTerminal/terminal/etf/holdings/","title":"Holdings","parent":"Introduction to ETFs","content":"usage: holdings [-l LIMIT] [-h] [--export {csv,json,xlsx}] See what is inside an ETF holdings.\noptional arguments: -l LIMIT, --limit LIMIT Number of holdings to get (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Oct 27, 08:21 (🦋) /etf/ $ holdings ETF Holdings ┏━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ Name ┃ % Of Etf ┃ Shares ┃ ┡━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━┩ │ AAPL │ Apple Inc. │ 7.06% │ 169672324 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ MSFT │ Microsoft Corporation │ 5.74% │ 83765412 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ AMZN │ Amazon.com, Inc. │ 3.28% │ 99548898 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ GOOGL │ Alphabet, Inc. │ 1.92% │ 67345732 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ TSLA │ Tesla, Inc. │ 1.82% │ 29915424 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ GOOG │ Alphabet, Inc. │ 1.73% │ 60222505 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ BRK.B │ Berkshire Hathaway Inc. │ 1.60% │ 20277701 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ UNH │ UnitedHealth Group Incorporated │ 1.55% │ 10505922 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ JNJ │ Johnson \u0026amp; Johnson │ 1.38% │ 29530061 │ ├───────┼─────────────────────────────────┼──────────┼───────────┤ │ XOM │ Exxon Mobil Corporation │ 1.35% │ 46810082 │ └───────┴─────────────────────────────────┴──────────┴───────────┘ "},{"id":881,"href":"/OpenBBTerminal/terminal/etf/load/","title":"Load","parent":"Introduction to ETFs","content":"usage: load [-t TICKER] [-s START] [-e END] [-l LIMIT] [-h] Load ETF ticker to perform analysis on.\noptional arguments: -t TICKER, --ticker TICKER ETF ticker (default: None) -s START, --start START The starting date (format YYYY-MM-DD) of the ETF (default: 2021-06-20) -e END, --end END The ending date (format YYYY-MM-DD) of the ETF (default: 2022-06-21) -l LIMIT, --limit LIMIT Limit of holdings to display (default: 5) -h, --help show this help message (default: False) Example:\n2022 Jun 21, 09:18 (🦋) /etf/ $ load voo Top company holdings found: AAPL, MSFT, AMZN, GOOGL, TSLA 2022 Jun 21, 09:18 (🦋) /etf/ $ ? ╭─────────────────────────────────────────────────────────────────────────────────────────────────────── ETF ────────────────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ ln lookup by name [FinanceDatabase / StockAnalysis] │ │ ld lookup by description [FinanceDatabase] │ │ load load ETF data [Yahoo Finance] │ │ │ │ Symbol: VOO │ │ Major holdings: AAPL, MSFT, AMZN, GOOGL, TSLA │ │ │ │ \u0026gt; ca comparison analysis, get similar, historical, correlation, financials │ │ \u0026gt; disc discover ETFs, gainers/decliners/active │ │ \u0026gt; scr screener ETFs, overview/performance, using preset filters │ │ │ │ overview get overview [StockAnalysis] │ │ holdings top company holdings [StockAnalysis] │ │ weights sector weights allocation [Yahoo Finance] │ │ summary summary description of the ETF [Yahoo Finance] │ │ news latest news of the company [News API] │ │ candle view a candle chart for ETF │ │ │ │ pir create (multiple) passive investor excel report(s) [PassiveInvestor] │ │ compare compare multiple different ETFs [StockAnalysis] │ │ │ │ \u0026gt; ta technical analysis, ema, macd, rsi, adx, bbands, obv │ │ \u0026gt; pred prediction techniques, regression, arima, rnn, lstm │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal v1.3.0 (https://openbb.co) ─╯ "},{"id":882,"href":"/OpenBBTerminal/terminal/etf/news/","title":"News","parent":"Introduction to ETFs","content":"usage: news [-l LIMIT] [-d N_START_DATE] [-o] [-s SOURCES [SOURCES ...]] [-h] Prints latest news about ETF, including date, title and web link. [Source: News API]\noptional arguments: -l LIMIT, --limit LIMIT Limit of latest news being printed. -d N_START_DATE, --date N_START_DATE The starting date (format YYYY-MM-DD) to search articles from -o, --oldest Show oldest articles first -s SOURCES [SOURCES ...], --sources SOURCES [SOURCES ...] Show news only from the sources specified (e.g bbc yahoo.com) -h, --help show this help message Sample output:\n18 news articles for iShares+Russell+2000+ETF were found since 2022-01-11 2022-01-18 18:38:25 First National Bank of South Miami Buys iShares Commodities Select Strategy ETF, Walmart Inc, ... https://finance.yahoo.com/news/first-national-bank-south-miami-183825873.html 2022-01-18 16:53:20 Stock Market Sinks As Techs, Financials Slide; 3 Energy Stocks Top Buy Points https://www.investors.com/market-trend/stock-market-today/stock-market-slides-as-yields-keep-rising-3-stocks-in-energy-sector-top-buy-points/ 2022-01-18 14:00:00 Vistra: Turning A Threat Into An Opportunity https://seekingalpha.com/article/4480026-vistra-turning-a-threat-into-an-opportunity 2022-01-18 11:17:44 Dow Jones Futures Fall, Techs Dive As Treasury Yield Hits 2-Year High; Apple, Qualcomm Near Buy Points https://www.investors.com/market-trend/stock-market-today/dow-jones-futures-fall-techs-dive-treasury-yield-hits-2-year-high-apple-qualcomm-stock-near-buy-points/ 2022-01-17 16:30:54 IYW: Technology Dashboard For January https://seekingalpha.com/article/4479986-iyw-technology-dashboard-for-january "},{"id":883,"href":"/OpenBBTerminal/terminal/etf/overview/","title":"Overview","parent":"Introduction to ETFs","content":"usage: overview [-h] [--export {csv,json,xlsx}] Get overview data for selected etf\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 04:14 (✨) /etf/ $ overview ETF Overview Information ┌────────────────┬────────────┐ │ │ VOO │ ├────────────────┼────────────┤ │ Assets │ $283.52B │ ├────────────────┼────────────┤ │ NAV │ $413.03 │ ├────────────────┼────────────┤ │ Expense Ratio │ 0.03% │ ├────────────────┼────────────┤ │ PE Ratio │ 24.90 │ ├────────────────┼────────────┤ │ Shares Out │ 686.44M │ ├────────────────┼────────────┤ │ Dividend (ttm) │ $5.44 │ ├────────────────┼────────────┤ │ Dividend Yield │ 1.35% │ ├────────────────┼────────────┤ │ Volume │ 10,167,584 │ ├────────────────┼────────────┤ │ Open │ 404.43 │ ├────────────────┼────────────┤ │ Previous Close │ 404.94 │ ├────────────────┼────────────┤ │ 52-Week Low │ 341.92 │ ├────────────────┼────────────┤ │ 52-Week High │ 341.92 │ ├────────────────┼────────────┤ │ Beta │ 0.99 │ ├────────────────┼────────────┤ │ Holdings │ 510 │ └────────────────┴────────────┘ "},{"id":884,"href":"/OpenBBTerminal/terminal/etf/pir/","title":"Pir","parent":"Introduction to ETFs","content":"usage: pir [-e NAMES] [--filename FILENAME] [--folder FOLDER] [-h] Creates a passive investor ETF spreadsheet report [Source: ThePassiveInvestor]\noptional arguments: -e NAMES, --etfs NAMES Symbols to create a report for (e.g. ARKW,ARKQ) (default: VOO) --filename FILENAME Filename of the excel ETF report (default: ETF_report_20220215_102908) --folder FOLDER Folder where the excel ETF report will be saved -h, --help show this help message (default: False) "},{"id":885,"href":"/OpenBBTerminal/terminal/etf/scr/","title":"Scr","parent":"Introduction to ETFs","content":"    Sbc     Screen     Set     View     "},{"id":886,"href":"/OpenBBTerminal/terminal/etf/scr/sbc/","title":"Sbc","parent":"Scr","content":"usage: sbc [-c CATEGORY [CATEGORY ...]] [-l LIMIT] [-h] [--export {csv,json,xlsx}] Search by category [Source: FinanceDatabase/StockAnalysis.com]\noptional arguments: -c CATEGORY [CATEGORY ...], --category CATEGORY [CATEGORY ...] Category to look for (default: None) -l LIMIT, --limit LIMIT Limit of ETFs to display (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 04:30 (✨) /etf/scr/ $ sbc Communications ETFs by Category and Total Assets ┌──────┬───────────────────────────────────────────────────────┬───────────────────────────────────┬────────────────┬──────────────────┐ │ │ Name │ Family │ Category │ Total Assets [M] │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────┼──────────────────┤ │ XLC │ Communication Services Select Sector SPDR Fund │ SPDR State Street Global Advisors │ Communications │ 13497.92 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────┼──────────────────┤ │ VOX │ Vanguard Communication Services Index Fund ETF Shares │ Vanguard │ Communications │ 3716.34 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────┼──────────────────┤ │ FIVG │ Defiance 5G Next Gen Connectivity ETF │ Defiance ETFs │ Communications │ 1210.04 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────┼──────────────────┤ │ FCOM │ Fidelity MSCI Communication Services Index ETF │ Fidelity Investments │ Communications │ 723.48 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────┼──────────────────┤ │ IYZ │ iShares U.S. Telecommunications ETF │ iShares │ Communications │ 409.20 │ └──────┴───────────────────────────────────────────────────────┴───────────────────────────────────┴────────────────┴──────────────────┘ "},{"id":887,"href":"/OpenBBTerminal/terminal/etf/scr/screen/","title":"Screen","parent":"Scr","content":"usage: screen [-l LIMIT] [-s {Assets,NAV,Expense,PE,SharesOut,Div,DivYield,Volume,Open,PrevClose,YrLow,YrHigh,Beta,N_Hold}] [-a] [-h] [--export {csv,json,xlsx}] Screens ETFs by the metrics listed below.\noptional arguments: -l LIMIT, --limit LIMIT Limit of etfs to display (default: 10) -s {Assets,NAV,Expense,PE,SharesOut,Div,DivYield,Volume,Open,PrevClose,YrLow,YrHigh,Beta,N_Hold}, --sort {Assets,NAV,Expense,PE,SharesOut,Div,DivYield,Volume,Open,PrevClose,YrLow,YrHigh,Beta,N_Hold} Sort by given column. Default: Assets (default: Assets) -a, --ascend Flag to sort in ascending order (lowest on top) (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 04:31 (✨) /etf/scr/ $ screen -s Assets Display Screener Output ┌──────┬───────────┬────────┬─────────┬───────┬───────────┬──────┬──────────┬──────────────┬────────┬───────────┬────────┬────────┬──────┬──────────┐ │ │ Assets │ NAV │ Expense │ PE │ SharesOut │ Div │ DivYield │ Volume │ Open │ PrevClose │ YrLow │ YrHigh │ Beta │ N_Hold │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ SPY │ 407710.00 │ 449.25 │ 0.09 │ 22.23 │ 907.53 │ 5.72 │ 1.30 │ 105187361.00 │ 439.92 │ 440.46 │ 371.88 │ 371.88 │ 0.99 │ 507.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ IVV │ 327710.00 │ 451.23 │ 0.03 │ 33.47 │ 726.25 │ 5.73 │ 1.30 │ 3866837.00 │ 441.88 │ 442.35 │ 373.26 │ 373.26 │ 0.99 │ 509.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ VTI │ 286290.00 │ 227.20 │ 0.03 │ 23.80 │ 1260.00 │ 2.93 │ 1.32 │ 3848114.00 │ 222.52 │ 222.94 │ 194.11 │ 194.11 │ 1.03 │ 4143.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ VOO │ 283520.00 │ 413.03 │ 0.03 │ 24.90 │ 686.44 │ 5.44 │ 1.34 │ 9337255.00 │ 404.43 │ 404.94 │ 341.92 │ 341.92 │ 0.99 │ 510.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ QQQ │ 187220.00 │ 358.29 │ 0.20 │ 30.43 │ 522.55 │ 1.70 │ 0.49 │ 74397251.00 │ 346.49 │ 347.06 │ 297.45 │ 297.45 │ 1.03 │ 103.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ VEA │ 109380.00 │ 49.74 │ 0.05 │ 16.00 │ 2200.00 │ 1.61 │ 3.31 │ 17018993.00 │ 48.99 │ 49.15 │ 47.59 │ 47.59 │ 0.87 │ 4129.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ IEFA │ 103720.00 │ 72.44 │ 0.07 │ 20.91 │ 1430.00 │ 2.48 │ 3.41 │ 12167913.00 │ 72.49 │ 73.51 │ 67.59 │ 67.59 │ 0.84 │ 3090.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ VTV │ 100240.00 │ 146.87 │ 0.04 │ 17.30 │ 682.50 │ 3.16 │ 2.19 │ 1777273.00 │ 145.39 │ 145.48 │ 123.58 │ 123.58 │ 0.97 │ 358.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ AGG │ 87560.00 │ 109.45 │ 0.04 │ │ 800.00 │ 1.99 │ 1.82 │ 3577712.00 │ 109.66 │ 110.10 │ 109.34 │ 109.34 │ 0.01 │ 10040.00 │ ├──────┼───────────┼────────┼─────────┼───────┼───────────┼──────┼──────────┼──────────────┼────────┼───────────┼────────┼────────┼──────┼──────────┤ │ VWO │ 83260.00 │ 50.16 │ 0.10 │ 13.30 │ 1660.00 │ 1.30 │ 2.63 │ 8230461.00 │ 49.39 │ 49.61 │ 47.49 │ 47.49 │ 0.79 │ 4440.00 │ └──────┴───────────┴────────┴─────────┴───────┴───────────┴──────┴──────────┴──────────────┴────────┴───────────┴────────┴────────┴──────┴──────────┘ "},{"id":888,"href":"/OpenBBTerminal/terminal/etf/scr/set/","title":"Set","parent":"Scr","content":"usage: set [-p {etf_config}] [-h] Set the preset to use.\noptional arguments: -p {etf_config}, --preset {etf_config} Filter presets -h, --help show this help message "},{"id":889,"href":"/OpenBBTerminal/terminal/etf/scr/view/","title":"View","parent":"Scr","content":"usage: view [-p {etf_config}] [-h] View available presets under presets folder. Use the etf_confg.ini file to create custom presets.\noptional arguments: -p {etf_config}, --preset {etf_config} View specific custom preset -h, --help show this help message "},{"id":890,"href":"/OpenBBTerminal/terminal/etf/search/","title":"Search","parent":"Introduction to ETFs","content":"usage: ln -n NAME [NAME ...] [-s {sa,fd}] [-d DESCRIPTION [DESCRIPTION ...]] [-l LIMIT] [-h] [--export {csv,json,xlsx}] Search for an ETF by name or description. Using either FinanceDatabase or Stockanalysis.com as the source for the name. And only FinanceDatabase for the description.\noptional arguments: -n NAME [NAME ...], --name NAME [NAME ...] Name to look for ETFs (default: None) -d DESCRIPTION [DESCRIPTION ...], --description DESCRIPTION [DESCRIPTION ...] Name to look for ETFs (default: None) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 5) --source {sa,fd} Data source to select from (default: None) Sample output:\n2022 Jan 18, 23:49 (✨) /etf/ $ search -n energy -l 10 ╒══════╤═══════════════════════════════════════════════════════╤═══════════════════════════════════╤════════════════════════════╤════════════════════╕ │ │ Name │ Family │ Category │ Total Assets [M] │ ╞══════╪═══════════════════════════════════════════════════════╪═══════════════════════════════════╪════════════════════════════╪════════════════════╡ │ XLE │ Energy Select Sector SPDR Fund │ SPDR State Street Global Advisors │ Equity Energy │ 23081.07 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ VDE │ Vanguard Energy Index Fund ETF Shares │ Vanguard │ Equity Energy │ 5883.56 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ ICLN │ iShares Global Clean Energy ETF │ iShares │ Miscellaneous Sector │ 5811.92 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ QCLN │ First Trust NASDAQ Clean Edge Green Energy Index Fund │ First Trust │ Miscellaneous Sector │ 2680.65 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ PBW │ Invesco WilderHill Clean Energy ETF │ Invesco │ Miscellaneous Sector │ 2200.06 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ EMLP │ First Trust North American Energy Infrastructure Fund │ First Trust │ Energy Limited Partnership │ 1858.28 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ IXC │ iShares Global Energy ETF │ iShares │ Equity Energy │ 1312.18 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ ACES │ ALPS Clean Energy ETF │ ALPS │ Equity Energy │ 970.75 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ FENY │ Fidelity MSCI Energy Index ETF │ Fidelity Investments │ Equity Energy │ 889.72 │ ├──────┼───────────────────────────────────────────────────────┼───────────────────────────────────┼────────────────────────────┼────────────────────┤ │ MLPX │ Global X MLP \u0026amp; Energy Infrastructure ETF │ Global X Funds │ Energy Limited Partnership │ 714.83 │ ╘══════╧═══════════════════════════════════════════════════════╧═══════════════════════════════════╧════════════════════════════╧════════════════════╛ 2022 Jan 18, 23:52 (✨) /etf/ $ search -d 3X -l 10 ╒══════╤═════════════════════════════════════════════════════╤══════════════╤═══════════════════════════╤════════════════════╕ │ │ Name │ Family │ Category │ Total Assets [M] │ ╞══════╪═════════════════════════════════════════════════════╪══════════════╪═══════════════════════════╪════════════════════╡ │ TQQQ │ ProShares UltraPro QQQ │ ProShares │ Trading--Leveraged Equity │ 11266.33 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ UPRO │ ProShares UltraPro S\u0026amp;P500 │ ProShares │ Trading--Leveraged Equity │ 2007.68 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ SQQQ │ ProShares UltraPro Short QQQ │ ProShares │ Trading--Inverse Equity │ 1515.03 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ UDOW │ ProShares UltraPro Dow30 │ ProShares │ Trading--Leveraged Equity │ 878.03 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ SPXU │ ProShares UltraPro Short S\u0026amp;P500 │ ProShares │ Trading--Inverse Equity │ 510.83 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ NRGU │ MicroSectors U.S. Big Oil Index 3X Leveraged ETNs │ Microsectors │ │ 448.66 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ URTY │ ProShares UltraPro Russell2000 │ ProShares │ Trading--Leveraged Equity │ 444.82 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ SDOW │ ProShares UltraPro Short Dow30 │ ProShares │ Trading--Inverse Equity │ 380.26 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ SRTY │ ProShares UltraPro Short Russell2000 │ ProShares │ Trading--Inverse Equity │ 110.51 │ ├──────┼─────────────────────────────────────────────────────┼──────────────┼───────────────────────────┼────────────────────┤ │ BNKU │ MicroSectors U.S. Big Banks Index 3X Leveraged ETNs │ Microsectors │ Trading--Leveraged Equity │ 86.87 │ ╘══════╧═════════════════════════════════════════════════════╧══════════════╧═══════════════════════════╧════════════════════╛ "},{"id":891,"href":"/OpenBBTerminal/terminal/etf/summary/","title":"Summary","parent":"Introduction to ETFs","content":"usage: summary [-h] Displays the summary description of the loaded ETF.\noptional arguments: -h, --help show this help message (default: False) Sample output:\nThe fund generally invests at least 80% of its assets in the component securities of its underlying index and in investments that have economic characteristics that are substantially identical to the component securities of its underlying index (i.e., depositary receipts representing securities of the underlying index) and may invest up to 20% of its assets in certain futures, options and swap contracts, cash and cash equivalents. "},{"id":892,"href":"/OpenBBTerminal/terminal/etf/weights/","title":"Weights","parent":"Introduction to ETFs","content":"usage: weights [-m MIN] [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Look at ETF sector holdings\noptional arguments: -m MIN, --min MIN Minimum positive float to display sector (default: 5) --raw Only output raw data (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":893,"href":"/OpenBBTerminal/terminal/forecast/atr/","title":"Atr","parent":"Introduction to Forecast","content":"usage: atr [-d {}] [-c TARGET_COLUMN] [-h] Add Average True Range to dataset of specific stock ticker.\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -h, --help show this help message (default: False) For more information and examples, use 'about rsi' to access the related guide. Example:\n(🦋) /forecast/ $ load aapl_20220628_113243.csv (🦋) /forecast/ $ atr aapl_20220628_113243 Successfully added 'Average True Range' to 'aapl_20220628_113243' dataset (🦋) /forecast/ $ show aapl_20220628_113243 aapl_20220628_113243 dataset has shape (row, column): (759, 9) Dataset aapl_20220628_113243 | Showing 10 of 759 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ unnamed:_0 ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ true_range ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 0 │ 2019-06-10 │ 47.95 │ 48.84 │ 47.90 │ 48.15 │ 46.99 │ 104883600 │ 0.94 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 1 │ 1 │ 2019-06-11 │ 48.72 │ 49.00 │ 48.40 │ 48.70 │ 47.53 │ 107731600 │ 0.85 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 2 │ 2 │ 2019-06-12 │ 48.49 │ 48.99 │ 48.35 │ 48.55 │ 47.38 │ 73012800 │ 0.65 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 3 │ 3 │ 2019-06-13 │ 48.67 │ 49.20 │ 48.40 │ 48.54 │ 47.37 │ 86698400 │ 0.80 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 4 │ 4 │ 2019-06-14 │ 47.89 │ 48.40 │ 47.58 │ 48.19 │ 47.03 │ 75046000 │ 0.96 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 5 │ 5 │ 2019-06-17 │ 48.22 │ 48.74 │ 48.04 │ 48.47 │ 47.31 │ 58676400 │ 0.70 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 6 │ 6 │ 2019-06-18 │ 49.01 │ 50.07 │ 48.80 │ 49.61 │ 48.42 │ 106204000 │ 1.60 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 7 │ 7 │ 2019-06-19 │ 49.92 │ 49.97 │ 49.33 │ 49.47 │ 48.28 │ 84496800 │ 0.64 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 8 │ 8 │ 2019-06-20 │ 50.09 │ 50.15 │ 49.51 │ 49.87 │ 48.67 │ 86056000 │ 0.69 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼────────────┤ │ 9 │ 9 │ 2019-06-21 │ 49.70 │ 50.21 │ 49.54 │ 49.69 │ 48.50 │ 191202400 │ 0.68 │ └───┴────────────┴────────────┴───────┴───────┴───────┴───────┴───────────┴───────────┴────────────┘ "},{"id":894,"href":"/OpenBBTerminal/terminal/forecast/autoets/","title":"Autoets","parent":"Introduction to Forecast","content":"usage: autoets [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-s {N,A,M}] [-p SEASONAL_PERIODS] [-w START_WINDOW] [--end S_END_DATE] [--start S_START_DATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform Automatic ETS (Error, Trend, Seasonality) forecast\noptional arguments: --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -s {N,A,M}, --seasonal {N,A,M} Seasonality: N: None, A: Additive, M: Multiplicative. (default: A) -p SEASONAL_PERIODS, --periods SEASONAL_PERIODS Seasonal periods: 4: Quarterly, 7: Daily (default: 7) -w START_WINDOW, --window START_WINDOW Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about autoets' to access the related guide. Example:\n2022 Oct 21, 18:20 (🦋) /forecast/ $ load AAPL 2022 Oct 21, 18:21 (🦋) /forecast/ $ autoets AAPL Actual price: 143.39 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-10-21 │ 143.42 │ ├────────────┼────────────┤ │ 2022-10-24 │ 143.42 │ ├────────────┼────────────┤ │ 2022-10-25 │ 143.42 │ ├────────────┼────────────┤ │ 2022-10-26 │ 143.42 │ ├────────────┼────────────┤ │ 2022-10-27 │ 143.42 │ └────────────┴────────────┘ "},{"id":895,"href":"/OpenBBTerminal/terminal/forecast/brnn/","title":"Brnn","parent":"Introduction to Forecast","content":"usage: brnn [--n-rnn-layers N_RNN_LAYERS] [--past-covariates PAST_COVARIATES] [--all-past-covariates] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-i INPUT_CHUNK_LENGTH] [-o OUTPUT_CHUNK_LENGTH] [--force-reset FORCE_RESET] [--save-checkpoints SAVE_CHECKPOINTS] [--model-save-name MODEL_SAVE_NAME] [--n-epochs N_EPOCHS] [--model-type MODEL_TYPE] [--dropout DROPOUT] [--batch-size BATCH_SIZE] [--end S_END_DATE] [--start S_START_DATE] [--learning-rate LEARNING_RATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform BRNN forecast (Vanilla RNN, LSTM, GRU)\noptional arguments: --n-rnn-layers N_RNN_LAYERS Number of layers in the RNN module. (default: 1) --past-covariates PAST_COVARIATES Past covariates(columns/features) in same dataset. Comma separated. (default: None) --all-past-covariates Adds all rows as past covariates except for date and the target column. (default: False) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -i INPUT_CHUNK_LENGTH, --input-chunk-length INPUT_CHUNK_LENGTH Number of past time steps for forecasting module at prediction time. (default: 14) -o OUTPUT_CHUNK_LENGTH, --output-chunk-length OUTPUT_CHUNK_LENGTH The length of the forecast of the model. (default: 5) --force-reset FORCE_RESET If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). (default: True) --save-checkpoints SAVE_CHECKPOINTS Whether to automatically save the untrained model and checkpoints. (default: True) --model-save-name MODEL_SAVE_NAME Name of the model to save. (default: brnn_model) --n-epochs N_EPOCHS Number of epochs over which to train the model. (default: 300) --model-type MODEL_TYPE Either a string specifying the RNN module type (\u0026quot;RNN\u0026quot;, \u0026quot;LSTM\u0026quot; or \u0026quot;GRU\u0026quot;) (default: LSTM) --dropout DROPOUT Fraction of neurons afected by Dropout. (default: 0) --batch-size BATCH_SIZE Number of time series (input and output) used in each training pass (default: 32) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --learning-rate LEARNING_RATE Learning rate during training. (default: 0.001) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about brnn' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:03 (🦋) /forecast/ $ brnn GME 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:07\u0026lt;00:00, 15.10it/s] Block RNN model obtains MAPE: 17.09% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 147.89 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 149.11 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 149.59 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 141.46 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 144.99 │ └─────────────────────┴────────────┘ "},{"id":896,"href":"/OpenBBTerminal/terminal/forecast/clean/","title":"Clean","parent":"Introduction to Forecast","content":"usage: clean [-f {rfill,cfill,rbfill,cbfill,rffill,bffill}] [--drop {rdrop,cdrop}] [-d {}] [-h] [-l LIMIT] Clean a dataset by filling and/or dropping NaN values.\noptional arguments: -f {rfill,cfill,rbfill,cbfill,rffill,bffill}, --fill {rfill,cfill,rbfill,cbfill,rffill,bffill} The method of filling NaNs. This has options to fill rows (rfill, rbfill, rffill) or fill columns (cfill, cbfill, cffill). Furthermore, it has the option to forward fill and backward fill (up to --limit) which refer to how many rows/columns can be set equal to the last non-NaN value (default: ) --drop {rdrop,cdrop} The method of dropping NaNs. This either has the option rdrop (drop rows that contain NaNs) or cdrop (drop columns that contain NaNs) (default: ) -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -h, --help show this help message (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 5) For more information and examples, use 'about clean' to access the related guide. Example:\n(🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 7) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┘ (🦋) /forecast/ $ rsi TSLA --period 30 Successfully added 'RSI_30' to 'TSLA' dataset (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ RSI_30 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ nan │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴────────┘ (🦋) /forecast/ $ clean TSLA -f rfill Namespace(drop='', fill='rfill', help=False, limit=5, target_dataset='TSLA') Successfully cleaned 'TSLA' dataset (🦋) /forecast/ $ show TSLA 2022 Jul 11, 14:20 (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ RSI_30 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ 0.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ 0.00 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴────────┘ "},{"id":897,"href":"/OpenBBTerminal/terminal/forecast/combine/","title":"Combine","parent":"Introduction to Forecast","content":"usage: combine [--dataset {}] [-c COLUMNS] [-h] The columns you want to add to a dataset. The first argument is the dataset to add columns in, the remaining could be: \u0026lt;datasetX.column2\u0026gt;,\u0026lt;datasetY.column3\u0026gt;\noptional arguments: --dataset {} Dataset to add columns to (default: None) -c COLUMNS, --columns COLUMNS The columns we want to add \u0026lt;dataset.column\u0026gt;,\u0026lt;datasetb.column2\u0026gt; (default: None) -h, --help show this help message (default: False) For more information and examples, use 'about combine' to access the related guide. Example:\n(🦋) /forecast/ $ load TSLA.csv (🦋) /forecast/ $ load MSFT.csv (🦋) /forecast/ $ combine --dataset TSLA --columns MSFT.volume (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ MSFT_volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ 1359650900.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ 1074643300.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ 1110237200.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ 1319029500.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ 1720130200.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ 1671811600.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ 1408590600.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ 1279372100.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ 1273139500.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼───────────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ 1281432800.00 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴───────────────┘ "},{"id":898,"href":"/OpenBBTerminal/terminal/forecast/corr/","title":"Corr","parent":"Introduction to Forecast","content":"usage: corr [-d {}] [-h] [--export EXPORT] Plot correlation coefficients of a dataset.\noptional arguments: -d {TSLA}, --target-dataset {TSLA} The name of the dataset you want to select (default: None) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about corr' to access the related guide. Example:\n(🦋) /forecast/ $ load TSLA.csv (🦋) /forecast/ $ corr TSLA TODO: screen shot "},{"id":899,"href":"/OpenBBTerminal/terminal/forecast/delete/","title":"Delete","parent":"Introduction to Forecast","content":"usage: delete [-d DELETE] [-h] Allows you to remove any column from your dataset. For example delete dataset.column\noptional arguments: -d DELETE, --delete DELETE The columns you want to delete from a dataset. Use format: \u0026lt;dataset.column\u0026gt; or multiple with \u0026lt;dataset.column\u0026gt;,\u0026lt;datasetb.column2\u0026gt; (default: None) -h, --help show this help message (default: False) Example:\n(🦋) /forecast/ $ load TSLA.csv (🦋) /forecast/ $ roc TSLA Successfully added 'ROC_10' to 'TSLA' dataset (🦋) /forecast/ $ show TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ROC_10 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ 20.51 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴────────┘ (🦋) /forecast/ $ delete TSLA.ROC_10 (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 7) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┘ "},{"id":900,"href":"/OpenBBTerminal/terminal/forecast/delta/","title":"Delta","parent":"Introduction to Forecast","content":"usage: delta [-d {}] [-c TARGET_COLUMN] [-h] Add %Change (Delta) to dataset based on specific column.\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -h, --help show this help message (default: False) For more information and examples, use 'about rsi' to access the related guide. Example:\n(🦋) /forecast/ $ load aapl_20220628_113243.csv (🦋) /forecast/ $ delta aapl_20220628_113243 Successfully added 'Delta_close' to 'aapl_20220628_113243' dataset (🦋) /forecast/ $ delta aapl_20220628_113243 -c volume Successfully added 'Delta_volume' to 'aapl_20220628_113243' dataset (🦋) /forecast/ $ show aapl_20220628_113243 aapl_20220628_113243 dataset has shape (row, column): (759, 10) Dataset aapl_20220628_113243 | Showing 10 of 759 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ ┃ unnamed:_0 ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ delta_close ┃ delta_volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ 0 │ 0 │ 2019-06-10 │ 47.95 │ 48.84 │ 47.90 │ 48.15 │ 46.99 │ 104883600 │ 0.00 │ 0.00 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 1 │ 1 │ 2019-06-11 │ 48.72 │ 49.00 │ 48.40 │ 48.70 │ 47.53 │ 107731600 │ 0.01 │ 0.03 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 2 │ 2 │ 2019-06-12 │ 48.49 │ 48.99 │ 48.35 │ 48.55 │ 47.38 │ 73012800 │ -0.00 │ -0.32 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 3 │ 3 │ 2019-06-13 │ 48.67 │ 49.20 │ 48.40 │ 48.54 │ 47.37 │ 86698400 │ -0.00 │ 0.19 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 4 │ 4 │ 2019-06-14 │ 47.89 │ 48.40 │ 47.58 │ 48.19 │ 47.03 │ 75046000 │ -0.01 │ -0.13 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 5 │ 5 │ 2019-06-17 │ 48.22 │ 48.74 │ 48.04 │ 48.47 │ 47.31 │ 58676400 │ 0.01 │ -0.22 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 6 │ 6 │ 2019-06-18 │ 49.01 │ 50.07 │ 48.80 │ 49.61 │ 48.42 │ 106204000 │ 0.02 │ 0.81 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 7 │ 7 │ 2019-06-19 │ 49.92 │ 49.97 │ 49.33 │ 49.47 │ 48.28 │ 84496800 │ -0.00 │ -0.20 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 8 │ 8 │ 2019-06-20 │ 50.09 │ 50.15 │ 49.51 │ 49.87 │ 48.67 │ 86056000 │ 0.01 │ 0.02 │ ├───┼────────────┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┼─────────────┼──────────────┤ │ 9 │ 9 │ 2019-06-21 │ 49.70 │ 50.21 │ 49.54 │ 49.69 │ 48.50 │ 191202400 │ -0.00 │ 1.22 │ └───┴────────────┴────────────┴───────┴───────┴───────┴───────┴───────────┴───────────┴─────────────┴──────────────┘ "},{"id":901,"href":"/OpenBBTerminal/terminal/forecast/desc/","title":"Desc","parent":"Introduction to Forecast","content":"usage: desc [-n {}] [-h] [--export {csv,json,xlsx}] Show the descriptive statistics of a dataset.\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) Example:\n(🦋) /forecast/ $ load TSLA.csv (🦋) /forecast/ $ desc TSLA Showing Descriptive Statistics for Dataset TSLA ┏━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ count │ 611.00 │ 611.00 │ 611.00 │ 611.00 │ 611.00 │ 611.00 │ ├───────┼─────────┼─────────┼─────────┼─────────┼───────────┼──────────────┤ │ mean │ 599.50 │ 613.65 │ 583.85 │ 599.19 │ 599.19 │ 47275047.14 │ ├───────┼─────────┼─────────┼─────────┼─────────┼───────────┼──────────────┤ │ std │ 308.73 │ 315.33 │ 300.77 │ 307.95 │ 307.95 │ 35945322.23 │ ├───────┼─────────┼─────────┼─────────┼─────────┼───────────┼──────────────┤ │ min │ 74.94 │ 80.97 │ 70.10 │ 72.24 │ 72.24 │ 9800600.00 │ ├───────┼─────────┼─────────┼─────────┼─────────┼───────────┼──────────────┤ │ 25% │ 325.09 │ 332.00 │ 304.80 │ 316.07 │ 316.07 │ 23386000.00 │ ├───────┼─────────┼─────────┼─────────┼─────────┼───────────┼──────────────┤ │ 50% │ 661.42 │ 672.00 │ 644.60 │ 659.58 │ 659.58 │ 33337300.00 │ ├───────┼─────────┼─────────┼─────────┼─────────┼───────────┼──────────────┤ │ 75% │ 830.71 │ 846.82 │ 801.99 │ 822.97 │ 822.97 │ 62445150.00 │ ├───────┼─────────┼─────────┼─────────┼─────────┼───────────┼──────────────┤ │ max │ 1234.41 │ 1243.49 │ 1217.00 │ 1229.91 │ 1229.91 │ 304694000.00 │ └───────┴─────────┴─────────┴─────────┴─────────┴───────────┴──────────────┘ "},{"id":902,"href":"/OpenBBTerminal/terminal/forecast/ema/","title":"Ema","parent":"Introduction to Forecast","content":"usage: ema [-d {}] [-c TARGET_COLUMN] [--period PERIOD] [-h] Add exponential moving average to dataset based on specific column.\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) --period PERIOD The period to use (default: 10) -h, --help show this help message (default: False) For more information and examples, use 'about ema' to access the related guide. Example:\n(🦋) /forecast/ $ load TSLA.csv (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 7) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┘ (🦋) /forecast/ $ ema TSLA Successfully added 'EMA_10' to 'TSLA' dataset (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ EMA_10 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ 86.05 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ 86.52 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ 87.21 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ 88.41 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ 90.23 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ 91.33 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ 92.11 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ 94.45 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ 96.84 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ 98.08 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴────────┘ "},{"id":903,"href":"/OpenBBTerminal/terminal/forecast/expo/","title":"Expo","parent":"Introduction to Forecast","content":"usage: expo [--trend {N,A,M}] [--dampen DAMPEN] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-s {N,A,M}] [-p SEASONAL_PERIODS] [-w START_WINDOW] [--end S_END_DATE] [--start S_START_DATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform Probabilistic Exponential Smoothing forecast Trend: N: None, A: Additive, M: Multiplicative Seasonality: N: None, A: Additive, M: Multiplicative Dampen: T: True, F: False\noptional arguments: --trend {N,A,M} Trend: N: None, A: Additive, M: Multiplicative. (default: A) --dampen DAMPEN Dampening (default: F) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -s {N,A,M}, --seasonal {N,A,M} Seasonality: N: None, A: Additive, M: Multiplicative. (default: A) -p SEASONAL_PERIODS, --periods SEASONAL_PERIODS Seasonal periods: 4: Quarterly, 7: Daily (default: 7) -w START_WINDOW, --window START_WINDOW Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about expo' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 10:52 (🦋) /forecast/ $ expo GME 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:16\u0026lt;00:00, 6.80it/s] Exponential smoothing obtains MAPE: 12.88% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 146.35 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 148.63 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 148.86 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 151.76 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 149.74 │ └─────────────────────┴────────────┘ "},{"id":904,"href":"/OpenBBTerminal/terminal/forecast/export/","title":"Export","parent":"Introduction to Forecast","content":"usage: export [-t {csv,xlsx}] [-d {}] [-h] Export dataset to Excel\noptional arguments: -t {csv,xlsx}, --type {csv,xlsx} The file type you wish to export to (default: xlsx) -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -h, --help show this help message (default: False) For more information and examples, use 'about export' to access the related guide. Example:\n(🦋) /forecast/ $ load aapl (🦋) /forecast/ $ ema aapl Successfully added 'EMA_10' to 'aapl' dataset (🦋) /forecast/ $ export aapl Saved file: .../OpenBBTerminal/exports/forecast/aapl_20220711_151219.xlsx "},{"id":905,"href":"/OpenBBTerminal/terminal/forecast/linregr/","title":"Linregr","parent":"Introduction to Forecast","content":"usage: linregr [--past-covariates PAST_COVARIATES] [--all-past-covariates] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-o OUTPUT_CHUNK_LENGTH] [--end S_END_DATE][--start S_START_DATE] [--lags LAGS] [--residuals] [--forecast-only] [--explainability-raw] [--export-pred-raw] [-h] [--export EXPORT] Perform a linear regression forecast.\noptional arguments: --past-covariates PAST_COVARIATES Past covariates(columns/features) in same dataset. Comma separated. (default: None) --all-past-covariates Adds all rows as past covariates except for date and the target column. (default: False) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -o OUTPUT_CHUNK_LENGTH, --output-chunk-length OUTPUT_CHUNK_LENGTH The length of the forecast of the model. (default: 5) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --lags LAGS Lagged target values used to predict the next time step. (default: 14) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --explainability-raw Prints out a raw dataframe showing explainability results. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about linregr' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:03 (🦋) /forecast/ $ linregr GME 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:07\u0026lt;00:00, 15.10it/s] Logistic Regression model obtains MAPE: 10.85% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 144.41 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 142.69 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 140.94 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 139.89 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 136.04 │ └─────────────────────┴────────────┘ "},{"id":906,"href":"/OpenBBTerminal/terminal/forecast/load/","title":"Load","parent":"Introduction to Forecast","content":"usage: load [-f FILE] [-a ALIAS] [-h] Load custom data set into a DataFrame. If a column exists titled \u0026ldquo;date\u0026rdquo;, \u0026ldquo;time\u0026rdquo;, \u0026ldquo;timestamp\u0026rdquo;, \u0026ldquo;quarter\u0026rdquo; is automatically converted to a date format and is set as index of the DataFrame.\noptional arguments: -f FILE, --file FILE File to load data in (can be custom import, may have been exported before.) (default: None) -a ALIAS, --alias ALIAS Alias name to give to the dataset (default: None) -h, --help show this help message (default: False) Example:\n(🦋) /forecast/ $ load aapl.csv (🦋) /forecast/ $ show aapl Dataset aapl | Showing 10 of 759 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2019-06-10 │ 47.95 │ 48.84 │ 47.90 │ 48.15 │ 46.99 │ 104883600 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 1 │ 2019-06-11 │ 48.72 │ 49.00 │ 48.40 │ 48.70 │ 47.53 │ 107731600 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 2 │ 2019-06-12 │ 48.49 │ 48.99 │ 48.35 │ 48.55 │ 47.38 │ 73012800 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 3 │ 2019-06-13 │ 48.67 │ 49.20 │ 48.40 │ 48.54 │ 47.37 │ 86698400 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 4 │ 2019-06-14 │ 47.89 │ 48.40 │ 47.58 │ 48.19 │ 47.03 │ 75046000 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 5 │ 2019-06-17 │ 48.22 │ 48.74 │ 48.04 │ 48.47 │ 47.31 │ 58676400 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 6 │ 2019-06-18 │ 49.01 │ 50.07 │ 48.80 │ 49.61 │ 48.42 │ 106204000 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 7 │ 2019-06-19 │ 49.92 │ 49.97 │ 49.33 │ 49.47 │ 48.28 │ 84496800 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 8 │ 2019-06-20 │ 50.09 │ 50.15 │ 49.51 │ 49.87 │ 48.67 │ 86056000 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 9 │ 2019-06-21 │ 49.70 │ 50.21 │ 49.54 │ 49.69 │ 48.50 │ 191202400 │ └───┴────────────┴───────┴───────┴───────┴───────┴───────────┴───────────┘ "},{"id":907,"href":"/OpenBBTerminal/terminal/forecast/mom/","title":"Mom","parent":"Introduction to Forecast","content":"usage: mom [-d {}] [-c TARGET_COLUMN] [--period PERIOD] [-h] Add momentum to dataset based on specific column.\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) --period PERIOD The period to use (default: 10) -h, --help show this help message (default: False) For more information and examples, use 'about mom' to access the related guide. Example:\n(🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 7) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┘ (🦋) /forecast/ $ mom TSLA Successfully added 'Momentum_10' to 'TSLA' dataset (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ Momentum_10 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ nan │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴─────────────┘ (🦋) /forecast/ $ clean TSLA Namespace(drop='', fill='', help=False, limit=5, target_dataset='TSLA') Successfully cleaned 'TSLA' dataset (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (601, 8) Dataset TSLA | Showing 10 of 601 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ Momentum_10 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ 0 │ 2020-01-16 │ 98.75 │ 102.89 │ 98.43 │ 102.70 │ 102.70 │ 108683500 │ 16.65 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 1 │ 2020-01-17 │ 101.52 │ 103.13 │ 100.63 │ 102.10 │ 102.10 │ 68145500 │ 13.50 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 2 │ 2020-01-21 │ 106.05 │ 109.72 │ 105.68 │ 109.44 │ 109.44 │ 89017500 │ 19.13 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 3 │ 2020-01-22 │ 114.38 │ 118.90 │ 111.82 │ 113.91 │ 113.91 │ 156845000 │ 20.10 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 4 │ 2020-01-23 │ 112.85 │ 116.40 │ 111.12 │ 114.44 │ 114.44 │ 98255000 │ 16.01 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 5 │ 2020-01-24 │ 114.13 │ 114.77 │ 110.85 │ 112.96 │ 112.96 │ 71768000 │ 16.70 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 6 │ 2020-01-27 │ 108.40 │ 112.89 │ 107.86 │ 111.60 │ 111.60 │ 68040500 │ 15.97 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 7 │ 2020-01-28 │ 113.70 │ 115.36 │ 111.62 │ 113.38 │ 113.38 │ 58942500 │ 8.41 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 8 │ 2020-01-29 │ 115.14 │ 117.96 │ 113.49 │ 116.20 │ 116.20 │ 89007500 │ 8.61 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────────┤ │ 9 │ 2020-01-30 │ 126.48 │ 130.18 │ 123.60 │ 128.16 │ 128.16 │ 145028500 │ 24.46 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴─────────────┘ "},{"id":908,"href":"/OpenBBTerminal/terminal/forecast/nbeats/","title":"Nbeats","parent":"Introduction to Forecast","content":"usage: nbeats [--num_stacks NUM_STACKS] [--num_blocks NUM_BLOCKS] [--num_layers NUM_LAYERS] [--layer_widths LAYER_WIDTHS] [--past-covariates PAST_COVARIATES] [--all-past-covariates] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-i INPUT_CHUNK_LENGTH] [-o OUTPUT_CHUNK_LENGTH] [--force-reset FORCE_RESET] [--save-checkpoints SAVE_CHECKPOINTS] [--model-save-name MODEL_SAVE_NAME] [--n-epochs N_EPOCHS] [--batch-size BATCH_SIZE] [--end S_END_DATE] [--start S_START_DATE] [--learning-rate LEARNING_RATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform NBEATS forecast (Neural Bayesian Estimation of Time Series).\noptional arguments: --num_stacks NUM_STACKS The number of stacks that make up the whole model. (default: 10) --num_blocks NUM_BLOCKS The number of blocks making up every stack. (default: 3) --num_layers NUM_LAYERS The number of fully connected layers preceding the final forking layers in each block of every stack. (default: 4) --layer_widths LAYER_WIDTHS Determines the number of neurons that make up each fully connected layer in each block of every stack (default: 512) --past-covariates PAST_COVARIATES Past covariates(columns/features) in same dataset. Comma separated. (default: None) --all-past-covariates Adds all rows as past covariates except for date and the target column. (default: False) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -i INPUT_CHUNK_LENGTH, --input-chunk-length INPUT_CHUNK_LENGTH Number of past time steps for forecasting module at prediction time. (default: 14) -o OUTPUT_CHUNK_LENGTH, --output-chunk-length OUTPUT_CHUNK_LENGTH The length of the forecast of the model. (default: 5) --force-reset FORCE_RESET If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). (default: True) --save-checkpoints SAVE_CHECKPOINTS Whether to automatically save the untrained model and checkpoints. (default: True) --model-save-name MODEL_SAVE_NAME Name of the model to save. (default: nbeats_model) --n-epochs N_EPOCHS Number of epochs over which to train the model. (default: 300) --batch-size BATCH_SIZE Number of time series (input and output) used in each training pass (default: 800) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --learning-rate LEARNING_RATE Learning rate during training. (default: 0.001) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about nbeats' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:03 (🦋) /forecast/ $ nbeats GME 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:07\u0026lt;00:00, 15.10it/s] NBEATS model obtains MAPE: 23.53% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 158.52 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 172.21 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 67.46 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 97.63 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 154.24 │ └─────────────────────┴────────────┘ "},{"id":909,"href":"/OpenBBTerminal/terminal/forecast/nhits/","title":"Nhits","parent":"Introduction to Forecast","content":"usage: nhits [--num-stacks NUM_STACKS] [--num-blocks NUM_BLOCKS] [--num-layers NUM_LAYERS] [--layer_widths LAYER_WIDTHS] [--activation {ReLU,RReLU,PReLU,Softplus,Tanh,SELU,LeakyReLU,Sigmoid}] [--max_pool_1d] [--past-covariates PAST_COVARIATES] [--all-past-covariates] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-i INPUT_CHUNK_LENGTH] [-o OUTPUT_CHUNK_LENGTH] [--force-reset FORCE_RESET] [--save-checkpoints SAVE_CHECKPOINTS] [--model-save-name MODEL_SAVE_NAME] [--n-epochs N_EPOCHS] [--dropout DROPOUT] [--batch-size BATCH_SIZE] [--end S_END_DATE] [--start S_START_DATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform NHits forecast (Neural Hierarchical Interpolation for Time Series Forecasting).\noptional arguments: --num-stacks NUM_STACKS The number of stacks that make up the model (default: 3) --num-blocks NUM_BLOCKS The number of blocks making up every stack (default: 1) --num-layers NUM_LAYERS The number of fully connected layers (default: 2) --layer_widths LAYER_WIDTHS The number of neurons in each layer (default: 3) --activation {ReLU,RReLU,PReLU,Softplus,Tanh,SELU,LeakyReLU,Sigmoid} The desired activation (default: ReLU) --max_pool_1d Whether to use max_pool_1d or AvgPool1d (default: False) --past-covariates PAST_COVARIATES Past covariates(columns/features) in same dataset. Comma separated. (default: None) --all-past-covariates Adds all rows as past covariates except for date and the target column. (default: False) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -i INPUT_CHUNK_LENGTH, --input-chunk-length INPUT_CHUNK_LENGTH Number of past time steps for forecasting module at prediction time. (default: 14) -o OUTPUT_CHUNK_LENGTH, --output-chunk-length OUTPUT_CHUNK_LENGTH The length of the forecast of the model. (default: 5) --force-reset FORCE_RESET If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). (default: True) --save-checkpoints SAVE_CHECKPOINTS Whether to automatically save the untrained model and checkpoints. (default: True) --model-save-name MODEL_SAVE_NAME Name of the model to save. (default: tft_model) --n-epochs N_EPOCHS Number of epochs over which to train the model. (default: 300) --dropout DROPOUT Fraction of neurons afected by Dropout. (default: 0.1) --batch-size BATCH_SIZE Number of time series (input and output) used in each training pass (default: 32) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about nhits' to access the related guide. Example:\n2022 Oct 11, 06:38 D /forecast/ $ load AAPL_20220719_201127.csv 2022 Oct 11, 06:38 D /forecast/ $ nhits AAPL_20220719_201127 Epoch 153: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 25/25 [00:00\u0026lt;00:00, 183.87it/s, loss=-1.56, train_loss=-1.60, val_loss=-.954] Predicting NHITS for 5 days 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:01\u0026lt;00:00, 92.46it/s] NHITS model obtains MAPE: 7.45% Actual price: 147.07 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 │ 134.84 │ ├────────────┼────────────┤ │ 2022-07-20 │ 141.80 │ ├────────────┼────────────┤ │ 2022-07-21 │ 131.06 │ ├────────────┼────────────┤ │ 2022-07-22 │ 102.95 │ ├────────────┼────────────┤ │ 2022-07-25 │ 123.72 │ └────────────┴────────────┘ "},{"id":910,"href":"/OpenBBTerminal/terminal/forecast/plot/","title":"Plot","parent":"Introduction to Forecast","content":"usage: plot [-v VALUES] [-h] [--export EXPORT] Plot data based on the index.\noptional arguments: -v VALUES, --values VALUES Dataset.column values to be displayed in a plot (default: None) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) Example:\n(🦋) /forecast/ $ load aapl.csv (🦋) /forecast/ $ plot appl.close "},{"id":911,"href":"/OpenBBTerminal/terminal/forecast/regr/","title":"Regr","parent":"Introduction to Forecast","content":"usage: regr [--past-covariates PAST_COVARIATES] [--all-past-covariates] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-o OUTPUT_CHUNK_LENGTH] [--end S_END_DATE] [--start S_START_DATE] [--lags LAGS] [--residuals] [--forecast-only] [--explainability-raw] [--export-pred-raw] [-h] [--export EXPORT] Perform a regression forecast.\noptional arguments: --past-covariates PAST_COVARIATES Past covariates(columns/features) in same dataset. Comma separated. (default: None) --all-past-covariates Adds all rows as past covariates except for date and the target column. (default: False) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -o OUTPUT_CHUNK_LENGTH, --output-chunk-length OUTPUT_CHUNK_LENGTH The length of the forecast of the model. (default: 5) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --lags LAGS Lagged target values used to predict the next time step. (default: 14) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --explainability-raw Prints out a raw dataframe showing explainability results. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about regr' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:08 (🦋) /forecast/ $ regr GME 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:01\u0026lt;00:00, 111.85it/s] Regression model obtains MAPE: 12.34% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 143.74 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 144.90 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 142.41 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 133.50 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 134.24 │ └─────────────────────┴────────────┘ "},{"id":912,"href":"/OpenBBTerminal/terminal/forecast/rename/","title":"Rename","parent":"Introduction to Forecast","content":"usage: rename [-d {}] [-o OLDCOL] [-n NEWCOL] [-h] The column you want to rename from a dataset.\noptional arguments: -d {}, --dataset {} Dataset that will get a column renamed (default: None) -o OLDCOL, --oldcol OLDCOL Old column from dataset to be renamed (default: None) -n NEWCOL, --newcol NEWCOL New column from dataset to be renamed (default: None) -h, --help show this help message (default: False) Example:\n2022 Jul 23, 10:16 (🦋) /forecast/ $ show AAPL AAPL dataset has shape (row, column): (759, 7) Dataset AAPL | Showing 10 of 759 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━┩ │ 0 │ 2019-07-15 │ 51.02 │ 51.47 │ 51.00 │ 51.30 │ 50.07 │ 67789600 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 1 │ 2019-07-16 │ 51.15 │ 51.53 │ 50.88 │ 51.12 │ 49.90 │ 67467200 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 2 │ 2019-07-17 │ 51.01 │ 51.27 │ 50.82 │ 50.84 │ 49.62 │ 56430000 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 3 │ 2019-07-18 │ 51.00 │ 51.47 │ 50.92 │ 51.42 │ 50.18 │ 74162400 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 4 │ 2019-07-19 │ 51.45 │ 51.62 │ 50.59 │ 50.65 │ 49.43 │ 83717200 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 5 │ 2019-07-22 │ 50.91 │ 51.81 │ 50.90 │ 51.81 │ 50.56 │ 89111600 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 6 │ 2019-07-23 │ 52.12 │ 52.23 │ 51.82 │ 52.21 │ 50.96 │ 73420800 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 7 │ 2019-07-24 │ 51.92 │ 52.29 │ 51.79 │ 52.17 │ 50.92 │ 59966400 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 8 │ 2019-07-25 │ 52.22 │ 52.31 │ 51.68 │ 51.76 │ 50.51 │ 55638400 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼──────────┤ │ 9 │ 2019-07-26 │ 51.87 │ 52.43 │ 51.78 │ 51.94 │ 50.69 │ 70475600 │ └───┴────────────┴───────┴───────┴───────┴───────┴───────────┴──────────┘ 2022 Jul 23, 10:16 (🦋) /forecast/ $ rename AAPL -o close -n new_name 2022 Jul 23, 10:16 (🦋) /forecast/ $ show AAPL AAPL dataset has shape (row, column): (759, 7) Dataset AAPL | Showing 10 of 759 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ new_name ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━┩ │ 0 │ 2019-07-15 │ 51.02 │ 51.47 │ 51.00 │ 51.30 │ 50.07 │ 67789600 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 1 │ 2019-07-16 │ 51.15 │ 51.53 │ 50.88 │ 51.12 │ 49.90 │ 67467200 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 2 │ 2019-07-17 │ 51.01 │ 51.27 │ 50.82 │ 50.84 │ 49.62 │ 56430000 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 3 │ 2019-07-18 │ 51.00 │ 51.47 │ 50.92 │ 51.42 │ 50.18 │ 74162400 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 4 │ 2019-07-19 │ 51.45 │ 51.62 │ 50.59 │ 50.65 │ 49.43 │ 83717200 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 5 │ 2019-07-22 │ 50.91 │ 51.81 │ 50.90 │ 51.81 │ 50.56 │ 89111600 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 6 │ 2019-07-23 │ 52.12 │ 52.23 │ 51.82 │ 52.21 │ 50.96 │ 73420800 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 7 │ 2019-07-24 │ 51.92 │ 52.29 │ 51.79 │ 52.17 │ 50.92 │ 59966400 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 8 │ 2019-07-25 │ 52.22 │ 52.31 │ 51.68 │ 51.76 │ 50.51 │ 55638400 │ ├───┼────────────┼───────┼───────┼───────┼──────────┼───────────┼──────────┤ │ 9 │ 2019-07-26 │ 51.87 │ 52.43 │ 51.78 │ 51.94 │ 50.69 │ 70475600 │ └───┴────────────┴───────┴───────┴───────┴──────────┴───────────┴──────────┘ "},{"id":913,"href":"/OpenBBTerminal/terminal/forecast/rnn/","title":"Rnn","parent":"Introduction to Forecast","content":"usage: rnn [--hidden-dim HIDDEN_DIM] [--training_length TRAINING_LENGTH] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-i INPUT_CHUNK_LENGTH] [--force-reset FORCE_RESET] [--save-checkpoints SAVE_CHECKPOINTS] [--model-save-name MODEL_SAVE_NAME] [--n-epochs N_EPOCHS] [--model-type MODEL_TYPE] [--dropout DROPOUT] [--batch-size BATCH_SIZE] [--end S_END_DATE] [--start S_START_DATE] [--learning-rate LEARNING_RATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform RNN forecast (Vanilla RNN, LSTM, GRU)\noptional arguments: --hidden-dim HIDDEN_DIM Size for feature maps for each hidden RNN layer (h_n) (default: 20) --training_length TRAINING_LENGTH The length of both input (target and covariates) and output (target) time series used during training. Generally speaking, training_length should have a higher value than input_chunk_length because otherwise during training the RNN is never run for as many iterations as it will during training. (default: 20) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -i INPUT_CHUNK_LENGTH, --input-chunk-length INPUT_CHUNK_LENGTH Number of past time steps for forecasting module at prediction time. (default: 14) --force-reset FORCE_RESET If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). (default: True) --save-checkpoints SAVE_CHECKPOINTS Whether to automatically save the untrained model and checkpoints. (default: True) --model-save-name MODEL_SAVE_NAME Name of the model to save. (default: rnn_model) --n-epochs N_EPOCHS Number of epochs over which to train the model. (default: 300) --model-type MODEL_TYPE Either a string specifying the RNN module type (\u0026quot;RNN\u0026quot;, \u0026quot;LSTM\u0026quot; or \u0026quot;GRU\u0026quot;) (default: LSTM) --dropout DROPOUT Fraction of neurons afected by Dropout. (default: 0) --batch-size BATCH_SIZE Number of time series (input and output) used in each training pass (default: 32) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --learning-rate LEARNING_RATE Learning rate during training. (default: 0.001) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about rnn' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:03 (🦋) /forecast/ $ rnn GME 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:07\u0026lt;00:00, 15.10it/s] RNN model obtains MAPE: 14.67% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 146.89 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 148.58 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 150.00 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 151.23 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 152.29 │ └─────────────────────┴────────────┘ "},{"id":914,"href":"/OpenBBTerminal/terminal/forecast/roc/","title":"Roc","parent":"Introduction to Forecast","content":"usage: roc [-d {}] [-c TARGET_COLUMN] [--period PERIOD] [-h] Add rate of change to dataset based on specific column.\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) --period PERIOD The period to use (default: 10) -h, --help show this help message (default: False) For more information and examples, use 'about roc' to access the related guide. Example:\n(🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 7) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┘ (🦋) /forecast/ $ roc TSLA Successfully added 'ROC_10' to 'TSLA' dataset (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ROC_10 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ 20.51 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴────────┘ "},{"id":915,"href":"/OpenBBTerminal/terminal/forecast/rsi/","title":"Rsi","parent":"Introduction to Forecast","content":"usage: rsi [-d {}] [-c TARGET_COLUMN] [--period PERIOD] [-h] Add rsi to dataset based on specific column.\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) --period PERIOD The period to use (default: 10) -h, --help show this help message (default: False) For more information and examples, use 'about rsi' to access the related guide. Example:\n(🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 7) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┘ (🦋) /forecast/ $ rsi TSLA Successfully added 'RSI_10' to 'TSLA' dataset (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ RSI_10 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ nan │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴────────┘ (🦋) /forecast/ $ clean TSLA Namespace(drop='', fill='', help=False, limit=5, target_dataset='TSLA') Successfully cleaned 'TSLA' dataset (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (601, 8) Dataset TSLA | Showing 10 of 601 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ RSI_10 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩ │ 0 │ 2020-01-16 │ 98.75 │ 102.89 │ 98.43 │ 102.70 │ 102.70 │ 108683500 │ 76.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 1 │ 2020-01-17 │ 101.52 │ 103.13 │ 100.63 │ 102.10 │ 102.10 │ 68145500 │ 74.45 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 2 │ 2020-01-21 │ 106.05 │ 109.72 │ 105.68 │ 109.44 │ 109.44 │ 89017500 │ 80.00 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 3 │ 2020-01-22 │ 114.38 │ 118.90 │ 111.82 │ 113.91 │ 113.91 │ 156845000 │ 82.56 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 4 │ 2020-01-23 │ 112.85 │ 116.40 │ 111.12 │ 114.44 │ 114.44 │ 98255000 │ 82.85 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 5 │ 2020-01-24 │ 114.13 │ 114.77 │ 110.85 │ 112.96 │ 112.96 │ 71768000 │ 78.80 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 6 │ 2020-01-27 │ 108.40 │ 112.89 │ 107.86 │ 111.60 │ 111.60 │ 68040500 │ 75.05 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 7 │ 2020-01-28 │ 113.70 │ 115.36 │ 111.62 │ 113.38 │ 113.38 │ 58942500 │ 76.66 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 8 │ 2020-01-29 │ 115.14 │ 117.96 │ 113.49 │ 116.20 │ 116.20 │ 89007500 │ 79.05 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 9 │ 2020-01-30 │ 126.48 │ 130.18 │ 123.60 │ 128.16 │ 128.16 │ 145028500 │ 85.87 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴────────┘ "},{"id":916,"href":"/OpenBBTerminal/terminal/forecast/season/","title":"Season","parent":"Introduction to Forecast","content":"usage: season [-v VALUES] [-m M] [--max_lag MAX_LAG] [-a ALPHA] [-h] [--export EXPORT] Plot the seasonality for a given column\noptional arguments: -v VALUES, --values VALUES Dataset.column values to be displayed in a plot (default: None) -m M A time lag to highlight on the plot (default: None) --max_lag MAX_LAG The maximal lag order to consider (default: 24) -a ALPHA, --alpha ALPHA The confidence interval to display (default: 0.05) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about season' to access the related guide. Example:\n(🦋) /forecast/ $ load TSLA.csv (🦋) /forecast/ $ season TSLA.volume TODO: screen shot "},{"id":917,"href":"/OpenBBTerminal/terminal/forecast/show/","title":"Show","parent":"Introduction to Forecast","content":"usage: show [-n {}] [-s SORTCOL [SORTCOL ...]] [-a] [--limit-col LIMIT_COL] [-h] [--export EXPORT] [-l LIMIT] Show a portion of the loaded dataset\noptional arguments: -n {}, --name {AAPL,MSFT,TSLA} The name of the database you want to show data for (default: None) -s SORTCOL [SORTCOL ...], --sortcol SORTCOL [SORTCOL ...] Sort based on a column in the DataFrame (default: ) -a, --ascend Use this argument to sort in a descending order (default: False) --limit-col LIMIT_COL Set the number of columns to display when showing the dataset (default: 10) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) For more information and examples, use 'about show' to access the related guide. Example:\n(🦋) /forecast/ $ load aapl.csv (🦋) /forecast/ $ show aapl aapl dataset has shape (row, column): (759, 7) Dataset aapl | Showing 10 of 759 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2019-06-10 │ 47.95 │ 48.84 │ 47.90 │ 48.15 │ 46.99 │ 104883600 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 1 │ 2019-06-11 │ 48.72 │ 49.00 │ 48.40 │ 48.70 │ 47.53 │ 107731600 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 2 │ 2019-06-12 │ 48.49 │ 48.99 │ 48.35 │ 48.55 │ 47.38 │ 73012800 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 3 │ 2019-06-13 │ 48.67 │ 49.20 │ 48.40 │ 48.54 │ 47.37 │ 86698400 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 4 │ 2019-06-14 │ 47.89 │ 48.40 │ 47.58 │ 48.19 │ 47.03 │ 75046000 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 5 │ 2019-06-17 │ 48.22 │ 48.74 │ 48.04 │ 48.47 │ 47.31 │ 58676400 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 6 │ 2019-06-18 │ 49.01 │ 50.07 │ 48.80 │ 49.61 │ 48.42 │ 106204000 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 7 │ 2019-06-19 │ 49.92 │ 49.97 │ 49.33 │ 49.47 │ 48.28 │ 84496800 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 8 │ 2019-06-20 │ 50.09 │ 50.15 │ 49.51 │ 49.87 │ 48.67 │ 86056000 │ ├───┼────────────┼───────┼───────┼───────┼───────┼───────────┼───────────┤ │ 9 │ 2019-06-21 │ 49.70 │ 50.21 │ 49.54 │ 49.69 │ 48.50 │ 191202400 │ └───┴────────────┴───────┴───────┴───────┴───────┴───────────┴───────────┘ "},{"id":918,"href":"/OpenBBTerminal/terminal/forecast/signal/","title":"Signal","parent":"Introduction to Forecast","content":"usage: signal [-d {}] [-c TARGET_COLUMN] [-h] Add price signal to dataset based on closing price. 1 if the signal is that short term price will go up as compared to the long term. 0 if the signal is that short term price will go down as compared to the long term.\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) --period PERIOD The period to use (default: 10) -h, --help show this help message (default: False) For more information and examples, use 'about signal' to access the related guide. Example:\n(🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 7) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┘ (🦋) /forecast/ $ signal TSLA Successfully added 'Price Signal' to 'TSLA' dataset (🦋) /forecast/ $ show TSLA -l 30 TSLA dataset has shape (row, column): (611, 8) Dataset TSLA | Showing 30 of 611 rows ┏━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ signal ┃ ┡━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 10 │ 2020-01-16 │ 98.75 │ 102.89 │ 98.43 │ 102.70 │ 102.70 │ 108683500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 11 │ 2020-01-17 │ 101.52 │ 103.13 │ 100.63 │ 102.10 │ 102.10 │ 68145500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 12 │ 2020-01-21 │ 106.05 │ 109.72 │ 105.68 │ 109.44 │ 109.44 │ 89017500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 13 │ 2020-01-22 │ 114.38 │ 118.90 │ 111.82 │ 113.91 │ 113.91 │ 156845000 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 14 │ 2020-01-23 │ 112.85 │ 116.40 │ 111.12 │ 114.44 │ 114.44 │ 98255000 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 15 │ 2020-01-24 │ 114.13 │ 114.77 │ 110.85 │ 112.96 │ 112.96 │ 71768000 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 16 │ 2020-01-27 │ 108.40 │ 112.89 │ 107.86 │ 111.60 │ 111.60 │ 68040500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 17 │ 2020-01-28 │ 113.70 │ 115.36 │ 111.62 │ 113.38 │ 113.38 │ 58942500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 18 │ 2020-01-29 │ 115.14 │ 117.96 │ 113.49 │ 116.20 │ 116.20 │ 89007500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 19 │ 2020-01-30 │ 126.48 │ 130.18 │ 123.60 │ 128.16 │ 128.16 │ 145028500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 20 │ 2020-01-31 │ 128.00 │ 130.60 │ 126.50 │ 130.11 │ 130.11 │ 78596500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 21 │ 2020-02-03 │ 134.74 │ 157.23 │ 134.70 │ 156.00 │ 156.00 │ 235325000 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 22 │ 2020-02-04 │ 176.59 │ 193.80 │ 166.78 │ 177.41 │ 177.41 │ 304694000 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 23 │ 2020-02-05 │ 164.65 │ 169.20 │ 140.82 │ 146.94 │ 146.94 │ 242119000 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 24 │ 2020-02-06 │ 139.98 │ 159.17 │ 137.40 │ 149.79 │ 149.79 │ 199404000 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 25 │ 2020-02-07 │ 146.11 │ 153.95 │ 146.00 │ 149.61 │ 149.61 │ 85317500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 26 │ 2020-02-10 │ 160.00 │ 164.00 │ 150.48 │ 154.26 │ 154.26 │ 123446000 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 27 │ 2020-02-11 │ 153.76 │ 156.70 │ 151.60 │ 154.88 │ 154.88 │ 58487500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 28 │ 2020-02-12 │ 155.57 │ 157.95 │ 152.67 │ 153.46 │ 153.46 │ 60112500 │ 1.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼────────┤ │ 29 │ 2020-02-13 │ 148.37 │ 163.60 │ 147.00 │ 160.80 │ 160.80 │ 131446500 │ 1.00 │ └────┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴────────┘ "},{"id":919,"href":"/OpenBBTerminal/terminal/forecast/sto/","title":"Sto","parent":"Introduction to Forecast","content":"usage: sto [-d {}] [--period PERIOD] [-h] [-l LIMIT] Add in Stochastic Oscillator %K and %D\noptional arguments: -d {}, --target-dataset {} The name of the dataset you want to select (default: None) --period PERIOD The period to use (default: 10) -h, --help show this help message (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 5) For more information and examples, use 'about sto' to access the related guide. Example:\n(🦋) /forecast/ $ load TSLA.csv (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 7) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┘ (🦋) /forecast/ $ sto TSLA Successfully added 'STOK\u0026amp;D_10' to 'TSLA' dataset (🦋) /forecast/ $ show TSLA TSLA dataset has shape (row, column): (611, 9) Dataset TSLA | Showing 10 of 611 rows ┏━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ SO%K_10 ┃ SO%D_10 ┃ ┡━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━┩ │ 0 │ 2020-01-02 │ 84.90 │ 86.14 │ 84.34 │ 86.05 │ 86.05 │ 47660500 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 1 │ 2020-01-03 │ 88.10 │ 90.80 │ 87.38 │ 88.60 │ 88.60 │ 88892500 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 2 │ 2020-01-06 │ 88.09 │ 90.31 │ 88.00 │ 90.31 │ 90.31 │ 50665000 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 3 │ 2020-01-07 │ 92.28 │ 94.33 │ 90.67 │ 93.81 │ 93.81 │ 89410500 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 4 │ 2020-01-08 │ 94.74 │ 99.70 │ 93.65 │ 98.43 │ 98.43 │ 155721500 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 5 │ 2020-01-09 │ 99.42 │ 99.76 │ 94.57 │ 96.27 │ 96.27 │ 142202000 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 6 │ 2020-01-10 │ 96.36 │ 96.99 │ 94.74 │ 95.63 │ 95.63 │ 64797500 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 7 │ 2020-01-13 │ 98.70 │ 105.13 │ 98.40 │ 104.97 │ 104.97 │ 132588000 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 8 │ 2020-01-14 │ 108.85 │ 109.48 │ 104.98 │ 107.58 │ 107.58 │ 144981000 │ nan │ nan │ ├───┼────────────┼────────┼────────┼────────┼────────┼───────────┼───────────┼─────────┼─────────┤ │ 9 │ 2020-01-15 │ 105.95 │ 107.57 │ 103.36 │ 103.70 │ 103.70 │ 86844000 │ 77.00 │ nan │ └───┴────────────┴────────┴────────┴────────┴────────┴───────────┴───────────┴─────────┴─────────┘ (🦋) /forecast/ $ clean TSLA Namespace(drop='', fill='', help=False, limit=5, target_dataset='TSLA') Successfully cleaned 'TSLA' dataset "},{"id":920,"href":"/OpenBBTerminal/terminal/forecast/tcn/","title":"Tcn","parent":"Introduction to Forecast","content":"usage: tcn [--num-filters NUM_FILTERS] [--weight-norm WEIGHT_NORM] [--dilation-base DILATION_BASE] [--past-covariates PAST_COVARIATES] [--all-past-covariates] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-i INPUT_CHUNK_LENGTH] [-o OUTPUT_CHUNK_LENGTH] [--force-reset FORCE_RESET] [--save-checkpoints SAVE_CHECKPOINTS] [--model-save-name MODEL_SAVE_NAME] [--n-epochs N_EPOCHS] [--dropout DROPOUT] [--batch-size BATCH_SIZE] [--end S_END_DATE] [--start S_START_DATE] [--learning-rate LEARNING_RATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform TCN forecast.\noptional arguments: --num-filters NUM_FILTERS The number of filters in a convolutional layer of the TCN (default: 3) --weight-norm WEIGHT_NORM Boolean value indicating whether to use weight normalization. (default: True) --dilation-base DILATION_BASE The base of the exponent that will determine the dilation on every level. (default: 2) --past-covariates PAST_COVARIATES Past covariates(columns/features) in same dataset. Comma separated. (default: None) --all-past-covariates Adds all rows as past covariates except for date and the target column. (default: False) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -i INPUT_CHUNK_LENGTH, --input-chunk-length INPUT_CHUNK_LENGTH Number of past time steps for forecasting module at prediction time. (default: 14) -o OUTPUT_CHUNK_LENGTH, --output-chunk-length OUTPUT_CHUNK_LENGTH The length of the forecast of the model. (default: 5) --force-reset FORCE_RESET If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). (default: True) --save-checkpoints SAVE_CHECKPOINTS Whether to automatically save the untrained model and checkpoints. (default: True) --model-save-name MODEL_SAVE_NAME Name of the model to save. (default: tcn_model) --n-epochs N_EPOCHS Number of epochs over which to train the model. (default: 300) --dropout DROPOUT Fraction of neurons afected by Dropout. (default: 0.1) --batch-size BATCH_SIZE Number of time series (input and output) used in each training pass (default: 32) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --learning-rate LEARNING_RATE Learning rate during training. (default: 0.001) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about tcn' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:08 (🦋) /forecast/ $ tcn GME 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:01\u0026lt;00:00, 111.85it/s] TCN model obtains MAPE: 19.12% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 135.73 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 142.42 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 140.68 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 152.98 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 154.55 │ └─────────────────────┴────────────┘ "},{"id":921,"href":"/OpenBBTerminal/terminal/forecast/tft/","title":"Tft","parent":"Introduction to Forecast","content":"usage: tft [--lstm-layers LSTM_LAYERS] [--num-attention-heads NUM_ATTENTION_HEADS] [--full-attention] [--hidden-continuous-size HIDDEN_CONTINUOUS_SIZE] [--hidden-size HIDDEN_SIZE] [--past-covariates PAST_COVARIATES] [--all-past-covariates] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-i INPUT_CHUNK_LENGTH] [-o OUTPUT_CHUNK_LENGTH] [--force-reset FORCE_RESET] [--save-checkpoints SAVE_CHECKPOINTS] [--model-save-name MODEL_SAVE_NAME] [--n-epochs N_EPOCHS] [--dropout DROPOUT] [--batch-size BATCH_SIZE] [--end S_END_DATE] [--start S_START_DATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform TFT forecast (Temporal Fusion Transformer).\noptional arguments: --lstm-layers LSTM_LAYERS Number of LSTM layers. (default: 1) --num-attention-heads NUM_ATTENTION_HEADS Number of attention heads. (default: 4) --full-attention Whether to apply a multi-head attention query. (default: False) --hidden-continuous-size HIDDEN_CONTINUOUS_SIZE Default hidden size for processing continuous variables. (default: 8) --hidden-size HIDDEN_SIZE Size for feature maps for each hidden RNN layer (h_n) (default: 16) --past-covariates PAST_COVARIATES Past covariates(columns/features) in same dataset. Comma separated. (default: None) --all-past-covariates Adds all rows as past covariates except for date and the target column. (default: False) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -i INPUT_CHUNK_LENGTH, --input-chunk-length INPUT_CHUNK_LENGTH Number of past time steps for forecasting module at prediction time. (default: 14) -o OUTPUT_CHUNK_LENGTH, --output-chunk-length OUTPUT_CHUNK_LENGTH The length of the forecast of the model. (default: 5) --force-reset FORCE_RESET If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). (default: True) --save-checkpoints SAVE_CHECKPOINTS Whether to automatically save the untrained model and checkpoints. (default: True) --model-save-name MODEL_SAVE_NAME Name of the model to save. (default: tft_model) --n-epochs N_EPOCHS Number of epochs over which to train the model. (default: 300) --dropout DROPOUT Fraction of neurons afected by Dropout. (default: 0.1) --batch-size BATCH_SIZE Number of time series (input and output) used in each training pass (default: 32) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about tft' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:03 (🦋) /forecast/ $ tft GME 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:07\u0026lt;00:00, 15.10it/s] TFT model obtains MAPE: 44.60% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 169.69 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 168.53 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 167.33 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 167.23 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 165.82 │ └─────────────────────┴────────────┘ "},{"id":922,"href":"/OpenBBTerminal/terminal/forecast/theta/","title":"Theta","parent":"Introduction to Forecast","content":"usage: theta [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-s {N,A,M}] [-p SEASONAL_PERIODS] [-w START_WINDOW] [--end S_END_DATE] [--start S_START_DATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform Theta forecast.\noptional arguments: --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -s {N,A,M}, --seasonal {N,A,M} Seasonality: N: None, A: Additive, M: Multiplicative. (default: M) -p SEASONAL_PERIODS, --periods SEASONAL_PERIODS Seasonal periods: 4: Quarterly, 7: Daily (default: 7) -w START_WINDOW, --window START_WINDOW Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about theta' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:01 (🦋) /forecast/ $ theta GME 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:23\u0026lt;00:00, 4.88it/s] Theta Model obtains MAPE: 12.71% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 145.41 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 147.28 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 147.28 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 148.66 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 147.18 │ └─────────────────────┴────────────┘ "},{"id":923,"href":"/OpenBBTerminal/terminal/forecast/trans/","title":"Trans","parent":"Introduction to Forecast","content":"usage: trans [--d-model D_MODEL] [--nhead NHEAD] [--num_encoder_layers NUM_ENCODER_LAYERS] [--num_decoder_layers NUM_DECODER_LAYERS] [--dim_feedforward DIM_FEEDFORWARD] [--activation {relu,gelu}] [--past-covariates PAST_COVARIATES] [--all-past-covariates] [--naive] [-d {AAPL}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-i INPUT_CHUNK_LENGTH] [-o OUTPUT_CHUNK_LENGTH] [--force-reset FORCE_RESET] [--save-checkpoints SAVE_CHECKPOINTS] [--model-save-name MODEL_SAVE_NAME] [--n-epochs N_EPOCHS] [--dropout DROPOUT] [--batch-size BATCH_SIZE] [--end S_END_DATE] [--start S_START_DATE] [--residuals] [--forecast-only] [--export-pred-raw] [-h] [--export EXPORT] Perform Transformer forecast.\noptional arguments: --d-model D_MODEL Number of expected features in inputs. (default: 64) --nhead NHEAD Number of head in the attention mechanism. (default: 4) --num_encoder_layers NUM_ENCODER_LAYERS The number of encoder leayers in the encoder. (default: 3) --num_decoder_layers NUM_DECODER_LAYERS The number of decoder leayers in the encoder. (default: 3) --dim_feedforward DIM_FEEDFORWARD The dimension of the feedforward model. (default: 512) --activation {relu,gelu} Number of LSTM layers. (default: relu) --past-covariates PAST_COVARIATES Past covariates(columns/features) in same dataset. Comma separated. (default: None) --all-past-covariates Adds all rows as past covariates except for date and the target column. (default: False) --naive Show the naive baseline for a model. (default: False) -d {AAPL}, --target-dataset {AAPL} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -i INPUT_CHUNK_LENGTH, --input-chunk-length INPUT_CHUNK_LENGTH Number of past time steps for forecasting module at prediction time. (default: 14) -o OUTPUT_CHUNK_LENGTH, --output-chunk-length OUTPUT_CHUNK_LENGTH The length of the forecast of the model. (default: 5) --force-reset FORCE_RESET If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). (default: True) --save-checkpoints SAVE_CHECKPOINTS Whether to automatically save the untrained model and checkpoints. (default: True) --model-save-name MODEL_SAVE_NAME Name of the model to save. (default: trans_model) --n-epochs N_EPOCHS Number of epochs over which to train the model. (default: 300) --dropout DROPOUT Fraction of neurons afected by Dropout. (default: 0) --batch-size BATCH_SIZE Number of time series (input and output) used in each training pass (default: 32) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) --export-pred-raw Export predictions to a csv file. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) For more information and examples, use 'about trans' to access the related guide. Example:\n2022 Jul 23, 10:36 (🦋) /forecast/ $ load GME_20220719_123734.csv -a GME 2022 Jul 23, 11:01 (🦋) /forecast/ $ trans GME 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:23\u0026lt;00:00, 4.88it/s] Transformer model obtains MAPE: 13.11% Actual price: $ 146.64 ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-07-19 00:00:00 │ $ 145.63 │ ├─────────────────────┼────────────┤ │ 2022-07-20 00:00:00 │ $ 142.28 │ ├─────────────────────┼────────────┤ │ 2022-07-21 00:00:00 │ $ 137.67 │ ├─────────────────────┼────────────┤ │ 2022-07-22 00:00:00 │ $ 137.33 │ ├─────────────────────┼────────────┤ │ 2022-07-25 00:00:00 │ $ 130.62 │ └─────────────────────┴────────────┘ "},{"id":924,"href":"/OpenBBTerminal/terminal/forecast/which/","title":"Which","parent":"Introduction to Forecast","content":"usage: which [-h] Show library versions of required packages.\noptional arguments: -h, --help show this help message (default: False) Example:\n2022 Sep 15, 00:04 (🦋) /forecast/ $ which which Current Compute Device (CPU or GPU): CPU Current RAM: 16.0G Recommended Max dataset size based on current RAM: 5.0G Torch version: 1.11.0 Darts version: 0.21.0 "},{"id":925,"href":"/OpenBBTerminal/terminal/forex/candle/","title":"Candle","parent":"Introduction to Forex","content":"usage: candle [--ma MOV_AVG] [-h] Show candle for loaded fx data\noptional arguments: --ma MOV_AVG Add moving average in number of days to plot and separate by a comma. Value for ma (moving average) keyword needs to be greater than 1. (default: ) -h, --help show this help message (default: False) "},{"id":926,"href":"/OpenBBTerminal/terminal/forex/fwd/","title":"Fwd","parent":"Introduction to Forex","content":"usage: fwd [-h] [--export EXPORT] Get forward rates for loaded pair.\noptions: -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) Sample usage:\n Forward rates for EUR/USD Forward rates for EUR/USD ┏━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┓ ┃ Expirations ┃ Ask ┃ Bid ┃ Mid ┃ Points ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━┩ │ Overnight │ 1.0791 │ 1.0790 │ 1.0791 │ 0.3100 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Tomorrow Next │ 1.0791 │ 1.0790 │ 1.0791 │ 0.3100 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Spot Next │ 1.0792 │ 1.0791 │ 1.0791 │ 0.9050 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ One Week │ 1.0793 │ 1.0792 │ 1.0792 │ 2.0800 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Two Weeks │ 1.0795 │ 1.0795 │ 1.0795 │ 4.5000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Three Weeks │ 1.0798 │ 1.0798 │ 1.0798 │ 7.6400 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ One Month │ 1.0803 │ 1.0802 │ 1.0803 │ 12.4195 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Two Months │ 1.0818 │ 1.0817 │ 1.0818 │ 27.3000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Three Months │ 1.0838 │ 1.0835 │ 1.0836 │ 45.9245 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Four Months │ 1.0858 │ 1.0857 │ 1.0857 │ 67.0500 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Five Months │ 1.0879 │ 1.0878 │ 1.0878 │ 88.0500 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Six Months │ 1.0903 │ 1.0902 │ 1.0903 │ 112.5000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Seven Months │ 1.0925 │ 1.0924 │ 1.0925 │ 134.4000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Eight Months │ 1.0949 │ 1.0947 │ 1.0948 │ 157.7000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Nine Months │ 1.0983 │ 1.0981 │ 1.0982 │ 191.8000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Ten Months │ 1.1007 │ 1.1004 │ 1.1006 │ 215.3000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Eleven Months │ 1.1030 │ 1.1029 │ 1.1030 │ 239.3000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ One Year │ 1.1059 │ 1.1057 │ 1.1058 │ 267.7000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Two Years │ 1.1311 │ 1.1306 │ 1.1309 │ 518.3000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Three Years │ 1.1500 │ 1.1493 │ 1.1497 │ 706.2000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Four Years │ 1.1712 │ 1.1691 │ 1.1702 │ 911.2000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Five Years │ 1.1890 │ 1.1859 │ 1.1874 │ 1084.0000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Six Years │ 1.2068 │ 1.2042 │ 1.2055 │ 1264.5000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Seven Years │ 1.2236 │ 1.2200 │ 1.2218 │ 1427.5000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Ten Years │ 1.2661 │ 1.2595 │ 1.2628 │ 1837.5000 │ └───────────────┴────────┴────────┴────────┴───────────┘ "},{"id":927,"href":"/OpenBBTerminal/terminal/forex/load/","title":"Load","parent":"Introduction to Forex","content":"usage: load [-t TICKER] [--source {yf,av,polygon}] [-r {i,d,w,m}] [-i {1min,2min,5min,15min,30min,60min,90min,1hour,1day,5day,1week,1month,3month}] [-s START_DATE] [-h] Load historical exchange rate data. Available data sources are Polygon, Alpha Vantage and YahooFinance. Main default source is polygon, if a key is provided. To change it use \u0026ndash;source av\noptions: -t TICKER, --ticker TICKER Currency pair to load. (default: None) --source {yf,av,polygon} Source of historical data (default: polygon) -r {i,d,w,m}, --resolution {i,d,w,m} [Alphavantage only] Resolution of data. Can be intraday, daily, weekly or monthly (default: d) -i {1min,2min,5min,15min,30min,60min,90min,1hour,1day,5day,1week,1month,3month}, --interval {1min,2min,5min,15min,30min,60min,90min,1hour,1day,5day,1week,1month,3month} Interval of intraday data. Options: [YahooFinance] 1min, 2min, 5min, 15min, 30min, 60min, 90min, 1hour, 1day, 5day, 1week, 1month, 3month. [AlphaAdvantage] 1min, 5min, 15min, 30min, 60min (default: 1day) -s START_DATE, --start_date START_DATE Start date of data. (default: 2021-05-26 15:04:04.138183) -h, --help show this help message (default: False) "},{"id":928,"href":"/OpenBBTerminal/terminal/forex/oanda/","title":"Oanda","parent":"Introduction to Forex","content":"OANDA Corporation is a foreign exchange company that provides internet-based forex trading and currency information services.\nAvailable commands:    Calendar     Cancel     Candles     Closetrade     Orderbook     Pending     Positionbook     Positions     "},{"id":929,"href":"/OpenBBTerminal/terminal/forex/oanda/calendar/","title":"Calendar","parent":"Oanda","content":"usage: calendar [-d DAYS] [-h] Show Calendar Data\noptional arguments: -d DAYS, --days DAYS The number of days to search for, up to 30 forward or backward use negative numbers to search back. -h, --help show this help message "},{"id":930,"href":"/OpenBBTerminal/terminal/forex/oanda/cancel/","title":"Cancel","parent":"Oanda","content":"usage: cancel [-i ORDERID] [-h] Cancel a Pending Order.\noptional arguments: -i ORDERID, --id ORDERID The pending order ID to cancel. -h, --help Show this help message "},{"id":931,"href":"/OpenBBTerminal/terminal/forex/oanda/candles/","title":"Candles","parent":"Oanda","content":"usage: candles [-g GRANULARITY] [-l CANDLECOUNT] [-a] [-b] [-c] [-e] [-o] [-r] [-s] [-v] [-h] Display Candle Data\noptional arguments: -g GRANULARITY, --granularity GRANULARITY The timeframe to get for the candle chart (Seconds: S5, S10, S15, S30 Minutes: M1, M2, M4, M5, M10, M15, M30 Hours: H1, H2, H3, H4, H6, H8, H12 Day (default): D, Week: W Month: M -l CANDLECOUNT, --limit CANDLECOUNT The number of candles to retrieve. Default:180 -a, --ad Adds ad (Accumulation/Distribution Indicator) to the chart -b, --bbands Adds Bollinger Bands to the chart -c, --cci Adds cci (Commodity Channel Index) to the chart -e, --ema Adds ema (Exponential Moving Average) to the chart -o, --obv Adds obv (On Balance Volume) to the chart -r, --rsi Adds rsi (Relative Strength Index) to the chart -s, --sma Adds sma (Simple Moving Average) to the chart -v, --vwap Adds vwap (Volume Weighted Average Price) to the chart -h, --help show this help message "},{"id":932,"href":"/OpenBBTerminal/terminal/forex/oanda/closetrade/","title":"Closetrade","parent":"Oanda","content":"usage: closetrade [-i ORDERID] [-u UNITS] [-h] Close a trade by id.\noptional arguments: -i ORDERID, --id ORDERID The Trade ID to close. -u UNITS, --units UNITS The number of units on the trade to close. If not set it defaults to all units. -h, --help Show this help message "},{"id":933,"href":"/OpenBBTerminal/terminal/forex/oanda/orderbook/","title":"Orderbook","parent":"Oanda","content":"usage: orderbook [-h] Plot an orderbook for an instrument if Oanda provides one.\noptional arguments: -h, --help show this help message "},{"id":934,"href":"/OpenBBTerminal/terminal/forex/oanda/pending/","title":"Pending","parent":"Oanda","content":"usage: pending [-h] Get information about pending orders.\noptional arguments: -h, --help show this help message "},{"id":935,"href":"/OpenBBTerminal/terminal/forex/oanda/positionbook/","title":"Positionbook","parent":"Oanda","content":"usage: positionbook [-h] Plot a position book for an instrument if Oanda provides one.\noptional arguments: -h, --help show this help message "},{"id":936,"href":"/OpenBBTerminal/terminal/forex/oanda/positions/","title":"Positions","parent":"Oanda","content":"usage: positions [-h] Get information about open positions.\noptional arguments: -h, --help show this help message "},{"id":937,"href":"/OpenBBTerminal/terminal/forex/quote/","title":"Quote","parent":"Introduction to Forex","content":"usage: quote [-h] Get current exchange rate quote\noptional arguments: -h, --help show this help message (default: False) 2022 Feb 15, 04:06 (✨) /forex/ $ quote Quote for AUD/CHF Last refreshed : 2022-08-26 22:28:00 Last value : 0.6652299761772156 "},{"id":938,"href":"/OpenBBTerminal/terminal/forex/select/","title":"Select","parent":"Introduction to Forex","content":"Select is separated in two options, \u0026ldquo;from\u0026rdquo; and \u0026ldquo;to\u0026rdquo;:\nusage: from [-n FROM_SYMBOL] [-h] Select the \u0026ldquo;from\u0026rdquo; currency symbol in a forex pair\noptional arguments: -n FROM_SYMBOL, --name FROM_SYMBOL From currency (default: None) -h, --help show this help message (default: False) usage: to [-n TO_SYMBOL] [-h] Select the \u0026ldquo;to\u0026rdquo; currency symbol in a forex pair\noptional arguments: -n TO_SYMBOL, --name TO_SYMBOL To currency (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 04:10 (✨) /forex/ $ from USD Selected pair From: USD To: USD 2022 Feb 15, 04:10 (✨) /forex/ $ to EUR Selected pair From: USD To: EUR "},{"id":939,"href":"/OpenBBTerminal/terminal/funds/country/","title":"Country","parent":"Introduction to Funds","content":"usage: country [-n NAME [NAME ...]] [-h] Set a country for funds\noptional arguments: -n NAME [NAME ...], --name NAME [NAME ...] country to select (default: None) -h, --help show this help message (default: False) "},{"id":940,"href":"/OpenBBTerminal/terminal/funds/equity/","title":"Equity","parent":"Introduction to Funds","content":"usage: equity [-h] Show fund equity holdings.\noptional arguments: -h, --help show this help message (default: False) 2022 Feb 15, 03:48 (✨) /funds/ $ equity VFIAX Equity Holdings ┌─────────────────────────┬─────────────┐ │ Equity │ Holding │ ├─────────────────────────┼─────────────┤ │ Price To Cash Flow │ 1757.00 │ ├─────────────────────────┼─────────────┤ │ Price To Sales │ 296.00 │ ├─────────────────────────┼─────────────┤ │ Price To Book Cat │ 498.00 │ ├─────────────────────────┼─────────────┤ │ Price To Earnings Cat │ 2632.00 │ ├─────────────────────────┼─────────────┤ │ Median Market Cap Cat │ 26587520.00 │ ├─────────────────────────┼─────────────┤ │ 3Yr Earnings Growth Cat │ 1953.00 │ ├─────────────────────────┼─────────────┤ │ 3Y Earnings Growth │ 1872.00 │ ├─────────────────────────┼─────────────┤ │ Median Market Cap │ 19745245.00 │ ├─────────────────────────┼─────────────┤ │ Price To Earnings │ 2646.00 │ ├─────────────────────────┼─────────────┤ │ Price To Book │ 442.00 │ ├─────────────────────────┼─────────────┤ │ Price To Sales Cat │ 279.00 │ ├─────────────────────────┼─────────────┤ │ Price To Cashflow Cat │ 1761.00 │ └─────────────────────────┴─────────────┘ "},{"id":941,"href":"/OpenBBTerminal/terminal/funds/info/","title":"Info","parent":"Introduction to Funds","content":"usage: info [--fund FUND] [--name] [-h] Get fund information.\noptional arguments: --fund FUND Fund string to search for (default: None) --name Flag to indicate name provided instead of symbol. (default: False) -h, --help show this help message (default: False)  Vanguard 500 Index Fund Admiral Shares Information ┌────────────────┬────────────────────────────────────────┐ │ Info │ Value │ ├────────────────┼────────────────────────────────────────┤ │ Fund Name │ vanguard 500 index fund admiral shares │ ├────────────────┼────────────────────────────────────────┤ │ 1-Year Change │ 12.27% │ ├────────────────┼────────────────────────────────────────┤ │ TTM Yield │ 1.30% │ ├────────────────┼────────────────────────────────────────┤ │ ROE │ 32.76% │ ├────────────────┼────────────────────────────────────────┤ │ Issuer │ Vanguard │ ├────────────────┼────────────────────────────────────────┤ │ Turnover │ 1% │ ├────────────────┼────────────────────────────────────────┤ │ ROA │ 12.24% │ ├────────────────┼────────────────────────────────────────┤ │ Inception Date │ 13/11/2000 │ ├────────────────┼────────────────────────────────────────┤ │ Total Assets │ 429580000000.00 │ ├────────────────┼────────────────────────────────────────┤ │ Expenses │ 0.04% │ ├────────────────┼────────────────────────────────────────┤ │ Market Cap │ 230900000000.00 │ └────────────────┴────────────────────────────────────────┘ "},{"id":942,"href":"/OpenBBTerminal/terminal/funds/load/","title":"Load","parent":"Introduction to Funds","content":"usage: load [--fund FUND [FUND ...]] [--name] [-s START] [-e END] [-h] Get historical data.\noptional arguments: --fund FUND [FUND ...] Fund string to search for (default: None) --name Flag to indicate name provided instead of symbol. (default: False) -s START, --start START The starting date (format YYYY-MM-DD) of the fund (default: 2020-12-27) -e END, --end END The ending date (format YYYY-MM-DD) of the fund (default: 2021-12-28) -h, --help show this help message (default: False) "},{"id":943,"href":"/OpenBBTerminal/terminal/funds/overview/","title":"Overview","parent":"Introduction to Funds","content":"usage: overview [-l LIMIT] [-h] [--export {csv,json,xlsx}] Show overview of funds from selected country.\noptional arguments: -l LIMIT, --limit LIMIT Number of search results to show (default: 20) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Sample usage:\n2022 Feb 15, 03:50 (✨) /funds/ $ overview Fund overview for United States ┌──────────────────────────────────────────────────────────────────┬───────────────────────────────────────────────────┬────────┬────────┬────────┬──────────┬─────────────┐ │ name │ full_name │ symbol │ last │ change │ currency │ Assets (1B) │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Vanguard 500 Index Fund Admiral Shares │ Vanguard 500 Index Admiral │ VFIAX │ 406.79 │ -0.37% │ USD │ 429.58 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Fidelity® 500 Index Fund │ Fidelity 500 Index Institutional Prem │ FXAIX │ 152.90 │ -0.38% │ USD │ 387.09 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Vanguard Total Stock Market Index Fund Admiral Shares │ Vanguard Total Stock Market Index Admiral │ VTSAX │ 108.10 │ -0.40% │ USD │ 321.58 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Vanguard Total Stock Market Index Fund Institutional Plus Shares │ Vanguard Total Stock Market Index Instl Plus │ VSMPX │ 202.76 │ -0.40% │ USD │ 289.35 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Fidelity® Government Money Market Fund │ Fidelity Government Money Market Fund │ SPAXX │ 1.00 │ 0% │ USD │ 230.36 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Vanguard Total Stock Market Index Fund Institutional Shares │ Vanguard Total Stock Market Index I │ VITSX │ 108.12 │ -0.40% │ USD │ 230.26 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Fidelity® Government Cash Reserves │ Fidelityֲ® Government Cash Reserves │ FDRXX │ 1.00 │ 0% │ USD │ 226.13 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Vanguard Total International Stock Index Fund Investor Shares │ Vanguard Total International Stock Index Inv │ VGTSX │ 19.75 │ -0.70% │ USD │ 188.28 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Vanguard Institutional Index Fund Institutional Plus Shares │ Vanguard Institutional Index Instl Pl │ VIIIX │ 375.32 │ -0.38% │ USD │ 167.72 │ ├──────────────────────────────────────────────────────────────────┼───────────────────────────────────────────────────┼────────┼────────┼────────┼──────────┼─────────────┤ │ Vanguard Total Bond Market Ii Index Fund Investor Shares │ Vanguard Total Bond Market II Index Fund Investor │ VTBIX │ 10.59 │ -0.56% │ USD │ 134.58 │ └──────────────────────────────────────────────────────────────────┴───────────────────────────────────────────────────┴────────┴────────┴────────┴──────────┴─────────────┘ "},{"id":944,"href":"/OpenBBTerminal/terminal/funds/plot/","title":"Plot","parent":"Introduction to Funds","content":"usage: plot [-h] [--export {png,jpg,pdf,svg}] Plot historical data.\noptional arguments: -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export figure into png, jpg, pdf, svg (default: ) "},{"id":945,"href":"/OpenBBTerminal/terminal/funds/search/","title":"Search","parent":"Introduction to Funds","content":"usage: search [-b {name,issuer,isin,symbol}] [--fund FUND] [-s {country,name,symbol,issuer,isin,asset_class,currency,underlying}] [-l LIMIT] [-a] [-h] Search mutual funds in selected country based on selected field.\noptional arguments: -b {name,issuer,isin,symbol}, --by {name,issuer,isin,symbol} Field to search by (default: name) --fund FUND Fund string to search for (default: None) -s {country,name,symbol,issuer,isin,asset_class,currency,underlying}, --sortby {country,name,symbol,issuer,isin,asset_class,currency,underlying} Column to sort by (default: name) -l LIMIT, --limit LIMIT Number of search results to show (default: 10) -a, --ascend Sort in ascending order (default: False) -h, --help show this help message (default: False) "},{"id":946,"href":"/OpenBBTerminal/terminal/funds/sector/","title":"Sector","parent":"Introduction to Funds","content":"usage: sector [-h] Show fund sector weighting.\noptional arguments: -h, --help show this help message (default: False)  2022 Feb 15, 03:48 (✨) /funds/ $ sector VFIAX Sector Weightings ┌────────────────────────┬────────────┐ │ Sector │ Weight (%) │ ├────────────────────────┼────────────┤ │ Technology │ 24.24 │ ├────────────────────────┼────────────┤ │ Financial Services │ 14.20 │ ├────────────────────────┼────────────┤ │ Healthcare │ 13.10 │ ├────────────────────────┼────────────┤ │ Consumer Cyclical │ 12.01 │ ├────────────────────────┼────────────┤ │ Communication Services │ 11.14 │ ├────────────────────────┼────────────┤ │ Industrials │ 8.86 │ ├────────────────────────┼────────────┤ │ Consumer Defensive │ 6.32 │ ├────────────────────────┼────────────┤ │ Energy │ 2.84 │ ├────────────────────────┼────────────┤ │ Real Estate │ 2.58 │ ├────────────────────────┼────────────┤ │ Utilities │ 2.43 │ ├────────────────────────┼────────────┤ │ Basic Materials │ 2.27 │ └────────────────────────┴────────────┘ "},{"id":947,"href":"/OpenBBTerminal/terminal/futures/curve/","title":"Curve","parent":"Introduction to Futures","content":"usage: curve [-t Futures symbol] [-h] [--export EXPORT] [--raw] Display futures curve. [Source: YahooFinance]\noptional arguments: -t Futures symbol, --ticker Futures symbol Future curve to be selected (default: ) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --raw Flag to display raw data (default: False) 2022 Oct 18, 19:17 (🦋) /futures/ $ curve BLK "},{"id":948,"href":"/OpenBBTerminal/terminal/futures/historical/","title":"Historical","parent":"Introduction to Futures","content":"usage: historical [-t TICKER] [-s START] [-e EXPIRY] [-h] [--export EXPORT] [--raw] Display futures historical. [Source: YahooFinance]\noptional arguments: -t TICKER, --ticker TICKER Future ticker to display timeseries separated by comma when multiple, e.g.: BLK,QI (default: ) -s START, --start START Initial date. Default: 3 years ago (default: 2019-10-20 00:12:05.223144) -e EXPIRY, --expiry EXPIRY Select future expiry date with format YYYY-MM (default: ) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) 2022 Oct 18, 19:16 (🦋) /futures/ $ historical BLK 2022 Oct 18, 19:17 (🦋) /futures/ $ historical BLK -e 2022-12 "},{"id":949,"href":"/OpenBBTerminal/terminal/futures/search/","title":"Search","parent":"Introduction to Futures","content":"usage: search [-e {NYB,CMX,CME,CBT,NYM}] [-c {metals,agriculture,index,hydrocarbon,bonds,currency}] [-d DESCRIPTION [DESCRIPTION ...]] [-h] [--export EXPORT] Search futures. [Source: YahooFinance]\noptional arguments: -e {NYB,CMX,CME,CBT,NYM}, --exchange {NYB,CMX,CME,CBT,NYM} Select the exchange where the future exists (default: ) -c {metals,agriculture,index,hydrocarbon,bonds,currency}, --category {metals,agriculture,index,hydrocarbon,bonds,currency} Select the category where the future exists (default: ) -d DESCRIPTION [DESCRIPTION ...], --description DESCRIPTION [DESCRIPTION ...] Select the description future you are interested in (default: ) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) 2022 Oct 18, 19:08 (🦋) /futures/ $ search -d silver ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┓ ┃ Ticker ┃ Description ┃ Exchange ┃ Category ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━┩ │ YI │ 1,000 oz Mini Silver Futures │ NYB │ metals │ ├────────┼──────────────────────────────┼──────────┼──────────┤ │ QI │ E-mini Silver Futures │ CMX │ metals │ ├────────┼──────────────────────────────┼──────────┼──────────┤ │ SIL │ E-mini Micro Silver Futures │ CMX │ metals │ ├────────┼──────────────────────────────┼──────────┼──────────┤ │ SIT │ Silver TAS Futures │ CMX │ metals │ └────────┴──────────────────────────────┴──────────┴──────────┘ 2022 Oct 18, 19:10 (🦋) /futures/ $ search -c metals --exchange NYB ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┓ ┃ Ticker ┃ Description ┃ Exchange ┃ Category ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━┩ │ YI │ 1,000 oz Mini Silver Futures │ NYB │ metals │ ├────────┼──────────────────────────────┼──────────┼──────────┤ │ YG │ E-mini Gold Futures │ NYB │ metals │ └────────┴──────────────────────────────┴──────────┴──────────┘ "},{"id":950,"href":"/OpenBBTerminal/terminal/jupyter/","title":"Jupyter","parent":"Terminal","content":"Create notebook templates (through papermill) which can be run on different tickers. This level of automation allows speeding up the development of your investment thesis and reduce human error.\nAvailable commands    Dashboards     Chains     Correlations     Forecast     Forecasting     Shortdata     Stocks     Vsurf       Reports     Crypto     Economy     Equity     Etf     Forecast     Forex     Portfolio     Run       "},{"id":951,"href":"/OpenBBTerminal/terminal/jupyter/dashboards/","title":"Dashboards","parent":"Jupyter","content":"Available commands:    Chains     Correlations     Forecast     Forecasting     Shortdata     Stocks     Vsurf     "},{"id":952,"href":"/OpenBBTerminal/terminal/jupyter/dashboards/chains/","title":"Chains","parent":"Dashboards","content":"usage: chains [-j] [-h] Opens a voila dashboard showing option chain information for a given ticker and expiration\noptional arguments: -j, --jupyter opens in jupyterlab instead of voila (default: False) -d, --dark runs voila in dark mode (default: False) -n, --no-input does not ask the user if it can open a server (default: False) -h, --help show this help message "},{"id":953,"href":"/OpenBBTerminal/terminal/jupyter/dashboards/correlations/","title":"Correlations","parent":"Dashboards","content":"usage: correlations [-j] [-h] Opens a voila dashboard showing the correlations between stocks\noptional arguments: -j, --jupyter opens in jupyterlab instead of voila (default: False) -d, --dark runs voila in dark mode (default: False) -n, --no-input does not ask the user if it can open a server (default: False) -h, --help show this help message "},{"id":954,"href":"/OpenBBTerminal/terminal/jupyter/dashboards/forecast/","title":"Forecast","parent":"Dashboards","content":"usage: forecast [-j] [-n] [-d] [-h] Shows forecast dashboard\noptional arguments: -j, --jupyter Shows dashboard in jupyter-lab. (default: False) -n, --no-input Skips confirmation to run server. (default: False) -d, --dark Whether to show voila in dark mode (default: False) -h, --help show this help message (default: False) "},{"id":955,"href":"/OpenBBTerminal/terminal/jupyter/dashboards/forecasting/","title":"Forecasting","parent":"Dashboards","content":"usage: forecast [-n] [-h] Shows streamlit forecast dashboard\noptional arguments: -n, --no-input Skips confirmation to run server. (default: False) -h, --help show this help message (default: False) "},{"id":956,"href":"/OpenBBTerminal/terminal/jupyter/dashboards/shortdata/","title":"Shortdata","parent":"Dashboards","content":"usage: shortdata [-j] [-h] [--export {csv,json,xlsx}] Shows shortdata dashboard\noptional arguments: -j, --jupyter opens in jupyterlab instead of voila (default: False) -d, --dark runs voila in dark mode (default: False) -n, --no-input does not ask the user if it can open a server (default: False) -h, --help show this (help message "},{"id":957,"href":"/OpenBBTerminal/terminal/jupyter/dashboards/stocks/","title":"Stocks","parent":"Dashboards","content":"usage: stocks [-j] [-h] Opens a voila dashboard showing historical data for stocks\noptional arguments: -j, --jupyter opens in jupyterlab instead of voila (default: False) -d, --dark runs voila in dark mode (default: False) -n, --no-input does not ask the user if it can open a server (default: False) -h, --help show this help message "},{"id":958,"href":"/OpenBBTerminal/terminal/jupyter/dashboards/vsurf/","title":"Vsurf","parent":"Dashboards","content":"usage: vsurf [-j] [-h] Shows the volatility surface for options\noptional arguments: -j, --jupyter opens in jupyterlab instead of voila (default: False) -d, --dark runs voila in dark mode (default: False) -n, --no-input does not ask the user if it can open a server (default: False) -h, --help show this help message "},{"id":959,"href":"/OpenBBTerminal/terminal/jupyter/reports/","title":"Reports","parent":"Jupyter","content":"Available commands:    Crypto     Economy     Equity     Etf     Forecast     Forex     Portfolio     Run     "},{"id":960,"href":"/OpenBBTerminal/terminal/jupyter/reports/crypto/","title":"Crypto","parent":"Reports","content":"usage: chains [-j] [-h] Opens a voila dashboard showing option chain information for a given ticker and expiration\noptional arguments: -j, --jupyter opens in jupyterlab instead of voila (default: False) -d, --dark runs voila in dark mode (default: False) -n, --no-input does not ask the user if it can open a server (default: False) -h, --help show this help message "},{"id":961,"href":"/OpenBBTerminal/terminal/jupyter/reports/economy/","title":"Economy","parent":"Reports","content":"usage: economy [-h] Run economy report. optional arguments: -h, --help show this help message (default: False) "},{"id":962,"href":"/OpenBBTerminal/terminal/jupyter/reports/equity/","title":"Equity","parent":"Reports","content":"usage: equity [--symbol SYMBOL] [-h] Run equity report. optional arguments: --symbol SYMBOL symbol (default: msft) -h, --help show this help message (default: False) "},{"id":963,"href":"/OpenBBTerminal/terminal/jupyter/reports/etf/","title":"Etf","parent":"Reports","content":"usage: etf [--symbol SYMBOL] [-h] Run etf report. optional arguments: --symbol SYMBOL symbol (default: VTI) -h, --help show this help message (default: False) "},{"id":964,"href":"/OpenBBTerminal/terminal/jupyter/reports/forecast/","title":"Forecast","parent":"Reports","content":"usage: forecast [--symbol SYMBOL] [-h] Run forecast report. optional arguments: --symbol SYMBOL symbol (default: VTI) -h, --help show this help message (default: False) "},{"id":965,"href":"/OpenBBTerminal/terminal/jupyter/reports/forex/","title":"Forex","parent":"Reports","content":"usage: forex [--symbol {AUDCHF,ZARPLN,DKKNZD,XAGUSD,USDRWF,MYREUR,ZAREUR,MWKGBP,USDBSD,ALLGBP,MXNZAR,HUFUSD,BRLARS,OMRAED,ZARUGX,GBPCZK,XAUCNY,MURGBP,EURLSL,EURBWP,AEDPKR,XAGBRL,XAUGBP,IDRKRW,BRICHF,VNDJPY,MADAUD,GBPBMD,USDTMT,HRKUSD,HUFPLN,HUFDKK,SGDGBP,KZTGBP,AUNUSD,EURCNY,HUFCAD,GBPSEK,ZARIDR,JPYTHB,MDLGBP,IDRCHF,KWDAED,SARJPY,GBPRON,ARSPEN,TWDCHF,INREUR,DKKCAD,USDCZK,AUDIDR,SARUSD,THBINR,XAUCAD,GHSGBP,EURKHR,ZMWZAR,ILSSEK,SGDTHB,EURKYD,USDMGA,ZARNOK,SGDCAD,SEKINR,DKKRUB,THBUSD,USDMYR,USDUZS,ZARSZL,JPYCLP,UAHUSD,JPYMXN,JPYNOK,AUDCNY,EURGYD,GBPBDT,PENUSD,ZARPHP,MXNARS,PLNCZK,GBPAUD,AEDAUD,RUBPLN,USDSDG,EURSCR,HKDMXN,RUBCHF,TRYJPY,OSOUSD,GBPMAD,EURTJS,PKREUR,EURCDF,AUDCAD,USDRSD,JPYCZK,BRLCLP,MWKUSD,ISKCHF,GBPBTN,BAMGBP,ILSZAR,SEKZAR,HUFZAR,QARAED,SARKWD,MYRHKD,RONZAR,JPYSAR,BHDPKR,DOPUSD,AUDGBP,INRHKD,XAUAUD,IDRAUD,XAUHKD,KRWSGD,AUDNZD,JPYGBP,KESUSD,KRWRUB,TNDGBP,USDEUR,BWPGBP,DKKMYR,GBPNGN,QARPKR,TWDCAD,BMDGBP,HUFJPY,GBPSCR,EURMVR,KHRGBP,LKRZAR,ZARBWP,EURIDR,GBPUAH,GBPGYD,ZARTND,KRWUSD,AUDMAD,ZARPKR,NZDGBP,AEDSAR,MYRIDR,XPTEUR,GHSZAR,SGDSEK,PENCAD,HKDZAR,SGDJPY,TRYUSD,GBPAMD,EURCOP,NZDZAR,DKKSGD,IDRTHB,AEDSEK,BDTGBP,AUDTHB,XAUKRW,GBPRUB,GBPYER,USDMVR,BRLMXN,TTDGBP,GBPBBD,EURPLN,SGDUSD,AUDILS,EURAED,NSOUSD,VRLCHF,SCRUSD,RWFUSD,ZARHKD,EURNZD,IDRZAR,TWDINR,KRWZAR,ZARNAD,HRKPLN,BAMUSD,EUREGP,NPRUSD,KRWTWD,XAUJPY,USDBHD,BNDGBP,EURBMD,EURNOK,MXNUSD,USDEGP,XPTGBP,ARSCOP,NZDCHF,NZDJPY,KRWCAD,EURBRL,DKKSEK,MALCHF,SOSUSD,GBPCUP,AUDCLP,EURUYU,EURUZS,UYUUSD,EURUSD,BWPZAR,NZDPLN,GBPLRD,IDRMYR,PABUSD,USDPKR,ARSCHF,MYRNZD,JODUSD,ARSHKD,EURMKD,EURLYD,XAGARS,ISKUSD,HKDSEK,USDTRY,RSDUSD,DKKAED,ZARMYR,KMFUSD,NGNZAR,IDRJPY,SARPKR,GBPMYR,ILSAUD,IDREUR,JPYAUD,QARUSD,GBPSLL,GBPEUR,PHPUSD,THBEUR,RUBEUR,USDMMK,XAGGBP,ZARARS,USDKMF,BZDUSD,SEKPLN,PLNJPY,GBPLBP,EURHNL,AUDPKR,KYDCAD,XAUZAR,MGAGBP,LRDUSD,NZDTRY,AUDHUF,USDLKR,EURNGN,BNDUSD,SGDIDR,MYRCAD,HKDPLN,EUROMR,EURSAR,GBPJPY,IDRHKD,MXNPEN,USDXPF,IQDGBP,USDPGK,INRCHF,NZDHKD,AUDHKD,BBDGBP,USDGTQ,NGNJPY,ARSSGD,GBPMOP,TWDMYR,BMDCAD,XPDUSD,USDDZD,EURBSD,SGDZAR,AUNCHF,ARSMXN,AUDFJD,UGXZAR,AUDARS,IQDUSD,MXNEUR,HKDAUD,XAGEUR,RONGBP,USDZMW,TRYSGD,INRSGD,GBPLAK,GBPMWK,EURKES,USDCUP,USDUYU,AUDJPY,XAGCAD,DKKCNY,USDJMD,MADGBP,ILSNOK,MUREUR,THBHKD,INRTHB,SAREUR,MYRGBP,AMDGBP,HKDARS,GBPARS,SGDAUD,INRTWD,BHDUSD,LRDGBP,GBPPAB,RONUSD,IDRNZD,MYRKRW,KMFGBP,ZARGHS,PLNMXN,USDHUF,ARECHF,BMDEUR,KYDGBP,AUDNOK,AUDCNH,TWDNZD,KWDEUR,EURZMW,KZTUSD,GBPBOB,GBPJMD,DKKCHF,EURCNH,SEKILS,AUDKRW,AWGGBP,HNLGBP,XAUEUR,NSOCHF,GBPLSL,USDBZD,ZARKES,SLLUSD,THBCHF,NOKUSD,EURCZK,HKDGBP,GBPTTD,MMKGBP,PGKGBP,BRLAUD,AEDDKK,EURBHD,JMDUSD,USDNGN,NOKRUB,SVCUSD,GBPQAR,LTLAUD,JPYTWD,USDRON,KRUCHF,SGDBRL,EGPPKR,EURJMD,MXNDKK,NZDMYR,USDLBP,MWKZAR,HRKAUD,MYRJPY,USDKWD,AUDBRL,EURYER,PLNGBP,IDRTWD,EGPEUR,EURPYG,ILSAED,EURKZT,DKKZAR,FJDUSD,NBLUSD,AEDEUR,PLNNOK,XPTUSD,MXNBRL,USDNAD,ZARUSD,NOKINR,ARSZAR,BOBGBP,RWFZAR,GBPLYD,USDUGX,GBPCHF,DKKAUD,PLNCHF,USDBIF,AUDSGD,MXNCZK,PENGBP,NOKAED,USDMKD,MKDGBP,PKRUSD,EURPGK,THBPKR,HTGUSD,SGDPKR,LKRGBP,EURPKR,ZARMXN,USDMXN,USDHRK,INRJPY,FRNCHF,MXNCLP,GBPNOK,SGDPLN,USDARS,OMRUSD,DKKBGN,INRSEK,USDCAD,XPDGBP,KESZAR,JPYPKR,BDTJPY,NPRGBP,EURZAR,MYRPKR,PGKAUD,KYDEUR,DKKISK,SGDEUR,MYRZAR,PLNDKK,BRLPEN,ZMWUSD,TNDUSD,GHSEUR,PGKUSD,KYDBMD,SZLGBP,DKKMXN,BGNCAD,BRLCHF,INRMYR,GBPISK,SGDNOK,HKDTHB,TWDPKR,GBPPYG,NOKDKK,GBPTHB,EURJOD,EURUAH,RUBZAR,PENMXN,SGDNZD,HKDPKR,USDDOP,NZDHUF,KYDUSD,GBPBZD,EGPZAR,NZDUSD,KWDGBP,USDBAM,EURTTD,ZARCAD,AEDINR,EURTND,USDCDF,ZARCOP,KRWEUR,ILSEUR,SVCGBP,GBPBAM,IDRINR,DOECHF,ZARNGN,DOEUSD,THBCNY,GBPTND,MGAUSD,THBZAR,TWDJPY,SZLEUR,EURLAK,EURUGX,KRWCNY,DZDEUR,EURCHF,ZARGBP,MYRCHF,HKDINR,EURHRK,USDKRW,SEKEUR,MDLEUR,AEDBHD,RUBKRW,USDBND,NIOGBP,DKKUSD,NIOUSD,BDTUSD,USDILS,GBPSZL,NOKZAR,BRLRSD,HTGGBP,RUBSEK,EURLKR,SEKGBP,DKKCZK,THBCAD,EURVND,USDGNF,GBPPHP,MXNSGD,AUDMYR,EURGNF,USDKES,ETBGBP,EURBZD,GBPUGX,USDPAB,HNLUSD,ARSAUD,SGDARS,JODILS,GBPKHR,USDFJD,DKKNOK,GBPPEN,DKKINR,JPYKRW,ZARAUD,VNDCAD,TWDEUR,JPYSEK,ZARDKK,INRCAD,EURLBP,XCDGBP,HUFCHF,XAUMXN,XAUINR,GBPMKD,THBMYR,KWDPKR,USDJPY,DKKTHB,TWDHKD,NZDIDR,AEDNOK,PKRGBP,MXNRUB,ZARCZK,INRKRW,MYRTHB,NZDPKR,EURBBD,MYRSGD,JPYDKK,USDMWK,USDTND,NOKCHF,TWDAUD,NGNUSD,AUDZAR,SGDMXN,KRWHKD,MVRUSD,THBTWD,EURFJD,GBPUSD,GBPILS,GBPXCD,INRNZD,EURNIO,USDSLL,USDAUD,USDNZD,KRWINR,JPYMYR,ZARRUB,EURSEK,JPYARS,AEDCAD,MXNCOP,AUDMXN,XPDEUR,EURMDL,TWDKRW,XAGTRY,BRLSGD,USDSEK,AUDHRK,DKKPLN,DKKGBP,ZARKRW,BGNUSD,AEDGBP,EURILS,USDLRD,AUDSEK,ZARRON,VNDEUR,SCRGBP,AUDAED,GNFUSD,INRZAR,DKKEUR,ARSBRL,MXNCHF,GBPDOP,LYDUSD,EURSOS,EURMAD,USDPLN,USDCHF,DKKHUF,DJFGBP,EURAFN,TRYCHF,GBPGNF,PHPJPY,EURCAD,USDPYG,EURDOP,PENARS,EGPJPY,GBPVND,USDBWP,DKKTWD,PENCLP,GBPBHD,SEKCHF,PLNEUR,XAGRUB,MYRINR,THBGBP,EURPAB,USDMDL,EURTRY,USDHKD,EURRUB,ZARAED,AUDPLN,SGDCHF,ILSJPY,KRWAUD,OSOCHF,GBPMMK,SZLCHF,GBPKMF,KRWNZD,ARSCAD,JMDGBP,THBAUD,USDCOP,ZARRWF,SEKNOK,HKDCHF,ZARTHB,ALLUSD,SOSGBP,EURINR,EURMMK,USDBDT,AUDPGK,USDKHR,USDBOB,EURAUD,TWDDKK,XAGMXN,SGDKRW,USDSCR,XPFGBP,XAGHKD,GBPKWD,USDAED,MMKUSD,PENBRL,GBPAED,HKDTWD,TWDSGD,NOKILS,EURPHP,USDRUB,SLLGBP,RUBMXN,GBPMXN,EURDKK,GBPPLN,IDRSGD,DZDUSD,MXNHKD,AUDPHP,SEKJPY,USDPEN,SGDCNY,ZARJPY,NZDINR,SGDINR,HKDKRW,GBPMUR,ZAREGP,OMRGBP,USDVND,GBPRWF,ETBUSD,TWDZAR,GBPGTQ,XAURUB,MKDUSD,EURCUP,GBPNPR,SEKUSD,ZARCNY,EURMYR,USDZAR,NZDEUR,EURDZD,GBPKZT,GBPPGK,ZARCYP,RONCHF,AEDCHF,MXNGBP,MXNJPY,GBPBWP,EURALL,JPYILS,INRGBP,GBPFJD,GBPHRK,JODAED,KWDUSD,USDLSL,HKDJPY,AUDUSD,ARSCLP,KRWSEK,NZDCZK,USDMUR,SHPUSD,GBPKES,AUDTWD,HKDBRL,GTQUSD,GBPETB,USDCVE,GHSUSD,ZARSEK,BGNCNY,ILSPLN,GBPAFN,GBPCNH,BRIUSD,ZARBRL,GBPBND,GBPKYD,JPYHKD,EURMZN,DKKCOP,BOBUSD,ZARHUF,EURHUF,ZARINR,MURUSD,USDSAR,EURTHB,EURDJF,EURMGA,ZARSGD,NZDAUD,XAGKRW,EURNPR,BWPCHF,YERUSD,ALLEUR,TRYPLN,MYRCNY,AEDNZD,AWGUSD,JPYCAD,EURRON,EURBOB,USDHNL,GBPCAD,THBSGD,SGDTRY,USDIDR,BBDUSD,EURNAD,EURGTQ,GBPALL,NOKEUR,NZDTWD,BRLZAR,USDBBD,BRLEUR,LKRUSD,EURBTN,JPYRUB,USDQAR,LYDGBP,BBDEUR,GBPUYU,USDTHB,GBPINR,BRLUSD,VNDUSD,UZSUSD,ILSUSD,MXNAUD,GBPTRY,JPYINR,KRUUSD,XAUUSD,EURMXN,USDPHP,GBPJOD,AFNGBP,SGDTWD,EURHKD,AEDZAR,GBPNIO,USDNOK,SGDDKK,ZARTWD,BIFUSD,GYDGBP,PKRZAR,JPYPLN,XAUBRL,USDETB,BMDKYD,ZARTRY,GBPRSD,USDAWG,PENCOP,USDTTD,RSDGBP,GBPMGA,GBPNZD,DKKPKR,ZARNZD,QARZAR,DKKJPY,GBPKRW,TZSUSD,GBPGHS,AUDDKK,NBLCHF,BMDBBD,THBIDR,NZDAED,MYRUSD,EURMOP,TWDSEK,AUDBGN,BHDEUR,GBPBGN,EURBIF,USDCLP,GTQGBP,JPYIDR,XAGAUD,EURCLP,UYUGBP,DKKPHP,USDCNH,USDKZT,EURETB,EURPEN,BGNAUD,INRUSD,IDRCAD,EURMUR,INRCNY,OMRZAR,HKDCAD,GBPHKD,HKDUSD,TJSUSD,DKKHKD,AUDCZK,GBPEGP,EURSLL,GBPCNY,EURGBP,ZARILS,GBPTWD,XAUARS,USDBRL,BWPUSD,BSDUSD,EURGHS,NZDTHB,NZDKRW,JPYEUR,USDOMR,EURBDT,HKDMYR,PYGUSD,GYDUSD,SEKDKK,EURRSD,EURBGN,GBPLKR,DKKUAH,XAGINR,ILSJOD,RUBAUD,LSLGBP,SEKCZK,ARSGBP,GBPIQD,GBPMVR,USDSZL,GBPHNL,ARSUSD,GBPIDR,USDDJF,EURQAR,JPYZAR,KRWIDR,RUBUSD,UAHDKK,JPYNZD,TWDIDR,USDALL,PLNUSD,PHPGBP,USDGBP,SGDHKD,GBPOMR,KRWTHB,ARSEUR,USDJOD,GBPSOS,SZLZAR,USDHTG,NOKPLN,GBPXPF,EURKWD,SZLUSD,MADZAR,SEKAUD,NOKGBP,ILSCHF,GBPSAR,GBPBIF,DKKTRY,EGPUSD,USDYER,MADUSD,TRYZAR,XAUTHB,XAUSAR,AEDJPY,USDISK,USDDKK,AUDTRY,USDBGN,PLNSEK,NZDCNY,THBJPY,JPYBRL,RUBJPY,AEDUSD,USDGHS,TTDUSD,USDKYD,EURRWF,GBPSGD,FJDGBP,HRKEUR,BSDGBP,INRAUD,USDINR,USDCNY,GBPCLP,XAGZAR,KRWBRL,DOPGBP,USDNIO,USDIQD,HKDEUR,AUDINR,BTNGBP,JPYCHF,USDLYD,EURSDG,USDSGD,GBPDKK,JPYRSD,EURBND,HKDNZD,TRYDKK,XAGJPY,GNFGBP,RWFGBP,GBPDZD,EURSGD,HKDSGD,IDRUSD,IDRCNY,SEKCAD,USDMAD,NOKJPY,ARSJPY,SGDAED,NZDCAD,RUBNOK,EURTZS,HKDDKK,XAUTRY,USDLAK,PLNHUF,THBKRW,THBNZD,EURSZL,MYRAUD,EURARS,SGDMYR,TWDCNY,MDLUSD,GBPDJF,HRKCAD,GBPHTG,EURTWD,ILSCAD,NGNGBP,KRWMYR,EURHTG,LBPUSD,BRLJPY,GBPCOP,NOKSEK,NZDDKK,PLNILS,EURMWK,USDUAH,KRWJPY,PHPDKK,USDTJS,EURIQD,HUFEUR,MXNPLN,GBPBRL,USDTZS,PENEUR,EURAMD,ZARMWK,TZSZAR,USDTWD,HKDCNY,LSLUSD,ZARMAD,EURKRW,TWDTHB,BRLCAD,BRLCOP,XAGCNY,JPYCNY,JPYAED,YERGBP,EURLRD,JPYUSD,BRLSEK,USDNPR,NZDNOK,MOPUSD,MYRDKK,GBPBSD,EURISK,USDGYD,AUDLTL,NZDMXN,TWDUSD,MYRTWD,GBPCDF,NZDSEK,IDRGBP,AUDEUR,USDMOP,RUBGBP,VRNCHF,BWPEUR,EURJPY,GBPHUF,KRWCHF,MALUSD,BGNDKK,BRLKRW,AUDRUB,NZDSGD,ZARCHF,HKDIDR,MXNCAD,GBPZAR,XAGSAR,BRLHKD,UYUEUR}] [-h] Run forex report. optional arguments: --symbol {AUDCHF,ZARPLN,DKKNZD,XAGUSD,USDRWF,MYREUR,ZAREUR,MWKGBP,USDBSD,ALLGBP,MXNZAR,HUFUSD,BRLARS,OMRAED,ZARUGX,GBPCZK,XAUCNY,MURGBP,EURLSL,EURBWP,AEDPKR,XAGBRL,XAUGBP,IDRKRW,BRICHF,VNDJPY,MADAUD,GBPBMD,USDTMT,HRKUSD,HUFPLN,HUFDKK,SGDGBP,KZTGBP,AUNUSD,EURCNY,HUFCAD,GBPSEK,ZARIDR,JPYTHB,MDLGBP,IDRCHF,KWDAED,SARJPY,GBPRON,ARSPEN,TWDCHF,INREUR,DKKCAD,USDCZK,AUDIDR,SARUSD,THBINR,XAUCAD,GHSGBP,EURKHR,ZMWZAR,ILSSEK,SGDTHB,EURKYD,USDMGA,ZARNOK,SGDCAD,SEKINR,DKKRUB,THBUSD,USDMYR,USDUZS,ZARSZL,JPYCLP,UAHUSD,JPYMXN,JPYNOK,AUDCNY,EURGYD,GBPBDT,PENUSD,ZARPHP,MXNARS,PLNCZK,GBPAUD,AEDAUD,RUBPLN,USDSDG,EURSCR,HKDMXN,RUBCHF,TRYJPY,OSOUSD,GBPMAD,EURTJS,PKREUR,EURCDF,AUDCAD,USDRSD,JPYCZK,BRLCLP,MWKUSD,ISKCHF,GBPBTN,BAMGBP,ILSZAR,SEKZAR,HUFZAR,QARAED,SARKWD,MYRHKD,RONZAR,JPYSAR,BHDPKR,DOPUSD,AUDGBP,INRHKD,XAUAUD,IDRAUD,XAUHKD,KRWSGD,AUDNZD,JPYGBP,KESUSD,KRWRUB,TNDGBP,USDEUR,BWPGBP,DKKMYR,GBPNGN,QARPKR,TWDCAD,BMDGBP,HUFJPY,GBPSCR,EURMVR,KHRGBP,LKRZAR,ZARBWP,EURIDR,GBPUAH,GBPGYD,ZARTND,KRWUSD,AUDMAD,ZARPKR,NZDGBP,AEDSAR,MYRIDR,XPTEUR,GHSZAR,SGDSEK,PENCAD,HKDZAR,SGDJPY,TRYUSD,GBPAMD,EURCOP,NZDZAR,DKKSGD,IDRTHB,AEDSEK,BDTGBP,AUDTHB,XAUKRW,GBPRUB,GBPYER,USDMVR,BRLMXN,TTDGBP,GBPBBD,EURPLN,SGDUSD,AUDILS,EURAED,NSOUSD,VRLCHF,SCRUSD,RWFUSD,ZARHKD,EURNZD,IDRZAR,TWDINR,KRWZAR,ZARNAD,HRKPLN,BAMUSD,EUREGP,NPRUSD,KRWTWD,XAUJPY,USDBHD,BNDGBP,EURBMD,EURNOK,MXNUSD,USDEGP,XPTGBP,ARSCOP,NZDCHF,NZDJPY,KRWCAD,EURBRL,DKKSEK,MALCHF,SOSUSD,GBPCUP,AUDCLP,EURUYU,EURUZS,UYUUSD,EURUSD,BWPZAR,NZDPLN,GBPLRD,IDRMYR,PABUSD,USDPKR,ARSCHF,MYRNZD,JODUSD,ARSHKD,EURMKD,EURLYD,XAGARS,ISKUSD,HKDSEK,USDTRY,RSDUSD,DKKAED,ZARMYR,KMFUSD,NGNZAR,IDRJPY,SARPKR,GBPMYR,ILSAUD,IDREUR,JPYAUD,QARUSD,GBPSLL,GBPEUR,PHPUSD,THBEUR,RUBEUR,USDMMK,XAGGBP,ZARARS,USDKMF,BZDUSD,SEKPLN,PLNJPY,GBPLBP,EURHNL,AUDPKR,KYDCAD,XAUZAR,MGAGBP,LRDUSD,NZDTRY,AUDHUF,USDLKR,EURNGN,BNDUSD,SGDIDR,MYRCAD,HKDPLN,EUROMR,EURSAR,GBPJPY,IDRHKD,MXNPEN,USDXPF,IQDGBP,USDPGK,INRCHF,NZDHKD,AUDHKD,BBDGBP,USDGTQ,NGNJPY,ARSSGD,GBPMOP,TWDMYR,BMDCAD,XPDUSD,USDDZD,EURBSD,SGDZAR,AUNCHF,ARSMXN,AUDFJD,UGXZAR,AUDARS,IQDUSD,MXNEUR,HKDAUD,XAGEUR,RONGBP,USDZMW,TRYSGD,INRSGD,GBPLAK,GBPMWK,EURKES,USDCUP,USDUYU,AUDJPY,XAGCAD,DKKCNY,USDJMD,MADGBP,ILSNOK,MUREUR,THBHKD,INRTHB,SAREUR,MYRGBP,AMDGBP,HKDARS,GBPARS,SGDAUD,INRTWD,BHDUSD,LRDGBP,GBPPAB,RONUSD,IDRNZD,MYRKRW,KMFGBP,ZARGHS,PLNMXN,USDHUF,ARECHF,BMDEUR,KYDGBP,AUDNOK,AUDCNH,TWDNZD,KWDEUR,EURZMW,KZTUSD,GBPBOB,GBPJMD,DKKCHF,EURCNH,SEKILS,AUDKRW,AWGGBP,HNLGBP,XAUEUR,NSOCHF,GBPLSL,USDBZD,ZARKES,SLLUSD,THBCHF,NOKUSD,EURCZK,HKDGBP,GBPTTD,MMKGBP,PGKGBP,BRLAUD,AEDDKK,EURBHD,JMDUSD,USDNGN,NOKRUB,SVCUSD,GBPQAR,LTLAUD,JPYTWD,USDRON,KRUCHF,SGDBRL,EGPPKR,EURJMD,MXNDKK,NZDMYR,USDLBP,MWKZAR,HRKAUD,MYRJPY,USDKWD,AUDBRL,EURYER,PLNGBP,IDRTWD,EGPEUR,EURPYG,ILSAED,EURKZT,DKKZAR,FJDUSD,NBLUSD,AEDEUR,PLNNOK,XPTUSD,MXNBRL,USDNAD,ZARUSD,NOKINR,ARSZAR,BOBGBP,RWFZAR,GBPLYD,USDUGX,GBPCHF,DKKAUD,PLNCHF,USDBIF,AUDSGD,MXNCZK,PENGBP,NOKAED,USDMKD,MKDGBP,PKRUSD,EURPGK,THBPKR,HTGUSD,SGDPKR,LKRGBP,EURPKR,ZARMXN,USDMXN,USDHRK,INRJPY,FRNCHF,MXNCLP,GBPNOK,SGDPLN,USDARS,OMRUSD,DKKBGN,INRSEK,USDCAD,XPDGBP,KESZAR,JPYPKR,BDTJPY,NPRGBP,EURZAR,MYRPKR,PGKAUD,KYDEUR,DKKISK,SGDEUR,MYRZAR,PLNDKK,BRLPEN,ZMWUSD,TNDUSD,GHSEUR,PGKUSD,KYDBMD,SZLGBP,DKKMXN,BGNCAD,BRLCHF,INRMYR,GBPISK,SGDNOK,HKDTHB,TWDPKR,GBPPYG,NOKDKK,GBPTHB,EURJOD,EURUAH,RUBZAR,PENMXN,SGDNZD,HKDPKR,USDDOP,NZDHUF,KYDUSD,GBPBZD,EGPZAR,NZDUSD,KWDGBP,USDBAM,EURTTD,ZARCAD,AEDINR,EURTND,USDCDF,ZARCOP,KRWEUR,ILSEUR,SVCGBP,GBPBAM,IDRINR,DOECHF,ZARNGN,DOEUSD,THBCNY,GBPTND,MGAUSD,THBZAR,TWDJPY,SZLEUR,EURLAK,EURUGX,KRWCNY,DZDEUR,EURCHF,ZARGBP,MYRCHF,HKDINR,EURHRK,USDKRW,SEKEUR,MDLEUR,AEDBHD,RUBKRW,USDBND,NIOGBP,DKKUSD,NIOUSD,BDTUSD,USDILS,GBPSZL,NOKZAR,BRLRSD,HTGGBP,RUBSEK,EURLKR,SEKGBP,DKKCZK,THBCAD,EURVND,USDGNF,GBPPHP,MXNSGD,AUDMYR,EURGNF,USDKES,ETBGBP,EURBZD,GBPUGX,USDPAB,HNLUSD,ARSAUD,SGDARS,JODILS,GBPKHR,USDFJD,DKKNOK,GBPPEN,DKKINR,JPYKRW,ZARAUD,VNDCAD,TWDEUR,JPYSEK,ZARDKK,INRCAD,EURLBP,XCDGBP,HUFCHF,XAUMXN,XAUINR,GBPMKD,THBMYR,KWDPKR,USDJPY,DKKTHB,TWDHKD,NZDIDR,AEDNOK,PKRGBP,MXNRUB,ZARCZK,INRKRW,MYRTHB,NZDPKR,EURBBD,MYRSGD,JPYDKK,USDMWK,USDTND,NOKCHF,TWDAUD,NGNUSD,AUDZAR,SGDMXN,KRWHKD,MVRUSD,THBTWD,EURFJD,GBPUSD,GBPILS,GBPXCD,INRNZD,EURNIO,USDSLL,USDAUD,USDNZD,KRWINR,JPYMYR,ZARRUB,EURSEK,JPYARS,AEDCAD,MXNCOP,AUDMXN,XPDEUR,EURMDL,TWDKRW,XAGTRY,BRLSGD,USDSEK,AUDHRK,DKKPLN,DKKGBP,ZARKRW,BGNUSD,AEDGBP,EURILS,USDLRD,AUDSEK,ZARRON,VNDEUR,SCRGBP,AUDAED,GNFUSD,INRZAR,DKKEUR,ARSBRL,MXNCHF,GBPDOP,LYDUSD,EURSOS,EURMAD,USDPLN,USDCHF,DKKHUF,DJFGBP,EURAFN,TRYCHF,GBPGNF,PHPJPY,EURCAD,USDPYG,EURDOP,PENARS,EGPJPY,GBPVND,USDBWP,DKKTWD,PENCLP,GBPBHD,SEKCHF,PLNEUR,XAGRUB,MYRINR,THBGBP,EURPAB,USDMDL,EURTRY,USDHKD,EURRUB,ZARAED,AUDPLN,SGDCHF,ILSJPY,KRWAUD,OSOCHF,GBPMMK,SZLCHF,GBPKMF,KRWNZD,ARSCAD,JMDGBP,THBAUD,USDCOP,ZARRWF,SEKNOK,HKDCHF,ZARTHB,ALLUSD,SOSGBP,EURINR,EURMMK,USDBDT,AUDPGK,USDKHR,USDBOB,EURAUD,TWDDKK,XAGMXN,SGDKRW,USDSCR,XPFGBP,XAGHKD,GBPKWD,USDAED,MMKUSD,PENBRL,GBPAED,HKDTWD,TWDSGD,NOKILS,EURPHP,USDRUB,SLLGBP,RUBMXN,GBPMXN,EURDKK,GBPPLN,IDRSGD,DZDUSD,MXNHKD,AUDPHP,SEKJPY,USDPEN,SGDCNY,ZARJPY,NZDINR,SGDINR,HKDKRW,GBPMUR,ZAREGP,OMRGBP,USDVND,GBPRWF,ETBUSD,TWDZAR,GBPGTQ,XAURUB,MKDUSD,EURCUP,GBPNPR,SEKUSD,ZARCNY,EURMYR,USDZAR,NZDEUR,EURDZD,GBPKZT,GBPPGK,ZARCYP,RONCHF,AEDCHF,MXNGBP,MXNJPY,GBPBWP,EURALL,JPYILS,INRGBP,GBPFJD,GBPHRK,JODAED,KWDUSD,USDLSL,HKDJPY,AUDUSD,ARSCLP,KRWSEK,NZDCZK,USDMUR,SHPUSD,GBPKES,AUDTWD,HKDBRL,GTQUSD,GBPETB,USDCVE,GHSUSD,ZARSEK,BGNCNY,ILSPLN,GBPAFN,GBPCNH,BRIUSD,ZARBRL,GBPBND,GBPKYD,JPYHKD,EURMZN,DKKCOP,BOBUSD,ZARHUF,EURHUF,ZARINR,MURUSD,USDSAR,EURTHB,EURDJF,EURMGA,ZARSGD,NZDAUD,XAGKRW,EURNPR,BWPCHF,YERUSD,ALLEUR,TRYPLN,MYRCNY,AEDNZD,AWGUSD,JPYCAD,EURRON,EURBOB,USDHNL,GBPCAD,THBSGD,SGDTRY,USDIDR,BBDUSD,EURNAD,EURGTQ,GBPALL,NOKEUR,NZDTWD,BRLZAR,USDBBD,BRLEUR,LKRUSD,EURBTN,JPYRUB,USDQAR,LYDGBP,BBDEUR,GBPUYU,USDTHB,GBPINR,BRLUSD,VNDUSD,UZSUSD,ILSUSD,MXNAUD,GBPTRY,JPYINR,KRUUSD,XAUUSD,EURMXN,USDPHP,GBPJOD,AFNGBP,SGDTWD,EURHKD,AEDZAR,GBPNIO,USDNOK,SGDDKK,ZARTWD,BIFUSD,GYDGBP,PKRZAR,JPYPLN,XAUBRL,USDETB,BMDKYD,ZARTRY,GBPRSD,USDAWG,PENCOP,USDTTD,RSDGBP,GBPMGA,GBPNZD,DKKPKR,ZARNZD,QARZAR,DKKJPY,GBPKRW,TZSUSD,GBPGHS,AUDDKK,NBLCHF,BMDBBD,THBIDR,NZDAED,MYRUSD,EURMOP,TWDSEK,AUDBGN,BHDEUR,GBPBGN,EURBIF,USDCLP,GTQGBP,JPYIDR,XAGAUD,EURCLP,UYUGBP,DKKPHP,USDCNH,USDKZT,EURETB,EURPEN,BGNAUD,INRUSD,IDRCAD,EURMUR,INRCNY,OMRZAR,HKDCAD,GBPHKD,HKDUSD,TJSUSD,DKKHKD,AUDCZK,GBPEGP,EURSLL,GBPCNY,EURGBP,ZARILS,GBPTWD,XAUARS,USDBRL,BWPUSD,BSDUSD,EURGHS,NZDTHB,NZDKRW,JPYEUR,USDOMR,EURBDT,HKDMYR,PYGUSD,GYDUSD,SEKDKK,EURRSD,EURBGN,GBPLKR,DKKUAH,XAGINR,ILSJOD,RUBAUD,LSLGBP,SEKCZK,ARSGBP,GBPIQD,GBPMVR,USDSZL,GBPHNL,ARSUSD,GBPIDR,USDDJF,EURQAR,JPYZAR,KRWIDR,RUBUSD,UAHDKK,JPYNZD,TWDIDR,USDALL,PLNUSD,PHPGBP,USDGBP,SGDHKD,GBPOMR,KRWTHB,ARSEUR,USDJOD,GBPSOS,SZLZAR,USDHTG,NOKPLN,GBPXPF,EURKWD,SZLUSD,MADZAR,SEKAUD,NOKGBP,ILSCHF,GBPSAR,GBPBIF,DKKTRY,EGPUSD,USDYER,MADUSD,TRYZAR,XAUTHB,XAUSAR,AEDJPY,USDISK,USDDKK,AUDTRY,USDBGN,PLNSEK,NZDCNY,THBJPY,JPYBRL,RUBJPY,AEDUSD,USDGHS,TTDUSD,USDKYD,EURRWF,GBPSGD,FJDGBP,HRKEUR,BSDGBP,INRAUD,USDINR,USDCNY,GBPCLP,XAGZAR,KRWBRL,DOPGBP,USDNIO,USDIQD,HKDEUR,AUDINR,BTNGBP,JPYCHF,USDLYD,EURSDG,USDSGD,GBPDKK,JPYRSD,EURBND,HKDNZD,TRYDKK,XAGJPY,GNFGBP,RWFGBP,GBPDZD,EURSGD,HKDSGD,IDRUSD,IDRCNY,SEKCAD,USDMAD,NOKJPY,ARSJPY,SGDAED,NZDCAD,RUBNOK,EURTZS,HKDDKK,XAUTRY,USDLAK,PLNHUF,THBKRW,THBNZD,EURSZL,MYRAUD,EURARS,SGDMYR,TWDCNY,MDLUSD,GBPDJF,HRKCAD,GBPHTG,EURTWD,ILSCAD,NGNGBP,KRWMYR,EURHTG,LBPUSD,BRLJPY,GBPCOP,NOKSEK,NZDDKK,PLNILS,EURMWK,USDUAH,KRWJPY,PHPDKK,USDTJS,EURIQD,HUFEUR,MXNPLN,GBPBRL,USDTZS,PENEUR,EURAMD,ZARMWK,TZSZAR,USDTWD,HKDCNY,LSLUSD,ZARMAD,EURKRW,TWDTHB,BRLCAD,BRLCOP,XAGCNY,JPYCNY,JPYAED,YERGBP,EURLRD,JPYUSD,BRLSEK,USDNPR,NZDNOK,MOPUSD,MYRDKK,GBPBSD,EURISK,USDGYD,AUDLTL,NZDMXN,TWDUSD,MYRTWD,GBPCDF,NZDSEK,IDRGBP,AUDEUR,USDMOP,RUBGBP,VRNCHF,BWPEUR,EURJPY,GBPHUF,KRWCHF,MALUSD,BGNDKK,BRLKRW,AUDRUB,NZDSGD,ZARCHF,HKDIDR,MXNCAD,GBPZAR,XAGSAR,BRLHKD,UYUEUR} symbol (default: EURUSD) -h, --help show this help message (default: False) "},{"id":966,"href":"/OpenBBTerminal/terminal/jupyter/reports/portfolio/","title":"Portfolio","parent":"Reports","content":"usage: portfolio [--orderbook {Public_Equity_Orderbook.xlsx,Public_Equity_Orderbook_No_Categorization.xlsx,market.csv,example.csv,bitcoin.csv}] [-h] Run portfolio report. optional arguments: --orderbook {Public_Equity_Orderbook.xlsx,Public_Equity_Orderbook_No_Categorization.xlsx,market.csv,example.csv,bitcoin.csv} orderbook (default: Public_Equity_Orderbook.xlsx) -h, --help show this help message (default: False) "},{"id":967,"href":"/OpenBBTerminal/terminal/jupyter/reports/run/","title":"Run","parent":"Reports","content":"usage: run [-f {test.ipynb}] [-p PARAMETERS [PARAMETERS ...]] [-h] Run a notebook from this folder: '/Users/diogosousa/OpenBBUserData/reports'. optional arguments: -f {test.ipynb}, --file {test.ipynb} The file to be loaded (default: None) -p PARAMETERS [PARAMETERS ...], --parameters PARAMETERS [PARAMETERS ...] Report parameters with format 'name:value'. (default: None) -h, --help show this help message (default: False) For more information and examples, use 'about run' to access the related guide. "},{"id":968,"href":"/OpenBBTerminal/terminal/portfolio/al/","title":"Al","parent":"Introduction to Portfolio","content":"usage: al [-s] [-h] [--export {png,jpg,pdf,svg}] Display allocation\noptional arguments: -s, --sum Sum all assets value over time (default: False) -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export figure into png, jpg, pdf, svg (default: ) "},{"id":969,"href":"/OpenBBTerminal/terminal/portfolio/alloc/","title":"Alloc","parent":"Introduction to Portfolio","content":"usage: alloc [-a {assets,sectors,countries,regions}] [-l LIMIT] [-t] [-h] Show your allocation to each asset or sector compared to the benchmark.\noptional arguments: -a {assets,sectors,countries,regions}, --agg {assets,sectors,countries,regions} The type of allocation aggregation you wish to do (default: assets) -l LIMIT, --limit LIMIT The amount of assets or sectors you wish to see (default: 10) -t, --tables Whether to also include the assets/sectors tables of both the benchmark and the portfolio. (default: False) -h, --help show this help message (default: False) Example:\n022 May 12, 06:23 (🦋) /portfolio/ $ alloc assets Portfolio vs. Benchmark - Top 10 Assets Allocation ┏━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Symbol ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ ASML │ 24.44% │ 0.00e+00 │ 24.44% │ ├────────┼───────────┼───────────┼────────────┤ │ AMZN │ 21.96% │ 3.33% │ 18.63% │ ├────────┼───────────┼───────────┼────────────┤ │ GOOGL │ 18.94% │ 1.66% │ 17.28% │ ├────────┼───────────┼───────────┼────────────┤ │ TSM │ 9.43% │ 0.00e+00 │ 9.43% │ ├────────┼───────────┼───────────┼────────────┤ │ DGX │ 6.23% │ 0.00e+00 │ 6.23% │ ├────────┼───────────┼───────────┼────────────┤ │ BABA │ 5.54% │ 0.00e+00 │ 5.54% │ ├────────┼───────────┼───────────┼────────────┤ │ APTV │ 3.78% │ 0.00e+00 │ 3.78% │ ├────────┼───────────┼───────────┼────────────┤ │ AAPL │ 3.36% │ 4.90% │ -1.54% │ ├────────┼───────────┼───────────┼────────────┤ │ NKE │ 3.26% │ 0.00e+00 │ 3.26% │ ├────────┼───────────┼───────────┼────────────┤ │ YUM │ 3.06% │ 0.00e+00 │ 3.06% │ └────────┴───────────┴───────────┴────────────┘ 2022 May 12, 06:23 (🦋) /portfolio/ $ alloc sectors Portfolio vs. Benchmark - Top 4 Sectors Allocation ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Sectors ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Technology │ 59.19% │ 24.95% │ 34.24% │ ├────────────────────────┼───────────┼───────────┼────────────┤ │ Communication Services │ 18.94% │ 8.55% │ 10.39% │ ├────────────────────────┼───────────┼───────────┼────────────┤ │ Consumer Cyclical │ 15.64% │ 11.55% │ 4.09% │ ├────────────────────────┼───────────┼───────────┼────────────┤ │ Healthcare │ 6.23% │ 13.41% │ -7.18% │ └────────────────────────┴───────────┴───────────┴────────────┘ 2022 May 12, 06:23 (🦋) /portfolio/ $ alloc countries Portfolio vs. Benchmark - Top 5 Countries Allocation ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Countries ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ United States │ 57.33% │ 99.17% │ -41.84% │ ├───────────────┼───────────┼───────────┼────────────┤ │ Netherlands │ 24.44% │ 0.00e+00 │ 24.44% │ ├───────────────┼───────────┼───────────┼────────────┤ │ Taiwan │ 9.43% │ 1.00e-04 │ 9.42% │ ├───────────────┼───────────┼───────────┼────────────┤ │ China │ 5.54% │ 0.00e+00 │ 5.54% │ ├───────────────┼───────────┼───────────┼────────────┤ │ Germany │ 3.26% │ 0.00e+00 │ 3.26% │ └───────────────┴───────────┴───────────┴────────────┘ 2022 May 12, 06:23 (🦋) /portfolio/ $ alloc regions Portfolio vs. Benchmark - Top 3 Regions Allocation ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Regions ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ North America │ 57.33% │ 99.25% │ -41.92% │ ├───────────────┼───────────┼───────────┼────────────┤ │ Europe │ 27.70% │ 0.64% │ 27.06% │ ├───────────────┼───────────┼───────────┼────────────┤ │ Asia │ 14.96% │ 7.00e-04 │ 14.89% │ └───────────────┴───────────┴───────────┴────────────┘ "},{"id":970,"href":"/OpenBBTerminal/terminal/portfolio/bench/","title":"Bench","parent":"Introduction to Portfolio","content":"usage: bench [-b BENCHMARK [BENCHMARK ...]] [-h] Load in a benchmark from a selected list or set your own based on the ticker.\noptional arguments: -b BENCHMARK [BENCHMARK ...], --benchmark BENCHMARK [BENCHMARK ...] Set the benchmark for the portfolio. By default, this is SPDR S\u0026amp;P 500 ETF Trust (SPY). (default: SPY) -h, --help show this help message (default: False) Example:\n2022 May 10, 09:53 (🦋) /portfolio/ $ bench Vanguard FTSE Developed Markets ETF (VEA) Benchmark: Vanguard Developed Markets Index Fund (VEA) 2022 May 10, 09:53 (🦋) /portfolio/ $"},{"id":971,"href":"/OpenBBTerminal/terminal/portfolio/bro/","title":"Bro","parent":"Introduction to Portfolio","content":"A broker is a person or company who works as a go-between for an investor and a securities exchange. Individual traders and investors require the services of exchange members since securities exchanges only accept orders from persons or organizations that are members of the exchange.\nBrokers provide that service and are paid in a variety of methods, including commissions, fees, and payments from the exchange itself. Investopedia examines all of the top brokers on a regular basis and keeps a list of the finest online brokers and trading platforms to assist investors in determining which broker is right for them.\nAvailable commands:    Ally     Balances     History     Holdings     Movers     Quote       Coinbase     Account     Deposits     History     Orders       Degiro     Cancel     Companynews     Create     Hold     Lastnews     Login     Logout     Lookup     Paexport     Pending     Topnews     Update       Robinhood     History     Holdings       "},{"id":972,"href":"/OpenBBTerminal/terminal/portfolio/bro/ally/","title":"Ally","parent":"Bro","content":"Ally Invest    Note that the following environment variables should be set.\nALLY_ACCOUNT_NBR ALLY_CONSUMER_SECRET ALLY_OAUTH_TOKEN ALLY_OAUTH_SECRET ALLY_CONSUMER_KEY "},{"id":973,"href":"/OpenBBTerminal/terminal/portfolio/bro/ally/balances/","title":"Balances","parent":"Ally","content":"usage: balances [--export {csv,json,xlsx}] [-h] Account balance details\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":974,"href":"/OpenBBTerminal/terminal/portfolio/bro/ally/history/","title":"History","parent":"Ally","content":"usage: history [-n NUM] [--export {csv,json,xlsx}] [-h] Account transaction history\noptional arguments: -n NUM, --num NUM Number of recent transactions to show (default: 15) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Sample Output:\n╒══════════╤═════════════════════╤══════════╤══════════════════════════╤════════════╕ │ amount │ date │ symbol │ transactiontype │ quantity │ ╞══════════╪═════════════════════╪══════════╪══════════════════════════╪════════════╡ │ -6.91 │ 2021-08-16 00:00:00 │ │ Debit Interest Collected │ 0.00 │ ├──────────┼─────────────────────┼──────────┼──────────────────────────┼────────────┤ │ 0.96 │ 2021-09-15 00:00:00 │ O │ Cash Dividend │ 0.00 │ ├──────────┼─────────────────────┼──────────┼──────────────────────────┼────────────┤ │ 0.00 │ 2021-09-15 00:00:00 │ O │ Mutual Fund Reinvestment │ 0.01 │ ├──────────┼─────────────────────┼──────────┼──────────────────────────┼────────────┤ │ -6.41 │ 2021-09-16 00:00:00 │ │ Debit Interest Collected │ 0.00 │ ╘══════════╧═════════════════════╧══════════╧══════════════════════════╧════════════╛ "},{"id":975,"href":"/OpenBBTerminal/terminal/portfolio/bro/ally/holdings/","title":"Holdings","parent":"Ally","content":"usage: holdings [--export {csv,json,xlsx}] [-h] Display info about your trading accounts on Ally\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example output:\n╒══════╤════════════╤═════════════╤═══════════════╤════════╕ │ │ Quantity │ CostBasis │ MarketValue │ PnL │ ╞══════╪════════════╪═════════════╪═══════════════╪════════╡ │ AAPL │ 6.02 │ 576.90 │ 864.53 │ 287.63 │ ├──────┼────────────┼─────────────┼───────────────┼────────┤ │ MSFT │ 2.01 │ 358.09 │ 595.22 │ 237.13 │ ╘══════╧════════════╧═════════════╧═══════════════╧════════╛ "},{"id":976,"href":"/OpenBBTerminal/terminal/portfolio/bro/ally/movers/","title":"Movers","parent":"Ally","content":"usage: ally_movers [-l {toplosers,toppctlosers,topvolume,topactive,topgainers,toppctgainers}] [-e {A,N,Q,U,V}] [-n NUM] [--export {csv,json,xlsx}] [-h] Get stock movers\noptional arguments: -l {toplosers,toppctlosers,topvolume,topactive,topgainers,toppctgainers}, --list {toplosers,toppctlosers,topvolume,topactive,topgainers,toppctgainers} List to get movers of (default: topactive) -e {A,N,Q,U,V}, --exchange {A,N,Q,U,V} Exchange to look at. Can be A:American Stock Exchange. N:New York Stock Exchange. Q:NASDAQ U:NASDAQ Bulletin Board V:NASDAQ OTC Other (default: N) -n NUM, --num NUM Number to show (default: 15) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Sample Output:\n(✨) (bro)\u0026gt;(ally)\u0026gt; movers -n 5 -l toplosers ╒══════╤════════╤════════════╤═════════╤═══════════════════════╤════════╤═════════╤════════╤═════════╕ │ │ chg │ chg_sign │ last │ name │ pchg │ pcls │ rank │ vl │ ╞══════╪════════╪════════════╪═════════╪═══════════════════════╪════════╪═════════╪════════╪═════════╡ │ CABO │ -19.90 │ u │ 1915.98 │ CABLE ONE INC │ 1.03 │ 1935.88 │ 1 │ 12311 │ ├──────┼────────┼────────────┼─────────┼───────────────────────┼────────┼─────────┼────────┼─────────┤ │ BILL │ -12.28 │ u │ 271.47 │ BILL.COM HOLDINGS INC │ 4.33 │ 283.75 │ 2 │ 2340470 │ ├──────┼────────┼────────────┼─────────┼───────────────────────┼────────┼─────────┼────────┼─────────┤ │ BLK │ -10.06 │ u │ 847.21 │ BLACKROCK INC │ 1.17 │ 857.27 │ 3 │ 410960 │ ├──────┼────────┼────────────┼─────────┼───────────────────────┼────────┼─────────┼────────┼─────────┤ │ CVNA │ -6.90 │ u │ 319.60 │ CARVANA CO │ 2.11 │ 326.50 │ 4 │ 551151 │ ├──────┼────────┼────────────┼─────────┼───────────────────────┼────────┼─────────┼────────┼─────────┤ │ FICO │ -5.50 │ u │ 421.06 │ FAIR ISAAC CORP │ 1.29 │ 426.56 │ 5 │ 118449 │ ╘══════╧════════╧════════════╧═════════╧═══════════════════════╧════════╧═════════╧════════╧═════════╛ "},{"id":977,"href":"/OpenBBTerminal/terminal/portfolio/bro/ally/quote/","title":"Quote","parent":"Ally","content":"usage: quote [-t TICKER] [-h] Get stock quote\noptional arguments: -t TICKER, --ticker TICKER Ticker to get quote for. Can be in form of 'tick1,tick2...' (default: None) -h, --help show this help message (default: False) Sample Usage:\n(✨) (bro)\u0026gt;(ally)\u0026gt; quote -t amc,gme,msft,aapl ╒══════╤════════╤════════╤═══════╤════════════════╤════════╤════════╤═════════════╕ │ │ ask │ bid │ chg │ dollar_value │ last │ opn │ vl │ ╞══════╪════════╪════════╪═══════╪════════════════╪════════╪════════╪═════════════╡ │ MSFT │ 296.48 │ 296.46 │ 2.18 │ 4.79162e+09 │ 296.48 │ 295.69 │ 1.62015e+07 │ ├──────┼────────┼────────┼───────┼────────────────┼────────┼────────┼─────────────┤ │ AMC │ 39.37 │ 39.36 │ -0.93 │ 2.30169e+09 │ 39.36 │ 40.97 │ 5.89093e+07 │ ├──────┼────────┼────────┼───────┼────────────────┼────────┼────────┼─────────────┤ │ AAPL │ 144.12 │ 144.11 │ 1.18 │ 8.48636e+09 │ 144.12 │ 143.93 │ 6.04101e+07 │ ├──────┼────────┼────────┼───────┼────────────────┼────────┼────────┼─────────────┤ │ GME │ 192.21 │ 191.83 │ -0.13 │ 4.07203e+08 │ 192.07 │ 199.36 │ 2.13093e+06 │ ╘══════╧════════╧════════╧═══════╧════════════════╧════════╧════════╧═════════════╛ "},{"id":978,"href":"/OpenBBTerminal/terminal/portfolio/bro/coinbase/","title":"Coinbase","parent":"Bro","content":"Coinbase Pro    Note the following environment variable should be set:\nOPENBB_API_COINBASE_KEY OPENBB_API_COINBASE_SECRET OPENBB_API_COINBASE_PASS_PHRASE "},{"id":979,"href":"/OpenBBTerminal/terminal/portfolio/bro/coinbase/account/","title":"Account","parent":"Coinbase","content":"usage: account [--all] [-c CURRENCY] [--export {csv,json,xlsx}] [-h] Display info about your trading accounts on Coinbase\noptional arguments: --all Flag to display all your account (default: False) -c CURRENCY, --currency CURRENCY Currency to display value in. (default: USD) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Sample Usage:\n(✨) (bro)\u0026gt;(cb)\u0026gt; account ╒════════════╤═════════════╤═════════════╤════════════╤═════════════════════╕ │ currency │ balance │ available │ hold │ BalanceValue(USD) │ ╞════════════╪═════════════╪═════════════╪════════════╪═════════════════════╡ │ ALGO │ 14.62881400 │ 14.62881400 │ 0.00000000 │ 24.06 │ ├────────────┼─────────────┼─────────────┼────────────┼─────────────────────┤ │ ATOM │ 0.00085600 │ 0.00085600 │ 0.00000000 │ 0.03 │ ├────────────┼─────────────┼─────────────┼────────────┼─────────────────────┤ │ BTC │ 0.00043358 │ 0.00043358 │ 0.00000000 │ 18.16 │ ╘════════════╧═════════════╧═════════════╧════════════╧═════════════════════╛ "},{"id":980,"href":"/OpenBBTerminal/terminal/portfolio/bro/coinbase/deposits/","title":"Deposits","parent":"Coinbase","content":"usage: deposits [-t {internal_deposit,deposit}] [-l LIMIT] [-s {created_at,amount}] [--descend] [--export {csv,json,xlsx}] [-h] Display a list of deposits for your account.\noptional arguments: -t {internal_deposit,deposit}, --type {internal_deposit,deposit} Deposit type. Either: internal_deposits (transfer between portfolios) or deposit (default: deposit) -l LIMIT, --limit LIMIT Limit parameter. (default: 20) -s {created_at,amount}, --sort {created_at,amount} Sort by given column. Default: created_at (default: created_at) --descend Flag to sort in descending order (lowest first) (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":981,"href":"/OpenBBTerminal/terminal/portfolio/bro/coinbase/history/","title":"History","parent":"Coinbase","content":"usage: history [-a ACCOUNT] [-l LIMIT] [--export {csv,json,xlsx}] [-h] Display account history\noptional arguments: -a ACCOUNT, --acc ACCOUNT Symbol of coin of account or id (default: BTC) -l LIMIT, --limit LIMIT Limit parameter. (default: 20) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":982,"href":"/OpenBBTerminal/terminal/portfolio/bro/coinbase/orders/","title":"Orders","parent":"Coinbase","content":"usage: orders [-l LIMIT] [-s {product_id,side,price,size,type,created_at,status}] [--descend] [--export {csv,json,xlsx}] [-h] List your current open orders\noptional arguments: -l LIMIT, --limit LIMIT Limit parameter. (default: 20) -s {product_id,side,price,size,type,created_at,status}, --sort {product_id,side,price,size,type,created_at,status} Sort by given column. Default: created_at (default: created_at) --descend Flag to sort in descending order (lowest first) (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":983,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/","title":"Degiro","parent":"Bro","content":"Degiro    This menu aims to contain several commands that are available to a user through his Degiro account.\nIn order to be able to use these, just ensure you connect to your degiro account by typing login first.\nCredentials    In order to login you need to update config file with the following credentials:\n   Parameter Description     DG_USERNAME Username used to log into Degiro\u0026rsquo;s website.   DG_PASSWORD Password used to log into Degiro\u0026rsquo;s website.    This can either be done manually or through the keys menu.\n2FA    In order to use 2FA you need to update config file.\nWe provide 2 alternatives:\n  Manually typing the OneTimePassword each time you login. To do this, after setting your credentials as explained above, go to sub-menu portfolio/bro/degiro and type login -otp OneTimePassword. OneTimePassword is the secret key generated by your authenticator.\n  Automatically generate your OneTimePassword. No need to manually input it again.\n     Parameter Description     DG_TOTP_SECRET This secret key will let OpenBB terminal generate the OneTimePassword for you.    If you provide your DG_TOTP_SECRET, you won\u0026rsquo;t have to type your OneTimePassword, OpenBB terminal will generate it for you at each connection.\nDG_TOTP_SECRET is the text representation of the QRCODE that Degiro\u0026rsquo;s provide you when you enable 2FA.\nMore information on 2FA credentials, in the documentation of the degiro-connector library.\n"},{"id":984,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/cancel/","title":"Cancel","parent":"Degiro","content":"usage: cancel ORDER_ID "},{"id":985,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/companynews/","title":"Companynews","parent":"Degiro","content":"usage: companynews NL0000235190 You need to provide the ISIN number of the company. You can get this ISIN using the dglookup command for instance.\n"},{"id":986,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/create/","title":"Create","parent":"Degiro","content":"usage: create [-a {buy,sell}] (-prod PRODUCT | -sym SYMBOL) -p PRICE (-s SIZE | -up UP_TO) [-d {gtd,gtc}] [-t {limit,market,stop-limit,stop-loss}] [-h] "},{"id":987,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/hold/","title":"Hold","parent":"Degiro","content":"usage: hold Displays current holdings to the console.\n"},{"id":988,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/lastnews/","title":"Lastnews","parent":"Degiro","content":"usage: lastnews [-l LIMIT] [-h] optional arguments: -l LIMIT, --limit LIMIT Number of news to display. -h, --help show this help message "},{"id":989,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/login/","title":"Login","parent":"Degiro","content":"usage: login [-otp ONE_TIME_PASSWORD] [-h] optional arguments: -otp ONE_TIME_PASSWORD, --one-time-password ONE_TIME_PASSWORD One-time-password for 2FA. -h, --help show this help message For more information and examples, use \u0026#39;about login\u0026#39; to access the related guide. "},{"id":990,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/logout/","title":"Logout","parent":"Degiro","content":"usage: logout "},{"id":991,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/lookup/","title":"Lookup","parent":"Degiro","content":"usage: lookup TESLA It will display a result like this :\nname isin symbol productType currency closePrice closePriceDate 0 Tesla US88160R1014 TSLA STOCK USD 571.690 2021-05-13 1 Tesla Inc US88160R1014 TL0 STOCK EUR 478.000 2021-05-13 2 Tesla Inc US88160R1014 TL0 STOCK EUR 467.650 2021-05-13 3 TurboC O.End Tesla 535,04 DE000VQ1S3R3 None WARRANT EUR 3.740 2021-05-13 4 TurboC O.End Tesla 591,4 DE000VQ5R6T9 None WARRANT EUR 0.001 2021-05-13 5 TurboP O.End Tesla 685,29 DE000VQ7HWU6 None WARRANT EUR 9.870 2021-05-13 6 TurboC O.End Tesla 448,63 DE000VQ1KYG8 None WARRANT EUR 10.890 2021-05-13 7 Call 17.12.21 Tesla 392 DE000VP53547 DE000VP53547 WARRANT EUR 8.960 2021-05-13 8 Call 20.01.23 Tesla 720 DE000VQ68691 None WARRANT EUR 1.160 2021-05-13 9 Leverage Shares 1x Tesla ETP IE00BKT6ZH01 STSL ETF GBX 135.550 2021-05-13 "},{"id":992,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/paexport/","title":"Paexport","parent":"Degiro","content":"Allows you to export your transactions to a file. The file will be available to load into portfolio menu load -f command.\nusage: paexport -s START [-e END] [-c CURRENCY] [-h] [--export EXPORT] optional arguments: -s START, --start START Start date. -e END, --end END End date. -c CURRENCY, --currency CURRENCY Used currency. -h, --help show this help message --export EXPORT Export raw data into csv, json, xlsx For more information and examples, use \u0026#39;about paexport\u0026#39; to access the related guide. "},{"id":993,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/pending/","title":"Pending","parent":"Degiro","content":"usage: pending "},{"id":994,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/topnews/","title":"Topnews","parent":"Degiro","content":"usage: topnews "},{"id":995,"href":"/OpenBBTerminal/terminal/portfolio/bro/degiro/update/","title":"Update","parent":"Degiro","content":"usage: update ORDER_ID -p PRICE "},{"id":996,"href":"/OpenBBTerminal/terminal/portfolio/bro/robinhood/","title":"Robinhood","parent":"Bro","content":"Robinhood    Note the following environment variables must be set:\nOPENBB_RH_USERNAME OPENBB_RH_PASSWORD The login function must be run first. This may require 2FA depending on your account.\n"},{"id":997,"href":"/OpenBBTerminal/terminal/portfolio/bro/robinhood/history/","title":"History","parent":"Robinhood","content":"usage: history [-s {day,week,month,3month,year,5year,all}] [-i {5minute,10minute,hour,day,week}] [--export {csv,json,xlsx}] [-h] Historical Portfolio Info\noptional arguments: -s {day,week,month,3month,year,5year,all}, --span {day,week,month,3month,year,5year,all} Span of historical data (default: 3month) -i {5minute,10minute,hour,day,week}, --interval {5minute,10minute,hour,day,week} Interval to look at portfolio (default: day) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Sample Output:\n"},{"id":998,"href":"/OpenBBTerminal/terminal/portfolio/bro/robinhood/holdings/","title":"Holdings","parent":"Robinhood","content":"usage: holdings [--export {csv,json,xlsx}] [-h] Display info about your trading accounts on Robinhood\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Sample Output:\n╒════╤══════════╤═══════════════╤════════════╤═════════════╕ │ │ Symbol │ MarketValue │ Quantity │ CostBasis │ ╞════╪══════════╪═══════════════╪════════════╪═════════════╡ │ 0 │ AMC │ 78.88 │ 2 │ 97.22 │ ╘════╧══════════╧═══════════════╧════════════╧═════════════╛ "},{"id":999,"href":"/OpenBBTerminal/terminal/portfolio/distr/","title":"Distr","parent":"Introduction to Portfolio","content":"usage: distr [-p {mtd,qtd,ytd,3m,6m,1y,3y,5y,10y,all}] [-h] [--export EXPORT] [--raw] Compute distribution of daily returns\noptional arguments: -p {mtd,qtd,ytd,3m,6m,1y,3y,5y,10y,all}, --period {mtd,qtd,ytd,3m,6m,1y,3y,5y,10y,all} The file to be loaded (default: all) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) "},{"id":1e3,"href":"/OpenBBTerminal/terminal/portfolio/dret/","title":"Dret","parent":"Introduction to Portfolio","content":"usage: dret [-p {3y,5y,10y,all}] [-h] [--export EXPORT] [--raw] [-l LIMIT] Daily returns\noptional arguments: -p {3y,5y,10y,all}, --period {3y,5y,10y,all} Period to select start end of the year returns (default: all) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":1001,"href":"/OpenBBTerminal/terminal/portfolio/es/","title":"Es","parent":"Introduction to Portfolio","content":"usage: es [-m] [-d {laplace,student_t,logistic,normal}] [-p PERCENTILE] [-h] Provides Expected Shortfall (short: ES) of the selected portfolio.\noptional arguments: -m, --mean If one should use the mean of the portfolios return (default: False) -d {laplace,student_t,logistic,normal}, --dist {laplace,student_t,logistic,normal}, --distributions {laplace,student_t,logistic,normal} Distribution used for the calculations (default: normal) -p PERCENTILE, --percentile PERCENTILE Percentile used for ES calculations, for example input 99.9 equals a 99.9 Percent Expected Shortfall (default: 99.9) -h, --help show this help message (default: False) Example:\n2022 Feb 25, 03:09 (✨) /portfolio/ $ es Portfolio Expected Shortfall ┏━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ ┃ ES: ┃ Historical ES: ┃ ┡━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ 90.0% │ -0.0204 │ -0.0202 │ ├───────┼─────────┼────────────────┤ │ 95.0% │ -0.0240 │ -0.0242 │ ├───────┼─────────┼────────────────┤ │ 99.0% │ -0.0310 │ -0.0270 │ ├───────┼─────────┼────────────────┤ │ 99.9% │ -0.0391 │ -0.0277 │ └───────┴─────────┴────────────────┘ "},{"id":1002,"href":"/OpenBBTerminal/terminal/portfolio/holdp/","title":"Holdp","parent":"Introduction to Portfolio","content":"usage: holdp [-s] [-h] [--export EXPORT] [--raw] [-l LIMIT] Display holdings of assets (in percentage)\noptional arguments: -s, --sum Sum all assets percentage over time (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":1003,"href":"/OpenBBTerminal/terminal/portfolio/holdv/","title":"Holdv","parent":"Introduction to Portfolio","content":"usage: holdv [-s] [-h] [--export EXPORT] [--raw] [-l LIMIT] Display holdings of assets (absolute value)\noptional arguments: -s, --sum Sum all assets value over time (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":1004,"href":"/OpenBBTerminal/terminal/portfolio/load/","title":"Load","parent":"Introduction to Portfolio","content":"usage: load [-f {}] [-n NAME] [-r RISK_FREE_RATE] [-h] optional arguments: -f {}, --file {} The file to be loaded (default: None) -n NAME, --name NAME The name that you wish to give to your portfolio (default: None) -r RISK_FREE_RATE, --risk_free_rate RISK_FREE_RATE Set the risk free rate. (default: 0) -h, --help show this help message (default: False) Load your portfolio for analysis.\nThis command works by taking in a list of trades you have made and constructs the resulting portfolio from them. It can accept either an Excel or CSV file with this information. Each row in the file should have the following information:\nRequired:\n Date - The date the trade occurred Name - The name of the security Type - The type of the security. Use Cash/Stock/Crypto/ETF as appropriate Price - The price the security was added or removed at, on a per-unit basis Quantity - How much of the security in question was added or removed Side - Whether or not you bought or sold. Use Buy/Deposit/1 to add to the portfolio or Sell/Withdrawal/0 to remove from the portfolio  Optional:\n Investment - Total value of the investment, less any fees. Calculated dynamically as price * quantity by the terminal Fees - Any fees paid as part of the transaction Premium - Any premiums received or paid Quantity - How much of the security in question was added or removed Currency - The currency the transaction was made in Sector - The sector of the security. Required for alloc commands Industry - The industry of the security. Required for alloc commands Country - The country of the security. Required for alloc commands  Example:\n2022 May 13, 05:00 (🦋) /portfolio/ $ load Public_Equity_Orderbook.xlsx Portfolio: Public_Equity_Orderbook.xlsx Risk Free Rate: 0.00% 2022 May 13, 05:00 (🦋) /portfolio/ $ show ┏━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━┳━━━━━━━━━━┓ ┃ Date ┃ Name ┃ Type ┃ Sector ┃ Industry ┃ Country ┃ Region ┃ Price ┃ Quantity ┃ Fees ┃ Premium ┃ Investment ┃ Side ┃ Currency ┃ ┡━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━╇━━━━━━━━━━┩ │ 2010-05-03 │ CASH │ CASH │ CASH │ CASH │ CASH │ Unknown │ 60850.00 │ 1 │ 0 │ 0 │ 60850.00 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2010-05-03 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 265.30 │ 2 │ 5 │ 6 │ 530.60 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2010-07-06 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 110.06 │ 5 │ 3 │ 3 │ 550.30 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2011-08-06 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 12.61 │ 3 │ 1 │ 0 │ 37.83 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2011-12-12 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 18.02 │ 5 │ 0 │ 2 │ 90.10 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-02-03 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 59.17 │ 7 │ 0 │ 4 │ 414.19 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-05-04 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 27.95 │ 3 │ 0 │ 0 │ 83.85 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-08-04 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 14.24 │ 50 │ 0 │ 0 │ 712.00 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-10-12 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 63.39 │ 6 │ 10 │ 0 │ 380.34 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2013-02-03 │ YUM │ STOCK │ Consumer Cyclical │ Restaurants │ United States │ North America │ 45.98 │ 4 │ 10 │ 0 │ 183.92 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2013-03-04 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 410.75 │ 1 │ 100 │ 2 │ 410.75 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2013-08-08 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 295.74 │ 1 │ 2 │ 3 │ 295.74 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2013-10-09 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 17.38 │ 5 │ 5 │ 5 │ 86.90 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2014-02-03 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 49.53 │ 5 │ 4 │ 0 │ 247.65 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2014-02-05 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 85.16 │ 3 │ 3 │ 0 │ 255.48 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2014-12-08 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 48.86 │ 10 │ 2 │ 0 │ 488.60 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2015-02-02 │ BABA │ STOCK │ Consumer Cyclical │ Internet Retail │ China │ Asia │ 90.13 │ 30 │ 1 │ 0 │ 2703.90 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2015-03-08 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 23.45 │ 20 │ 6 │ 0 │ 469.00 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2015-12-05 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 68.83 │ 21 │ 2 │ 3 │ 1445.43 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2016-02-06 │ YUM │ STOCK │ Consumer Cyclical │ Restaurants │ United States │ North America │ 48.49 │ 2 │ 4 │ 1 │ 96.98 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2016-09-07 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 807.99 │ 2 │ 0 │ 2 │ 1615.98 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2017-01-10 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 795.90 │ 2 │ 0 │ 0 │ 1591.80 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2017-05-10 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 38.32 │ 10 │ 0 │ 0 │ 383.20 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2017-12-08 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 85.22 │ 10 │ 4 │ 0 │ 852.20 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2018-07-05 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 195.99 │ 5 │ 2 │ 5 │ 979.95 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2018-09-03 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 79.60 │ 3 │ 2 │ 4 │ 238.80 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2019-05-04 │ BABA │ STOCK │ Consumer Cyclical │ Internet Retail │ China │ Asia │ 188.24 │ 5 │ 1 │ 2 │ 941.20 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2019-09-09 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 43.85 │ 3 │ 6 │ 7 │ 131.55 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2019-12-10 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 104.94 │ 8 │ 1 │ 4 │ 839.52 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2020-02-03 │ YUM │ STOCK │ Consumer Cyclical │ Restaurants │ United States │ North America │ 106.41 │ 10 │ 10 │ 2 │ 1064.10 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2020-03-08 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 1215.79 │ 3 │ 10 │ 2 │ 3647.37 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2020-06-09 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 2600.86 │ 2 │ 200 │ 20 │ 5201.72 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2020-12-12 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 121.78 │ 4 │ 10 │ 0 │ 487.12 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2021-01-07 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 144.80 │ 20 │ 10 │ 6 │ 2896.00 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2021-05-06 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 644.34 │ 30 │ 10 │ 3 │ 19330.20 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2021-12-28 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 166.42 │ 13 │ 20 │ 3 │ 2163.46 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2022-02-02 │ BABA │ STOCK │ Consumer Cyclical │ Internet Retail │ China │ Asia │ 122.88 │ 30 │ 0 │ 1 │ 3686.40 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2022-03-04 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 105.06 │ 30 │ 0 │ 2 │ 3151.80 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2022-04-12 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 137.27 │ 10 │ 30 │ 1 │ 1372.70 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2022-05-02 │ YUM │ STOCK │ Consumer Cyclical │ Restaurants │ United States │ North America │ 115.76 │ 11 │ 40 │ 0 │ 1273.36 │ 1 │ USD │ └────────────┴───────┴───────┴────────────────────────┴─────────────────────────────────────┴───────────────┴───────────────┴──────────┴──────────┴──────┴─────────┴────────────┴──────┴──────────┘ "},{"id":1005,"href":"/OpenBBTerminal/terminal/portfolio/maxdd/","title":"Maxdd","parent":"Introduction to Portfolio","content":"usage: maxdd [-h] [--export EXPORT] Show portfolio maximum drawdown\noptional arguments: -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) "},{"id":1006,"href":"/OpenBBTerminal/terminal/portfolio/metric/","title":"Metric","parent":"Introduction to Portfolio","content":"usage: metric [-m {volatility,sharpe,sortino,maxdrawdown,rsquare,skew,kurtosis,gaintopain,trackerr,information,tail,commonsense,jensens,calmar,kelly,payoff,profitfactor}] [-r RISK_FREE_RATE] [-h] [--export EXPORT] Display metric of choice for different periods\noptional arguments: -m {volatility,sharpe,sortino,maxdrawdown,rsquare,skew,kurtosis,gaintopain,trackerr,information,tail,commonsense,jensens,calmar,kelly,payoff,profitfactor}, --metric {volatility,sharpe,sortino,maxdrawdown,rsquare,skew,kurtosis,gaintopain,trackerr,information,tail,commonsense,jensens,calmar,kelly,payoff,profitfactor} Set metric of choice (default: False) -r RISK_FREE_RATE, --rfr RISK_FREE_RATE Set risk free rate for calculations. (default: 0.0) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) E.g. metric sharpe\nSharpe ratio for Portfolio and Benchmark ┏━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ Portfolio ┃ Benchmark ┃ ┡━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ mtd │ -0.057 │ -0.027 │ ├─────┼───────────┼───────────┤ │ qtd │ -0.220 │ -0.172 │ ├─────┼───────────┼───────────┤ │ ytd │ -0.123 │ -0.098 │ ├─────┼───────────┼───────────┤ │ 3m │ -0.103 │ -0.052 │ ├─────┼───────────┼───────────┤ │ 6m │ -0.127 │ -0.070 │ ├─────┼───────────┼───────────┤ │ 1y │ -0.038 │ 0.007 │ ├─────┼───────────┼───────────┤ │ 3y │ 0.018 │ 0.044 │ ├─────┼───────────┼───────────┤ │ 5y │ 0.025 │ 0.046 │ ├─────┼───────────┼───────────┤ │ 10y │ 0.026 │ 0.056 │ ├─────┼───────────┼───────────┤ │ all │ 0.024 │ 0.050 │ └─────┴───────────┴───────────┘ Below provides an explanation of the metric available. Full credit go to the sources that are linked here, we merely replicate their findings.\nName\nDefinition\nFormula\nTracking Error\nTracking error is the divergence between the price behavior of a position or a portfolio and the price behavior of a benchmark. This is often in the context of a\u0026nbsp;hedge fund,\u0026nbsp;mutual fund,\u0026nbsp;or exchange-traded fund\u0026nbsp;(ETF) that did not work as effectively as intended, creating an unexpected profit or loss.\nTracking Error = Standard Deviation of (P - B)\nWhere P is Portfolio and B is Benchmark\nInformation Ratio (IR)\nThe information ratio (IR) is a measurement of portfolio returns beyond the returns of a benchmark, usually an index, compared to the volatility of those returns. The benchmark used is typically an index that represents the market or a particular sector or industry.\nTracking Error = (Portfolio Return - Benchmark Return) / Tracking Error\nTracking Error formula is described above.\nSharpe Ratio\nThe ratio is the average return earned in excess of the risk-free rate per unit of volatility or total risk. Volatility is a measure of the price fluctuations of an asset or portfolio.\nSharpe Ratio = (Return of the Portfolio - Return on Risk Free asset) / Standard deviation of the Portfolio\nRisk-free asset is usually a long-term treasury bond and often 0%.\nSortino Ratio\nThe Sortino ratio is a variation of the Sharpe ratio that differentiates harmful volatility from total overall volatility by using the asset's standard deviation of negative portfolio returns—downside deviation—instead of the total standard deviation of portfolio returns.\nSortino Rate = (Return of the Portfolio - Return on Risk Free asset) / Standard deviation of the downside Portfolio\nNote that he only difference with Sharpe Ratio is that you only consider downside volatility (decreases in value). Tail Ratio\nMean reversion strategies have low volatility, consistent performance and high Sharpe ratio. On the surface, they are what investors look for. The problem is mean reverting strategies work well, until they don’t. Big losses are unpredictable. LTCM had a great Sharpe ratio, at least until October 15th, 1987… Risk is\u0026nbsp;in the left tail.\u0026nbsp;The best metric\u0026nbsp;for mean reverting strategies is therefore: tail ratio. Tail ratio measures what happens at the\u0026nbsp;ends\u0026nbsp;of both tails. Tail ratio \u0026nbsp;= percentile(returns, 95%) / percentile(returns, 5%)\nGain-to-pain ratio\nThe gain-to-pain ratio for an investor who wants an annual return of 10% and is willing to tolerate a maximum drawdown of 20% is 0.5. An investor expecting an annual return of 15% with a drawdown of 50% has a gain-to-pain ratio of 0.3.\nAllow for both user input and actual calculation based on the portfolio and benchmark history.\nGain-to-pain-ratio = desired return / maximum tolerable drawdown\nThis ratio can be calculated based on historic data of the portfolio and the maximum drawdown. The investor itself can, based on his own expectations and maximum tolerable drawdown decide if this is what he is comfortable with.\nCommon Sense Ratio\nRegardless of the asset class, there are only two types of strategy: mean reversion or trend following. They both have different risk profiles. Common Sense Ratio recaptures the risks associated with both mean reversion and trend following strategies. An alternative to Sharpe Ratio. Common Sense Ratio = tail ratio * gain to pain ratio\nThe formulas to these ratios can be found above.\nMaximum Drawdown (MDD)\nA maximum drawdown (MDD) is the maximum observed loss from a peak to a through of a portfolio, before a new peak is attained. Maximum drawdown is an indicator of downside risk over a specified time period.\nMaximum Drawdown = (through - Peak) / Peak\nthrough is defined as the minimum of the portfolio (e.g. from 750k to 350k)\nPeak is defined as the maximum of the portfolio (e.g. 750k) before the through. For example an increase to 800k after the 350k is not the peak.\nVolatility\nVolatility is a statistical measure of the dispersion of returns for a given security or market index. In most cases, the higher the volatility, the riskier the security. Volatility is often measured as either the standard deviation or variance between returns from that same security or market index.\nYou can simply use .std commands but below explains what actually happens:\nCalculate the mean, Mean = average of all stock prices\nDetermine deviations, deviation = stock price minus mean\nSquare the deviations, deviation_squared = deviation ** 2\nSum the deviations, sum_of_squared_deviations = sum(deviation_squared)\nDetermine variance, variance = sum_of_squared_deviations / total amount of stock prices\nDetermine standard deviation, standard_deviation = root of variance\nR-squared\nIn investing, R-squared is generally\u0026nbsp;interpreted as the percentage of a fund or security's movements that can be explained by movements in a benchmark index.\nRequires the use of a simple linear regression model. Please see the Investopedia page: ​What Is R-Squared? Beta\nBeta, primarily used in the capital asset pricing model (CAPM), is a measure of the volatility–or systematic risk–of a security or portfolio compared to the market (= benchmark) as a whole. By definition, the benchmark beta is 1.\nBeta = covariance of return of portfolio and benchmark / variance of benchmark\nCovariance is calculated by the sum of the deviations of the portfolio times that of the benchmark divided by the the amount of stock prices - 1. See: ​Covariance Jensen’s Alpha (also see Alpha)\nThe Jensen's measure, or Jensen's alpha, is a risk-adjusted performance measure that represents the average return on a portfolio or investment, above or below that predicted by the capital asset pricing model (CAPM), given the portfolio's or investment's beta and the average market return. This metric is also commonly referred to as simply alpha.\nJensen's alpha = return of the portfolio - (return on the risk free rate + the beta of the portfolio times (the return on the benchmark minus the return on the risk free rate))\nFor example 15% - (3% + 1.2 x (12% - 3%)) = 15% - 13.8% = 1.2% which means, adjusted for risk, the portfolio manager added value.\nCalmar Ratio\nIt is a function of the fund's average compounded annual rate of return versus its maximum drawdown. The higher the Calmar ratio, the better it performed on a risk-adjusted basis during the given time frame, which is mostly commonly set at 36 months.\nCalmar Ratio = annual return / maximum drawdown\nKelly Criterion\nThe formula is used by investors who want to trade with the objective of growing capital, and it assumes that the investor will reinvest profits and put them at risk for future trades. The goal of the formula is to determine the optimal amount to put into any one trade.\nKelly Criterion = W - (1 - W) / R\nWhere W is historical \"wins\" (percentage of returns that are positive). This can be based on the historical data.\nWhere R is trader \"wins\" (percentage of returns that are positive of the trader). This can be based on the orderbook\nRisk of Ruin (also see ​Risk of ruin )\nRisk of ruin is the probability that an individual will lose substantial amounts of money through investing, trading, or gambling—to the point where it is no longer possible to recover the losses or continue.\nFor a random walk with a starting value of s, and at every iterative step, is moved by a normal distribution having mean μ and standard deviation σ and failure occurs if it reaches 0 or a negative value.\nValue at Risk (VaR)\nValue at risk (VaR)\u0026nbsp;is a statistic that quantifies the extent of possible financial losses within a firm, portfolio, or position over a specific time frame.\nCreate a normal distribution of the daily returns and take the 1th, 2.5th, 5th and 10th percentile.\nConditional Value at Risk (CVaR) or Expected Shortfall (ES)\nConditional Value at Risk (CVaR), also known as the expected shortfall, is a risk assessment measure that quantifies the amount of tail risk an investment portfolio has. CVaR is derived by taking a weighted average of the “extreme” losses in the tail of the distribution of possible returns, beyond the value at risk (VaR) cutoff point.\nTake the weighted average of all occurrences that go past VaR percentile. This number will be by definition higher than that of VaR.\nPayoff Ratio\nThe payoff ratio is defined as the average winner per trade divided by the average loser per trade for a trading system. The higher the payoff ratio the better the trading system performs.\u0026nbsp;\nProfit Factor\nThe profit factor is the gross profit of a trading system divided by the gross loss of a trading system. Simply put. it’s the total amount of money you win divided by the total amount of money you lost.\n"},{"id":1007,"href":"/OpenBBTerminal/terminal/portfolio/mret/","title":"Mret","parent":"Introduction to Portfolio","content":"usage: mret [-p {3y,5y,10y,all}] [-s] [-h] [--export EXPORT] [--raw] Monthly returns\noptional arguments: -p {3y,5y,10y,all}, --period {3y,5y,10y,all} Period to select start end of the year returns (default: all) -s, --show Show monthly returns on heatmap (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) "},{"id":1008,"href":"/OpenBBTerminal/terminal/portfolio/om/","title":"Om","parent":"Introduction to Portfolio","content":"usage: om [-s START] [-e END] [-h] Provides omega ratio of the selected portfolio.\nThe omega ratio is the probability weighted ratio of gains versus losses for a threshold return. This is in practice done by getting the sum of the returns above the threshold return and of the returns below it and then calculating the ratio between these sums. For more, read: https://en.wikipedia.org/wiki/Omega_ratio\noptional arguments: -s START, --start START Start of the omega ratio threshold (default: 0) -e END, --end END End of the omega ratio threshold (default: 1.5) -h, --help show this help message (default: False) "},{"id":1009,"href":"/OpenBBTerminal/terminal/portfolio/perf/","title":"Perf","parent":"Introduction to Portfolio","content":"usage: performance [-s] [-t] [-h] Shows performance of each trade and total performance of the portfolio versus the benchmark.\noptional arguments: -s, --full_shares Whether to only make a trade with the benchmark when a full share can be bought (no partial shares). (default: False) -t, --show_trades Whether to show performance on all trades in comparison to the benchmark. (default: False) -h, --help show this help message (default: False) Example:\n2022 May 12, 06:22 (🦋) /portfolio/ $ perf -t Portfolio vs. Benchmark - Totals ┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Total Investment │ 61331.99 │ 61331.99 │ 0.00e+00 │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total Value │ 95969.52 │ 81940.19 │ 14029.33 │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total % Return │ 0.56 │ 0.34 │ 0.23 │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total Abs Return │ 34637.53 │ 20608.20 │ 14029.33 │ └──────────────────┴───────────┴───────────┴────────────┘ Portfolio vs. Benchmark - Individual Trades ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ Date ┃ Name ┃ Portfolio Value ┃ % Portfolio Return ┃ Benchmark Value ┃ % Benchmark Return ┃ Alpha ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ 2010-05-03 00:00:00 │ CASH │ 0.00e+00 │ 0.00e+00 │ 0.00e+00 │ 0.00e+00 │ 0.00e+00 │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2010-05-03 00:00:00 │ GOOGL │ 4544.10 │ 756.41% │ 2102.34 │ 296.22% │ 460.19% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2010-07-06 00:00:00 │ AMZN │ 10537.20 │ 1814.81% │ 2563.26 │ 365.79% │ 1449.02% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2011-08-06 00:00:00 │ AAPL │ 439.50 │ 1061.78% │ 157.50 │ 316.33% │ 745.44% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2011-12-12 00:00:00 │ APTV │ 453.70 │ 403.55% │ 336.57 │ 273.56% │ 129.99% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2012-02-03 00:00:00 │ ASML │ 3649.10 │ 781.02% │ 1407.84 │ 239.90% │ 541.12% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2012-05-04 00:00:00 │ NKE │ 323.76 │ 286.12% │ 280.56 │ 234.60% │ 51.52% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2012-08-04 00:00:00 │ TSM │ 4391.50 │ 516.78% │ 2341.66 │ 228.88% │ 287.90% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2012-10-12 00:00:00 │ DGX │ 797.16 │ 109.59% │ 1212.76 │ 218.86% │ -109.27% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2013-02-03 00:00:00 │ YUM │ 435.60 │ 136.84% │ 550.77 │ 199.46% │ -62.62% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2013-03-04 00:00:00 │ GOOGL │ 2272.05 │ 453.15% │ 1205.05 │ 193.38% │ 259.77% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2013-08-08 00:00:00 │ AMZN │ 2107.44 │ 612.60% │ 769.49 │ 160.19% │ 452.41% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2013-10-09 00:00:00 │ AAPL │ 732.50 │ 742.92% │ 229.90 │ 164.56% │ 578.36% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2014-02-03 00:00:00 │ APTV │ 453.70 │ 83.20% │ 618.99 │ 149.94% │ -66.74% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2014-02-05 00:00:00 │ ASML │ 1563.90 │ 512.14% │ 634.71 │ 148.44% │ 363.70% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2014-12-08 00:00:00 │ NKE │ 1079.20 │ 120.88% │ 1029.58 │ 110.72% │ 10.16% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2015-02-02 00:00:00 │ BABA │ 2451.90 │ -9.32% │ 5772.66 │ 113.49% │ -122.81% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2015-03-08 00:00:00 │ TSM │ 1756.60 │ 274.54% │ 967.87 │ 106.37% │ 168.17% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2015-12-05 00:00:00 │ DGX │ 2790.06 │ 93.03% │ 2977.51 │ 106.00% │ -12.97% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2016-02-06 00:00:00 │ YUM │ 217.80 │ 124.58% │ 225.69 │ 132.72% │ -8.14% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2016-09-07 00:00:00 │ GOOGL │ 4544.10 │ 181.20% │ 3099.70 │ 91.82% │ 89.38% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2017-01-10 00:00:00 │ AMZN │ 4214.88 │ 164.79% │ 2913.21 │ 83.01% │ 81.77% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2017-05-10 00:00:00 │ AAPL │ 1465.00 │ 282.31% │ 661.37 │ 72.59% │ 209.71% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2017-12-08 00:00:00 │ APTV │ 907.40 │ 6.48% │ 1317.77 │ 54.63% │ -48.15% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2018-07-05 00:00:00 │ ASML │ 2606.50 │ 165.98% │ 1441.40 │ 47.09% │ 118.89% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2018-09-03 00:00:00 │ NKE │ 323.76 │ 35.58% │ 331.89 │ 38.98% │ -3.40% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2019-05-04 00:00:00 │ BABA │ 408.65 │ -56.58% │ 1284.84 │ 36.51% │ -93.09% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2019-09-09 00:00:00 │ TSM │ 263.49 │ 100.30% │ 177.00 │ 34.55% │ 65.74% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2019-12-10 00:00:00 │ DGX │ 1062.88 │ 26.61% │ 1069.02 │ 27.34% │ -0.73% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2020-02-03 00:00:00 │ YUM │ 1089.00 │ 2.34% │ 1304.22 │ 22.57% │ -20.23% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2020-03-08 00:00:00 │ GOOGL │ 6816.15 │ 86.88% │ 5324.47 │ 45.98% │ 40.90% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2020-06-09 00:00:00 │ AMZN │ 4214.88 │ -18.97% │ 6436.07 │ 23.73% │ -42.70% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2020-12-12 00:00:00 │ AAPL │ 586.00 │ 20.30% │ 512.33 │ 5.18% │ 15.12% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2021-01-07 00:00:00 │ APTV │ 1814.80 │ -37.33% │ 2901.22 │ 0.18% │ -37.51% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2021-05-06 00:00:00 │ ASML │ 15639.00 │ -19.10% │ 17643.93 │ -8.72% │ -10.37% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2021-12-28 00:00:00 │ NKE │ 1402.96 │ -35.15% │ 1749.43 │ -19.14% │ -16.01% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2022-02-02 00:00:00 │ BABA │ 2451.90 │ -33.49% │ 3141.73 │ -14.78% │ -18.71% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2022-03-04 00:00:00 │ TSM │ 2634.90 │ -16.40% │ 2835.11 │ -10.05% │ -6.35% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2022-04-12 00:00:00 │ DGX │ 1328.60 │ -3.21% │ 1216.75 │ -11.36% │ 8.15% │ ├─────────────────────┼───────┼─────────────────┼────────────────────┼─────────────────┼────────────────────┼──────────┤ │ 2022-05-02 00:00:00 │ YUM │ 1197.90 │ -5.93% │ 1194.00 │ -6.23% │ 0.31% │ └─────────────────────┴───────┴─────────────────┴────────────────────┴─────────────────┴────────────────────┴──────────┘ "},{"id":1010,"href":"/OpenBBTerminal/terminal/portfolio/po/add/","title":"Add","parent":"Introduction to Portfolio Optimization","content":"usage: add/select [-t ADD_TICKERS] [-h] Add/Select tickers for portfolio to be optimized.\noptional arguments: -t ADD_TICKERS, --tickers ADD_TICKERS tickers to be used in the portfolio to optimize. -h, --help show this help message "},{"id":1011,"href":"/OpenBBTerminal/terminal/portfolio/po/blacklitterman/","title":"Blacklitterman","parent":"Introduction to Portfolio Optimization","content":"usage: blacklitterman [-p PERIOD] [-s START] [-e END] [-lr] [--freq {d,w,m}] [-mn MAXNAN] [-th THRESHOLD] [-mt METHOD] [-bm BENCHMARK] [-o {MinRisk,Utility,Sharpe,MaxRet}] [-pv P_VIEWS] [-qv Q_VIEWS] [-r RISK_FREE_RATE] [-ra RISK_AVERSION] [-d DELTA] [-eq] [-op] [-v VALUE] [-vs VALUE_SHORT] [--name NAME] [-h] The Black-Litterman (BL) Model is an analytical tool used by portfolio managers to optimize asset allocation within an investor’s risk tolerance and market views. Global investors, such as pension funds and insurance companies, need to decide how to allocate their investments across different asset classes and countries. The BL model starts from a neutral position using modern portfolio theory (MPT), and then takes additional input from investors' views to determine how the ultimate asset allocation should deviate from the initial portfolio weights. It then undergoes a process of mean-variance optimization (MVO) to maximize expected return given one\u0026rsquo;s objective risk tolerance.\noptional arguments: -p PERIOD, --period PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START, --start START Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END, --end END End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAXNAN, --maxnan MAXNAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD, --threshold THRESHOLD Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt METHOD, --method METHOD Method used to fill nan values in time series, by default time. Possible values are: linear: linear interpolation time: linear interpolation based on time index nearest: use nearest value to replace nan values zero: spline of zeroth order slinear: spline of first order quadratic: spline of second order cubic: spline of third order barycentric: builds a polynomial that pass for all points (default: time) -bm BENCHMARK, --benchmark BENCHMARK portfolio name from current portfolio list (default: None) -o {MinRisk,Utility,Sharpe,MaxRet}, --objective {MinRisk,Utility,Sharpe,MaxRet} Objective function used to optimize the portfolio (default: MinRisk) -pv P_VIEWS, --p-views P_VIEWS matrix P of views (default: None) -qv Q_VIEWS, --q-views Q_VIEWS matrix Q of views (default: None) -r RISK_FREE_RATE, --risk-free-rate RISK_FREE_RATE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -ra RISK_AVERSION, --risk-aversion RISK_AVERSION Risk aversion parameter (default: 1.0) -d DELTA, --delta DELTA Risk aversion factor of Black Litterman model (default: None) -eq, --equilibrium If True excess returns are based on equilibrium market portfolio, if False excess returns are calculated as historical returns minus risk free rate. (default: True) -op, --optimize If True Black Litterman estimates are used as inputs of mean variance model, if False returns equilibrium weights from Black Litterman model (default: True) -v VALUE, --value VALUE Amount to allocate to portfolio in long positions (default: 1.0) -vs VALUE_SHORT, --value-short VALUE_SHORT Amount to allocate to portfolio in short positions (default: 0.0) --name NAME Save portfolio with personalized or default name (default: BL_3) -h, --help show this help message (default: False) Example:\nFirst we need to build a benchmark portfolio:\n2022 Apr 26, 01:25 (🦋) /portfolio/po/ $ add AAPL,MSFT,JP,BA 2022 Apr 26, 01:26 (🦋) /portfolio/po/ $ maxsharpe [3 Years] Maximal return/risk ratio portfolio using volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━━┩ │ AAPL │ 100.00 % │ ├──────┼──────────┤ │ BA │ 0.00 % │ ├──────┼──────────┤ │ JP │ 0.00 % │ ├──────┼──────────┤ │ MSFT │ 0.00 % │ └──────┴──────────┘ Annual (by 252) expected return: 45.46% Annual (by √252) volatility: 34.16% Sharpe ratio: 1.3209 Then we add our views to the benchmark portfolio:\n2022 Apr 26, 01:27 (🦋) /portfolio/po/ $ blacklitterman -bm maxsharpe_0 -pv 0,1, 0,0;1,0,0,0;0,0,0,1 -qv 0.1,0.1,0.05 -o Sharpe [3 Years] Black Litterman portfolio Weights ┏━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━━┩ │ AAPL │ 70.30 % │ ├──────┼──────────┤ │ BA │ 18.55 % │ ├──────┼──────────┤ │ JP │ 0.01 % │ ├──────┼──────────┤ │ MSFT │ 11.14 % │ └──────┴──────────┘ Annual (by 252) expected return: 33.94% Annual (by √252) volatility: 32.80% Sharpe ratio: 1.0346 "},{"id":1012,"href":"/OpenBBTerminal/terminal/portfolio/po/dividend/","title":"Dividend","parent":"Introduction to Portfolio Optimization","content":"usage: dividend [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-v LONG_ALLOCATION] [--name NAME] [-h] Returns a portfolio that is weighted based dividend yield.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to calculate indicators. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: DIVIDEND_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:55 (🦋) /portfolio/po/ $ dividend [3 Years] Weighted Portfolio based on dividendYield Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 8.48 % │ ├──────┼─────────┤ │ AMZN │ 0.0 % │ ├──────┼─────────┤ │ BA │ 0.0 % │ ├──────┼─────────┤ │ FB │ 0.0 % │ ├──────┼─────────┤ │ MSFT │ 13.58 % │ ├──────┼─────────┤ │ T │ 77.92 % │ ├──────┼─────────┤ │ TSLA │ 0.0 % │ └──────┴─────────┘ Annual (by 252) expected return: 10.30% Annual (by √252) volatility: 24.10% Sharpe ratio: 0.4198 "},{"id":1013,"href":"/OpenBBTerminal/terminal/portfolio/po/ef/","title":"Ef","parent":"Introduction to Portfolio Optimization","content":"usage: ef [-p PERIOD] [-s START] [-e END] [-lr] [--freq {d,w,m}] [-mn MAXNAN] [-th THRESHOLD] [-mt METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE_RATE] [-a ALPHA] [-v VALUE] [-vs VALUE_SHORT] [-n N_PORTFOLIOS] [-se SEED] [-t] [-h] This function plots random portfolios based on their risk and returns and shows the efficient frontier of selected risk measure.\noptional arguments: -p PERIOD, --period PERIOD Period to get yfinance data from (default: 3y) -s START, --start START Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END, --end END End date to get yfinance data from (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns (default: d) -mn MAXNAN, --maxnan MAXNAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD, --threshold THRESHOLD Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt METHOD, --method METHOD Method used to fill nan values (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio (default: MV) -r RISK_FREE_RATE, --risk-free-rate RISK_FREE_RATE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00185) -a ALPHA, --alpha ALPHA Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -v VALUE, --value VALUE Amount to allocate to portfolio in long positions (default: 1.0) -vs VALUE_SHORT, --value-short VALUE_SHORT Amount to allocate to portfolio in short positions (default: 0.0) -n N_PORTFOLIOS, --number-portfolios N_PORTFOLIOS Number of portfolios to simulate (default: 100) -se SEED, --seed SEED Seed used to generate random portfolios (default: 123) -t, --tangency Adds the optimal line with the risk-free asset (default: False) --no-plot Whether to plot the tickers (default: True) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 15:03 (🦋) /portfolio/po/ $ ef "},{"id":1014,"href":"/OpenBBTerminal/terminal/portfolio/po/equal/","title":"Equal","parent":"Introduction to Portfolio Optimization","content":"usage: equal [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-v LONG_ALLOCATION] [--name NAME] [-h] Returns an equally weighted portfolio.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: EQUAL_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:52 (🦋) /portfolio/po/ $ equal [3 Years] Equally Weighted Portfolio Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 14.28 % │ ├──────┼─────────┤ │ AMZN │ 14.28 % │ ├──────┼─────────┤ │ BA │ 14.28 % │ ├──────┼─────────┤ │ FB │ 14.28 % │ ├──────┼─────────┤ │ MSFT │ 14.28 % │ ├──────┼─────────┤ │ T │ 14.28 % │ ├──────┼─────────┤ │ TSLA │ 14.28 % │ └──────┴─────────┘ Annual (by 252) expected return: 35.70% Annual (by √252) volatility: 29.50% Sharpe ratio: 1.2041 "},{"id":1015,"href":"/OpenBBTerminal/terminal/portfolio/po/file/","title":"File","parent":"Introduction to Portfolio Optimization","content":"usage: file -f FILE [FILE ...] [-h] Select parameter file to use.\nOptional arguments:\noptional arguments: -f FILE [FILE ...], --file FILE [FILE ...] Parameter file to be used (default: None) -h, --help show this help message (default: False) 2022 May 02, 06:51 (🦋) /portfolio/po/ $ file OpenBB_Parameters_Template v1.0.0.xlsx Parameters: historic_period : 3y log_returns : 0 return_frequency : d max_nan : 0.05 threshold_value : 0.3 nan_fill_method : time risk_free : 0.003 significance_level : 0.05 risk_measure : MV target_return : -1 target_risk : -1 expected_return : hist covariance : hist smoothing_factor_ewma : 0.94 long_allocation : 1 short_allocation : 0 "},{"id":1016,"href":"/OpenBBTerminal/terminal/portfolio/po/herc/","title":"Herc","parent":"Introduction to Portfolio Optimization","content":"usage: herc [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-cd {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail}] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-rm {MV,MAD,GMD,MSV,VaR,CVaR,TG,EVaR,RG,CVRG,TGRG,WR,FLPM,SLPM,MDD,ADD,DaR,CDaR,EDaR,UCI,MDD_Rel,ADD_Rel,DaR_Rel,CDaR_Rel,EDaR_Rel,UCI_Rel}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-as CVAR_SIMULATIONS_LOSSES] [-b CVAR_SIGNIFICANCE] [-bs CVAR_SIMULATIONS_GAINS] [-lk {single,complete,average,weighted,centroid,median,ward,dbht}] [-k AMOUNT_CLUSTERS] [-mk MAX_CLUSTERS] [-bi AMOUNT_BINS] [-at ALPHA_TAIL] [-lo LEAF_ORDER] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [--name NAME] [-h] In a risk budgeting portfolio, the risk contribution from each component is equal to the budget of risk defined by the portfolio manager. Maillard, Roncalli, and Teiletche (source) described the Equal Risk Contribution optimization, which is satisfied when all assets contribute the same volatility to the portfolio (equal risk budgeting). It has been shown that the Equal Risk Contribution portfolio is a compelling balance between the objectives of the equal weight and Minimum Variance portfolios. It is also a close cousin to the Inverse Volatility portfolio, except that it is less vulnerable to the case where assets have vastly different correlations.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -cd {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail}, --codependence {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail} The codependence or similarity matrix used to build the distance metric and clusters. Possible values are: 'pearson': pearson correlation matrix 'spearman': spearman correlation matrix 'abs_pearson': absolute value of pearson correlation matrix 'abs_spearman': absolute value of spearman correlation matrix 'distance': distance correlation matrix 'mutual_info': mutual information codependence matrix 'tail': tail index codependence matrix (default: pearson) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -rm {MV,MAD,GMD,MSV,VaR,CVaR,TG,EVaR,RG,CVRG,TGRG,WR,FLPM,SLPM,MDD,ADD,DaR,CDaR,EDaR,UCI,MDD_Rel,ADD_Rel,DaR_Rel,CDaR_Rel,EDaR_Rel,UCI_Rel}, --risk-measure {MV,MAD,GMD,MSV,VaR,CVaR,TG,EVaR,RG,CVRG,TGRG,WR,FLPM,SLPM,MDD,ADD,DaR,CDaR,EDaR,UCI,MDD_Rel,ADD_Rel,DaR_Rel,CDaR_Rel,EDaR_Rel,UCI_Rel} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'GMD' : Gini Mean Difference 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'VaR' : Value at Risk 'CVaR' : Conditional Value at Risk 'TG' : Tail Gini 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'RG' : Range 'CVRG' : CVaR Range 'TGRG' : Tail Gini Range 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'DaR' : Drawdown at Risk of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns 'ADD_Rel' : Average Drawdown of compounded returns 'UCI_Rel' : Ulcer Index of compounded returns 'DaR_Rel' : Drawdown at Risk of compounded returns 'CDaR_Rel' : Conditional Drawdown at Risk of compounded returns 'EDaR_Rel' : Entropic Drawdown at Risk of compounded returns 'MDD_Rel' : Maximum Drawdown of compounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of VaR, CVaR, EVaR, DaR, CDaR, EDaR and Tail Gini of losses (default: 0.05) -as CVAR_SIMULATIONS_LOSSES, --a-sim CVAR_SIMULATIONS_LOSSES Number of CVaRs used to approximate Tail Gini of losses. The default is 100 (default: 100) -b CVAR_SIGNIFICANCE, --beta CVAR_SIGNIFICANCE Significance level of CVaR and Tail Gini of gains. If empty it duplicates alpha (default: None) -bs CVAR_SIMULATIONS_GAINS, --b-sim CVAR_SIMULATIONS_GAINS Number of CVaRs used to approximate Tail Gini of gains. If empty it duplicates a_sim value (default: None) -lk {single,complete,average,weighted,centroid,median,ward,dbht}, --linkage {single,complete,average,weighted,centroid,median,ward,dbht} Linkage method of hierarchical clustering (default: single) -k AMOUNT_CLUSTERS Number of clusters specified in advance (default: None) -mk MAX_CLUSTERS, --max-k MAX_CLUSTERS Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. If k is empty this value is used (default: 10) -bi AMOUNT_BINS, --bins-info AMOUNT_BINS Number of bins used to calculate the variation of information (default: KN) -at ALPHA_TAIL, --alpha-tail ALPHA_TAIL Significance level for lower tail dependence index, only used when when codependence value is 'tail' (default: 0.05) -lo LEAF_ORDER, --leaf-order LEAF_ORDER Indicates if the cluster are ordered so that the distance between successive leaves is minimal (default: True) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: HERC_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:40 (🦋) /portfolio/po/ $ herc [3 Years] Hierarchical equal risk contribution portfolio using pearson codependence,single linkage and volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 10.78 % │ ├──────┼─────────┤ │ AMZN │ 12.64 % │ ├──────┼─────────┤ │ BA │ 9.12 % │ ├──────┼─────────┤ │ FB │ 8.08 % │ ├──────┼─────────┤ │ MSFT │ 12.86 % │ ├──────┼─────────┤ │ T │ 43.83 % │ ├──────┼─────────┤ │ TSLA │ 2.66 % │ └──────┴─────────┘ Annual (by 252) expected return: 18.09% Annual (by √252) volatility: 24.19% Sharpe ratio: 0.7401 "},{"id":1017,"href":"/OpenBBTerminal/terminal/portfolio/po/hrp/","title":"Hrp","parent":"Introduction to Portfolio Optimization","content":"usage: hrp [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-cd {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail}] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-rm {MV,MAD,GMD,MSV,VaR,CVaR,TG,EVaR,RG,CVRG,TGRG,WR,FLPM,SLPM,MDD,ADD,DaR,CDaR,EDaR,UCI,MDD_Rel,ADD_Rel,DaR_Rel,CDaR_Rel,EDaR_Rel,UCI_Rel}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-as CVAR_SIMULATIONS_LOSSES] [-b CVAR_SIGNIFICANCE] [-bs CVAR_SIMULATIONS_GAINS] [-lk {single,complete,average,weighted,centroid,median,ward,dbht}] [-k AMOUNT_CLUSTERS] [-mk MAX_CLUSTERS] [-bi AMOUNT_BINS] [-at ALPHA_TAIL] [-lo LEAF_ORDER] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [--name NAME] [-h] This Hierarchical Risk Parity (HRP) method uses the information contained in the covariance matrix without requiring its inversion or positive definiteness. In fact, HRP can compute a portfolio based on a singular covariance matrix—an impossible feat for quadratic optimizers. HRP starts by reorganizing the covariance matrix to place similar investments together. Then, it employs an inverse-variance weighting allocation based on the number of assets with no further use of the clustering.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -cd {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail}, --codependence {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail} The codependence or similarity matrix used to build the distance metric and clusters. Possible values are: 'pearson': pearson correlation matrix 'spearman': spearman correlation matrix 'abs_pearson': absolute value of pearson correlation matrix 'abs_spearman': absolute value of spearman correlation matrix 'distance': distance correlation matrix 'mutual_info': mutual information codependence matrix 'tail': tail index codependence matrix (default: pearson) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -rm {MV,MAD,GMD,MSV,VaR,CVaR,TG,EVaR,RG,CVRG,TGRG,WR,FLPM,SLPM,MDD,ADD,DaR,CDaR,EDaR,UCI,MDD_Rel,ADD_Rel,DaR_Rel,CDaR_Rel,EDaR_Rel,UCI_Rel}, --risk-measure {MV,MAD,GMD,MSV,VaR,CVaR,TG,EVaR,RG,CVRG,TGRG,WR,FLPM,SLPM,MDD,ADD,DaR,CDaR,EDaR,UCI,MDD_Rel,ADD_Rel,DaR_Rel,CDaR_Rel,EDaR_Rel,UCI_Rel} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'GMD' : Gini Mean Difference 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'VaR' : Value at Risk 'CVaR' : Conditional Value at Risk 'TG' : Tail Gini 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'RG' : Range 'CVRG' : CVaR Range 'TGRG' : Tail Gini Range 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'DaR' : Drawdown at Risk of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns 'ADD_Rel' : Average Drawdown of compounded returns 'UCI_Rel' : Ulcer Index of compounded returns 'DaR_Rel' : Drawdown at Risk of compounded returns 'CDaR_Rel' : Conditional Drawdown at Risk of compounded returns 'EDaR_Rel' : Entropic Drawdown at Risk of compounded returns 'MDD_Rel' : Maximum Drawdown of compounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of VaR, CVaR, EVaR, DaR, CDaR, EDaR and Tail Gini of losses (default: 0.05) -as CVAR_SIMULATIONS_LOSSES, --a-sim CVAR_SIMULATIONS_LOSSES Number of CVaRs used to approximate Tail Gini of losses. The default is 100 (default: 100) -b CVAR_SIGNIFICANCE, --beta CVAR_SIGNIFICANCE Significance level of CVaR and Tail Gini of gains. If empty it duplicates alpha (default: None) -bs CVAR_SIMULATIONS_GAINS, --b-sim CVAR_SIMULATIONS_GAINS Number of CVaRs used to approximate Tail Gini of gains. If empty it duplicates a_sim value (default: None) -lk {single,complete,average,weighted,centroid,median,ward,dbht}, --linkage {single,complete,average,weighted,centroid,median,ward,dbht} Linkage method of hierarchical clustering (default: single) -k AMOUNT_CLUSTERS Number of clusters specified in advance (default: None) -mk MAX_CLUSTERS, --max-k MAX_CLUSTERS Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. If k is empty this value is used (default: 10) -bi AMOUNT_BINS, --bins-info AMOUNT_BINS Number of bins used to calculate the variation of information (default: KN) -at ALPHA_TAIL, --alpha-tail ALPHA_TAIL Significance level for lower tail dependence index, only used when when codependence value is 'tail' (default: 0.05) -lo LEAF_ORDER, --leaf-order LEAF_ORDER Indicates if the cluster are ordered so that the distance between successive leaves is minimal (default: True) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: HRP_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:20 (🦋) /portfolio/po/ $ hrp [3 Years] Hierarchical risk parity portfolio using pearson codependence, single linkage and volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 13.74 % │ ├──────┼─────────┤ │ AMZN │ 17.97 % │ ├──────┼─────────┤ │ BA │ 5.74 % │ ├──────┼─────────┤ │ FB │ 10.29 % │ ├──────┼─────────┤ │ MSFT │ 18.28 % │ ├──────┼─────────┤ │ T │ 27.57 % │ ├──────┼─────────┤ │ TSLA │ 6.37 % │ └──────┴─────────┘ Annual (by 252) expected return: 28.03% Annual (by √252) volatility: 25.35% Sharpe ratio: 1.0982 "},{"id":1018,"href":"/OpenBBTerminal/terminal/portfolio/po/load/","title":"Load","parent":"Introduction to Portfolio Optimization","content":"usage: load -f FILE [FILE ...] [-h] Load file with stocks tickers and categories.\n2022 Apr 26, 01:35 (🦋) /portfolio/po/ $ load -f allocation.xlsx 2022 Apr 26, 02:15 (🦋) /portfolio/po/ $ show Current Portfolios: None Current Categories: ASSET_CLASS, SECTOR, INDUSTRY, COUNTRY, CURRENT_INVESTED_AMOUNT, CURRENCY "},{"id":1019,"href":"/OpenBBTerminal/terminal/portfolio/po/maxdecorr/","title":"Maxdecorr","parent":"Introduction to Portfolio Optimization","content":"usage: maxdecorr [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [-vs SHORT_ALLOCATION] [--name NAME] [-h] Maximum Decorrelation described by Christoffersen et al. (source) is closely related to Minimum Variance and Maximum Diversification, but applies to the case where an investor believes all assets have similar returns and volatility, but heterogeneous correlations. It is a Minimum Variance optimization that is performed on the correlation matrix rather than the covariance matrix.\nInterestingly, when the weights derived from the Maximum Decorrelation optimization are divided through by their respective volatilities and re-standardized so they sum to 1, we retrieve the Maximum Diversification weights. Thus, the portfolio weights that maximize decorrelation will also maximize the Diversification Ratio when all assets have equal volatility and maximize the Sharpe ratio when all assets have equal risks and returns.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio in long positions (default: 1) -vs SHORT_ALLOCATION, --value-short SHORT_ALLOCATION Amount to allocate to portfolio in short positions (default: 0.0) --name NAME Save portfolio with personalized or default name (default: MAXDECORR_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:15 (🦋) /portfolio/po/ $ maxdecorr [3 Years] Display a maximal decorrelation portfolio Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 0.0 % │ ├──────┼─────────┤ │ AMZN │ 18.49 % │ ├──────┼─────────┤ │ BA │ 17.29 % │ ├──────┼─────────┤ │ FB │ 12.33 % │ ├──────┼─────────┤ │ MSFT │ 0.0 % │ ├──────┼─────────┤ │ T │ 27.37 % │ ├──────┼─────────┤ │ TSLA │ 24.50 % │ └──────┴─────────┘ Annual (by 252) expected return: 36.58% Annual (by √252) volatility: 31.17% Sharpe ratio: 1.1735 "},{"id":1020,"href":"/OpenBBTerminal/terminal/portfolio/po/maxdiv/","title":"Maxdiv","parent":"Introduction to Portfolio Optimization","content":"usage: maxdiv [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [-vs SHORT_ALLOCATION] [--name NAME] [-h] Choueifaty and Coignard (source) proposed that markets are risk-efficient, such that investments will produce returns in proportion to their total risk, as measured by volatility. This differs from CAPM, which assumes returns are proportional to non-diversifiable (i.e. systematic) risk. The Diversification Ratio, which is to be maximized, quantifies the degree to which the portfolio risk can be minimized through strategic placement of weights on diversifying (imperfectly correlated) assets.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio in long positions (default: 1) -vs SHORT_ALLOCATION, --value-short SHORT_ALLOCATION Amount to allocate to portfolio in short positions (default: 0.0) --name NAME Save portfolio with personalized or default name (default: MAXDIV_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:18 (🦋) /portfolio/po/ $ maxdiv [3 Years] Display a maximal diversification portfolio Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 0.0 % │ ├──────┼─────────┤ │ AMZN │ 22.62 % │ ├──────┼─────────┤ │ BA │ 11.53 % │ ├──────┼─────────┤ │ FB │ 12.06 % │ ├──────┼─────────┤ │ MSFT │ 0.0 % │ ├──────┼─────────┤ │ T │ 40.01 % │ ├──────┼─────────┤ │ TSLA │ 13.75 % │ └──────┴─────────┘ Annual (by 252) expected return: 24.68% Annual (by √252) volatility: 26.16% Sharpe ratio: 0.9435 "},{"id":1021,"href":"/OpenBBTerminal/terminal/portfolio/po/maxret/","title":"Maxret","parent":"Introduction to Portfolio Optimization","content":"usage: maxret [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-tr TARGET_RETURN] [-tk TARGET_RISK] [-m {hist,ewma1,ewma2}] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [-vs SHORT_ALLOCATION] [--name NAME] [-h] Maximizes the return of portfolio.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -tr TARGET_RETURN, --target-return TARGET_RETURN Constraint on minimum level of portfolio's return (default: -1) -tk TARGET_RISK, --target-risk TARGET_RISK Constraint on maximum level of portfolio's risk (default: -1) -m {hist,ewma1,ewma2}, --mean {hist,ewma1,ewma2} Method used to estimate the expected return vector (default: hist) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio in long positions (default: 1) -vs SHORT_ALLOCATION, --value-short SHORT_ALLOCATION Amount to allocate to portfolio in short positions (default: 0.0) --name NAME Save portfolio with personalized or default name (default: MAXRET_0) -h, --help show this help message (default: False) Example:\n [3 Years] Maximal return portfolio using volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 0.0 % │ ├──────┼─────────┤ │ AMZN │ 0.0 % │ ├──────┼─────────┤ │ BA │ 0.0 % │ ├──────┼─────────┤ │ FB │ 0.0 % │ ├──────┼─────────┤ │ MSFT │ 0.0 % │ ├──────┼─────────┤ │ T │ 0.0 % │ ├──────┼─────────┤ │ TSLA │ 100.0 % │ └──────┴─────────┘ Annual (by 252) expected return: 124.85% Annual (by √252) volatility: 68.44% Sharpe ratio: 1.8215 "},{"id":1022,"href":"/OpenBBTerminal/terminal/portfolio/po/maxsharpe/","title":"Maxsharpe","parent":"Introduction to Portfolio Optimization","content":"usage: maxsharpe [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-tr TARGET_RETURN] [-tk TARGET_RISK] [-m {hist,ewma1,ewma2}] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [-vs SHORT_ALLOCATION] [--name NAME] [-h] Maximizes the Risk-Adjusted Return Ratio. The Sharpe ratio is one of the most widely used methods for calculating risk-adjusted return. Modern Portfolio Theory (MPT) states that adding assets to a diversified portfolio that has low correlations can decrease portfolio risk without sacrificing returns. Adding diversification should increase the Sharpe ratio compared to similar portfolios with a lower level of diversification. For this to be true, investors must also accept the assumption that risk is equal to volatility, which is not unreasonable but may be too narrow to be applied to all investments. Post-Modern Portfolio Theory (PMPT) allows to extend the concept of Sharpe ratio to other risk measures like conditional value at risk or conditional drawdown at risk to consider downside risk aversion.\nThe Risk-Adjusted Return Ratio is calculated as follows:\n  Subtract the risk-free rate from the return of the portfolio. The risk-free rate could be a U.S. Treasury rate or yield, such as the one-year or two-year Treasury yield.\n  Divide the result by the selected risk measure of the portfolio’s excess return.\n  The Risk-Adjusted Return Ratio can also help explain whether a portfolio\u0026rsquo;s excess returns are due to smart investment decisions or a result of too much risk.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -tr TARGET_RETURN, --target-return TARGET_RETURN Constraint on minimum level of portfolio's return (default: -1) -tk TARGET_RISK, --target-risk TARGET_RISK Constraint on maximum level of portfolio's risk (default: -1) -m {hist,ewma1,ewma2}, --mean {hist,ewma1,ewma2} Method used to estimate the expected return vector (default: hist) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio in long positions (default: 1) -vs SHORT_ALLOCATION, --value-short SHORT_ALLOCATION Amount to allocate to portfolio in short positions (default: 0.0) --name NAME Save portfolio with personalized or default name (default: MAXSHARPE_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 13:52 (🦋) /portfolio/po/ $ maxsharpe --pie [3 Years] Display a maximal return/risk ratio portfolio using volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 51.47 % │ ├──────┼─────────┤ │ AMZN │ 0.0 % │ ├──────┼─────────┤ │ BA │ 0.0 % │ ├──────┼─────────┤ │ FB │ 0.0 % │ ├──────┼─────────┤ │ MSFT │ 0.0 % │ ├──────┼─────────┤ │ T │ 0.0 % │ ├──────┼─────────┤ │ TSLA │ 48.52 % │ └──────┴─────────┘ Annual (by 252) expected return: 86.15% Annual (by √252) volatility: 44.22% Sharpe ratio: 1.9441 "},{"id":1023,"href":"/OpenBBTerminal/terminal/portfolio/po/maxutil/","title":"Maxutil","parent":"Introduction to Portfolio Optimization","content":"usage: maxutil [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-ra RISK_AVERSION] [-a SIGNIFICANCE_LEVEL] [-tr TARGET_RETURN] [-tk TARGET_RISK] [-m {hist,ewma1,ewma2}] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [-vs SHORT_ALLOCATION] [--name NAME] [-h] In financial economics, the risk averse utility function is the most frequently used to describe investor behaviour. In Modern Portfolio Theory (MPT), the quadratic utility function based on variance is used to model investor preferences. However, in recent years, Post-Modern Portfolio Theory (PMPT) introduces linear risk averse utility functions based on post-modern risk measures like conditional value at risk or conditional drawdown at risk in order to model downside risk aversion.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -ra RISK_AVERSION, --risk-aversion RISK_AVERSION Risk aversion parameter (default: 1) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -tr TARGET_RETURN, --target-return TARGET_RETURN Constraint on minimum level of portfolio's return (default: -1) -tk TARGET_RISK, --target-risk TARGET_RISK Constraint on maximum level of portfolio's risk (default: -1) -m {hist,ewma1,ewma2}, --mean {hist,ewma1,ewma2} Method used to estimate the expected return vector (default: hist) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio in long positions (default: 1) -vs SHORT_ALLOCATION, --value-short SHORT_ALLOCATION Amount to allocate to portfolio in short positions (default: 0.0) --name NAME Save portfolio with personalized or default name (default: MAXUTIL_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 13:21 (🦋) /portfolio/po/ $ maxutil [3 Years] Display a maximal risk averse utility function portfolio using volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 0.0 % │ ├──────┼─────────┤ │ AMZN │ 0.0 % │ ├──────┼─────────┤ │ BA │ 0.0 % │ ├──────┼─────────┤ │ FB │ 0.0 % │ ├──────┼─────────┤ │ MSFT │ 0.0 % │ ├──────┼─────────┤ │ T │ 0.0 % │ ├──────┼─────────┤ │ TSLA │ 100.0 % │ └──────┴─────────┘ Annual (by 252) expected return: 124.85% Annual (by √252) volatility: 68.44% Sharpe ratio: 1.8215 "},{"id":1024,"href":"/OpenBBTerminal/terminal/portfolio/po/minrisk/","title":"Minrisk","parent":"Introduction to Portfolio Optimization","content":"usage: minrisk [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-tr TARGET_RETURN] [-tk TARGET_RISK] [-m {hist,ewma1,ewma2}] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [-vs SHORT_ALLOCATION] [--name NAME] [-h] If all investments have the same expected return independent of risk, investors seeking maximum returns for minimum risk should concentrate exclusively on minimizing risk. This is the explicit objective of the minimum variance portfolio.\nHaugen and Baker (source) proposed dispensing with any relationship between risk and return, at least for equities. Their paper was one of the first to demonstrate that stock returns are not well explained by beta. In fact, they observed a negative relationship between returns and volatility. In the face of a spurious link between risk and return, Haugen and Baker suggested that a regularly reconstituted long-only Minimum Variance portfolio might dominate the capitalization weighted portfolio for stocks.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -tr TARGET_RETURN, --target-return TARGET_RETURN Constraint on minimum level of portfolio's return (default: -1) -tk TARGET_RISK, --target-risk TARGET_RISK Constraint on maximum level of portfolio's risk (default: -1) -m {hist,ewma1,ewma2}, --mean {hist,ewma1,ewma2} Method used to estimate expected returns vector (default: hist) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio in long positions (default: 1) -vs SHORT_ALLOCATION, --value-short SHORT_ALLOCATION Amount to allocate to portfolio in short positions (default: 0.0) --name NAME Save portfolio with personalized or default name (default: MINRISK_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 13:45 (🦋) /portfolio/po/ $ minrisk [3 Years] Display a minimum risk portfolio using volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 0.0 % │ ├──────┼─────────┤ │ AMZN │ 35.21 % │ ├──────┼─────────┤ │ BA │ 0.0 % │ ├──────┼─────────┤ │ FB │ 0.0 % │ ├──────┼─────────┤ │ MSFT │ 5.86 % │ ├──────┼─────────┤ │ T │ 58.92 % │ ├──────┼─────────┤ │ TSLA │ 0.0 % │ └──────┴─────────┘ Annual (by 252) expected return: 11.77% Annual (by √252) volatility: 22.03% Sharpe ratio: 0.5256 "},{"id":1025,"href":"/OpenBBTerminal/terminal/portfolio/po/mktcap/","title":"Mktcap","parent":"Introduction to Portfolio Optimization","content":"usage: mktcap [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-v LONG_ALLOCATION] [--name NAME] [-h] Returns a portfolio that is weighted based on Market Cap.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to calculate indicators. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: MKTCAP_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:53 (🦋) /portfolio/po/ $ mktcap [3 Years] Weighted Portfolio based on marketCap Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 32.03 % │ ├──────┼─────────┤ │ AMZN │ 18.73 % │ ├──────┼─────────┤ │ BA │ 1.21 % │ ├──────┼─────────┤ │ FB │ 7.10 % │ ├──────┼─────────┤ │ MSFT │ 26.20 % │ ├──────┼─────────┤ │ T │ 1.92 % │ ├──────┼─────────┤ │ TSLA │ 12.79 % │ └──────┴─────────┘ Annual (by 252) expected return: 47.78% Annual (by √252) volatility: 30.44% Sharpe ratio: 1.5636 "},{"id":1026,"href":"/OpenBBTerminal/terminal/portfolio/po/nco/","title":"Nco","parent":"Introduction to Portfolio Optimization","content":"usage: nco [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-cd {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail}] [-cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}] [-o {MinRisk,Utility,Sharpe,ERC}] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-ra RISK_AVERSION] [-a SIGNIFICANCE_LEVEL] [-lk {single,complete,average,weighted,centroid,median,ward,dbht}] [-k AMOUNT_CLUSTERS] [-mk MAX_CLUSTERS] [-bi AMOUNT_BINS] [-at ALPHA_TAIL] [-lo] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [--name NAME] [-h] Convex optimization solutions tend to be unstable, to the point of entirely offsetting the benefits of optimization. For example, in the context of financial applications, it is known that portfolios optimized in-sample often underperform the naïve (equal weights) allocation out-of-sample. This instability can be traced back to two sources: (i) noise in the input variables; and (ii) signal structure that magnifies the estimation errors in the input variables. The paper by Lopez de Prado (source) introduces the nested clustered optimization algorithm (NCO), a method that tackles both sources of instability.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -cd {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail}, --codependence {pearson,spearman,abs_pearson,abs_spearman,distance,mutual_info,tail} The codependence or similarity matrix used to build the distance metric and clusters. Possible values are: 'pearson': pearson correlation matrix 'spearman': spearman correlation matrix 'abs_pearson': absolute value of pearson correlation matrix 'abs_spearman': absolute value of spearman correlation matrix 'distance': distance correlation matrix 'mutual_info': mutual information codependence matrix 'tail': tail index codependence matrix (default: pearson) -cv {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink}, --covariance {hist,ewma1,ewma2,ledoit,oas,shrunk,gl,jlogo,fixed,spectral,shrink} Method used to estimate covariance matrix. Possible values are 'hist': historical method 'ewma1': exponential weighted moving average with adjust=True 'ewma2': exponential weighted moving average with adjust=False 'ledoit': Ledoit and Wolf shrinkage method 'oas': oracle shrinkage method 'shrunk': scikit-learn shrunk method 'gl': graphical lasso method 'jlogo': j-logo covariance 'fixed': takes average of eigenvalues above max Marchenko Pastour limit 'spectral': makes zero eigenvalues above max Marchenko Pastour limit 'shrink': Lopez de Prado's book shrinkage method (default: hist) -o {MinRisk,Utility,Sharpe,ERC}, --objective {MinRisk,Utility,Sharpe,ERC} Objective function used to optimize the portfolio (default: MinRisk) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -ra RISK_AVERSION, --risk-aversion RISK_AVERSION Risk aversion parameter (default: 1) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -lk {single,complete,average,weighted,centroid,median,ward,dbht}, --linkage {single,complete,average,weighted,centroid,median,ward,dbht} Linkage method of hierarchical clustering (default: single) -k AMOUNT_CLUSTERS Number of clusters specified in advance (default: None) -mk MAX_CLUSTERS, --max-k MAX_CLUSTERS Max number of clusters used by the two difference gap statistic to find the optimal number of clusters. If k is empty this value is used (default: 10) -bi AMOUNT_BINS, --bins-info AMOUNT_BINS Number of bins used to calculate the variation of information (default: KN) -at ALPHA_TAIL, --alpha-tail ALPHA_TAIL Significance level for lower tail dependence index, only used when when codependence value is 'tail' (default: 0.05) -lo, --leaf-order indicates if the cluster are ordered so that the distance between successive leaves is minimal (default: True) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: NCO_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:34 (🦋) /portfolio/po/ $ nco [3 Years] Nested clustered optimization using pearson codependence, single linkage and volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 7.17 % │ ├──────┼─────────┤ │ AMZN │ 19.33 % │ ├──────┼─────────┤ │ BA │ 0.0 % │ ├──────┼─────────┤ │ FB │ 0.53 % │ ├──────┼─────────┤ │ MSFT │ 16.81 % │ ├──────┼─────────┤ │ T │ 56.14 % │ ├──────┼─────────┤ │ TSLA │ 0.0 % │ └──────┴─────────┘ Annual (by 252) expected return: 15.58% Annual (by √252) volatility: 22.42% Sharpe ratio: 0.6868 "},{"id":1027,"href":"/OpenBBTerminal/terminal/portfolio/po/params/","title":"Params","parent":"Introduction to Portfolio Optimization","content":"This menu can be used to change the loaded parameters file and/or alter specific parameters currently set as default.\n╭──────────────────────────────────────────────────────────────────────────────────────────── Portfolio - Portfolio Optimization - Parameters ────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ Portfolio Risk Parameters (.ini or .xlsx) │ │ │ │ Loaded file: OpenBB_Parameters_Template v1.0.0.xlsx │ │ │ │ file load portfolio risk parameters │ │ save save portfolio risk parameters to specified file │ │ │ │ Model of interest: maxsharpe │ │ │ │ clear clear model of interest from filtered parameters │ │ set set model of interest to filter parameters │ │ arg set a different value for an argument │ │ │ │ Parameters: │ │ historic_period : 3y │ │ log_returns : 0 │ │ return_frequency : d │ │ max_nan : 0.05 │ │ threshold_value : 0.3 │ │ nan_fill_method : time │ │ risk_free : 0.003 │ │ significance_level : 0.05 │ │ risk_measure : MV │ │ target_return : -1 │ │ target_risk : -1 │ │ expected_return : hist │ │ covariance : hist │ │ smoothing_factor_ewma : 0.94 │ │ long_allocation : 1 │ │ short_allocation : 0 │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal ─╯     Arg     Clear     File     Save     Set     "},{"id":1028,"href":"/OpenBBTerminal/terminal/portfolio/po/params/arg/","title":"Arg","parent":"Params","content":"usage: arg [-a ARGUMENT ARGUMENT] [-s] [-h] Set a different value for one of the available arguments.\noptional arguments: -a ARGUMENT ARGUMENT, --argument ARGUMENT ARGUMENT Set a value for an argument (default: None) -s, --show_arguments Show the available arguments, the options and a description. (default: False) -h, --help show this help message (default: False) Example:\n2022 May 02, 05:53 (🦋) /portfolio/po/params/ $ arg historic_period 10y 2022 May 02, 05:53 (🦋) /portfolio/po/params/ $ ? ╭──────────────────────────────────────────────────────────────────────────────────────────── Portfolio - Portfolio Optimization - Parameters ────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ Portfolio Risk Parameters (.ini or .xlsx) │ │ │ │ Loaded file: OpenBB_Parameters_Template v1.0.0.xlsx │ │ │ │ file load portfolio risk parameters │ │ save save portfolio risk parameters to specified file │ │ │ │ Model of interest: maxdecorr │ │ │ │ clear clear model of interest from filtered parameters │ │ set set model of interest to filter parameters │ │ arg set a different value for an argument │ │ │ │ Parameters: │ │ historic_period : 10y │ │ log_returns : 0 │ │ return_frequency : d │ │ max_nan : 0.05 │ │ threshold_value : 0.3 │ │ nan_fill_method : time │ │ risk_free : 0.003 │ │ significance_level : 0.05 │ │ covariance : hist │ │ long_allocation : 1 │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal ─╯ "},{"id":1029,"href":"/OpenBBTerminal/terminal/portfolio/po/params/clear/","title":"Clear","parent":"Params","content":"usage: clear [-h] Clear selected portfolio optimization models\noptional arguments: -h, --help show this help message (default: False) Example:\n2022 May 02, 05:51 (🦋) /portfolio/po/params/ $ ? ╭──────────────────────────────────────────────────────────────────────────────────────────── Portfolio - Portfolio Optimization - Parameters ────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ Portfolio Risk Parameters (.ini or .xlsx) │ │ │ │ Loaded file: OpenBB_Parameters_Template v1.0.0.xlsx │ │ │ │ file load portfolio risk parameters │ │ save save portfolio risk parameters to specified file │ │ │ │ Model of interest: maxsharpe │ │ │ │ clear clear model of interest from filtered parameters │ │ set set model of interest to filter parameters │ │ arg set a different value for an argument │ │ │ │ Parameters: │ │ historic_period : 3y │ │ log_returns : 0 │ │ return_frequency : d │ │ max_nan : 0.05 │ │ threshold_value : 0.3 │ │ nan_fill_method : time │ │ risk_free : 0.003 │ │ significance_level : 0.05 │ │ risk_measure : MV │ │ target_return : -1 │ │ target_risk : -1 │ │ expected_return : hist │ │ covariance : hist │ │ smoothing_factor_ewma : 0.94 │ │ long_allocation : 1 │ │ short_allocation : 0 │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal ─╯ 2022 May 02, 05:51 (🦋) /portfolio/po/params/ $ clear 2022 May 02, 05:51 (🦋) /portfolio/po/params/ $ ? ╭──────────────────────────────────────────────────────────────────────────────────────────── Portfolio - Portfolio Optimization - Parameters ────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ Portfolio Risk Parameters (.ini or .xlsx) │ │ │ │ Loaded file: OpenBB_Parameters_Template v1.0.0.xlsx │ │ │ │ file load portfolio risk parameters │ │ save save portfolio risk parameters to specified file │ │ │ │ Model of interest: │ │ │ │ clear clear model of interest from filtered parameters │ │ set set model of interest to filter parameters │ │ arg set a different value for an argument │ │ │ │ Parameters: │ │ historic_period : 3y │ │ log_returns : 0 │ │ return_frequency : d │ │ max_nan : 0.05 │ │ threshold_value : 0.3 │ │ nan_fill_method : time │ │ risk_free : 0.003 │ │ significance_level : 0.05 │ │ technique : maxsharpe │ │ risk_measure : MV │ │ target_return : -1 │ │ target_risk : -1 │ │ expected_return : hist │ │ covariance : hist │ │ smoothing_factor_ewma : 0.94 │ │ long_allocation : 1 │ │ short_allocation : 0 │ │ risk_aversion : 1 │ │ amount_portfolios : 100 │ │ random_seed : 123 │ │ tangency : 0 │ │ risk_parity_model : A │ │ penal_factor : 1 │ │ equilibrium : 1 │ │ optimize : 1 │ │ co_dependence : pearson │ │ cvar_simulations_losses : 100 │ │ cvar_simulations_gains : 100 │ │ cvar_significance : 0.05 │ │ linkage : single │ │ amount_clusters : 10 │ │ max_clusters : 10 │ │ amount_bins : KN │ │ alpha_tail : 0.05 │ │ leaf_order : 1 │ │ objective : MinRisk │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal ─╯ "},{"id":1030,"href":"/OpenBBTerminal/terminal/portfolio/po/params/file/","title":"File","parent":"Params","content":"usage: file -f FILE [FILE ...] [-h] Load portfolio risk parameters (ini or xlsx)\noptional arguments: -f FILE [FILE ...], --file FILE [FILE ...] Parameter file to be used (default: None) -h, --help show this help message (default: False) Example:\n2022 May 02, 05:47 (🦋) /portfolio/po/params/ $ file OpenBB_Parameters_Template v1.0.0.xlsx "},{"id":1031,"href":"/OpenBBTerminal/terminal/portfolio/po/params/save/","title":"Save","parent":"Params","content":"usage: save -f FILE [-h] Save portfolio risk parameters (ini or xlsx)\noptional arguments: -f FILE, --file FILE Filename to be saved (default: None) -h, --help show this help message (default: False) Example:\n2022 May 02, 05:49 (🦋) /portfolio/po/params/ $ save OpenBB_Parameters_Template.ini -h "},{"id":1032,"href":"/OpenBBTerminal/terminal/portfolio/po/params/set/","title":"Set","parent":"Params","content":"usage: set -m {maxsharpe,minrisk,maxutil,maxret,maxdiv,maxdecorr,ef,riskparity,relriskparity,hrp,herc,nco} [-h] Select one of the portfolio optimization models\noptional arguments: -m {maxsharpe,minrisk,maxutil,maxret,maxdiv,maxdecorr,ef,riskparity,relriskparity,hrp,herc,nco}, --model {maxsharpe,minrisk,maxutil,maxret,maxdiv,maxdecorr,ef,riskparity,relriskparity,hrp,herc,nco} Frequency used to calculate returns (default: None) -h, --help show this help message (default: False) Example:\n2022 May 02, 05:51 (🦋) /portfolio/po/params/ $ set maxdecorr 2022 May 02, 05:52 (🦋) /portfolio/po/params/ $ ? ╭──────────────────────────────────────────────────────────────────────────────────────────── Portfolio - Portfolio Optimization - Parameters ────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ Portfolio Risk Parameters (.ini or .xlsx) │ │ │ │ Loaded file: OpenBB_Parameters_Template v1.0.0.xlsx │ │ │ │ file load portfolio risk parameters │ │ save save portfolio risk parameters to specified file │ │ │ │ Model of interest: maxdecorr │ │ │ │ clear clear model of interest from filtered parameters │ │ set set model of interest to filter parameters │ │ arg set a different value for an argument │ │ │ │ Parameters: │ │ historic_period : 3y │ │ log_returns : 0 │ │ return_frequency : d │ │ max_nan : 0.05 │ │ threshold_value : 0.3 │ │ nan_fill_method : time │ │ risk_free : 0.003 │ │ significance_level : 0.05 │ │ covariance : hist │ │ long_allocation : 1 │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal ─╯ "},{"id":1033,"href":"/OpenBBTerminal/terminal/portfolio/po/plot/","title":"Plot","parent":"Introduction to Portfolio Optimization","content":"usage: plot [-pf PORTFOLIOS] [-ct CATEGORIES] [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-pi] [-hi] [-dd] [-rc] [-he] [-h] Plot selected charts for portfolios\noptional arguments: -pf PORTFOLIOS, --portfolios PORTFOLIOS Selected portfolios that will be plotted (default: []) -ct CATEGORIES, --categories CATEGORIES Show selected categories (default: []) -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -pi, --pie Display a pie chart for weights (default: False) -hi, --hist Display a histogram with risk measures (default: False) -dd, --drawdown Display a drawdown chart with risk measures (default: False) -rc, --rc-chart Display a risk contribution chart for assets (default: False) -he, --heat Display a heatmap of correlation matrix with dendrogram (default: False) -h, --help show this help message (default: False) Example:\n2022 Apr 26, 02:19 (🦋) /portfolio/po/ $ plot -pf maxsharpe_0 -pi -hi -dd -rc -he "},{"id":1034,"href":"/OpenBBTerminal/terminal/portfolio/po/property/","title":"Property","parent":"Introduction to Portfolio Optimization","content":"usage: property [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-pr {previousClose,regularMarketOpen,twoHundredDayAverage,trailingAnnualDividendYield,payoutRatio,volume24Hr,regularMarketDayHigh,navPrice,averageDailyVolume10Day,totalAssets,regularMarketPreviousClose,fiftyDayAverage,trailingAnnualDividendRate,open,toCurrency,averageVolume10days,expireDate,yield,algorithm,dividendRate,exDividendDate,beta,circulatingSupply,regularMarketDayLow,priceHint,currency,trailingPE,regularMarketVolume,lastMarket,maxSupply,openInterest,marketCap,volumeAllCurrencies,strikePrice,averageVolume,priceToSalesTrailing12Months,dayLow,ask,ytdReturn,askSize,volume,fiftyTwoWeekHigh,forwardPE,fromCurrency,fiveYearAvgDividendYield,fiftyTwoWeekLow,bid,dividendYield,bidSize,dayHigh,annualHoldingsTurnover,enterpriseToRevenue,beta3Year,profitMargins,enterpriseToEbitda,52WeekChange,morningStarRiskRating,forwardEps,revenueQuarterlyGrowth,sharesOutstanding,fundInceptionDate,annualReportExpenseRatio,bookValue,sharesShort,sharesPercentSharesOut,heldPercentInstitutions,netIncomeToCommon,trailingEps,lastDividendValue,SandP52WeekChange,priceToBook,heldPercentInsiders,shortRatio,sharesShortPreviousMonthDate,floatShares,enterpriseValue,fundFamily,threeYearAverageReturn,lastSplitFactor,legalType,lastDividendDate,morningStarOverallRating,earningsQuarterlyGrowth,pegRatio,lastCapGain,shortPercentOfFloat,sharesShortPriorMonth,impliedSharesOutstanding,fiveYearAverageReturn,regularMarketPrice}] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-v LONG_ALLOCATION] [--name NAME] [-h] Returns a portfolio that is weighted based on selected property.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -pr {previousClose,regularMarketOpen,twoHundredDayAverage,trailingAnnualDividendYield,payoutRatio,volume24Hr,regularMarketDayHigh,navPrice,averageDailyVolume10Day,totalAssets,regularMarketPreviousClose,fiftyDayAverage,trailingAnnualDividendRate,open,toCurrency,averageVolume10days,expireDate,yield,algorithm,dividendRate,exDividendDate,beta,circulatingSupply,regularMarketDayLow,priceHint,currency,trailingPE,regularMarketVolume,lastMarket,maxSupply,openInterest,marketCap,volumeAllCurrencies,strikePrice,averageVolume,priceToSalesTrailing12Months,dayLow,ask,ytdReturn,askSize,volume,fiftyTwoWeekHigh,forwardPE,fromCurrency,fiveYearAvgDividendYield,fiftyTwoWeekLow,bid,dividendYield,bidSize,dayHigh,annualHoldingsTurnover,enterpriseToRevenue,beta3Year,profitMargins,enterpriseToEbitda,52WeekChange,morningStarRiskRating,forwardEps,revenueQuarterlyGrowth,sharesOutstanding,fundInceptionDate,annualReportExpenseRatio,bookValue,sharesShort,sharesPercentSharesOut,heldPercentInstitutions,netIncomeToCommon,trailingEps,lastDividendValue,SandP52WeekChange,priceToBook,heldPercentInsiders,shortRatio,sharesShortPreviousMonthDate,floatShares,enterpriseValue,fundFamily,threeYearAverageReturn,lastSplitFactor,legalType,lastDividendDate,morningStarOverallRating,earningsQuarterlyGrowth,pegRatio,lastCapGain,shortPercentOfFloat,sharesShortPriorMonth,impliedSharesOutstanding,fiveYearAverageReturn,regularMarketPrice}, --property {previousClose,regularMarketOpen,twoHundredDayAverage,trailingAnnualDividendYield,payoutRatio,volume24Hr,regularMarketDayHigh,navPrice,averageDailyVolume10Day,totalAssets,regularMarketPreviousClose,fiftyDayAverage,trailingAnnualDividendRate,open,toCurrency,averageVolume10days,expireDate,yield,algorithm,dividendRate,exDividendDate,beta,circulatingSupply,regularMarketDayLow,priceHint,currency,trailingPE,regularMarketVolume,lastMarket,maxSupply,openInterest,marketCap,volumeAllCurrencies,strikePrice,averageVolume,priceToSalesTrailing12Months,dayLow,ask,ytdReturn,askSize,volume,fiftyTwoWeekHigh,forwardPE,fromCurrency,fiveYearAvgDividendYield,fiftyTwoWeekLow,bid,dividendYield,bidSize,dayHigh,annualHoldingsTurnover,enterpriseToRevenue,beta3Year,profitMargins,enterpriseToEbitda,52WeekChange,morningStarRiskRating,forwardEps,revenueQuarterlyGrowth,sharesOutstanding,fundInceptionDate,annualReportExpenseRatio,bookValue,sharesShort,sharesPercentSharesOut,heldPercentInstitutions,netIncomeToCommon,trailingEps,lastDividendValue,SandP52WeekChange,priceToBook,heldPercentInsiders,shortRatio,sharesShortPreviousMonthDate,floatShares,enterpriseValue,fundFamily,threeYearAverageReturn,lastSplitFactor,legalType,lastDividendDate,morningStarOverallRating,earningsQuarterlyGrowth,pegRatio,lastCapGain,shortPercentOfFloat,sharesShortPriorMonth,impliedSharesOutstanding,fiveYearAverageReturn,regularMarketPrice} Property info to weight. Use one of yfinance info options. (default: None) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,WR,ADD,UCI,CDaR,EDaR,MDD} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'WR' : Worst Realization 'ADD' : Average Drawdown of uncompounded returns 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns 'MDD' : Maximum Drawdown of uncompounded returns (default: MV) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: PROPERTY_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 15:02 (🦋) /portfolio/po/ $ property -pr trailingEps [3 Years] Weighted Portfolio based on trailingEps Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 6.36 % │ ├──────┼─────────┤ │ AMZN │ 68.58 % │ ├──────┼─────────┤ │ BA │ -7.56 % │ ├──────┼─────────┤ │ FB │ 14.57 % │ ├──────┼─────────┤ │ MSFT │ 9.93 % │ ├──────┼─────────┤ │ T │ 2.92 % │ ├──────┼─────────┤ │ TSLA │ 5.18 % │ └──────┴─────────┘ Annual (by 252) expected return: 33.74% Annual (by √252) volatility: 30.25% Sharpe ratio: 1.1094 "},{"id":1035,"href":"/OpenBBTerminal/terminal/portfolio/po/relriskparity/","title":"Relriskparity","parent":"Introduction to Portfolio Optimization","content":"usage: relriskparity [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-ve {A,B,C}] [-rc RISK_CONTRIBUTION] [-pf PENAL_FACTOR] [-tr TARGET_RETURN] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [--name NAME] [-h] A relaxed risk parity optimization model controls the balance of risk parity violation against the total portfolio performance. Risk parity has been criticized as being overly conservative and it is improved by re-introducing the asset expected returns into the model and permitting the portfolio to violate the risk parity condition. The paper by Gambeta \u0026amp; Kwon (source) proposes the incorporation of an explicit target return goal with an intuitive target return approach into a second-order-cone model of a risk parity optimization. When the target return is greater than risk parity return, a violation to risk parity allocations occurs that is controlled using a computational construct to obtain near-risk parity portfolios to retain as much risk parity-like traits as possible. This model is used to demonstrate empirically that higher returns can be achieved than risk parity without the risk contributions deviating dramatically from the risk parity allocations. Furthermore, this study reveals that the relaxed risk parity model exhibits advantageous traits of robustness to expected returns, which should not deter the use of expected returns in risk parity model.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -ve {A,B,C}, --version {A,B,C} version of relaxed risk parity model: Possible values are: 'A': risk parity without regularization and penalization constraints 'B': with regularization constraint but without penalization constraint 'C': with regularization and penalization constraints (default: A) -rc RISK_CONTRIBUTION, --risk-cont RISK_CONTRIBUTION Vector of risk contribution constraints (default: None) -pf PENAL_FACTOR, --penal-factor PENAL_FACTOR The penalization factor of penalization constraints. Only used with version 'C'. (default: 1) -tr TARGET_RETURN, --target-return TARGET_RETURN Constraint on minimum level of portfolio's return (default: -1) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: RRP_0) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:08 (🦋) /portfolio/po/ $ relriskparity [3 Years] Relaxed risk parity portfolio based on least squares approach Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 13.42 % │ ├──────┼─────────┤ │ AMZN │ 16.51 % │ ├──────┼─────────┤ │ BA │ 10.18 % │ ├──────┼─────────┤ │ FB │ 12.83 % │ ├──────┼─────────┤ │ MSFT │ 14.36 % │ ├──────┼─────────┤ │ T │ 24.0 % │ ├──────┼─────────┤ │ TSLA │ 8.68 % │ └──────┴─────────┘ Annual (by 252) expected return: 28.99% Annual (by √252) volatility: 26.60% Sharpe ratio: 1.0899 "},{"id":1036,"href":"/OpenBBTerminal/terminal/portfolio/po/riskparity/","title":"Riskparity","parent":"Introduction to Portfolio Optimization","content":"usage: riskparity [-p HISTORIC_PERIOD] [-s START_PERIOD] [-e END_PERIOD] [-lr] [--freq {d,w,m}] [-mn MAX_NAN] [-th THRESHOLD_VALUE] [-mt NAN_FILL_METHOD] [-rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,CDaR,EDaR,UCI}] [-rc RISK_CONTRIBUTION] [-r RISK_FREE] [-a SIGNIFICANCE_LEVEL] [-tr TARGET_RETURN] [-de SMOOTHING_FACTOR_EWMA] [-v LONG_ALLOCATION] [--name NAME] [-h] Both the Minimum Variance and Maximum Diversification portfolios are mean-variance efficient under intuitive assumptions. Minimum Variance is efficient if assets have similar returns while Maximum Diversification is efficient if assets have similar Sharpe ratios. However, both methods have the drawback that they can be quite concentrated in a small number of assets. For example, the Minimum Variance portfolio will place disproportionate weight in the lowest volatility asset while the Maximum Diversification portfolio will concentrate in assets with high volatility and low covariance with the market. In fact, these optimizations may result in portfolios that hold just a small fraction of all available assets.\nThere are situations where this may not be preferable. Concentrated portfolios also may not accommodate large amounts of capital without high market impact costs. In addition, concentrated portfolios are more susceptible to mis-estimation of volatilities or correlations.\nThese issues prompted a search for heuristic optimizations that meet similar optimization objectives, but with less concentration. The equal weight and capitalization weighted portfolios are common examples of this, but there are other methods that are compelling under different assumptions.\nRisk parity was developed to remove the uncertainty of estimated returns and to protect against losses associated with portfolio concentration. In essence what this means is that you want to prevent allocation a significant portion to just a couple of assets because Minimum Variance and Maximum Diversification say this is the best allocation.\noptional arguments: -p HISTORIC_PERIOD, --period HISTORIC_PERIOD Period to get yfinance data from. Possible frequency strings are: 'd': means days, for example '252d' means 252 days 'w': means weeks, for example '52w' means 52 weeks 'mo': means months, for example '12mo' means 12 months 'y': means years, for example '1y' means 1 year 'ytd': downloads data from beginning of year to today 'max': downloads all data available for each asset (default: 3y) -s START_PERIOD, --start START_PERIOD Start date to get yfinance data from. Must be in 'YYYY-MM-DD' format (default: ) -e END_PERIOD, --end END_PERIOD End date to get yfinance data from. Must be in 'YYYY- MM-DD' format (default: ) -lr, --log-returns If use logarithmic or arithmetic returns to calculate returns (default: False) --freq {d,w,m} Frequency used to calculate returns. Possible values are: 'd': for daily returns 'w': for weekly returns 'm': for monthly returns (default: d) -mn MAX_NAN, --maxnan MAX_NAN Max percentage of nan values accepted per asset to be considered in the optimization process. (default: 0.05) -th THRESHOLD_VALUE, --threshold THRESHOLD_VALUE Value used to replace outliers that are higher to threshold in absolute value (default: 0.3) -mt NAN_FILL_METHOD, --method NAN_FILL_METHOD Method used to fill nan values in time series, by default time. Possible values are: 'linear': linear interpolation 'time': linear interpolation based on time index 'nearest': use nearest value to replace nan values 'zero': spline of zeroth order 'slinear': spline of first order 'quadratic': spline of second order 'cubic': spline of third order 'barycentric': builds a polynomial that pass for all points (default: time) -rm {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,CDaR,EDaR,UCI}, --risk-measure {MV,MAD,MSV,FLPM,SLPM,CVaR,EVaR,CDaR,EDaR,UCI} Risk measure used to optimize the portfolio. Possible values are: 'MV' : Variance 'MAD' : Mean Absolute Deviation 'MSV' : Semi Variance (Variance of negative returns) 'FLPM' : First Lower Partial Moment 'SLPM' : Second Lower Partial Moment 'CVaR' : Conditional Value at Risk 'EVaR' : Entropic Value at Risk 'UCI' : Ulcer Index of uncompounded returns 'CDaR' : Conditional Drawdown at Risk of uncompounded returns 'EDaR' : Entropic Drawdown at Risk of uncompounded returns (default: MV) -rc RISK_CONTRIBUTION, --risk-cont RISK_CONTRIBUTION vector of risk contribution constraint (default: None) -r RISK_FREE, --risk-free-rate RISK_FREE Risk-free rate of borrowing/lending. The period of the risk-free rate must be annual (default: 0.00329) -a SIGNIFICANCE_LEVEL, --alpha SIGNIFICANCE_LEVEL Significance level of CVaR, EVaR, CDaR and EDaR (default: 0.05) -tr TARGET_RETURN, --target-return TARGET_RETURN Constraint on minimum level of portfolio's return (default: -1) -de SMOOTHING_FACTOR_EWMA, --d-ewma SMOOTHING_FACTOR_EWMA Smoothing factor for ewma estimators (default: 0.94) -v LONG_ALLOCATION, --value LONG_ALLOCATION Amount to allocate to portfolio (default: 1) --name NAME Save portfolio with personalized or default name (default: RP_8) -h, --help show this help message (default: False) Example:\n2022 Apr 05, 14:45 (🦋) /portfolio/po/ $ riskparity [3 Years] Risk parity portfolio based on risk budgeting approach using volatility as risk measure Weights ┏━━━━━━┳━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━╇━━━━━━━━━┩ │ AAPL │ 13.42 % │ ├──────┼─────────┤ │ AMZN │ 16.51 % │ ├──────┼─────────┤ │ BA │ 10.18 % │ ├──────┼─────────┤ │ FB │ 12.83 % │ ├──────┼─────────┤ │ MSFT │ 14.36 % │ ├──────┼─────────┤ │ T │ 24.00 % │ ├──────┼─────────┤ │ TSLA │ 8.68 % │ └──────┴─────────┘ Annual (by 252) expected return: 28.99% Annual (by √252) volatility: 26.60% Sharpe ratio: 1.0829 "},{"id":1037,"href":"/OpenBBTerminal/terminal/portfolio/po/rmv/","title":"Rmv","parent":"Introduction to Portfolio Optimization","content":"usage: rmv [-t RMV_TICKERS] [-h] Remove one of the tickers to be optimized.\noptional arguments: -t RMV_TICKERS, --tickers RMV_TICKERS tickers to be removed from the tickers to optimize. -h, --help show this help message "},{"id":1038,"href":"/OpenBBTerminal/terminal/portfolio/po/rpf/","title":"Rpf","parent":"Introduction to Portfolio Optimization","content":"usage: rpf [-pf PORTFOLIOS] [-h] Remove one portfolio from saved portfolios.\noptional arguments: -pf PORTFOLIOS, --portfolios PORTFOLIOS portfolios to be removed from the saved portfolios -h, --help show this help message "},{"id":1039,"href":"/OpenBBTerminal/terminal/portfolio/po/select/","title":"Select","parent":"Introduction to Portfolio Optimization","content":"usage: add/select [-t ADD_TICKERS] [-h] Add/Select tickers for portfolio to be optimized.\noptional arguments: -t ADD_TICKERS, --tickers ADD_TICKERS tickers to be used in the portfolio to optimize. -h, --help show this help message "},{"id":1040,"href":"/OpenBBTerminal/terminal/portfolio/po/show/","title":"Show","parent":"Introduction to Portfolio Optimization","content":"usage: show [-pf PORTFOLIOS] [-ct CATEGORIES] [-h] Show selected saved portfolios\noptional arguments: -pf PORTFOLIOS, --portfolios PORTFOLIOS Show selected saved portfolios -ct CATEGORIES, --categories CATEGORIES Show selected categories -h, --help show this help message "},{"id":1041,"href":"/OpenBBTerminal/terminal/portfolio/rbeta/","title":"Rbeta","parent":"Introduction to Portfolio","content":"usage: rbeta [-p {3m,6m,1y,3y,5y,10y}] [-h] [--export EXPORT] Show rolling beta portfolio vs benchmark\noptional arguments: -p {3m,6m,1y,3y,5y,10y}, --period {3m,6m,1y,3y,5y,10y} Period to apply rolling window (default: 1y) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1042,"href":"/OpenBBTerminal/terminal/portfolio/rsharpe/","title":"Rsharpe","parent":"Introduction to Portfolio","content":"usage: rsharpe [-p {3m,6m,1y,3y,5y,10y}] [-r RISK_FREE_RATE] [-h] [--export EXPORT] Show rolling sharpe portfolio vs benchmark\noptional arguments: -p {3m,6m,1y,3y,5y,10y}, --period {3m,6m,1y,3y,5y,10y} Period to apply rolling window (default: 1y) -r RISK_FREE_RATE, --rfr RISK_FREE_RATE Set risk free rate for calculations. (default: 0.0) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1043,"href":"/OpenBBTerminal/terminal/portfolio/rsort/","title":"Rsort","parent":"Introduction to Portfolio","content":"usage: rsort [-p {3m,6m,1y,3y,5y,10y}] [-r RISK_FREE_RATE] [-h] [--export EXPORT] Show rolling sortino portfolio vs benchmark\noptional arguments: -p {3m,6m,1y,3y,5y,10y}, --period {3m,6m,1y,3y,5y,10y} Period to apply rolling window (default: 1y) -r RISK_FREE_RATE, --rfr RISK_FREE_RATE Set risk free rate for calculations. (default: 0.0) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1044,"href":"/OpenBBTerminal/terminal/portfolio/rvol/","title":"Rvol","parent":"Introduction to Portfolio","content":"usage: rvol [-p {3m,6m,1y,3y,5y,10y}] [-h] [--export EXPORT] Show rolling volatility portfolio vs benchmark\noptional arguments: -p {3m,6m,1y,3y,5y,10y}, --period {3m,6m,1y,3y,5y,10y} Period to apply rolling window (default: 1y) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1045,"href":"/OpenBBTerminal/terminal/portfolio/show/","title":"Show","parent":"Introduction to Portfolio","content":"usage: show Shows the active portfolio\nExample:s\n2022 May 13, 05:00 (🦋) /portfolio/ $ load Public_Equity_Orderbook.xlsx Portfolio: Public_Equity_Orderbook.xlsx Risk Free Rate: 0.00% 2022 May 13, 05:00 (🦋) /portfolio/ $ show ┏━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━┳━━━━━━━━━━┓ ┃ Date ┃ Name ┃ Type ┃ Sector ┃ Industry ┃ Country ┃ Region ┃ Price ┃ Quantity ┃ Fees ┃ Premium ┃ Investment ┃ Side ┃ Currency ┃ ┡━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━╇━━━━━━━━━━┩ │ 2010-05-03 │ CASH │ CASH │ CASH │ CASH │ CASH │ Unknown │ 60850.00 │ 1 │ 0 │ 0 │ 60850.00 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2010-05-03 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 265.30 │ 2 │ 5 │ 6 │ 530.60 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2010-07-06 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 110.06 │ 5 │ 3 │ 3 │ 550.30 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2011-08-06 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 12.61 │ 3 │ 1 │ 0 │ 37.83 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2011-12-12 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 18.02 │ 5 │ 0 │ 2 │ 90.10 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-02-03 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 59.17 │ 7 │ 0 │ 4 │ 414.19 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-05-04 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 27.95 │ 3 │ 0 │ 0 │ 83.85 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-08-04 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 14.24 │ 50 │ 0 │ 0 │ 712.00 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-10-12 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 63.39 │ 6 │ 10 │ 0 │ 380.34 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2013-02-03 │ YUM │ STOCK │ Consumer Cyclical │ Restaurants │ United States │ North America │ 45.98 │ 4 │ 10 │ 0 │ 183.92 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2013-03-04 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 410.75 │ 1 │ 100 │ 2 │ 410.75 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2013-08-08 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 295.74 │ 1 │ 2 │ 3 │ 295.74 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2013-10-09 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 17.38 │ 5 │ 5 │ 5 │ 86.90 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2014-02-03 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 49.53 │ 5 │ 4 │ 0 │ 247.65 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2014-02-05 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 85.16 │ 3 │ 3 │ 0 │ 255.48 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2014-12-08 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 48.86 │ 10 │ 2 │ 0 │ 488.60 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2015-02-02 │ BABA │ STOCK │ Consumer Cyclical │ Internet Retail │ China │ Asia │ 90.13 │ 30 │ 1 │ 0 │ 2703.90 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2015-03-08 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 23.45 │ 20 │ 6 │ 0 │ 469.00 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2015-12-05 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 68.83 │ 21 │ 2 │ 3 │ 1445.43 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2016-02-06 │ YUM │ STOCK │ Consumer Cyclical │ Restaurants │ United States │ North America │ 48.49 │ 2 │ 4 │ 1 │ 96.98 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2016-09-07 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 807.99 │ 2 │ 0 │ 2 │ 1615.98 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2017-01-10 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 795.90 │ 2 │ 0 │ 0 │ 1591.80 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2017-05-10 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 38.32 │ 10 │ 0 │ 0 │ 383.20 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2017-12-08 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 85.22 │ 10 │ 4 │ 0 │ 852.20 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2018-07-05 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 195.99 │ 5 │ 2 │ 5 │ 979.95 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2018-09-03 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 79.60 │ 3 │ 2 │ 4 │ 238.80 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2019-05-04 │ BABA │ STOCK │ Consumer Cyclical │ Internet Retail │ China │ Asia │ 188.24 │ 5 │ 1 │ 2 │ 941.20 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2019-09-09 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 43.85 │ 3 │ 6 │ 7 │ 131.55 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2019-12-10 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 104.94 │ 8 │ 1 │ 4 │ 839.52 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2020-02-03 │ YUM │ STOCK │ Consumer Cyclical │ Restaurants │ United States │ North America │ 106.41 │ 10 │ 10 │ 2 │ 1064.10 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2020-03-08 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 1215.79 │ 3 │ 10 │ 2 │ 3647.37 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2020-06-09 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 2600.86 │ 2 │ 200 │ 20 │ 5201.72 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2020-12-12 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 121.78 │ 4 │ 10 │ 0 │ 487.12 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2021-01-07 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 144.80 │ 20 │ 10 │ 6 │ 2896.00 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2021-05-06 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 644.34 │ 30 │ 10 │ 3 │ 19330.20 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2021-12-28 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 166.42 │ 13 │ 20 │ 3 │ 2163.46 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2022-02-02 │ BABA │ STOCK │ Consumer Cyclical │ Internet Retail │ China │ Asia │ 122.88 │ 30 │ 0 │ 1 │ 3686.40 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2022-03-04 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 105.06 │ 30 │ 0 │ 2 │ 3151.80 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2022-04-12 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 137.27 │ 10 │ 30 │ 1 │ 1372.70 │ 1 │ USD │ ├────────────┼───────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼──────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2022-05-02 │ YUM │ STOCK │ Consumer Cyclical │ Restaurants │ United States │ North America │ 115.76 │ 11 │ 40 │ 0 │ 1273.36 │ 1 │ USD │ └────────────┴───────┴───────┴────────────────────────┴─────────────────────────────────────┴───────────────┴───────────────┴──────────┴──────────┴──────┴─────────┴────────────┴──────┴──────────┘ "},{"id":1046,"href":"/OpenBBTerminal/terminal/portfolio/summary/","title":"Summary","parent":"Introduction to Portfolio","content":"usage: summary [-p {mtd,qtd,ytd,3m,6m,1y,3y,5y,10y,all}] [-r RISK_FREE_RATE] [-h] [--export EXPORT] Display summary of portfolio vs benchmark\noptional arguments: -p {mtd,qtd,ytd,3m,6m,1y,3y,5y,10y,all}, --period {mtd,qtd,ytd,3m,6m,1y,3y,5y,10y,all} The file to be loaded (default: all) -r RISK_FREE_RATE, --rfr RISK_FREE_RATE Set risk free rate for calculations. (default: 0.0) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) Summary of Portfolio vs Benchmark for all period ┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ Portfolio ┃ Benchmark ┃ ┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ Volatility │ 0.01 │ 0.01 │ ├───────────────────┼───────────┼───────────┤ │ Skew │ -0.40 │ -0.58 │ ├───────────────────┼───────────┼───────────┤ │ Kurtosis │ 16.45 │ 12.31 │ ├───────────────────┼───────────┼───────────┤ │ Maximum Drawdowwn │ -0.34 │ -0.34 │ ├───────────────────┼───────────┼───────────┤ │ Sharpe ratio │ 0.02 │ 0.05 │ ├───────────────────┼───────────┼───────────┤ │ Sortino ratio │ 0.03 │ 0.06 │ ├───────────────────┼───────────┼───────────┤ │ R2 Score │ -0.81 │ -0.81 │ └───────────────────┴───────────┴───────────┘ "},{"id":1047,"href":"/OpenBBTerminal/terminal/portfolio/var/","title":"Var","parent":"Introduction to Portfolio","content":"usage: var [-m] [-a] [-s] [-p PERCENTILE] [-h] Provides value at risk (short: VaR) of the selected portfolio.\noptional arguments: -m, --mean If one should use the mean of the portfolio return (default: False) -a, --adjusted If the VaR should be adjusted for skew and kurtosis (Cornish-Fisher-Expansion) (default: False) -s, --student If one should use the student-t distribution (default: False) -p PERCENTILE, --percentile PERCENTILE Percentile used for VaR calculations, for example input 99.9 equals a 99.9 Percent VaR (default: 99.9) -h, --help show this help message (default: False) Example:\n2022 Feb 25, 03:09 (✨) /portfolio/ $ var Portfolio Value at Risk ┏━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ ┃ VaR: ┃ Historical VaR: ┃ ┡━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ 90.0% │ -0.0148 │ -0.0135 │ ├───────┼─────────┼─────────────────┤ │ 95.0% │ -0.0189 │ -0.0197 │ ├───────┼─────────┼─────────────────┤ │ 99.0% │ -0.0267 │ -0.0258 │ ├───────┼─────────┼─────────────────┤ │ 99.9% │ -0.0353 │ -0.0276 │ └───────┴─────────┴─────────────────┘ "},{"id":1048,"href":"/OpenBBTerminal/terminal/portfolio/yret/","title":"Yret","parent":"Introduction to Portfolio","content":"usage: yret [-p {3y,5y,10y,all}] [-h] [--export EXPORT] [--raw] End of the year returns\noptional arguments: -p {3y,5y,10y,all}, --period {3y,5y,10y,all} Period to select start end of the year returns (default: all) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) "},{"id":1049,"href":"/OpenBBTerminal/terminal/scripts/exe/","title":"Exe","parent":"Scripts \u0026 Routines","content":"usage: exe [-f PATH] [-i ROUTINE_ARGS] [-h] The .openbb scripts offer the ability to automatically run a set of commands in the form of a routine. Furthermore, the scripts can be adapted, and documented, at any moment giving the user full control over the type of analysis you wish to do (and repeat). This can fundamental research, understanding market movements, finding hidden gems and even doing advanced statistical/econometric research.\noptional arguments: -f PATH, --file PATH The path or .openbb file to run. (default: ) -i ROUTINE_ARGS, --input ROUTINE_ARGS Select multiple inputs to be replaced in the routine and separated by commas. E.g. GME,AMC,BTC-USD (default: None) -h, --help show this help message (default: False) An example of a script can be the following (inside a .openbb file):\n# Go into the econometrics context econometrics # Load the wage_panel dataset and include an alias load wage_panel -a wp # Set the MultiIndex, allowing for Panel regressions to be performed index wp -i nr,year # Change the type of the year column so it can be included as time effects within the regressions type wp.year --format category # Perform a Pooled OLS, Random Effects and Fixed Effects estimation panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.expersq,wp.married,wp.educ,wp.union,wp.year panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.expersq,wp.married,wp.educ,wp.union,wp.year -r re panel -d wp.lwage -i wp.expersq,wp.union,wp.married,wp.year -r fe # Compare the results obtained from these regressions compare "},{"id":1050,"href":"/OpenBBTerminal/terminal/stocks/bt/","title":"Bt","parent":"Introduction to Stocks","content":"Backtesting allows analysts to test and compare different trading strategies without risking any money. According to the hypothesis, if their strategy failed in the past, it is unlikely to succeed in the future (and vice versa). During testing, the total profitability and the level of risk taken are the two most important factors to consider.\nA backtest, on the other hand, examines a strategy\u0026rsquo;s performance in relation to a variety of variables. A successful backtest will show traders a technique that has previously produced positive outcomes. While the market never moves in the same way twice, backtesting is based on the notion that equities follow similar patterns in the past.\nAvailable commands:    Ema     Emacross     Rsi     Whatif     "},{"id":1051,"href":"/OpenBBTerminal/terminal/stocks/bt/ema/","title":"Ema","parent":"Bt","content":"usage: ema [-l LENGTH] [--spy] [--no_bench] [-h] [--export {csv,json,xlsx}] A simple investment strategy where stock is bought when Price \u0026gt; EMA(l)\noptional arguments: -l LENGTH EMA period to consider (default: 20) --spy Flag to add spy hold comparison (default: False) --no_bench Flag to not show buy and hold comparison (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 09:59 (✨) /stocks/bt/ $ ema Stat AboveEMA MSFT Hold ------------------- ---------- ----------- Start 2019-02-10 2019-02-10 End 2022-02-15 2022-02-15 Risk-free rate 0.00% 0.00% Total Return 53.12% 195.22% Daily Sharpe 0.83 1.33 Daily Sortino 1.32 2.17 CAGR 15.18% 43.21% Max Drawdown -18.91% -28.04% Calmar Ratio 0.80 1.54 MTD -7.29% -3.38% 3m -15.90% -10.43% 6m -6.26% 2.99% YTD -9.30% -10.66% 1Y 0.12% 23.67% 3Y (ann.) 15.26% 42.12% 5Y (ann.) - - 10Y (ann.) - - Since Incep. (ann.) 15.18% 43.21% Daily Sharpe 0.83 1.33 Daily Sortino 1.32 2.17 Daily Mean (ann.) 15.98% 40.51% Daily Vol (ann.) 19.35% 30.43% Daily Skew 0.05 -0.13 Daily Kurt 5.04 10.90 Best Day 7.44% 14.22% Worst Day -6.19% -14.74% Monthly Sharpe 0.77 1.77 Monthly Sortino 1.71 4.66 Monthly Mean (ann.) 16.49% 36.33% Monthly Vol (ann.) 21.45% 20.53% Monthly Skew 0.08 0.21 Monthly Kurt -1.20 -0.14 Best Month 11.83% 17.63% Worst Month -9.55% -7.53% Yearly Sharpe 0.62 0.83 Yearly Sortino 2.29 4.57 Yearly Mean 12.32% 28.12% Yearly Vol 19.76% 33.95% Yearly Skew -0.98 -1.57 Yearly Kurt - - Best Year 29.43% 52.48% Worst Year -9.30% -10.66% Avg. Drawdown -4.56% -2.78% Avg. Drawdown Days 37.27 14.27 Avg. Up Month 6.15% 5.77% Avg. Down Month -4.59% -4.11% Win Year % 66.67% 66.67% Win 12m % 92.31% 100.00% "},{"id":1052,"href":"/OpenBBTerminal/terminal/stocks/bt/emacross/","title":"Emacross","parent":"Bt","content":"usage: emacross [-l LONG] [-s SHORT] [--spy] [--no_bench] [--no_short] [-h] [--export {csv,json,xlsx}] Cross between a long and a short Exponential Moving Average.\noptional arguments: -l LONG, --long LONG Long EMA period (default: 50) -s SHORT, --short SHORT Short EMA period (default: 20) --spy Flag to add spy hold comparison (default: False) --no_bench Flag to not show buy and hold comparison (default: False) --no_short Flag that disables the short sell (default: True) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 10:01 (✨) /stocks/bt/ $ emacross --spy "},{"id":1053,"href":"/OpenBBTerminal/terminal/stocks/bt/rsi/","title":"Rsi","parent":"Bt","content":"usage: rsi [-p PERIODS] [-u HIGH] [-l LOW] [--spy] [--no_bench] [--no_short] [-h] [--export {csv,json,xlsx}] Strategy that buys when the stock is less than a threshold and shorts when it exceeds a threshold.\noptional arguments: -p PERIODS, --periods PERIODS Number of periods for RSI calculation (default: 14) -u HIGH, --high HIGH High (upper) RSI Level (default: 70) -l LOW, --low LOW Low RSI Level (default: 30) --spy Flag to add spy hold comparison (default: False) --no_bench Flag to not show buy and hold comparison (default: False) --no_short Flag that disables the short sell (default: True) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":1054,"href":"/OpenBBTerminal/terminal/stocks/bt/whatif/","title":"Whatif","parent":"Bt","content":"usage: whatif [-d DATE_SHARES_ACQUIRED] [-n NUM_SHARES_ACQUIRED] [-h] Displays what if scenario of having bought X shares at date Y\noptional arguments: -d DATE_SHARES_ACQUIRED, --date DATE_SHARES_ACQUIRED Date at which the shares were acquired (default: None) -n NUM_SHARES_ACQUIRED, --number NUM_SHARES_ACQUIRED Number of shares acquired (default: 1.0) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 10:05 (✨) /stocks/bt/ $ whatif -d 2020-01-01 -n 100 If you had acquired 100 shares of MSFT on 2020-01-01 with a cost of 15761.51. These would be worth 29462.01. Which represents an increase of 86.92%. 2022 Feb 16, 10:05 (✨) /stocks/bt/ $ whatif -d 2010-01-01 -n 100 If you had acquired 100 shares of MSFT on 2010-01-01 with a cost of 2390.50. These would be worth 29444.00. Which represents an increase of 1131.71%. 2022 Feb 16, 10:05 (✨) /stocks/bt/ $ whatif -d 2000-01-01 -n 100 If you had acquired 100 shares of MSFT on 2000-01-01 with a cost of 3679.42. These would be worth 29450.00. Which represents an increase of 700.40%. 2022 Feb 16, 10:05 (✨) /stocks/bt/ $ "},{"id":1055,"href":"/OpenBBTerminal/terminal/stocks/ca/balance/","title":"Balance","parent":"Introduction to Comparison Analysis","content":"usage: balance [-s L_SIMILAR] [-a L_ALSO] [-t 31-Dec-2020/2017] [-q] Prints either yearly or quarterly balance statement the company, and compares it against similar companies.\noptional arguments: -q, --quarter Quarter financial data flag. (default: False) -t S_TIMEFRAME, --timeframe S_TIMEFRAME Specify yearly/quarterly timeframe. Default is last. (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 08:35 (✨) /stocks/ca/ $ balance Other available yearly timeframes are: 2017, 2018, 2019, 2020, 2021 Company Comparison ┌──────────────────────────────────────┬─────────┬────────┬─────────┐ │ │ AAPL │ TSLA │ MSFT │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Cash \u0026amp; Short Term Investments │ 62.64B │ 18.05B │ 130.33B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Cash \u0026amp; Short Term Investments Growth │ -31.15% │ -8.00% │ -4.54% │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Cash Only │ 26.91B │ 17.92B │ 14.22B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Short-Term Investments │ 35.73B │ 131M │ 116.11B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Cash \u0026amp; ST Investments / Total Assets │ 17.85% │ 29.05% │ 39.05% │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Total Accounts Receivable │ 51.51B │ 1.91B │ 38.04B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Total Accounts Receivable Growth │ 37.55% │ 1.43% │ 18.84% │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Accounts Receivables, Net │ 26.28B │ 1.91B │ 38.04B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Accounts Receivables, Gross │ 26.28B │ 1.91B │ 38.79B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Bad Debt/Doubtful Accounts │ - │ - │ (751M) │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Other Receivable │ 25.23B │ - │ - │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Accounts Receivable Turnover │ 7.10 │ 28.14 │ 4.42 │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Inventories │ 6.58B │ 5.76B │ 2.64B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Finished Goods │ 6.58B │ 1.28B │ 1.37B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Work in Progress │ - │ 1.09B │ 79M │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Raw Materials │ - │ 3.39B │ 1.19B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Progress Payments \u0026amp; Other │ - │ - │ - │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Other Current Assets │ 14.11B │ 1.38B │ 13.39B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Miscellaneous Current Assets │ 14.11B │ 1.38B │ 13.39B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Total Current Assets │ 134.84B │ 27.1B │ 184.41B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Net Property, Plant \u0026amp; Equipment │ 49.53B │ 31.18B │ 70.8B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Property, Plant \u0026amp; Equipment - Gross │ 119.81B │ 39.87B │ 122.15B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Buildings │ 20.04B │ 4.68B │ 43.93B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Land \u0026amp; Improvements │ - │ - │ 3.66B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Computer Software and Equipment │ - │ 1.41B │ 51.25B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Other Property, Plant \u0026amp; Equipment │ 11.02B │ 18.73B │ 12.23B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Accumulated Depreciation │ 70.28B │ 8.69B │ 51.35B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Total Investments and Advances │ 127.88B │ 223M │ 6.03B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Other Long-Term Investments │ 127.88B │ 223M │ 6.03B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Long-Term Note Receivables │ - │ 299M │ 3.4B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Intangible Assets │ - │ 1.72B │ 57.51B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Net Goodwill │ - │ 200M │ 49.71B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Net Other Intangibles │ - │ - │ 7.8B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Other Assets │ 38.76B │ 1.62B │ 4.45B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Total Assets │ 351B │ 62.13B │ 333.78B │ ├──────────────────────────────────────┼─────────┼────────┼─────────┤ │ Total Assets Growth │ 8.37% │ 19.14% │ 10.78% │ └──────────────────────────────────────┴─────────┴────────┴─────────┘ "},{"id":1056,"href":"/OpenBBTerminal/terminal/stocks/ca/cashflow/","title":"Cashflow","parent":"Introduction to Comparison Analysis","content":"usage: cashflow [-q] [-t S_TIMEFRAME] [-h] [--export EXPORT] Prints either yearly or quarterly cashflow statement the company, and compares it against similar companies.\noptional arguments: -q, --quarter Quarter financial data flag. (default: False) -t S_TIMEFRAME, --timeframe S_TIMEFRAME Specify year/quarter of the cashflow statement to be retrieved. The format for year is YYYY and for quarter is DD-MMM-YYY (for example, 30-Sep-2021). Default is last year/quarter. (default: None) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 15, 08:35 (✨) /stocks/ca/ $ cashflow Other available yearly timeframes are: 2017, 2018, 2019, 2020, 2021 Cashflow Comparison ┌────────────────────────────────────────┬──────────┬─────────┬─────────┐ │ │ AAPL │ TSLA │ MSFT │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Net Income before Extraordinaries │ 94.68B │ 5.64B │ 61.27B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Net Income Growth │ 64.92% │ 554.76% │ 38.37% │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Depreciation, Depletion \u0026amp; Amortization │ 11.28B │ 2.91B │ 10.9B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Depreciation and Depletion │ 11.28B │ 1.91B │ 9.3B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Amortization of Intangible Assets │ - │ 1B │ 1.6B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Deferred Taxes \u0026amp; Investment Tax Credit │ (4.77B) │ - │ (150M) │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Deferred Taxes │ (4.77B) │ - │ (150M) │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Investment Tax Credit │ - │ - │ - │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Other Funds │ 7.76B │ 2.42B │ 5.66B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Funds from Operations │ 108.95B │ 10.98B │ 77.68B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Extraordinaries │ - │ - │ - │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Changes in Working Capital │ (4.91B) │ 518M │ (936M) │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Receivables │ (14.03B) │ (130M) │ (6.48B) │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Accounts Payable │ 12.33B │ 4.58B │ 2.8B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Other Assets/Liabilities │ (567M) │ (2.22B) │ 5.79B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Net Operating Cash Flow │ 104.04B │ 11.5B │ 76.74B │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Net Operating Cash Flow Growth │ 28.96% │ 93.45% │ 26.48% │ ├────────────────────────────────────────┼──────────┼─────────┼─────────┤ │ Net Operating Cash Flow / Sales │ 28.44% │ 21.36% │ 45.65% │ └────────────────────────────────────────┴──────────┴─────────┴─────────┘ "},{"id":1057,"href":"/OpenBBTerminal/terminal/stocks/ca/financial/","title":"Financial","parent":"Introduction to Comparison Analysis","content":"usage: financial [--export {csv,json,xlsx}] [-h] Shows stock data comparing the returns, margins, and prices of the added companies. Source: https://finviz.com\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:36 (✨) /stocks/ca/ $ financial Stock Screener ┌────────┬──────────────────┬──────────┬──────┬──────┬──────┬────────┬─────────┬───────────┬─────────┬─────────┬────────┬──────────┬──────────┬────────┬────────┬─────────────┐ │ Ticker │ Market Cap │ Dividend │ ROA │ ROE │ ROI │ Curr R │ Quick R │ LTDebt/Eq │ Debt/Eq │ Gross M │ Oper M │ Profit M │ Earnings │ Price │ Change │ Volume │ ├────────┼──────────────────┼──────────┼──────┼──────┼──────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼────────┼────────┼─────────────┤ │ AAPL │ 2812900000000.00 │ 0.01 │ 0.29 │ 1.50 │ 0.50 │ 1.00 │ 1.00 │ 1.48 │ 1.71 │ 0.43 │ 0.31 │ 0.27 │ Jan 27/a │ 168.88 │ 0.00 │ 86185528.00 │ ├────────┼──────────────────┼──────────┼──────┼──────┼──────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼────────┼────────┼─────────────┤ │ MSFT │ 2266600000000.00 │ 0.01 │ 0.22 │ 0.48 │ 0.28 │ 2.20 │ 2.20 │ 0.38 │ 0.42 │ 0.69 │ 0.42 │ 0.39 │ Jan 25/a │ 295.00 │ -0.00 │ 36359488.00 │ ├────────┼──────────────────┼──────────┼──────┼──────┼──────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼────────┼────────┼─────────────┤ │ TSLA │ 879490000000.00 │ None │ 0.10 │ 0.21 │ 0.16 │ 1.40 │ 1.10 │ 0.17 │ 0.23 │ 0.25 │ 0.12 │ 0.10 │ Jan 26/a │ 875.76 │ 0.02 │ 22585472.00 │ └────────┴──────────────────┴──────────┴──────┴──────┴──────┴────────┴─────────┴───────────┴─────────┴─────────┴────────┴──────────┴──────────┴────────┴────────┴─────────────┘ "},{"id":1058,"href":"/OpenBBTerminal/terminal/stocks/ca/get/","title":"Get","parent":"Introduction to Comparison Analysis","content":"usage: get [-u] [-n] [-l LIMIT] [-h] [--source {Finviz,Polygon,Finnhub}] Get similar companies from selected data source (default: Finviz) to compare with.\noptional arguments: -u, --us_only Show only stocks from the US stock exchanges. Works only with Polygon (default: False) -n, --nocountry Similar stocks from finviz using only Industry and Sector. (default: False) -l LIMIT, --limit LIMIT Limit of stocks to retrieve. (default: 10) -h, --help show this help message (default: False) --source {Finviz,Polygon,Finnhub} Data source to select from (default: Finviz) "},{"id":1059,"href":"/OpenBBTerminal/terminal/stocks/ca/hcorr/","title":"Hcorr","parent":"Introduction to Comparison Analysis","content":"usage: hcorr [-t {o,h,l,c,a}] [-s START] [-h] A correlation heatmap for the selected tickers, using optional arguments described below. Scores range from +1 to -1 with 0 being completely neutral.\noptional arguments: -t {o,h,l,c,a,r}, --type {o,h,l,c,a,r} Candle data to use: o-open, h-high, l-low, c-close, a-adjusted close, r-returns. (default: a) -s START, --start START The starting date (format YYYY-MM-DD) of the stock (default: 2021-06-08) --display-full-matrix Display all matrix values, rather than masking off half. (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) "},{"id":1060,"href":"/OpenBBTerminal/terminal/stocks/ca/historical/","title":"Historical","parent":"Introduction to Comparison Analysis","content":"usage: historical [-t {o,h,l,c,a}] [-n] [-s START] [-h] [--export EXPORT] Historical price comparison between similar companies.\noptional arguments: -t {o,h,l,c,a}, --type {o,h,l,c,a} Candle data to use: o-open, h-high, l-low, c-close, a-adjusted close. (default: a) -n, --normalize Flag to normalize all prices on same 0-1 scale (default: False) -s START, --start START The starting date (format YYYY-MM-DD) of the stock (default: 2021-03-23) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1061,"href":"/OpenBBTerminal/terminal/stocks/ca/income/","title":"Income","parent":"Introduction to Comparison Analysis","content":"usage: income [-q] [-t S_TIMEFRAME] [--export {csv,json,xlsx}] [-h] Compares detailed income statements from the chosen stocks.\noptional arguments: -q, --quarter Quarter financial data flag. (default: False) -t S_TIMEFRAME, --timeframe S_TIMEFRAME Specify yearly/quarterly timeframe. Default is last. (default: None) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:39 (✨) /stocks/ca/ $ historical 2022 Feb 15, 08:39 (✨) /stocks/ca/ $ income Other available yearly timeframes are: 2017, 2018, 2019, 2020, 2021 Income Data ┌───────────────────────────────────────────┬─────────┬─────────┬─────────┬─────────┐ │ │ AAPL │ GOOGL │ TSLA │ MSFT │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Sales/Revenue │ 365.82B │ 257.49B │ 53.82B │ 168.09B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Sales Growth │ 33.44% │ 41.21% │ 70.67% │ 17.53% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Cost of Goods Sold (COGS) incl. D\u0026amp;A │ 212.98B │ 110.94B │ 40.22B │ 52.23B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ COGS Growth │ 25.18% │ 30.93% │ 61.48% │ 13.36% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ COGS excluding D\u0026amp;A │ 201.7B │ 98.5B │ 37.31B │ 41.33B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Depreciation \u0026amp; Amortization Expense │ 11.28B │ 12.44B │ 2.91B │ 10.9B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Depreciation │ 11.28B │ 11.56B │ 1.91B │ 9.3B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Amortization of Intangibles │ - │ 886M │ 1B │ 1.6B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Gross Income │ 152.84B │ 146.55B │ 13.61B │ 115.86B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Gross Income Growth │ 46.95% │ 50.12% │ 105.22% │ 19.52% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Gross Profit Margin │ 41.78% │ 56.91% │ 25.28% │ 68.93% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ SG\u0026amp;A Expense │ 43.89B │ 67.98B │ 7.11B │ 45.94B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ SGA Growth │ 13.50% │ 20.17% │ 53.36% │ 4.46% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Research \u0026amp; Development │ 21.91B │ 31.56B │ 2.59B │ 20.72B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Other SG\u0026amp;A │ 21.97B │ - │ - │ 25.22B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Other Operating Expense │ - │ - │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Unusual Expense │ - │ (10.4B) │ (40M) │ (1.04B) │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ EBIT after Unusual Expense │ - │ 88.96B │ 6.54B │ 70.96B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Non Operating Income/Expense │ 60M │ 284M │ 122M │ 357M │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Non-Operating Interest Income │ 2.84B │ 1.5B │ 56M │ 2.13B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Equity in Affiliates (Pretax) │ - │ 334M │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Interest Expense │ 2.65B │ 346M │ 371M │ 2.35B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Interest Expense Growth │ -7.94% │ 156.30% │ -50.40% │ -9.46% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Gross Interest Expense │ 2.65B │ 509M │ 424M │ 2.35B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Interest Capitalized │ - │ 163M │ 53M │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Pretax Income │ 109.21B │ 90.73B │ 6.34B │ 71.1B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Pretax Income Growth │ 62.77% │ 88.71% │ 449.65% │ 34.06% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Pretax Margin │ 29.85% │ 35.24% │ 11.78% │ 42.30% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Income Tax │ 14.53B │ 14.7B │ 699M │ 9.83B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Income Tax - Current Domestic │ 9.88B │ 10.13B │ 9M │ 4.51B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Income Tax - Current Foreign │ 9.42B │ 2.69B │ 839M │ 5.47B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Income Tax - Deferred Domestic │ (7.51B) │ 2.02B │ - │ (179M) │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Income Tax - Deferred Foreign │ 2.74B │ (135M) │ (149M) │ 29M │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Income Tax Credits │ - │ - │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Equity in Affiliates │ - │ - │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Other After Tax Income (Expense) │ - │ - │ 5M │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Consolidated Net Income │ 94.68B │ 76.03B │ 5.65B │ 61.27B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Minority Interest Expense │ - │ - │ 125M │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Net Income │ 94.68B │ 76.03B │ 5.52B │ 61.27B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Net Income Growth │ 64.92% │ 88.81% │ 700.58% │ 38.37% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Net Margin Growth │ 25.88% │ 29.53% │ 10.26% │ 36.45% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Extraordinaries \u0026amp; Discontinued Operations │ - │ - │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Extra Items \u0026amp; Gain/Loss Sale Of Assets │ - │ - │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Cumulative Effect - Accounting Chg │ - │ - │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Discontinued Operations │ - │ - │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Net Income After Extraordinaries │ 94.68B │ 76.03B │ 5.52B │ 61.27B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Preferred Dividends │ - │ - │ - │ - │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Net Income Available to Common │ 94.68B │ 76.03B │ 5.52B │ 61.27B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ EPS (Basic) │ 5.67 │ 113.88 │ 5.6 │ 8.12 │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ EPS (Basic) Growth │ 71.34% │ 79.48% │ 657.49% │ 39.52% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Basic Shares Outstanding │ 16.7B │ 667.65M │ 986M │ 7.55B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ EPS (Diluted) │ 5.61 │ 112.2 │ 4.89 │ 8.05 │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ EPS (Diluted) Growth │ 71.40% │ 91.42% │ 667.98% │ 39.73% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ Diluted Shares Outstanding │ 16.86B │ 677.67M │ 1.13B │ 7.61B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ EBITDA │ 120.23B │ 91.01B │ 9.41B │ 80.82B │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ EBITDA Growth │ 57.38% │ 66.24% │ 117.96% │ 23.84% │ ├───────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┤ │ EBITDA Margin │ 32.87% │ 35.34% │ 17.48% │ 48.08% │ └───────────────────────────────────────────┴─────────┴─────────┴─────────┴─────────┘ "},{"id":1062,"href":"/OpenBBTerminal/terminal/stocks/ca/overview/","title":"Overview","parent":"Introduction to Comparison Analysis","content":"usage: overview [--export {csv,json,xlsx}] [-h] Displays the broad overview for each company added. Source: https://finviz.com\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:41 (✨) /stocks/ca/ $ overview Stock Screener ┌────────┬───────────────────────┬────────────────────────┬────────────────────────────────┬─────────┬──────────────────┬────────┬─────────┬────────┬─────────────┐ │ Ticker │ Company │ Sector │ Industry │ Country │ Market Cap │ P/E │ Price │ Change │ Volume │ ├────────┼───────────────────────┼────────────────────────┼────────────────────────────────┼─────────┼──────────────────┼────────┼─────────┼────────┼─────────────┤ │ AAPL │ Apple Inc. │ Technology │ Consumer Electronics │ USA │ 2812900000000.00 │ 28.04 │ 168.88 │ 0.00 │ 86185528.00 │ ├────────┼───────────────────────┼────────────────────────┼────────────────────────────────┼─────────┼──────────────────┼────────┼─────────┼────────┼─────────────┤ │ GOOGL │ Alphabet Inc. │ Communication Services │ Internet Content \u0026amp; Information │ USA │ 1849330000000.00 │ 24.15 │ 2710.52 │ 0.01 │ 1715054.00 │ ├────────┼───────────────────────┼────────────────────────┼────────────────────────────────┼─────────┼──────────────────┼────────┼─────────┼────────┼─────────────┤ │ MSFT │ Microsoft Corporation │ Technology │ Software - Infrastructure │ USA │ 2266600000000.00 │ 31.39 │ 295.00 │ -0.00 │ 36359488.00 │ ├────────┼───────────────────────┼────────────────────────┼────────────────────────────────┼─────────┼──────────────────┼────────┼─────────┼────────┼─────────────┤ │ TSLA │ Tesla, Inc. │ Consumer Cyclical │ Auto Manufacturers │ USA │ 879490000000.00 │ 177.93 │ 875.76 │ 0.02 │ 22585472.00 │ └────────┴───────────────────────┴────────────────────────┴────────────────────────────────┴─────────┴──────────────────┴────────┴─────────┴────────┴─────────────┘ "},{"id":1063,"href":"/OpenBBTerminal/terminal/stocks/ca/ownership/","title":"Ownership","parent":"Introduction to Comparison Analysis","content":"usage: ownership [--export {csv,json,xlsx}] [-h] Compare the outstanding shares, market cap, short interest and more. Source: https://finviz.com\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:41 (✨) /stocks/ca/ $ ownership Stock Screener ┌────────┬──────────────────┬────────────────┬────────────────┬─────────────┬───────────────┬──────────┬────────────┬─────────────┬─────────────┬──────────────┬─────────┬────────┬─────────────┐ │ Ticker │ Market Cap │ Outstanding │ Float │ Insider Own │ Insider Trans │ Inst Own │ Inst Trans │ Float Short │ Short Ratio │ Avg Volume │ Price │ Change │ Volume │ ├────────┼──────────────────┼────────────────┼────────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼─────────┼────────┼─────────────┤ │ AAPL │ 2812900000000.00 │ 16390000000.00 │ 16310000000.00 │ 0.00 │ -0.15 │ 0.59 │ 0.00 │ 0.01 │ 0.89 │ 102890000.00 │ 168.88 │ 0.00 │ 86185528.00 │ ├────────┼──────────────────┼────────────────┼────────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼─────────┼────────┼─────────────┤ │ GOOGL │ 1849330000000.00 │ 662660000.00 │ 615700000.00 │ 0.00 │ 0.00 │ 0.80 │ 0.00 │ 0.00 │ 1.22 │ 1810000.00 │ 2710.52 │ 0.01 │ 1715054.00 │ ├────────┼──────────────────┼────────────────┼────────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼─────────┼────────┼─────────────┤ │ MSFT │ 2266600000000.00 │ 7500000000.00 │ 7480000000.00 │ 0.00 │ -0.19 │ 0.72 │ 0.00 │ 0.01 │ 1.14 │ 35290000.00 │ 295.00 │ -0.00 │ 36359488.00 │ ├────────┼──────────────────┼────────────────┼────────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼─────────┼────────┼─────────────┤ │ TSLA │ 879490000000.00 │ 1000000000.00 │ 833120000.00 │ 0.00 │ -0.94 │ 0.41 │ -0.01 │ 0.03 │ 0.91 │ 26320000.00 │ 875.76 │ 0.02 │ 22585472.00 │ └────────┴──────────────────┴────────────────┴────────────────┴─────────────┴───────────────┴──────────┴────────────┴─────────────┴─────────────┴──────────────┴─────────┴────────┴─────────────┘ "},{"id":1064,"href":"/OpenBBTerminal/terminal/stocks/ca/performance/","title":"Performance","parent":"Introduction to Comparison Analysis","content":"usage: performance [--export {csv,json,xlsx}] [-h] Compares the performance breakdown over time. Source: https://finviz.com\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:42 (✨) /stocks/ca/ $ performance Stock Screener ┌────────┬───────────┬────────────┬────────────┬───────────┬───────────┬──────────┬──────────────┬──────────────┬───────┬──────────────┬────────────┬─────────┬────────┬─────────────┐ │ Ticker │ Perf Week │ Perf Month │ Perf Quart │ Perf Half │ Perf Year │ Perf YTD │ Volatility W │ Volatility M │ Recom │ Avg Volume │ Rel Volume │ Price │ Change │ Volume │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼─────────┼────────┼─────────────┤ │ AAPL │ -0.02 │ -0.02 │ 0.13 │ 0.12 │ 0.27 │ -0.05 │ 0.02 │ 0.03 │ 1.80 │ 102890000.00 │ 0.84 │ 168.88 │ 0.00 │ 86185528.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼─────────┼────────┼─────────────┤ │ GOOGL │ -0.03 │ -0.02 │ -0.09 │ -0.02 │ 0.28 │ -0.06 │ 0.03 │ 0.03 │ 1.70 │ 1810000.00 │ 0.95 │ 2710.52 │ 0.01 │ 1715054.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼─────────┼────────┼─────────────┤ │ MSFT │ -0.02 │ -0.03 │ -0.12 │ 0.00 │ 0.21 │ -0.12 │ 0.02 │ 0.03 │ 1.60 │ 35290000.00 │ 1.03 │ 295.00 │ -0.00 │ 36359488.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼─────────┼────────┼─────────────┤ │ TSLA │ -0.03 │ -0.15 │ -0.15 │ 0.28 │ 0.10 │ -0.17 │ 0.05 │ 0.06 │ 2.60 │ 26320000.00 │ 0.85 │ 875.76 │ 0.02 │ 22585472.00 │ └────────┴───────────┴────────────┴────────────┴───────────┴───────────┴──────────┴──────────────┴──────────────┴───────┴──────────────┴────────────┴─────────┴────────┴─────────────┘ "},{"id":1065,"href":"/OpenBBTerminal/terminal/stocks/ca/scorr/","title":"Scorr","parent":"Introduction to Comparison Analysis","content":"usage: sentiment_compare [-r] [--export {csv,json,xlsx}] [-h] FinBrain\u0026rsquo;s sentiment correlation across similar tickers.\noptional arguments: -r, --raw Display raw sentiment data (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":1066,"href":"/OpenBBTerminal/terminal/stocks/ca/sentiment/","title":"Sentiment","parent":"Introduction to Comparison Analysis","content":"usage: sentiment_compare [-r] [--export {csv,json,xlsx}] [-h] FinBrain\u0026rsquo;s sentiment comparison across the selected tickers over time.\noptional arguments: -r, --raw Display raw sentiment data (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":1067,"href":"/OpenBBTerminal/terminal/stocks/ca/technical/","title":"Technical","parent":"Introduction to Comparison Analysis","content":"usage: technical [--export {csv,json,xlsx}] [-h] Compares technical stock price data for the added companies. Source: https://finviz.com\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:44 (✨) /stocks/ca/ $ technical Stock Screener ┌────────┬──────┬───────┬───────┬───────┬────────┬──────────┬─────────┬───────┬─────────┬────────┬───────────┬───────┬─────────────┐ │ Ticker │ Beta │ ATR │ SMA20 │ SMA50 │ SMA200 │ 52W High │ 52W Low │ RSI │ Price │ Change │ from Open │ Gap │ Volume │ ├────────┼──────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼─────────┼────────┼───────────┼───────┼─────────────┤ │ AAPL │ 1.18 │ 4.29 │ -0.00 │ -0.02 │ 0.13 │ -0.08 │ 0.45 │ 46.89 │ 168.88 │ 0.00 │ 0.01 │ -0.01 │ 86185528.00 │ ├────────┼──────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼─────────┼────────┼───────────┼───────┼─────────────┤ │ GOOGL │ 1.07 │ 93.36 │ -0.01 │ -0.04 │ 0.00 │ -0.11 │ 0.36 │ 45.82 │ 2710.52 │ 0.01 │ 0.02 │ -0.01 │ 1715054.00 │ ├────────┼──────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼─────────┼────────┼───────────┼───────┼─────────────┤ │ MSFT │ 0.91 │ 9.40 │ -0.03 │ -0.07 │ -0.00 │ -0.16 │ 0.32 │ 40.63 │ 295.00 │ -0.00 │ 0.00 │ -0.00 │ 36359488.00 │ ├────────┼──────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼─────────┼────────┼───────────┼───────┼─────────────┤ │ TSLA │ 2.04 │ 57.00 │ -0.06 │ -0.12 │ 0.06 │ -0.30 │ 0.62 │ 41.26 │ 875.76 │ 0.02 │ 0.02 │ 0.00 │ 22585472.00 │ └────────┴──────┴───────┴───────┴───────┴────────┴──────────┴─────────┴───────┴─────────┴────────┴───────────┴───────┴─────────────┘ "},{"id":1068,"href":"/OpenBBTerminal/terminal/stocks/ca/ticker/","title":"Ticker","parent":"Introduction to Comparison Analysis","content":"usage: ticker [-t TICKER] [-h] Set ticker to extract similar from.\noptional arguments: -t TICKER, --ticker TICKER Ticker get similar tickers from (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:33 (✨) /stocks/ca/ $ ticker AAPL "},{"id":1069,"href":"/OpenBBTerminal/terminal/stocks/ca/tsne/","title":"Tsne","parent":"Introduction to Comparison Analysis","content":"usage: tsne [-l LR] [-p] [-h] Get similar companies to compare with using sklearn TSNE.\noptional arguments: -r LR, --learnrate LR TSNE Learning rate. Typical values are between 50 and 200 (default: 200) -l LIMIT, --limit LIMIT Limit of stocks to retrieve. The subsample will occur randomly. (default: 10) -p, --no_plot -h, --help show this help message (default: False) "},{"id":1070,"href":"/OpenBBTerminal/terminal/stocks/ca/valuation/","title":"Valuation","parent":"Introduction to Comparison Analysis","content":"usage: valuation [--export {csv,json,xlsx}] [-h] Shows the valuation comparisons between the chosen stocks.\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:46 (✨) /stocks/ca/ $ valuation Stock Screener ┌────────┬──────────────────┬───────┬─────────┬──────┬───────┬───────┬───────┬───────┬────────────┬────────────┬─────────────┬─────────────┬───────────────┬─────────┬────────┬─────────────┐ │ Ticker │ Market Cap │ P/E │ Fwd P/E │ PEG │ P/S │ P/B │ P/C │ P/FCF │ EPS this Y │ EPS next Y │ EPS past 5Y │ EPS next 5Y │ Sales past 5Y │ Price │ Change │ Volume │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ AAPL │ 2812900000000.00 │ 28.04 │ 25.72 │ 1.89 │ 7.44 │ 38.47 │ 44.01 │ 32.23 │ 0.71 │ 0.07 │ 0.22 │ 0.15 │ 0.11 │ 168.88 │ 0.00 │ 86185528.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ AMZN │ 1637940000000.00 │ 47.95 │ 42.78 │ 1.38 │ 3.49 │ 11.43 │ 17.05 │ None │ 0.55 │ 0.51 │ 0.68 │ 0.35 │ 0.28 │ 3103.34 │ 0.01 │ 4161535.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ ANSS │ 28880000000.00 │ 59.65 │ 40.01 │ 5.33 │ 15.41 │ 6.38 │ 26.71 │ 48.76 │ -0.05 │ 0.10 │ 0.12 │ 0.11 │ 0.12 │ 317.12 │ -0.01 │ 393261.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ CDNS │ 41140000000.00 │ 57.27 │ 39.88 │ 3.15 │ 13.83 │ 14.75 │ 40.58 │ 43.78 │ -0.40 │ 0.13 │ 0.21 │ 0.18 │ 0.10 │ 142.08 │ -0.00 │ 1218681.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ GOOG │ 1857570000000.00 │ 26.07 │ 24.10 │ 1.24 │ 7.77 │ 7.35 │ None │ None │ 0.85 │ 0.04 │ None │ 0.21 │ None │ 2706.00 │ 0.01 │ 1339640.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ GOOGL │ 1849330000000.00 │ 24.15 │ 20.04 │ 1.15 │ 7.18 │ 7.14 │ 13.24 │ 27.60 │ 0.91 │ 0.17 │ 0.32 │ 0.21 │ 0.23 │ 2710.52 │ 0.01 │ 1715054.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ INTU │ 155900000000.00 │ 69.95 │ 38.73 │ 4.02 │ 15.11 │ 14.84 │ 47.97 │ 59.62 │ 0.09 │ 0.17 │ 0.20 │ 0.17 │ 0.15 │ 529.05 │ -0.01 │ 1165436.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ KEYS │ 31100000000.00 │ 34.69 │ 22.18 │ 2.89 │ 6.29 │ 8.11 │ 15.15 │ 27.09 │ 0.44 │ 0.08 │ 0.20 │ 0.12 │ 0.11 │ 165.93 │ 0.01 │ 1519015.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ MSFT │ 2266600000000.00 │ 31.39 │ 27.37 │ 1.80 │ 12.26 │ 13.84 │ 18.08 │ 52.23 │ 0.40 │ 0.15 │ 0.26 │ 0.17 │ 0.13 │ 295.00 │ -0.00 │ 36359488.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ SNPS │ 47690000000.00 │ 61.25 │ 32.70 │ 4.11 │ 11.34 │ 8.52 │ 30.17 │ 34.09 │ 0.13 │ 0.15 │ 0.23 │ 0.15 │ 0.12 │ 294.96 │ -0.00 │ 826559.00 │ ├────────┼──────────────────┼───────┼─────────┼──────┼───────┼───────┼───────┼───────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼─────────┼────────┼─────────────┤ │ VRSN │ 23560000000.00 │ 30.45 │ 29.60 │ 3.81 │ 17.74 │ None │ 19.65 │ 37.40 │ -0.02 │ 0.15 │ 0.20 │ 0.08 │ 0.04 │ 213.56 │ -0.00 │ 640475.00 │ └────────┴──────────────────┴───────┴─────────┴──────┴───────┴───────┴───────┴───────┴────────────┴────────────┴─────────────┴─────────────┴───────────────┴─────────┴────────┴─────────────┘ "},{"id":1071,"href":"/OpenBBTerminal/terminal/stocks/ca/volume/","title":"Volume","parent":"Introduction to Comparison Analysis","content":"usage: volume [-s] [--export {csv,json,xlsx}] [-h] Charts historical volume of the added tickers.\noptional arguments: -s, --scale Flag to not put all prices on same 0-1 scale (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":1072,"href":"/OpenBBTerminal/terminal/stocks/candle/","title":"Candle","parent":"Introduction to Stocks","content":"usage: candle [-p] [--sort {AdjClose,Open,Close,High,Low,Volume,Returns,LogRet}] [-d] [--raw] [-t] [--ma MOV_AVG] [--log] [-h] [--export EXPORT] [-l LIMIT] Shows historic data for a stock\noptional arguments: -p, --plotly Flag to show interactive plotly chart (default: True) --sort {AdjClose,Open,Close,High,Low,Volume,Returns,LogRet} Choose a column to sort by. Only works when raw data is displayed. (default: ) -d, --descending Sort selected column descending. Only works when raw data is displayed. (default: True) --raw Shows raw data instead of chart. If sort is set those are the top ones, otherwise we grab latest data to date (default: False) -t, --trend Flag to add high and low trends to candle (default: False) --ma MOV_AVG Add moving average in number of days to plot and separate by a comma. Value for ma (moving average) keyword needs to be greater than 1. (default: None) --log Plot with y axis on log scale (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 20) For more information and examples, use \u0026lsquo;about candle\u0026rsquo; to access the related guide.\n"},{"id":1073,"href":"/OpenBBTerminal/terminal/stocks/codes/","title":"Codes","parent":"Introduction to Stocks","content":"usage: codes [-h] Shows CIK, FIGI, and SIC codes for the loaded ticker, from Polygon.\noptions: -h, --help show this help message (default: False) Sample usage:\n2022 May 03, 08:35 (🦋) /stocks/ $ codes AAPL Codes ┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ ┃ ┃ ┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ CIK │ 0000320193 │ ├──────────────────┼──────────────┤ │ COMPOSITE FIGI │ BBG000B9XRY4 │ ├──────────────────┼──────────────┤ │ SHARE CLASS FIGI │ BBG001S5N8V8 │ ├──────────────────┼──────────────┤ │ SIC CODE │ 3571 │ └──────────────────┴──────────────┘ "},{"id":1074,"href":"/OpenBBTerminal/terminal/stocks/dd/analyst/","title":"Analyst","parent":"Introduction to the Due Diligence Menu","content":"usage: analyst [-h] [--export {csv,json,xlsx}] Print analyst prices and ratings of the company. The following fields are expected: date, analyst, category, price from, price to, and rating. [Source: Finviz]\noptional arguments: -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example:\n2022 Feb 16, 04:20 (✨) /stocks/dd/ $ analyst Display Analyst Ratings ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ category ┃ analyst ┃ rating ┃ target ┃ target_from ┃ target_to ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 2022-01-31 │ Upgrade │ Credit Suisse │ Neutral -\u0026gt; Outperform │ 1025.00 │ nan │ nan │ ├────────────┼────────────┼─────────────────┼───────────────────────┼─────────┼─────────────┼───────────┤ │ 2022-01-27 │ Reiterated │ Wells Fargo │ Equal Weight │ nan │ 860.00 │ 910.00 │ ├────────────┼────────────┼─────────────────┼───────────────────────┼─────────┼─────────────┼───────────┤ │ 2022-01-27 │ Reiterated │ Robert W. Baird │ Outperform │ nan │ 888.00 │ 1108.00 │ ├────────────┼────────────┼─────────────────┼───────────────────────┼─────────┼─────────────┼───────────┤ │ 2022-01-27 │ Reiterated │ Oppenheimer │ Outperform │ nan │ 1080.00 │ 1103.00 │ ├────────────┼────────────┼─────────────────┼───────────────────────┼─────────┼─────────────┼───────────┤ │ 2022-01-27 │ Reiterated │ JP Morgan │ Underweight │ nan │ 295.00 │ 325.00 │ └────────────┴────────────┴─────────────────┴───────────────────────┴─────────┴─────────────┴───────────┘ "},{"id":1075,"href":"/OpenBBTerminal/terminal/stocks/dd/arktrades/","title":"Arktrades","parent":"Introduction to the Due Diligence Menu","content":"usage: arktrades [-l LIMIT] [-s] [-h] [--export {csv,json,xlsx}] Get trades for the loaded ticker across all ARK funds.\noptional arguments: -l LIMIT, --limit LIMIT Limit of rows to show -s, --show_ticker Flag to show ticker in table -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example:\n2022 Feb 16, 04:23 (✨) /stocks/dd/ $ arktrades ARK Trades ┏━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ ┃ shares ┃ weight ┃ fund ┃ direction ┃ everything.profile.companyName ┃ Close ($) ┃ Total ($1M) ┃ ┡━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ 2020-08-24 │ 9891 │ 0.18 │ ARKQ │ Sell │ Apple Inc. │ 125.86 │ 1.24 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-08-24 │ 14278 │ 0.25 │ ARKW │ Sell │ Apple Inc. │ 125.86 │ 1.80 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-08-25 │ 27722 │ 0.50 │ ARKF │ Sell │ Apple Inc. │ 124.82 │ 3.46 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-09-08 │ 14631 │ 0.20 │ ARKQ │ Sell │ Apple Inc. │ 112.82 │ 1.65 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-09-08 │ 90983 │ 0.82 │ ARKW │ Sell │ Apple Inc. │ 112.82 │ 10.26 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-09-09 │ 34120 │ 0.18 │ ARKW │ Sell │ Apple Inc. │ 117.32 │ 4.00 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-09-09 │ 24678 │ 0.51 │ ARKF │ Sell │ Apple Inc. │ 117.32 │ 2.90 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-09-28 │ 8397 │ 0.15 │ ARKQ │ Sell │ Apple Inc. │ 114.96 │ 0.97 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-10-14 │ 125517 │ 0.52 │ ARKG │ Buy │ Apple Inc. │ 121.19 │ 15.21 │ ├────────────┼────────┼────────┼──────┼───────────┼────────────────────────────────┼───────────┼─────────────┤ │ 2020-10-30 │ 128557 │ 0.50 │ ARKG │ Sell │ Apple Inc. │ 108.86 │ 13.99 │ └────────────┴────────┴────────┴──────┴───────────┴────────────────────────────────┴───────────┴─────────────┘ "},{"id":1076,"href":"/OpenBBTerminal/terminal/stocks/dd/customer/","title":"Customer","parent":"Introduction to the Due Diligence Menu","content":"usage: customer [-h] [--export {csv,json,xlsx}] List of customers from ticker provided. [Source: CSIMarket]\noptional arguments: -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example (Apple and Tesla):\n2022 Feb 16, 04:25 (✨) /stocks/dd/ $ customer List of Customers: AMZN, T, AT, BBY, BIG, AVGO, EBAY, GME, LIVE, PTC, S, TMUS, TGT, WMT 2022 Feb 16, 04:26 (✨) /stocks/dd/ $ customer List of Customers: Y, ALL, AIG, ACGL, AWH, AN, AZO, AVID, CAR, AXS, BRKA, BLBD, BRO, KMX, CAT, CUII, CINF, CRUS, CNFR, DGICA, DORM, DSPG, ESGR, ESNT, FNHC, GM, GBLI, HALL, THG, HCI, HRTG, HMN, JRVR, JANL, KMPR, KINS, KFS, KNX, KN, KOSS, LEAF, L, MKL, MCY, MET, MPAA, NSEC, ORLY, ORI, OSK, OB, PGR, REVG, SAFT, SMP, STFC, HIG, TRV, GTS, TRUE, UNAM, UFCS, UIHC, UVE, WRB, WTM, XL "},{"id":1077,"href":"/OpenBBTerminal/terminal/stocks/dd/est/","title":"Est","parent":"Introduction to the Due Diligence Menu","content":"usage: est [-e {annualrevenue,annualearnings,quarterearnings}] [-h] [--export EXPORT] Yearly estimates and quarter earnings/revenues. [Source: Business Insider]\noptions: -e {annualrevenue,annualearnings,quarterearnings}, --estimate {annualrevenue,annualearnings,quarterearnings} Estimates to get -h, --help show this help message --export EXPORT Export raw data into csv, json, xlsx For more information and examples, use 'about est' to access the related guide. Example:\n2022 Sep 16, 23:24 (🦋) /stocks/dd/ $ est -e annualearnings Annual Earnings Estimates ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ 2022 ┃ 2023 ┃ 2024 ┃ 2025 ┃ 2026 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━┩ │ Revenue │ 392,623 │ 410,909 │ 430,738 │ 454,433 │ 510,220 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Dividend │ 0.91 │ 0.98 │ 1.05 │ 0.99 │ 0.93 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Dividend Yield (in %) │ 0.60 % │ 0.64 % │ 0.69 % │ 0.65 % │ 0.61 % │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ EPS │ 6.09 │ 6.45 │ 6.86 │ 7.24 │ 7.58 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ P/E Ratio │ 24.91 │ 23.52 │ 22.13 │ 20.97 │ 20.03 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ EBIT │ 118,989 │ 121,191 │ 125,432 │ 128,497 │ 146,245 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ EBITDA │ 130,785 │ 132,990 │ 138,897 │ 149,228 │ 158,983 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Net Profit │ 99,530 │ 101,720 │ 105,647 │ 108,662 │ 124,217 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Net Profit Adjusted │ 100,429 │ 103,715 │ 108,643 │ 117,760 │ 132,601 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Pre-Tax Profit │ 118,535 │ 121,213 │ 126,453 │ 131,656 │ 156,001 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Net Profit (Adjusted) │ 118,256 │ 121,673 │ 129,059 │ 133,883 │ 146,138 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ EPS (Non-GAAP) ex. SOE │ 6.06 │ 6.46 │ 6.95 │ 7.36 │ 8.09 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ EPS (GAAP) │ 6.09 │ 6.45 │ 6.86 │ 7.24 │ 7.58 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Gross Income │ 169,560 │ 176,873 │ 185,487 │ 200,666 │ 221,723 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Cash Flow from Investing │ -19,306 │ -8,376 │ -13,356 │ -10,998 │ -11,108 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Cash Flow from Operations │ 123,476 │ 123,734 │ 134,248 │ 143,306 │ 150,627 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Cash Flow from Financing │ -108,858 │ -90,388 │ -78,773 │ -14,759 │ -15,262 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Cash Flow per Share │ 7.16 │ 7.58 │ 8.58 │ 9.09 │ - │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Free Cash Flow │ 111,277 │ 109,160 │ 114,479 │ 120,309 │ 139,519 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Free Cash Flow per Share │ 6.70 │ 6.85 │ 7.44 │ 7.87 │ 8.52 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Book Value per Share │ 3.55 │ 4.39 │ 5.52 │ 7.90 │ - │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Net Debt │ -56,230 │ -81,452 │ -41,666 │ -174,398 │ -493,690 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Research \u0026amp; Development Exp. │ 26,214 │ 28,913 │ 31,890 │ 38,822 │ 40,837 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Capital Expenditure │ 10,282 │ 11,518 │ 12,409 │ 14,097 │ 11,108 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Selling, General \u0026amp; Admin. Exp. │ 24,911 │ 27,190 │ 28,831 │ 31,789 │ 34,641 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Shareholder’s Equity │ 58,270 │ 74,745 │ 100,755 │ 187,040 │ 472,170 │ ├────────────────────────────────┼──────────┼─────────┼─────────┼──────────┼──────────┤ │ Total Assets │ 343,493 │ 369,736 │ 419,940 │ 529,449 │ 811,911 │ └────────────────────────────────┴──────────┴─────────┴─────────┴──────────┴──────────┘ "},{"id":1078,"href":"/OpenBBTerminal/terminal/stocks/dd/pt/","title":"Pt","parent":"Introduction to the Due Diligence Menu","content":"usage: pt [--raw] [-l LIMIT] [-h] [--export {csv,json,xlsx}] Prints price target from analysts. [Source: Business Insider]\noptional arguments: --raw Only output raw data -l LIMIT, --limit LIMIT Limit of latest price targets from analysts to print. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx "},{"id":1079,"href":"/OpenBBTerminal/terminal/stocks/dd/rating/","title":"Rating","parent":"Introduction to the Due Diligence Menu","content":"usage: rating [-l LIMIT] [-h] [--export {csv,json,xlsx}] Based on specific ratios, prints information whether the company is a (strong) buy, neutral or a (strong) sell. The following fields are expected: P/B, ROA, DCF, P/E, ROE, and D/E. [Source: Financial Modeling Prep]\noptional arguments: -l LIMIT, --limit LIMIT limit of last days to display ratings -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xls Example (Google):\n2022 Feb 16, 04:34 (✨) /stocks/dd/ $ rating Rating ┏━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ Rating ┃ DCF ┃ ROE ┃ ROA ┃ DE ┃ PE ┃ PB ┃ ┡━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-02-15 │ Buy │ Strong Buy │ Neutral │ Neutral │ Neutral │ Strong Buy │ Strong Buy │ ├────────────┼────────┼────────────┼─────────┼─────────┼─────────┼────────────┼────────────┤ │ 2022-02-14 │ Buy │ Strong Buy │ Neutral │ Neutral │ Neutral │ Strong Buy │ Strong Buy │ ├────────────┼────────┼────────────┼─────────┼─────────┼─────────┼────────────┼────────────┤ │ 2022-02-11 │ Buy │ Strong Buy │ Neutral │ Neutral │ Neutral │ Strong Buy │ Strong Buy │ ├────────────┼────────┼────────────┼─────────┼─────────┼─────────┼────────────┼────────────┤ │ 2022-02-10 │ Buy │ Strong Buy │ Neutral │ Neutral │ Neutral │ Strong Buy │ Strong Buy │ ├────────────┼────────┼────────────┼─────────┼─────────┼─────────┼────────────┼────────────┤ │ 2022-02-09 │ Buy │ Strong Buy │ Neutral │ Neutral │ Neutral │ Strong Buy │ Strong Buy │ └────────────┴────────┴────────────┴─────────┴─────────┴─────────┴────────────┴────────────┘ "},{"id":1080,"href":"/OpenBBTerminal/terminal/stocks/dd/rot/","title":"Rot","parent":"Introduction to the Due Diligence Menu","content":"usage: rot [-l LIMIT] [--raw] [-h] [--export {csv,json,xlsx}] Plots ratings over time for the loaded ticker [Source: https://finnhub.io/]\noptional arguments: -l LIMIT, --limit LIMIT Limit of last months --raw Only output raw data -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx "},{"id":1081,"href":"/OpenBBTerminal/terminal/stocks/dd/sec/","title":"Sec","parent":"Introduction to the Due Diligence Menu","content":"usage: sec [-l LIMIT] [-h] [--export {csv,json,xlsx}] Prints SEC filings of the company. The following fields are expected: Filing Date, Document Date, Type, Category, Amended, and Link. [Source: Market Watch]\noptional arguments: -l LIMIT, --limit LIMIT number of latest SEC filings. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example:\n2022 Feb 16, 04:37 (✨) /stocks/dd/ $ sec -l 10 SEC Filings ┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Document Date ┃ Type ┃ Category ┃ Amended ┃ Link ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ 02/15/2022 │ N/A │ SC 13G/A │ Institutional Ownership │ * │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15572277 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 02/14/2022 │ N/A │ SC 13G/A │ Institutional Ownership │ * │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15565323 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 02/10/2022 │ N/A │ SC 13G/A │ Institutional Ownership │ * │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15548625 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 02/08/2022 │ N/A │ SC 13G │ Institutional Ownership │ │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15541156 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 02/07/2022 │ 12/31/2021 │ 10-K │ Annual Reports │ │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15534769 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 01/26/2022 │ 01/26/2022 │ 8-K │ Special Events │ │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15502788 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 01/03/2022 │ 01/02/2022 │ 8-K │ Special Events │ │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15453642 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 12/01/2021 │ 12/01/2021 │ 8-K │ Special Events │ │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15394282 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 10/25/2021 │ 09/30/2021 │ 10-Q │ Quarterly Reports │ │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15297229 │ ├────────────┼───────────────┼──────────┼─────────────────────────┼─────────┼───────────────────────────────────────────────────────────────────────────────────────┤ │ 10/20/2021 │ 10/20/2021 │ 8-K │ Special Events │ │ https://www.marketwatch.com/investing/stock/tsla/financials/secfilings?docid=15291361 │ └────────────┴───────────────┴──────────┴─────────────────────────┴─────────┴───────────────────────────────────────────────────────────────────────────────────────┘ "},{"id":1082,"href":"/OpenBBTerminal/terminal/stocks/dd/supplier/","title":"Supplier","parent":"Introduction to the Due Diligence Menu","content":"usage: supplier [--export {csv,json,xlsx}] [-h] List of suppliers from ticker provided. Source: https://CSImarket.com\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file -h, --help show this help message "},{"id":1083,"href":"/OpenBBTerminal/terminal/stocks/disc/active/","title":"Active","parent":"Introduction to Stocks Discovery","content":"usage: active [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print up to 25 top most actively traded intraday tickers. [Source: Yahoo Finance]\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 03:46 (✨) /stocks/disc/ $ active -l 25 Most Active Stocks ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Price (Intraday) ┃ Change ┃ % Change ┃ Volume ┃ Avg Vol (3 month) ┃ Market Cap ┃ PE Ratio (TTM) ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ SPCE │ Virgin Galactic Holdings, Inc. │ 10.74 │ 2.60 │ +31.94% │ 178.62M │ 14.077M │ 2.771B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ AMD │ Advanced Micro Devices, Inc. │ 121.47 │ 7.20 │ +6.30% │ 141.257M │ 73.478M │ 145.679B │ 47.26 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ NVDA │ NVIDIA Corporation │ 264.95 │ 22.28 │ +9.18% │ 70.175M │ 51.247M │ 660.255B │ 81.70 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ F │ Ford Motor Company │ 18.08 │ 0.62 │ +3.55% │ 64.555M │ 108.718M │ 72.397B │ 4.06 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ AAPL │ Apple Inc. │ 172.79 │ 3.91 │ +2.32% │ 64.286M │ 104.284M │ 2.82T │ 28.73 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ ZNGA │ Zynga Inc. │ 9.05 │ -0.01 │ -0.11% │ 55.461M │ 35.399M │ 10.231B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ RBLX │ Roblox Corporation │ 73.30 │ 4.98 │ +7.29% │ 49.158M │ 22.259M │ 42.429B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ SOFI │ SoFi Technologies, Inc. │ 12.58 │ 0.58 │ +4.83% │ 50.868M │ 50.382M │ 10.059B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ PLTR │ Palantir Technologies Inc. │ 14.17 │ 0.91 │ +6.86% │ 48.047M │ 42.817M │ 28.408B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ NIO │ NIO Inc. │ 25.79 │ 2.00 │ +8.41% │ 46.697M │ 53.892M │ 41.021B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ AAL │ American Airlines Group Inc. │ 18.84 │ 1.41 │ +8.09% │ 46.529M │ 40.319M │ 12.203B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ FB │ Meta Platforms, Inc. │ 221.00 │ 3.30 │ +1.52% │ 42.685M │ 29.422M │ 601.549B │ 16.05 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ BAC │ Bank of America Corporation │ 47.79 │ 0.37 │ +0.78% │ 41.879M │ 52.171M │ 386.04B │ 13.39 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ ITUB │ Itaú Unibanco Holding S.A. │ 5.14 │ 0.08 │ +1.58% │ 41.059M │ 45.848M │ 50.269B │ 9.92 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ AMC │ AMC Entertainment Holdings, Inc. │ 19.48 │ 1.73 │ +9.75% │ 39.222M │ 49.237M │ 10B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ ABEV │ Ambev S.A. │ 2.95 │ 0.05 │ +1.72% │ 38.479M │ 21.416M │ 46.429B │ 15.36 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ INTC │ Intel Corporation │ 48.44 │ 0.86 │ +1.81% │ 35.858M │ 36.63M │ 197.248B │ 9.97 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ VALE │ Vale S.A. │ 17.14 │ -0.35 │ -2.00% │ 33.93M │ 32.586M │ 80.669B │ 4.79 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ UBER │ Uber Technologies, Inc. │ 37.09 │ 2.50 │ +7.23% │ 36.234M │ 32.245M │ 71.959B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ FCEL │ FuelCell Energy, Inc. │ 5.49 │ 0.87 │ +18.83% │ 34.067M │ 23.922M │ 2.013B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ T │ AT\u0026amp;T Inc. │ 24.34 │ 0.29 │ +1.21% │ 31.096M │ 62.336M │ 173.812B │ 8.82 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ CCL │ Carnival Corporation \u0026amp; plc │ 22.78 │ 1.42 │ +6.65% │ 31.595M │ 43.634M │ 26.684B │ │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ NOK │ Nokia Corporation │ 5.60 │ 0.17 │ +3.13% │ 29.464M │ 24.911M │ 32.265B │ 17.07 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ PBR │ Petróleo Brasileiro S.A. - Petrobras │ 13.77 │ -0.21 │ -1.50% │ 27.492M │ 31.187M │ 89.809B │ 3.49 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼──────────┼───────────────────┼────────────┼────────────────┤ │ MSFT │ Microsoft Corporation │ 300.47 │ 5.47 │ +1.85% │ 27.379M │ 35.818M │ 2.253T │ 32.00 │ └────────┴──────────────────────────────────────┴──────────────────┴────────┴──────────┴──────────┴───────────────────┴────────────┴────────────────┘ "},{"id":1084,"href":"/OpenBBTerminal/terminal/stocks/disc/arkord/","title":"Arkord","parent":"Introduction to Stocks Discovery","content":"usage: arkord [-l LIMIT] [-s {date,volume,open,high,close,low,total,weight,shares} [{date,volume,open,high,close,low,total,weight,shares} ...]] [-a] [-b] [-c] [--fund {ARKK,ARKF,ARKW,ARKQ,ARKG,ARKX,}] [-h] [--export {csv,json,xlsx}] Orders by ARK Investment Management LLC - https://ark-funds.com/. [Source: https://cathiesark.com]\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display. (default: 10) -s {date,volume,open,high,close,low,total,weight,shares} [{date,volume,open,high,close,low,total,weight,shares} ...], --sortby {date,volume,open,high,close,low,total,weight,shares} [{date,volume,open,high,close,low,total,weight,shares} ...] Column to sort by (default: ) -a, --ascend Flag to sort in ascending order (default: False) -b, --buy_only Flag to look at buys only (default: False) -c, --sell_only Flag to look at sells only (default: False) --fund {ARKK,ARKF,ARKW,ARKQ,ARKG,ARKX,} Filter by fund (default: ) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 03:49 (✨) /stocks/disc/ $ arkord Orders by ARK Investment Management LLC ┏━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━┳━━━━━━┳━━━━━━━━┳━━━━━━━━┓ ┃ Date ┃ Ticker ┃ Direction ┃ Volume ┃ Open ┃ Close ┃ High ┃ Low ┃ Total ┃ Fund ┃ Weight ┃ Shares ┃ ┡━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━╇━━━━━━╇━━━━━━━━╇━━━━━━━━┩ │ 2022-02-15 │ TSP │ Buy │ 1960200 │ 17.52 │ 17.86 │ 17.95 │ 16.83 │ 623206.86 │ ARKK │ 0.0049 │ 34894 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ MKFG │ Buy │ 1057800 │ 4.55 │ 4.67 │ 4.73 │ 4.54 │ 94847.70 │ ARKQ │ 0.0058 │ 20310 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ TWOU │ Buy │ 6176700 │ 9.92 │ 9.77 │ 10.20 │ 9.70 │ 269749.71 │ ARKK │ 0.0023 │ 27610 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ CND │ Buy │ 926500 │ 10.29 │ 10.37 │ 10.59 │ 10.25 │ 2883415.93 │ ARKF │ 0.1825 │ 278000 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ TSP │ Buy │ 1960200 │ 17.52 │ 17.86 │ 17.95 │ 16.83 │ 675215.18 │ ARKQ │ 0.0403 │ 37806 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ AQB │ Sell │ 510200 │ 1.66 │ 1.65 │ 1.66 │ 1.62 │ 147107.40 │ ARKG │ 0.0038 │ 89156 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ CLLS │ Sell │ 182200 │ 5.69 │ 5.60 │ 5.74 │ 5.57 │ 82364.80 │ ARKG │ 0.0022 │ 14708 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ TWOU │ Buy │ 6176700 │ 9.92 │ 9.77 │ 10.20 │ 9.70 │ 57340.13 │ ARKW │ 0.0023 │ 5869 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ TWOU │ Buy │ 6176700 │ 9.92 │ 9.77 │ 10.20 │ 9.70 │ 34507.64 │ ARKQ │ 0.0022 │ 3532 │ ├────────────┼────────┼───────────┼─────────┼───────┼───────┼───────┼───────┼────────────┼──────┼────────┼────────┤ │ 2022-02-15 │ MKFG │ Buy │ 1057800 │ 4.55 │ 4.67 │ 4.73 │ 4.54 │ 22131.13 │ ARKX │ 0.0057 │ 4739 │ └────────────┴────────┴───────────┴─────────┴───────┴───────┴───────┴───────┴────────────┴──────┴────────┴────────┘ 2022 Feb 16, 03:50 (✨) /stocks/disc/ $ arkord -b --fund ARKK Orders by ARK Investment Management LLC ┏━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━┳━━━━━━━━┳━━━━━━━━━┓ ┃ Date ┃ Ticker ┃ Direction ┃ Volume ┃ Open ┃ Close ┃ High ┃ Low ┃ Total ┃ Fund ┃ Weight ┃ Shares ┃ ┡━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━╇━━━━━━━━╇━━━━━━━━━┩ │ 2022-02-15 │ TSP │ Buy │ 1960200 │ 17.52 │ 17.86 │ 17.95 │ 16.83 │ 623206.86 │ ARKK │ 0.0049 │ 34894 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-15 │ TWOU │ Buy │ 6176700 │ 9.92 │ 9.77 │ 10.20 │ 9.70 │ 269749.71 │ ARKK │ 0.0023 │ 27610 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-14 │ HOOD │ Buy │ 21768500 │ 13.10 │ 13.35 │ 13.87 │ 12.97 │ 1423710.79 │ ARKK │ 0.0114 │ 106645 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-14 │ TSP │ Buy │ 3316800 │ 16.37 │ 17.23 │ 18.00 │ 16.35 │ 5257717.13 │ ARKK │ 0.0431 │ 305149 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-11 │ TSP │ Buy │ 3500000 │ 16.25 │ 16.47 │ 17.37 │ 16.18 │ 7952045.07 │ ARKK │ 0.0638 │ 482820 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-11 │ TWST │ Buy │ 3457400 │ 59.19 │ 55.99 │ 62.13 │ 55.77 │ 17381704.09 │ ARKK │ 0.1348 │ 310443 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-11 │ HOOD │ Buy │ 17567800 │ 13.61 │ 13.32 │ 14.19 │ 13.07 │ 2032285.63 │ ARKK │ 0.0159 │ 152574 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-10 │ TSP │ Buy │ 5914200 │ 15.71 │ 16.37 │ 17.96 │ 15.00 │ 4849383.57 │ ARKK │ 0.0391 │ 296236 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-10 │ SQ │ Buy │ 26289600 │ 109.25 │ 108.94 │ 119.00 │ 107.30 │ 13000464.13 │ ARKK │ 0.1095 │ 119336 │ ├────────────┼────────┼───────────┼──────────┼────────┼────────┼────────┼────────┼─────────────┼──────┼────────┼─────────┤ │ 2022-02-10 │ DNA │ Buy │ 13850600 │ 5.64 │ 5.76 │ 6.30 │ 5.60 │ 12554836.34 │ ARKK │ 0.1017 │ 2179659 │ └────────────┴────────┴───────────┴──────────┴────────┴────────┴────────┴────────┴─────────────┴──────┴────────┴─────────┘ "},{"id":1085,"href":"/OpenBBTerminal/terminal/stocks/disc/asc/","title":"Asc","parent":"Introduction to Stocks Discovery","content":"usage: asc [-n NUM] [--export {csv,json,xlsx}] [-h] Print up to 25 small cap stocks with earnings growth rates better than 25%. [Source: Yahoo Finance]\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 03:51 (✨) /stocks/disc/ $ asc -l 25 High Growth Small Caps ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Price (Intraday) ┃ Change ┃ % Change ┃ Volume ┃ Avg Vol (3 month) ┃ Market Cap ┃ PE Ratio (TTM) ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ RIDE │ Lordstown Motors Corp. │ 3.41 │ 0.34 │ +11.07% │ 6.245M │ 7.056M │ 655.508M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ SKLZ │ Skillz Inc. │ 4.56 │ 0.59 │ +14.86% │ 13.14M │ 13.946M │ 1.861B │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ BGCP │ BGC Partners, Inc. │ 4.61 │ 0.33 │ +7.71% │ 5.293M │ 2.116M │ 1.7B │ 40.09 │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ TIGR │ UP Fintech Holding Limited │ 4.92 │ 0.52 │ +11.82% │ 2.734M │ 4.485M │ 798.885M │ 24.85 │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ EDIT │ Editas Medicine, Inc. │ 16.65 │ 0.86 │ +5.45% │ 1.386M │ 1.774M │ 1.139B │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ DM │ Desktop Metal, Inc. │ 4.36 │ 0.41 │ +10.38% │ 5.407M │ 5.977M │ 1.356B │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ APRN │ Blue Apron Holdings, Inc. │ 6.27 │ 0.35 │ +5.91% │ 1.29M │ 1.444M │ 198.724M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ CRK │ Comstock Resources, Inc. │ 7.30 │ -0.14 │ -1.88% │ 4.106M │ 3.487M │ 1.7B │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ GOEV │ Canoo Inc. │ 6.22 │ 0.27 │ +4.54% │ 1.97M │ 5.864M │ 1.485B │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ BEST │ BEST Inc. │ 1.12 │ 0.09 │ +8.74% │ 1.633M │ 1.706M │ 435.344M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ BLU │ BELLUS Health Inc. │ 7.06 │ 0.00 │ 0.00% │ 1.344M │ 3.323M │ 751.163M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ HYLN │ Hyliion Holdings Corp. │ 4.22 │ 0.23 │ +5.76% │ 1.988M │ 2.863M │ 731.381M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ VLDR │ Velodyne Lidar, Inc. │ 4.25 │ 0.31 │ +7.87% │ 5.567M │ 5.266M │ 841.793M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ HUYA │ HUYA Inc. │ 6.09 │ 0.44 │ +7.79% │ 1.952M │ 2.844M │ 1.445B │ 8.13 │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ PEI │ Pennsylvania Real Estate Investment Trust │ 0.90 │ 0.03 │ +3.38% │ 329076 │ 752054 │ 74.214M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ APPH │ AppHarvest, Inc. │ 3.12 │ 0.09 │ +2.97% │ 782043 │ 1.479M │ 314.945M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ FSM │ Fortuna Silver Mines Inc. │ 3.66 │ 0.00 │ 0.00% │ 3.637M │ 4.569M │ 1.068B │ 12.93 │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ BGFV │ Big 5 Sporting Goods Corporation │ 18.26 │ 0.94 │ +5.43% │ 603600 │ 1.137M │ 407.395M │ 3.97 │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ ZEV │ Lightning eMotors, Inc. │ 5.49 │ 0.40 │ +7.86% │ 579157 │ 1.412M │ 411.507M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ DNMR │ Danimer Scientific, Inc. │ 4.07 │ 0.41 │ +11.20% │ 4.452M │ 3.75M │ 408.4M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ ORPH │ Orphazyme A/S │ 2.13 │ 0.13 │ +6.50% │ 553864 │ 989978 │ 74.448M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ REAL │ The RealReal, Inc. │ 9.89 │ 0.70 │ +7.62% │ 2.514M │ 3.049M │ 913.715M │ │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ USA │ Liberty All-Star Equity Fund │ 7.52 │ 0.12 │ +1.62% │ 796155 │ 1.374M │ 1.683B │ 2.88 │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ DHY │ Credit Suisse High Yield Bond Fund, Inc. │ 2.23 │ -0.00 │ -0.20% │ 509800 │ 335704 │ 230.836M │ 6.39 │ ├────────┼───────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ CENX │ Century Aluminum Company │ 20.35 │ 1.26 │ +6.60% │ 1.887M │ 1.268M │ 1.834B │ │ └────────┴───────────────────────────────────────────┴──────────────────┴────────┴──────────┴────────┴───────────────────┴────────────┴────────────────┘ "},{"id":1086,"href":"/OpenBBTerminal/terminal/stocks/disc/cnews/","title":"Cnews","parent":"Introduction to Stocks Discovery","content":"usage: cnews [-t {top-news,on-the-move,market-pulse,notable-calls,buybacks,commodities,crypto,issuance,global,guidance,ipos,spacs,politics,m-a,consumer,energy,financials,healthcare,mlps,reits,technology}] [-l LIMIT] [-h] [--export {csv,json,xlsx}] Customized news based on the string arguments below. [Source: https://seekingalpha.com]\noptional arguments: -t {top-news,on-the-move,market-pulse,notable-calls,buybacks,commodities,crypto,issuance,global,guidance,ipos,spacs,politics,m-a,consumer,energy,financials,healthcare,mlps,reits,technology}, --type {top-news,on-the-move,market-pulse,notable-calls,buybacks,commodities,crypto,issuance,global,guidance,ipos,spacs,politics,m-a,consumer,energy,financials,healthcare,mlps,reits,technology} number of news to display (default: Top-News) -l LIMIT, --limit LIMIT limit of news to display (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 03:52 (✨) /stocks/disc/ $ cnews 2022-02-15 19:04:21 - 3800509 - ViacomCBS earnings call: A flood of content feeding transformation to Paramount https://seekingalpha.com/news/3800509-viacomcbs-earnings-call-a-flood-of-content-feeding-transformation-to-paramount 2022-02-15 16:26:46 - 3800415 - ViacomCBS rebranding company as Paramount Global https://seekingalpha.com/news/3800415-viacomcbs-rebranding-company-as-paramount-global 2022-02-15 16:25:33 - 3800411 - Airbnb stock soars after guidance comes in strong https://seekingalpha.com/news/3800411-airbnb-stock-soars-after-guidance-comes-in-strong 2022-02-15 16:25:05 - 3800410 - ViacomCBS rebranding company as Paramount Global https://seekingalpha.com/news/3800410-viacomcbs-rebranding-company-as-paramount-global 2022-02-15 16:14:45 - 3800380 - ViacomCBS dips as profits dip despite revenue beat, streaming gains https://seekingalpha.com/news/3800380-viacomcbs-dips-as-profits-dip-despite-revenue-beat-streaming-gains 2022-02-15 16:14:20 - 3800378 - Wynn Resorts trades lower after earnings, Encore Boston sale https://seekingalpha.com/news/3800378-wynn-resorts-trades-lower-after-earnings-encore-boston-sale 2022 Feb 16, 03:52 (✨) /stocks/disc/ $ cnews -t buybacks 2022-02-15 16:24:36 - 3800409 - DHI launches new $15M in stock repurchase program https://seekingalpha.com/news/3800409-dhi-launches-new-15m-in-stock-repurchase-program 2022-02-15 16:20:21 - 3800395 - Upstart stock soars after Q4 earnings beat, strong guidance, stock buyback https://seekingalpha.com/news/3800395-upstart-stock-soars-after-q4-earnings-beat-strong-guidance-stock-buyback 2022-02-15 16:17:07 - 3800387 - Upstart announces $400M share repurchase program https://seekingalpha.com/news/3800387-upstart-announces-400m-share-repurchase-program 2022-02-15 08:04:55 - 3800026 - GCM Grosvenor reports Q4 results, increases stock repurchase plan by $20M https://seekingalpha.com/news/3800026-gcm-grosvenor-reports-q4-results-increases-stock-repurchase-plan-by-20m 2022-02-15 08:04:08 - 3800020 - Middlefield Banc declares $0.17 dividend; expands stock buyback plan https://seekingalpha.com/news/3800020-middlefield-banc-corp-declares-0_17-dividend 2022-02-15 07:26:40 - 3799989 - LGI Homes expands stock repurchase program by $200M https://seekingalpha.com/news/3799989-lgi-homes-expands-stock-repurchase-program-by-200m "},{"id":1087,"href":"/OpenBBTerminal/terminal/stocks/disc/cramer/","title":"Cramer","parent":"Introduction to Stocks Discovery","content":"usage: cramer [-i] [-h] [--export {csv,json,xlsx}] Show daily Cramer recommendations\noptional arguments: -i, --inverse Show inverse recommendation (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) 2022 Mar 01, 21:41 (✨) /stocks/disc/ $ cramer --inverse Cramer Recs for 03/01 ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ Company ┃ Symbol ┃ Price ┃ LastPrice ┃ Change (%) ┃ Recommendation ┃ InverseCramer ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ Academy Sports and Outdoo │ ASO │ 30.65 │ 30.65 │ 0.00 │ Buy │ Sell │ ├────────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┼───────────────┤ │ Salesforce │ CRM │ 208.89 │ 208.77 │ -0.06 │ Buy │ Sell │ ├────────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┼───────────────┤ │ Coterra Energy │ CTRA │ 24.36 │ 24.37 │ 0.04 │ Buy │ Sell │ ├────────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┼───────────────┤ │ Domino's Pizza │ DPZ │ 432.21 │ 432.18 │ -0.01 │ Buy │ Sell │ ├────────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┼───────────────┤ │ Nio │ NIO │ 21.87 │ 21.88 │ 0.05 │ Sell │ Buy │ ├────────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┼───────────────┤ │ Origin Materials │ ORGN │ 5.51 │ 5.50 │ -0.18 │ Sell │ Buy │ ├────────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┼───────────────┤ │ Rent-A-Center │ RCII │ 27.08 │ 27.09 │ 0.04 │ Sell │ Buy │ ├────────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┼───────────────┤ │ B. Riley Financial │ RILY │ 59.07 │ 59.09 │ 0.03 │ Sell │ Buy │ ├────────────────────────────┼────────┼────────┼───────────┼────────────┼────────────────┼───────────────┤ │ Stem │ STEM │ 9.33 │ 9.32 │ -0.11 │ Sell │ Buy │ └────────────────────────────┴────────┴────────┴───────────┴────────────┴────────────────┴───────────────┘ "},{"id":1088,"href":"/OpenBBTerminal/terminal/stocks/disc/divcal/","title":"Divcal","parent":"Introduction to Stocks Discovery","content":"usage: divcal [-d DATE] [-s SORT [SORT ...]] [-a] [-h] [--export {csv,json,xlsx}] [-l LIMIT] Get dividend calendar for selected date\noptional arguments: -d DATE, --date DATE Date to get format for (default: 2022-02-16 09:53:53.533928) -s SORT [SORT ...], --sort SORT [SORT ...] Column to sort by (default: ['Dividend']) -a, --ascend Flag to sort in ascending order (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) Example:\n2022 Feb 16, 03:53 (✨) /stocks/disc/ $ divcal Dividend Calendar for 2022-02-16 ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ Name ┃ Symbol ┃ Ex-Dividend Date ┃ Payment Date ┃ Record Date ┃ Dividend ┃ Annual Dividend ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ Danaos Corporation │ DAC │ 02/16/2022 │ 02/28/2022 │ 02/17/2022 │ 0.75 │ 3.00 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ Microsoft Corporation │ MSFT │ 02/16/2022 │ 03/10/2022 │ 02/17/2022 │ 0.62 │ 2.48 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ Discover Financial Services │ DFS │ 02/16/2022 │ 03/03/2022 │ 02/17/2022 │ 0.50 │ 2.00 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ Apartment Income REIT Corp. │ AIRC │ 02/16/2022 │ 02/25/2022 │ 02/17/2022 │ 0.45 │ 1.80 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ Zions Bancorporation N.A. │ ZION │ 02/16/2022 │ 02/24/2022 │ 02/17/2022 │ 0.38 │ 1.52 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ Southside Bancshares, Inc. │ SBSI │ 02/16/2022 │ 03/03/2022 │ 02/17/2022 │ 0.34 │ 1.36 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ Fidelity D \u0026amp; D Bancorp, Inc. │ FDBC │ 02/16/2022 │ 03/10/2022 │ 02/17/2022 │ 0.33 │ 1.32 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ Xylem Inc. │ XYL │ 02/16/2022 │ 03/17/2022 │ 02/17/2022 │ 0.30 │ 1.20 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ D.R. Horton, Inc. │ DHI │ 02/16/2022 │ 02/25/2022 │ 02/17/2022 │ 0.23 │ 0.90 │ ├──────────────────────────────┼────────┼──────────────────┼──────────────┼─────────────┼──────────┼─────────────────┤ │ CenterPoint Energy, Inc. │ CNP │ 02/16/2022 │ 03/10/2022 │ 02/17/2022 │ 0.17 │ 0.68 │ └──────────────────────────────┴────────┴──────────────────┴──────────────┴─────────────┴──────────┴─────────────────┘ "},{"id":1089,"href":"/OpenBBTerminal/terminal/stocks/disc/fds/","title":"Fds","parent":"Introduction to Stocks Discovery","content":"usage: fds [-c --country COUNTRY [COUNTRY ...]] [-s --sector SECTOR [SECTOR ...]] [-i --industry INDUSTRY [INDUSTRY ...]] [-n --name NAME [NAME ...]] [-m --marketcap MARKETCAP {Small, Mid, Large}] [-d --description DESCRIPTION [DESCRIPTION ...] [-ie --include_exchanges] [-a --amount AMOUNT] [-o --options {countries,sectors,industries}] [-h] Display a selection of Equities based on country, sector, industry, name and/or description filtered by market cap. If no arguments are given, return the equities with the highest market cap.\nSource: https://github.com/JerBouma/FinanceDatabase\n -c \u0026ndash;country: Specify the Equities selection based on a country -s \u0026ndash;sector: Specify the Equities selection based on a sector -i \u0026ndash;industry: Specify the Equities selection based on an industry -n \u0026ndash;name: Specify the Equities selection based on the name -d \u0026ndash;description: Specify the Equities selection based on the description (not shown in table) -m \u0026ndash;marketcap: Specify the Equities selection based on Market Cap -ie \u0026ndash;include_exchanges: If used, you also obtain Equities from different exchanges (a lot of data) -a \u0026ndash;amount: Enter the number of Equities you wish to see in the Tabulate window -o \u0026ndash;options: Obtain the available options for country, sector and industry  "},{"id":1090,"href":"/OpenBBTerminal/terminal/stocks/disc/fipo/","title":"Fipo","parent":"Introduction to Stocks Discovery","content":"usage: fipo [-l LIMIT] [-h] [--export {csv,json,xlsx}] See future IPOs dates. [Source: https://finnhub.io]\noptional arguments: -l LIMIT, --limit LIMIT Limit of future days to look for IPOs. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 03:59 (✨) /stocks/disc/ $ fipo Future IPO Dates ┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ Future ┃ Exchange ┃ Name ┃ Number of Shares ┃ Price ┃ Status ┃ symbol ┃ Total Shares Value ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ 2022-02-16 │ NASDAQ Capital │ SMART FOR LIFE, INC. │ 1800000 │ 9.00-11.00 │ expected │ SMFL │ 22770000 │ └────────────┴────────────────┴──────────────────────┴──────────────────┴────────────┴──────────┴────────┴────────────────────┘ "},{"id":1091,"href":"/OpenBBTerminal/terminal/stocks/disc/gainers/","title":"Gainers","parent":"Introduction to Stocks Discovery","content":"usage: gainers [-l LIMIT] [-h] [--export {csv,json,xlsx}] Top Stock Gainers from Yfinance. Source: https://finance.yahoo.com/gainers/?offset=0\u0026count=100\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) ) Example:\n2022 Feb 16, 04:02 (✨) /stocks/disc/ $ gainers -l 25 Gainers ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Price (Intraday) ┃ Change ┃ % Change ┃ Volume ┃ Avg Vol (3 month) ┃ Market Cap ┃ PE Ratio (TTM) ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ TSEM │ Tower Semiconductor Ltd. │ 47.07 │ 13.94 │ +42.08% │ 19.666M │ 484573 │ 5.29B │ 39.59 │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ SPCE │ Virgin Galactic Holdings, Inc. │ 10.74 │ 2.60 │ +31.94% │ 178.62M │ 14.077M │ 2.771B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ JOBY │ Joby Aviation, Inc. │ 6.04 │ 1.28 │ +26.89% │ 17.994M │ 4.128M │ 3.648B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ BBAJF │ Banco del Bajío, S.A., Institución de Banca Múltiple │ 2.48 │ 0.46 │ +22.54% │ 40917 │ 2047 │ 3.564B │ 9.78 │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ IBRX │ ImmunityBio, Inc. │ 7.03 │ 1.28 │ +22.26% │ 5.772M │ 1.764M │ 2.797B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ SABR │ Sabre Corporation │ 10.97 │ 1.97 │ +21.89% │ 19.887M │ 7.994M │ 3.548B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ TAL │ TAL Education Group │ 3.78 │ 0.67 │ +21.54% │ 18.245M │ 12.731M │ 2.438B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ BHG │ Bright Health Group, Inc. │ 3.56 │ 0.60 │ +20.27% │ 9.546M │ 4.293M │ 2.238B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ FCEL │ FuelCell Energy, Inc. │ 5.49 │ 0.87 │ +18.83% │ 34.067M │ 23.922M │ 2.013B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ DELHY │ Delivery Hero SE │ 5.65 │ 0.85 │ +17.71% │ 186351 │ 87198 │ 14.181B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ YNDX │ Yandex N.V. │ 52.40 │ 7.22 │ +15.98% │ 8.061M │ 2.784M │ 18.797B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ YMM │ Full Truck Alliance Co. Ltd. │ 9.86 │ 1.35 │ +15.86% │ 4.733M │ 5.647M │ 10.706B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ SE │ Sea Limited │ 149.55 │ 20.38 │ +15.78% │ 15.176M │ 7.888M │ 83.41B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ OZON │ Ozon Holdings PLC │ 22.23 │ 3.00 │ +15.60% │ 2.356M │ 1.501M │ 4.809B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ AMKR │ Amkor Technology, Inc. │ 24.19 │ 3.04 │ +14.37% │ 3.905M │ 955511 │ 5.917B │ 10.66 │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CHPT │ ChargePoint Holdings, Inc. │ 15.26 │ 1.88 │ +14.05% │ 11.435M │ 10.295M │ 5.051B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ BE │ Bloom Energy Corporation │ 19.93 │ 2.42 │ +13.82% │ 8.296M │ 3.38M │ 3.517B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ WXXWY │ WuXi Biologics (Cayman) Inc. │ 16.06 │ 1.88 │ +13.26% │ 286881 │ 265244 │ 33.487B │ 79.50 │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ZG │ Zillow Group, Inc. │ 64.88 │ 7.53 │ +13.13% │ 2.798M │ 1.167M │ 16.413B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ JKS │ JinkoSolar Holding Co., Ltd. │ 44.28 │ 5.05 │ +12.87% │ 1.045M │ 1.217M │ 2.112B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ Z │ Zillow Group, Inc. │ 65.16 │ 7.09 │ +12.21% │ 19.876M │ 6.241M │ 16.279B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ TUYA │ Tuya Inc. │ 6.50 │ 0.70 │ +12.07% │ 994793 │ 2.268M │ 3.638B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ MARA │ Marathon Digital Holdings, Inc. │ 28.63 │ 3.08 │ +12.05% │ 15.776M │ 12.787M │ 2.938B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ LFST │ LifeStance Health Group, Inc. │ 9.24 │ 0.98 │ +11.86% │ 572335 │ 1.075M │ 3.457B │ │ ├────────┼──────────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ IMAB │ I-Mab │ 27.82 │ 2.93 │ +11.77% │ 1.13M │ 655100 │ 2.224B │ │ └────────┴──────────────────────────────────────────────────────┴──────────────────┴────────┴──────────┴─────────┴───────────────────┴────────────┴────────────────┘ "},{"id":1092,"href":"/OpenBBTerminal/terminal/stocks/disc/gtech/","title":"Gtech","parent":"Introduction to Stocks Discovery","content":"usage: gtech [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print up to 25 top tech stocks with revenue and earnings growth in excess of 25%. [Source: https://finance.yahoo.com/screener/predefined/growth_technology_stocks/]\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:03 (✨) /stocks/disc/ $ gtech -l 25 Growth Tech Stocks ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Price (Intraday) ┃ Change ┃ % Change ┃ Volume ┃ Avg Vol (3 month) ┃ Market Cap ┃ PE Ratio (TTM) ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ AFRM │ Affirm Holdings, Inc. │ 44.80 │ 1.10 │ +2.52% │ 27.207M │ 13.585M │ 12.744B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ NVDA │ NVIDIA Corporation │ 264.95 │ 22.28 │ +9.18% │ 70.175M │ 51.247M │ 660.255B │ 81.70 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ MU │ Micron Technology, Inc. │ 96.00 │ 6.14 │ +6.83% │ 27.084M │ 21.734M │ 107.499B │ 14.86 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ UMC │ United Microelectronics Corporation │ 9.90 │ 0.41 │ +4.32% │ 14.052M │ 8.722M │ 24.52B │ 12.07 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ZM │ Zoom Video Communications, Inc. │ 146.90 │ 4.81 │ +3.39% │ 2.974M │ 4.748M │ 43.775B │ 39.04 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ QCOM │ QUALCOMM Incorporated │ 173.00 │ 7.87 │ +4.77% │ 11.103M │ 11.057M │ 194.971B │ 19.83 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ON │ ON Semiconductor Corporation │ 62.24 │ 3.58 │ +6.10% │ 6.39M │ 7.297M │ 26.919B │ 27.42 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ AMAT │ Applied Materials, Inc. │ 139.84 │ 7.98 │ +6.05% │ 9.069M │ 8.525M │ 124.177B │ 21.85 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ SQ │ Block, Inc. │ 115.21 │ 3.57 │ +3.20% │ 16.322M │ 13.814M │ 66.207B │ 115.56 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ DM │ Desktop Metal, Inc. │ 4.36 │ 0.41 │ +10.38% │ 5.407M │ 5.977M │ 1.356B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ NET │ Cloudflare, Inc. │ 115.35 │ 9.79 │ +9.27% │ 5.154M │ 5.423M │ 37.329B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ LSPD │ Lightspeed Commerce Inc. │ 31.73 │ 3.00 │ +10.44% │ 1.443M │ 1.506M │ 4.712B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CRWD │ CrowdStrike Holdings, Inc. │ 189.30 │ 8.70 │ +4.82% │ 2.471M │ 4.331M │ 43.414B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ COIN │ Coinbase Global, Inc. │ 208.95 │ 13.70 │ +7.02% │ 3.714M │ 4.699M │ 54.724B │ 15.72 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ BILL │ Bill.com Holdings, Inc. │ 253.72 │ 13.72 │ +5.72% │ 1.855M │ 2.43M │ 26.281B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ RNG │ RingCentral, Inc. │ 173.12 │ 4.96 │ +2.95% │ 706714 │ 1.24M │ 16.177B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ HIMX │ Himax Technologies, Inc. │ 12.10 │ 1.10 │ +10.00% │ 3.812M │ 4.038M │ 2.106B │ 6.42 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ XLNX │ Xilinx, Inc. │ 194.92 │ 0.00 │ 0.00% │ 0 │ 4.072M │ 48.415B │ 52.38 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ AI │ C3.ai, Inc. │ 25.71 │ 1.11 │ +4.51% │ 3.158M │ 4.016M │ 2.701B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ZS │ Zscaler, Inc. │ 285.82 │ 11.39 │ +4.15% │ 2.136M │ 2.648M │ 40.038B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ DQ │ Daqo New Energy Corp. │ 41.34 │ 3.14 │ +8.22% │ 638902 │ 1.471M │ 3.039B │ 4.60 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ STEM │ Stem, Inc. │ 11.39 │ 0.86 │ +8.17% │ 2.62M │ 3.865M │ 1.744B │ │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CIEN │ Ciena Corporation │ 68.53 │ 4.71 │ +7.38% │ 4.286M │ 1.676M │ 10.614B │ 21.48 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ YMM │ Full Truck Alliance Co. Ltd. │ 9.86 │ 1.35 │ +15.86% │ 4.733M │ 5.647M │ 10.706B │ │ └────────┴─────────────────────────────────────┴──────────────────┴────────┴──────────┴─────────┴───────────────────┴────────────┴────────────────┘ "},{"id":1093,"href":"/OpenBBTerminal/terminal/stocks/disc/heatmap/","title":"Heatmap","parent":"Introduction to Stocks Discovery","content":"2022 Aug 29, 13:38 (🦋) /stocks/disc/ $ heatmap -h usage: heatmap [-t {day,week,month,3month,6month,year,ytd}] [-h] [--export EXPORT] Get the SP 500 heatmap from finviz and display in interactive treemap.\noptions: -t {day,week,month,3month,6month,year,ytd}, --timeframe {day,week,month,3month,6month,year,ytd} Timeframe to get heatmap data for (default: day) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) For more information and examples, use 'about heatmap' to access the related guide. "},{"id":1094,"href":"/OpenBBTerminal/terminal/stocks/disc/hotpenny/","title":"Hotpenny","parent":"Introduction to Stocks Discovery","content":"usage: hotpenny [-l LIMIT] [-h] [--export {csv,json,xlsx}] [--source {yf,psf}] This site provides a list of todays most active and hottest penny stocks. While not for everyone, penny stocks can be exciting and rewarding investments in many ways. With penny stocks, you can get more bang for the buck. You can turn a few hundred dollars into thousands, just by getting in on the right penny stock at the right time. Penny stocks are increasing in popularity. More and more investors of all age groups and skill levels are getting involved, and the dollar amounts they are putting into these speculative investments are representing a bigger portion of their portfolios. [Source: www.pennystockflow.com]\noptional arguments: -l LIMIT, --limit LIMIT limit of stocks to display (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) --source {yf,psf} Data source to select from (default: yf) Example:\n2022 Feb 16, 04:04 (✨) /stocks/disc/ $ hotpenny Top Penny Stocks ┏━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Price ┃ Change ┃ $ Volume ┃ Volume ┃ # Trades ┃ ┡━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━┩ │ TCEHY │ $61.01 │ 1.55% │ $303,380,785 │ 4,994,963 │ 17,401 │ ├───────┼────────┼────────┼──────────────┼───────────┼──────────┤ │ GBTC │ $31.28 │ 6.25% │ $110,596,120 │ 3,545,597 │ 14,364 │ ├───────┼────────┼────────┼──────────────┼───────────┼──────────┤ │ BHPLF │ $33.74 │ -1.06% │ $65,818,744 │ 1,962,313 │ 23 │ ├───────┼────────┼────────┼──────────────┼───────────┼──────────┤ │ RHHBY │ $46.92 │ 1.49% │ $56,390,274 │ 1,201,629 │ 2,463 │ └───────┴────────┴────────┴──────────────┴───────────┴──────────┘ "},{"id":1095,"href":"/OpenBBTerminal/terminal/stocks/disc/losers/","title":"Losers","parent":"Introduction to Stocks Discovery","content":"usage: losers [-l LIMIT] [-h] [--export {csv,json,xlsx}] Calls a list of the biggest losers for the day in US markets [Source: https://finance.yahoo.com/losers/]\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:07 (✨) /stocks/disc/ $ losers -l 25 Display Losers ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Price (Intraday) ┃ Change ┃ % Change ┃ Volume ┃ Avg Vol (3 month) ┃ Market Cap ┃ PE Ratio (TTM) ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ MEDP │ Medpace Holdings, Inc. │ 138.87 │ -35.36 │ -20.30% │ 2.262M │ 240165 │ 4.991B │ 28.75 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CAR │ Avis Budget Group, Inc. │ 171.25 │ -23.46 │ -12.05% │ 3.66M │ 984295 │ 9.667B │ 14.50 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ PRI │ Primerica, Inc. │ 137.13 │ -14.35 │ -9.47% │ 537376 │ 151716 │ 5.415B │ 12.44 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ RCRUY │ Recruit Holdings Co., Ltd. │ 8.94 │ -0.84 │ -8.63% │ 848219 │ 409847 │ 74.455B │ 36.27 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ HMY │ Harmony Gold Mining Company Limited │ 3.61 │ -0.34 │ -8.61% │ 13.117M │ 5.722M │ 2.204B │ 6.67 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ FIS │ Fidelity National Information Services, Inc. │ 102.85 │ -8.65 │ -7.76% │ 9.579M │ 4.143M │ 62.629B │ 285.69 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ SYNH │ Syneos Health, Inc. │ 82.17 │ -6.80 │ -7.64% │ 1.031M │ 504631 │ 8.52B │ 34.51 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CYTK │ Cytokinetics, Incorporated │ 37.58 │ -2.76 │ -6.84% │ 3.067M │ 1.064M │ 3.172B │ │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ KUBTY │ Kubota Corporation │ 91.32 │ -6.37 │ -6.52% │ 42171 │ 20532 │ 21.922B │ 14.27 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ IPGP │ IPG Photonics Corporation │ 137.55 │ -9.13 │ -6.22% │ 1.086M │ 274590 │ 7.333B │ 28.25 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ DHR-PA │ Danaher Corporation │ 1828.87 │ 14.59 │ +0.80% │ 16720 │ 4094 │ 168.217B │ 212.24 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ STZ │ Constellation Brands, Inc. │ 219.55 │ -14.30 │ -6.12% │ 2.589M │ 1.063M │ 41.692B │ │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ PTR │ PetroChina Company Limited │ 50.80 │ -3.28 │ -6.07% │ 437983 │ 176783 │ 149.884B │ 7.06 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ MSADY │ MS\u0026amp;AD Insurance Group Holdings, Inc. │ 17.22 │ -1.08 │ -5.90% │ 27461 │ 49672 │ 18.923B │ 12.92 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ OMCL │ Omnicell, Inc. │ 139.55 │ -8.05 │ -5.45% │ 3.242M │ 335131 │ 6.132B │ 80.57 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CGSHY │ Country Garden Services Holdings Company Limited │ 6.25 │ -0.36 │ -5.45% │ 26709 │ 33427 │ 21.904B │ 33.60 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CLR │ Continental Resources, Inc. │ 54.27 │ -3.09 │ -5.39% │ 9.754M │ 1.696M │ 19.84B │ 23.91 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ICLR │ ICON Public Limited Company │ 242.36 │ -13.48 │ -5.27% │ 1.359M │ 508632 │ 19.728B │ 82.46 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ RYDAF │ Shell plc │ 26.01 │ -1.44 │ -5.25% │ 24010 │ 66619 │ 200.025B │ 10.12 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ SBSW │ Sibanye Stillwater Limited │ 15.57 │ -0.81 │ -4.95% │ 5.813M │ 3.127M │ 10.954B │ 3.83 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ PHJMF │ PT Hanjaya Mandala Sampoerna Tbk │ 0.07 │ -0.00 │ -4.83% │ 53513 │ 424706 │ 7.561B │ │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CMTG │ Claros Mortgage Trust, Inc. │ 16.98 │ -0.84 │ -4.71% │ 48428 │ 62252 │ 2.266B │ 11.55 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ IQV │ IQVIA Holdings Inc. │ 228.64 │ -11.26 │ -4.69% │ 3.086M │ 929314 │ 43.679B │ 58.19 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CRL │ Charles River Laboratories International, Inc. │ 312.63 │ -14.81 │ -4.52% │ 1.245M │ 381670 │ 15.777B │ 40.49 │ ├────────┼──────────────────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ BTU │ Peabody Energy Corporation │ 17.21 │ -0.81 │ -4.50% │ 7.956M │ 5.386M │ 2.294B │ 5.35 │ └────────┴──────────────────────────────────────────────────┴──────────────────┴────────┴──────────┴─────────┴───────────────────┴────────────┴────────────────┘ "},{"id":1096,"href":"/OpenBBTerminal/terminal/stocks/disc/lowfloat/","title":"Lowfloat","parent":"Introduction to Stocks Discovery","content":"usage: lowfloat [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print top stocks with lowest float. LowFloat.com provides a convenient sorted database of stocks which have a float of under 10 million shares. Additional key data such as the number of outstanding shares, short interest, and company industry is displayed. Data is presented for the Nasdaq Stock Market, the New York Stock Exchange, the American Stock Exchange, and the Over the Counter Bulletin Board. [Source: www.lowfloat.com]\noptional arguments: -l LIMIT, --limit LIMIT limit of stocks to display (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:09 (✨) /stocks/disc/ $ lowfloat -l 10 Top Float Stocks ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Ticker ┃ Company ┃ Exchange ┃ Float ┃ Outstd ┃ ShortInt ┃ Industry ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ DIT │ Amcon Distributing Co │ AMEX │ 160K │ 580K │ 1.09% │ Retail (Grocery) │ ├────────┼───────────────────────────────────────┼──────────┼───────┼────────┼──────────┼────────────────────────────────────────────┤ │ SEB │ Seaboard Corp │ AMEX │ 240K │ 1.16M │ 0.78% │ Fish/Livestock │ ├────────┼───────────────────────────────────────┼──────────┼───────┼────────┼──────────┼────────────────────────────────────────────┤ │ MAYS │ JW Mays Inc │ Nasdaq │ 390K │ 2.02M │ 0.85% │ Real Estate Operations │ ├────────┼───────────────────────────────────────┼──────────┼───────┼────────┼──────────┼────────────────────────────────────────────┤ │ HMG │ HMG Courtland Properties │ AMEX │ 400K │ 1.02M │ 0.28% │ Real Estate Operations │ ├────────┼───────────────────────────────────────┼──────────┼───────┼────────┼──────────┼────────────────────────────────────────────┤ │ VBFC │ Village Bank and Trust Financial Corp │ Nasdaq │ 530K │ 1.47M │ 0.10% │ Regional Banks │ ├────────┼───────────────────────────────────────┼──────────┼───────┼────────┼──────────┼────────────────────────────────────────────┤ │ BDL │ Flanigan's Enterprises Inc │ AMEX │ 550K │ 1.86M │ 0.05% │ Restaurants │ ├────────┼───────────────────────────────────────┼──────────┼───────┼────────┼──────────┼────────────────────────────────────────────┤ │ RAND │ Rand Capital Corp │ Nasdaq │ 620K │ 2.58M │ 0.01% │ Misc. Financial Services │ ├────────┼───────────────────────────────────────┼──────────┼───────┼────────┼──────────┼────────────────────────────────────────────┤ │ NCSM │ NCS Multistage Holdings Inc │ Nasdaq │ 630K │ 2.38M │ 0.69% │ Oil \u0026amp; Gas - Related Services and Equipment │ ├────────┼───────────────────────────────────────┼──────────┼───────┼────────┼──────────┼────────────────────────────────────────────┤ │ INTG │ Intergroup Corp │ Nasdaq │ 650K │ 2.20M │ 0.62% │ Real Estate Operations │ └────────┴───────────────────────────────────────┴──────────┴───────┴────────┴──────────┴────────────────────────────────────────────┘ "},{"id":1097,"href":"/OpenBBTerminal/terminal/stocks/disc/pipo/","title":"Pipo","parent":"Introduction to Stocks Discovery","content":"usage: pipo [-l LIMIT] [-h] [--export {csv,json,xlsx}] Browse IPOs from recent history, use the \u0026lsquo;-l\u0026rsquo; argument in the command string to include the number of previous days [Source: https://finnhub.io]\noptional arguments: -l LIMIT, --limit LIMIT Limit of past days to look for IPOs. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:10 (✨) /stocks/disc/ $ pipo IPO Dates ┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ Past ┃ Exchange ┃ Name ┃ Number of Shares ┃ Price ┃ Status ┃ symbol ┃ Total Shares Value ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ 2022-02-16 │ NASDAQ Capital │ SMART FOR LIFE, INC. │ 1800000 │ 9.00-11.00 │ expected │ SMFL │ 22770000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-15 │ NASDAQ Capital │ ASPAC I Acquisition Corp. │ 6000000 │ 10.00 │ expected │ ASCAU │ 69000000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-15 │ NASDAQ Global │ Genesis Unicorn Capital Corp. │ 7500000 │ 10.00 │ expected │ GENQU │ 75000000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-11 │ NASDAQ Global │ Relativity Acquisition Corp │ 12500000 │ 10.00 │ priced │ RACYU │ 125000000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-11 │ NASDAQ Global │ Signal Hill Acquisition Corp. │ 10000000 │ 10.00 │ priced │ SGHLU │ 100000000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-11 │ NYSE │ MODIV INC. │ 40000 │ 25.00 │ priced │ MDV │ 1000000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-11 │ NASDAQ Capital │ Direct Digital Holdings, Inc. │ 2800000 │ 5.50 │ priced │ DRCT │ 15400000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-11 │ NASDAQ Capital │ TC BioPharm (Holdings) plc │ 4117648 │ 4.25 │ priced │ TCBP │ 17500004 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-11 │ NASDAQ Global │ Jaguar Global Growth Corp I │ 20000000 │ 10.00 │ priced │ JGGCU │ 200000000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-11 │ NYSE MKT │ HNR Acquisition Corp. │ 7500000 │ 10.00 │ priced │ HNRAU │ 75000000 │ ├────────────┼────────────────┼───────────────────────────────┼──────────────────┼────────────┼──────────┼────────┼────────────────────┤ │ 2022-02-11 │ NASDAQ Capital │ JUPITER NEUROSCIENCES, INC. │ 2200000 │ 6.00-8.00 │ expected │ JUNS │ 20240000 │ └────────────┴────────────────┴───────────────────────────────┴──────────────────┴────────────┴──────────┴────────┴────────────────────┘ "},{"id":1098,"href":"/OpenBBTerminal/terminal/stocks/disc/rtat/","title":"Rtat","parent":"Introduction to Stocks Discovery","content":"usage: rtat [-l LIMIT] [-h] [--export {csv,json,xlsx}] Tracking over $30B USD/day of individual investors trades, RTAT gives a daily view into retail activity and sentiment for over 9,500 US traded stocks, ADRs, and ETPs [Source: https://data.nasdaq.com/retailtradingactivitytracker]\noptional arguments: -l LIMIT, --limit LIMIT limit of days to display (default: 3) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:12 (✨) /stocks/disc/ $ rtat 2022-02-11 Top Retail: ┏━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ Ticker ┃ Activity ┃ Sentiment ┃ ┡━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━┩ │ TSLA │ 0.04 │ 1 │ ├────────┼──────────┼───────────┤ │ TQQQ │ 0.02 │ 6 │ ├────────┼──────────┼───────────┤ │ SQQQ │ 0.02 │ 6 │ ├────────┼──────────┼───────────┤ │ SPY │ 0.03 │ 2 │ ├────────┼──────────┼───────────┤ │ QQQ │ 0.03 │ 0 │ ├────────┼──────────┼───────────┤ │ NVDA │ 0.04 │ 3 │ ├────────┼──────────┼───────────┤ │ MSFT │ 0.02 │ 2 │ ├────────┼──────────┼───────────┤ │ FB │ 0.02 │ 2 │ ├────────┼──────────┼───────────┤ │ AMD │ 0.06 │ 1 │ ├────────┼──────────┼───────────┤ │ AAPL │ 0.03 │ -1 │ └────────┴──────────┴───────────┘ 2022-02-14 Top Retail: ┏━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ Ticker ┃ Activity ┃ Sentiment ┃ ┡━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━┩ │ TSLA │ 0.04 │ 0 │ ├────────┼──────────┼───────────┤ │ TQQQ │ 0.02 │ 2 │ ├────────┼──────────┼───────────┤ │ SQQQ │ 0.02 │ 9 │ ├────────┼──────────┼───────────┤ │ SPY │ 0.03 │ 2 │ ├────────┼──────────┼───────────┤ │ QQQ │ 0.03 │ -1 │ ├────────┼──────────┼───────────┤ │ NVDA │ 0.03 │ 2 │ ├────────┼──────────┼───────────┤ │ MSFT │ 0.02 │ 1 │ ├────────┼──────────┼───────────┤ │ FB │ 0.02 │ 1 │ ├────────┼──────────┼───────────┤ │ AMD │ 0.08 │ -1 │ ├────────┼──────────┼───────────┤ │ AAPL │ 0.03 │ -3 │ └────────┴──────────┴───────────┘ 2022-02-15 Top Retail: ┏━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ Ticker ┃ Activity ┃ Sentiment ┃ ┡━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━┩ │ TSLA │ 0.04 │ 0 │ ├────────┼──────────┼───────────┤ │ TQQQ │ 0.01 │ 5 │ ├────────┼──────────┼───────────┤ │ SPY │ 0.03 │ 2 │ ├────────┼──────────┼───────────┤ │ SPCE │ 0.01 │ 8 │ ├────────┼──────────┼───────────┤ │ QQQ │ 0.03 │ 1 │ ├────────┼──────────┼───────────┤ │ NVDA │ 0.07 │ 2 │ ├────────┼──────────┼───────────┤ │ MSFT │ 0.02 │ 1 │ ├────────┼──────────┼───────────┤ │ FB │ 0.03 │ 1 │ ├────────┼──────────┼───────────┤ │ AMD │ 0.08 │ -2 │ ├────────┼──────────┼───────────┤ │ AAPL │ 0.03 │ -2 │ └────────┴──────────┴───────────┘ "},{"id":1099,"href":"/OpenBBTerminal/terminal/stocks/disc/trending/","title":"Trending","parent":"Introduction to Stocks Discovery","content":"usage: trending [-i N_ID] [-l LIMIT] [-d S_DATE] [-h] [--export {csv,json,xlsx}] Trending news articles from Seeking Alpha.\noptional arguments: -i N_ID, --id N_ID article ID (default: -1) -l LIMIT, --limit LIMIT limit of articles being printed (default: 5) -d S_DATE, --date S_DATE starting date of articles (default: 2022-02-16) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:13 (✨) /stocks/disc/ $ trending -i 10 2010-03-21 08:33:21 Deutsche Bank's Marc Greenberg can't justify the BUD deal. But he says Bud Light Lime is the... https://seekingalpha.com/news/10 Deutsche Bank's Marc Greenberg can't justify the BUD deal. But he says Bud Light Lime is the beer to beat. 2022 Feb 16, 04:13 (✨) /stocks/disc/ $ trending -l 10 2022-02-16 02:00:18 - 3800145 - Shopify Q4 Earnings Preview: What to Expect https://seekingalpha.com/news/3800145-shopify-q4-earnings-preview-what-to-expect 2022-02-15 16:20:21 - 3800395 - Upstart stock soars after Q4 earnings beat, strong guidance, stock buyback https://seekingalpha.com/news/3800395-upstart-stock-soars-after-q4-earnings-beat-strong-guidance-stock-buyback 2022-02-15 11:31:14 - 3800203 - Greenview Capital takes stakes in Alibaba, Amazon https://seekingalpha.com/news/3800203-greenview-capital-takes-stakes-in-alibaba-amazon 2022-02-15 16:38:11 - 3800438 - Roblox shares plunge as metaverse company misses Wall Street's expectations https://seekingalpha.com/news/3800438-roblox-shares-plunge-as-metaverse-company-misses-wall-streets-expectations 2022-02-15 12:39:57 - 3800257 - Sunshine Biopharma announces pricing of $8M public offering, uplisting https://seekingalpha.com/news/3800257-sunshine-biopharma-announces-pricing-of-8m-public-offering-uplisting 2022-02-15 14:06:05 - 3800296 - Cathie Wood’s ARKK a bubble? Let’s look at history https://seekingalpha.com/news/3800296-is-cathie-woods-arkk-a-bubble-lets-look-at-history 2022-02-16 01:38:34 - 3800525 - Flex LNG Non-GAAP EPS of $1.18, revenue of $114.6M beats by $4.38M https://seekingalpha.com/news/3800525-flex-lng-non-gaap-eps-of-118-revenue-of-1146m-beats-by-438m 2022-02-15 19:04:21 - 3800509 - ViacomCBS earnings call: A flood of content feeding transformation to Paramount https://seekingalpha.com/news/3800509-viacomcbs-earnings-call-a-flood-of-content-feeding-transformation-to-paramount 2022-02-16 02:09:27 - 3800529 - Golden Ocean raises dividend by ~6% to $0.90/share https://seekingalpha.com/news/3800529-golden-ocean-raises-dividend-by-6-to-090share 2022-02-15 17:35:20 - 3800169 - Matterport Q4 2021 Earnings Preview https://seekingalpha.com/news/3800169-matterport-q4-2021-earnings-preview "},{"id":1100,"href":"/OpenBBTerminal/terminal/stocks/disc/ugs/","title":"Ugs","parent":"Introduction to Stocks Discovery","content":"usage: ugs [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print up to 25 undervalued stocks with revenue and earnings growth in excess of 25%. [Source: Yahoo Finance]\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:14 (✨) /stocks/disc/ $ ugs -l 25 Undervalued Growth Stocks ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Price (Intraday) ┃ Change ┃ % Change ┃ Volume ┃ Avg Vol (3 month) ┃ Market Cap ┃ PE Ratio (TTM) ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ BAC │ Bank of America Corporation │ 47.79 │ 0.37 │ +0.78% │ 41.879M │ 52.171M │ 386.04B │ 13.39 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ PFE │ Pfizer Inc. │ 49.79 │ -0.01 │ -0.02% │ 28.167M │ 42.507M │ 279.465B │ 12.92 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ITUB │ Itaú Unibanco Holding S.A. │ 5.14 │ 0.08 │ +1.58% │ 41.059M │ 45.848M │ 50.269B │ 9.92 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ FCX │ Freeport-McMoRan Inc. │ 43.67 │ 1.22 │ +2.87% │ 15.482M │ 18.44M │ 64.128B │ 15.06 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ VALE │ Vale S.A. │ 17.14 │ -0.35 │ -2.00% │ 33.93M │ 32.586M │ 80.669B │ 4.79 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ WFC │ Wells Fargo \u0026amp; Company │ 58.38 │ 0.53 │ +0.92% │ 17.227M │ 30.109M │ 226.853B │ 11.79 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ GM │ General Motors Company │ 49.67 │ 1.27 │ +2.62% │ 14.813M │ 20.688M │ 72.172B │ 7.41 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ FB │ Meta Platforms, Inc. │ 221.00 │ 3.30 │ +1.52% │ 42.685M │ 29.422M │ 601.549B │ 16.05 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ATUS │ Altice USA, Inc. │ 14.65 │ 0.71 │ +5.09% │ 4.904M │ 6.156M │ 6.661B │ 6.65 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ MU │ Micron Technology, Inc. │ 96.00 │ 6.14 │ +6.83% │ 27.084M │ 21.734M │ 107.499B │ 14.86 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ HBAN │ Huntington Bancshares Incorporated │ 16.21 │ 0.51 │ +3.25% │ 5.809M │ 12.004M │ 23.306B │ 18.01 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ UMC │ United Microelectronics Corporation │ 9.90 │ 0.41 │ +4.32% │ 14.052M │ 8.722M │ 24.52B │ 12.07 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ VIAC │ ViacomCBS Inc. │ 35.99 │ 0.96 │ +2.74% │ 13.027M │ 14.338M │ 23.436B │ 7.03 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CMCSA │ Comcast Corporation │ 48.05 │ 0.65 │ +1.37% │ 21.088M │ 23.444M │ 217.822B │ 15.81 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ LYG │ Lloyds Banking Group plc │ 2.82 │ 0.06 │ +2.17% │ 10.023M │ 9.419M │ 53.069B │ 8493.98 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ GFI │ Gold Fields Limited │ 11.79 │ -0.49 │ -3.99% │ 10.13M │ 7.067M │ 10.466B │ 11.19 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ HPQ │ HP Inc. │ 37.37 │ 0.86 │ +2.36% │ 7.367M │ 10.599M │ 40.461B │ 7.01 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ RF │ Regions Financial Corporation │ 25.29 │ 0.77 │ +3.14% │ 7.727M │ 9.327M │ 23.823B │ 10.16 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ QCOM │ QUALCOMM Incorporated │ 173.00 │ 7.87 │ +4.77% │ 11.103M │ 11.057M │ 194.971B │ 19.83 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ DOW │ Dow Inc. │ 61.86 │ 1.03 │ +1.69% │ 4.025M │ 5.732M │ 45.513B │ 7.38 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ KEY │ KeyCorp │ 26.53 │ 0.62 │ +2.39% │ 6.08M │ 8.248M │ 24.642B │ 10.07 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ FITB │ Fifth Third Bancorp │ 49.38 │ 1.15 │ +2.38% │ 3.765M │ 5.432M │ 33.716B │ 13.24 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ RKT │ Rocket Companies, Inc. │ 12.67 │ 0.39 │ +3.18% │ 3.99M │ 4.741M │ 25.179B │ 4.18 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ING │ ING Groep N.V. │ 14.77 │ 0.30 │ +2.07% │ 4.587M │ 4.233M │ 55.768B │ 10.33 │ ├────────┼─────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ SYF │ Synchrony Financial │ 44.79 │ 0.76 │ +1.73% │ 5.374M │ 5.908M │ 23.348B │ 6.10 │ └────────┴─────────────────────────────────────┴──────────────────┴────────┴──────────┴─────────┴───────────────────┴────────────┴────────────────┘ "},{"id":1101,"href":"/OpenBBTerminal/terminal/stocks/disc/ulc/","title":"Ulc","parent":"Introduction to Stocks Discovery","content":"usage: ulc [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print up to 25 potentially undervalued large cap stocks [Source: https://finance.yahoo.com/screener/predefined/undervalued_large_caps/]\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display. (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:15 (✨) /stocks/disc/ $ ulc -l 25 Undervalued Large Cap Stocks ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Price (Intraday) ┃ Change ┃ % Change ┃ Volume ┃ Avg Vol (3 month) ┃ Market Cap ┃ PE Ratio (TTM) ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ F │ Ford Motor Company │ 18.08 │ 0.62 │ +3.55% │ 64.555M │ 108.718M │ 72.397B │ 4.06 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ NOK │ Nokia Corporation │ 5.60 │ 0.17 │ +3.13% │ 29.464M │ 24.911M │ 32.265B │ 17.07 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ITUB │ Itaú Unibanco Holding S.A. │ 5.14 │ 0.08 │ +1.58% │ 41.059M │ 45.848M │ 50.269B │ 9.92 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ FCX │ Freeport-McMoRan Inc. │ 43.67 │ 1.22 │ +2.87% │ 15.482M │ 18.44M │ 64.128B │ 15.06 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ PBR │ Petróleo Brasileiro S.A. - Petrobras │ 13.77 │ -0.21 │ -1.50% │ 27.492M │ 31.187M │ 89.809B │ 3.49 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ VALE │ Vale S.A. │ 17.14 │ -0.35 │ -2.00% │ 33.93M │ 32.586M │ 80.669B │ 4.79 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ GOLD │ Barrick Gold Corporation │ 20.68 │ -0.41 │ -1.94% │ 21.46M │ 17.845M │ 36.812B │ 18.56 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ NLY │ Annaly Capital Management, Inc. │ 7.26 │ 0.07 │ +0.97% │ 23.269M │ 22.798M │ 10.598B │ 4.54 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ CLF │ Cleveland-Cliffs Inc. │ 19.77 │ 1.30 │ +7.04% │ 21.478M │ 20.134M │ 10.387B │ 3.69 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ GM │ General Motors Company │ 49.67 │ 1.27 │ +2.62% │ 14.813M │ 20.688M │ 72.172B │ 7.41 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ HBAN │ Huntington Bancshares Incorporated │ 16.21 │ 0.51 │ +3.25% │ 5.809M │ 12.004M │ 23.306B │ 18.01 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ UMC │ United Microelectronics Corporation │ 9.90 │ 0.41 │ +4.32% │ 14.052M │ 8.722M │ 24.52B │ 12.07 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ ET │ Energy Transfer LP │ 10.17 │ 0.07 │ +0.69% │ 13.167M │ 22.73M │ 32.354B │ 5.67 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ VIAC │ ViacomCBS Inc. │ 35.99 │ 0.96 │ +2.74% │ 13.027M │ 14.338M │ 23.436B │ 7.03 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ LUMN │ Lumen Technologies, Inc. │ 10.04 │ 0.13 │ +1.31% │ 22.151M │ 13.534M │ 10.28B │ 5.26 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ HPE │ Hewlett Packard Enterprise Company │ 17.38 │ 0.51 │ +3.02% │ 7.326M │ 10.758M │ 22.48B │ 6.74 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ MRNA │ Moderna, Inc. │ 151.12 │ 8.65 │ +6.07% │ 10.858M │ 10.898M │ 61.272B │ 9.05 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ PBR-A │ Petróleo Brasileiro S.A. - Petrobras │ 12.54 │ -0.10 │ -0.79% │ 11.855M │ 12.201M │ 70.249B │ 3.18 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ LYG │ Lloyds Banking Group plc │ 2.82 │ 0.06 │ +2.17% │ 10.023M │ 9.419M │ 53.069B │ 8493.98 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ SUZ │ Suzano S.A. │ 11.11 │ -0.08 │ -0.71% │ 861227 │ 852793 │ 14.99B │ 9.14 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ GFI │ Gold Fields Limited │ 11.79 │ -0.49 │ -3.99% │ 10.13M │ 7.067M │ 10.466B │ 11.19 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ HPQ │ HP Inc. │ 37.37 │ 0.86 │ +2.36% │ 7.367M │ 10.599M │ 40.461B │ 7.01 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ HAL │ Halliburton Company │ 32.52 │ 0.16 │ +0.49% │ 10.356M │ 11.058M │ 29.222B │ 19.95 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ RF │ Regions Financial Corporation │ 25.29 │ 0.77 │ +3.14% │ 7.727M │ 9.327M │ 23.823B │ 10.16 │ ├────────┼──────────────────────────────────────┼──────────────────┼────────┼──────────┼─────────┼───────────────────┼────────────┼────────────────┤ │ DOW │ Dow Inc. │ 61.86 │ 1.03 │ +1.69% │ 4.025M │ 5.732M │ 45.513B │ 7.38 │ └────────┴──────────────────────────────────────┴──────────────────┴────────┴──────────┴─────────┴───────────────────┴────────────┴────────────────┘ "},{"id":1102,"href":"/OpenBBTerminal/terminal/stocks/disc/upcoming/","title":"Upcoming","parent":"Introduction to Stocks Discovery","content":"usage: upcoming [-l LIMIT] [-p N_PAGES] [-h] [--export {csv,json,xlsx}] Upcoming earnings release dates [Source: https://seekingalpha.com/earnings/earnings-calendar]\noptional arguments: -l LIMIT, --limit LIMIT Limit of upcoming earnings release dates to display. (default: 1) -p N_PAGES, --pages N_PAGES Number of pages to read upcoming earnings from in Seeking Alpha website. (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:17 (✨) /stocks/disc/ $ upcoming Upcoming Earnings Releases ┏━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Earnings on 2022-02-16 ┃ ┡━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ GLDD │ Great Lakes Dredge \u0026amp; Dock Corporation │ ├───────┼─────────────────────────────────────────┤ │ BCOR │ Blucora, Inc. │ ├───────┼─────────────────────────────────────────┤ │ BGCP │ BGC Partners, Inc. │ ├───────┼─────────────────────────────────────────┤ │ ADI │ Analog Devices, Inc. │ ├───────┼─────────────────────────────────────────┤ │ KHC │ The Kraft Heinz Company │ ├───────┼─────────────────────────────────────────┤ │ AMCX │ AMC Networks Inc. │ ├───────┼─────────────────────────────────────────┤ │ AIMC │ Altra Industrial Motion Corp. │ ├───────┼─────────────────────────────────────────┤ │ WIX │ Wix.com Ltd. │ ├───────┼─────────────────────────────────────────┤ │ TTD │ The Trade Desk, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CCEP │ Coca-Cola Europacific Partners PLC │ ├───────┼─────────────────────────────────────────┤ │ WING │ Wingstop Inc. │ ├───────┼─────────────────────────────────────────┤ │ DRVN │ Driven Brands Holdings Inc. │ ├───────┼─────────────────────────────────────────┤ │ CSCO │ Cisco Systems, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CPRT │ Copart, Inc. │ ├───────┼─────────────────────────────────────────┤ │ HST │ Host Hotels \u0026amp; Resorts, Inc. │ ├───────┼─────────────────────────────────────────┤ │ NVDA │ NVIDIA Corporation │ ├───────┼─────────────────────────────────────────┤ │ RBBN │ Ribbon Communications Inc. │ ├───────┼─────────────────────────────────────────┤ │ TRIP │ TripAdvisor, Inc. │ ├───────┼─────────────────────────────────────────┤ │ RGLD │ Royal Gold, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CRMT │ America's Car-Mart, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CAKE │ The Cheesecake Factory Incorporated │ ├───────┼─────────────────────────────────────────┤ │ VECO │ Veeco Instruments Inc. │ ├───────┼─────────────────────────────────────────┤ │ SCKT │ Socket Mobile, Inc. │ ├───────┼─────────────────────────────────────────┤ │ PEGA │ Pegasystems Inc. │ ├───────┼─────────────────────────────────────────┤ │ FARO │ FARO Technologies, Inc. │ ├───────┼─────────────────────────────────────────┤ │ RUSHA │ Rush Enterprises, Inc. │ ├───────┼─────────────────────────────────────────┤ │ AXTI │ AXT, Inc. │ ├───────┼─────────────────────────────────────────┤ │ INFN │ Infinera Corporation │ ├───────┼─────────────────────────────────────────┤ │ MMLP │ Martin Midstream Partners L.P. │ ├───────┼─────────────────────────────────────────┤ │ BCOV │ Brightcove Inc. │ ├───────┼─────────────────────────────────────────┤ │ ROIC │ Retail Opportunity Investments Corp. │ ├───────┼─────────────────────────────────────────┤ │ TRUP │ Trupanion, Inc. │ ├───────┼─────────────────────────────────────────┤ │ LOPE │ Grand Canyon Education, Inc. │ ├───────┼─────────────────────────────────────────┤ │ OPI │ Office Properties Income Trust │ ├───────┼─────────────────────────────────────────┤ │ EVER │ EverQuote, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CONE │ CyrusOne Inc. │ ├───────┼─────────────────────────────────────────┤ │ MTTR │ Matterport, Inc. │ ├───────┼─────────────────────────────────────────┤ │ TXG │ 10x Genomics, Inc. │ ├───────┼─────────────────────────────────────────┤ │ APP │ AppLovin Corporation │ ├───────┼─────────────────────────────────────────┤ │ AMPL │ Amplitude, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CTRE │ CareTrust REIT, Inc. │ ├───────┼─────────────────────────────────────────┤ │ KNBE │ KnowBe4, Inc. │ ├───────┼─────────────────────────────────────────┤ │ SBLK │ Star Bulk Carriers Corp. │ ├───────┼─────────────────────────────────────────┤ │ OCDX │ Ortho Clinical Diagnostics Holdings plc │ ├───────┼─────────────────────────────────────────┤ │ OM │ Outset Medical, Inc. │ ├───────┼─────────────────────────────────────────┤ │ ACVA │ ACV Auctions Inc. │ ├───────┼─────────────────────────────────────────┤ │ CNDT │ Conduent Incorporated │ ├───────┼─────────────────────────────────────────┤ │ AUR │ Aurora Innovation, Inc. │ ├───────┼─────────────────────────────────────────┤ │ IBEX │ IBEX Limited │ ├───────┼─────────────────────────────────────────┤ │ GRIN │ Grindrod Shipping Holdings Ltd. │ ├───────┼─────────────────────────────────────────┤ │ PLMR │ Palomar Holdings, Inc. │ ├───────┼─────────────────────────────────────────┤ │ GLBE │ Global-e Online Ltd. │ ├───────┼─────────────────────────────────────────┤ │ WKME │ WalkMe Ltd. │ ├───────┼─────────────────────────────────────────┤ │ ALKS │ Alkermes plc │ ├───────┼─────────────────────────────────────────┤ │ QUIK │ QuickLogic Corporation │ ├───────┼─────────────────────────────────────────┤ │ SPWR │ SunPower Corporation │ ├───────┼─────────────────────────────────────────┤ │ BPMC │ Blueprint Medicines Corporation │ ├───────┼─────────────────────────────────────────┤ │ GOGL │ Golden Ocean Group Limited │ ├───────┼─────────────────────────────────────────┤ │ GLDD │ Great Lakes Dredge \u0026amp; Dock Corporation │ ├───────┼─────────────────────────────────────────┤ │ BCOR │ Blucora, Inc. │ ├───────┼─────────────────────────────────────────┤ │ BGCP │ BGC Partners, Inc. │ ├───────┼─────────────────────────────────────────┤ │ ADI │ Analog Devices, Inc. │ ├───────┼─────────────────────────────────────────┤ │ KHC │ The Kraft Heinz Company │ ├───────┼─────────────────────────────────────────┤ │ AMCX │ AMC Networks Inc. │ ├───────┼─────────────────────────────────────────┤ │ AIMC │ Altra Industrial Motion Corp. │ ├───────┼─────────────────────────────────────────┤ │ WIX │ Wix.com Ltd. │ ├───────┼─────────────────────────────────────────┤ │ TTD │ The Trade Desk, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CCEP │ Coca-Cola Europacific Partners PLC │ ├───────┼─────────────────────────────────────────┤ │ WING │ Wingstop Inc. │ ├───────┼─────────────────────────────────────────┤ │ DRVN │ Driven Brands Holdings Inc. │ ├───────┼─────────────────────────────────────────┤ │ CSCO │ Cisco Systems, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CPRT │ Copart, Inc. │ ├───────┼─────────────────────────────────────────┤ │ HST │ Host Hotels \u0026amp; Resorts, Inc. │ ├───────┼─────────────────────────────────────────┤ │ NVDA │ NVIDIA Corporation │ ├───────┼─────────────────────────────────────────┤ │ RBBN │ Ribbon Communications Inc. │ ├───────┼─────────────────────────────────────────┤ │ TRIP │ TripAdvisor, Inc. │ ├───────┼─────────────────────────────────────────┤ │ RGLD │ Royal Gold, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CRMT │ America's Car-Mart, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CAKE │ The Cheesecake Factory Incorporated │ ├───────┼─────────────────────────────────────────┤ │ VECO │ Veeco Instruments Inc. │ ├───────┼─────────────────────────────────────────┤ │ SCKT │ Socket Mobile, Inc. │ ├───────┼─────────────────────────────────────────┤ │ PEGA │ Pegasystems Inc. │ ├───────┼─────────────────────────────────────────┤ │ FARO │ FARO Technologies, Inc. │ ├───────┼─────────────────────────────────────────┤ │ RUSHA │ Rush Enterprises, Inc. │ ├───────┼─────────────────────────────────────────┤ │ AXTI │ AXT, Inc. │ ├───────┼─────────────────────────────────────────┤ │ INFN │ Infinera Corporation │ ├───────┼─────────────────────────────────────────┤ │ MMLP │ Martin Midstream Partners L.P. │ ├───────┼─────────────────────────────────────────┤ │ BCOV │ Brightcove Inc. │ ├───────┼─────────────────────────────────────────┤ │ ROIC │ Retail Opportunity Investments Corp. │ ├───────┼─────────────────────────────────────────┤ │ TRUP │ Trupanion, Inc. │ ├───────┼─────────────────────────────────────────┤ │ LOPE │ Grand Canyon Education, Inc. │ ├───────┼─────────────────────────────────────────┤ │ OPI │ Office Properties Income Trust │ ├───────┼─────────────────────────────────────────┤ │ EVER │ EverQuote, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CONE │ CyrusOne Inc. │ ├───────┼─────────────────────────────────────────┤ │ MTTR │ Matterport, Inc. │ ├───────┼─────────────────────────────────────────┤ │ TXG │ 10x Genomics, Inc. │ ├───────┼─────────────────────────────────────────┤ │ APP │ AppLovin Corporation │ ├───────┼─────────────────────────────────────────┤ │ AMPL │ Amplitude, Inc. │ ├───────┼─────────────────────────────────────────┤ │ CTRE │ CareTrust REIT, Inc. │ ├───────┼─────────────────────────────────────────┤ │ KNBE │ KnowBe4, Inc. │ ├───────┼─────────────────────────────────────────┤ │ SBLK │ Star Bulk Carriers Corp. │ ├───────┼─────────────────────────────────────────┤ │ OCDX │ Ortho Clinical Diagnostics Holdings plc │ ├───────┼─────────────────────────────────────────┤ │ OM │ Outset Medical, Inc. │ ├───────┼─────────────────────────────────────────┤ │ ACVA │ ACV Auctions Inc. │ ├───────┼─────────────────────────────────────────┤ │ CNDT │ Conduent Incorporated │ ├───────┼─────────────────────────────────────────┤ │ AUR │ Aurora Innovation, Inc. │ ├───────┼─────────────────────────────────────────┤ │ IBEX │ IBEX Limited │ ├───────┼─────────────────────────────────────────┤ │ GRIN │ Grindrod Shipping Holdings Ltd. │ ├───────┼─────────────────────────────────────────┤ │ PLMR │ Palomar Holdings, Inc. │ ├───────┼─────────────────────────────────────────┤ │ GLBE │ Global-e Online Ltd. │ ├───────┼─────────────────────────────────────────┤ │ WKME │ WalkMe Ltd. │ ├───────┼─────────────────────────────────────────┤ │ ALKS │ Alkermes plc │ ├───────┼─────────────────────────────────────────┤ │ QUIK │ QuickLogic Corporation │ ├───────┼─────────────────────────────────────────┤ │ SPWR │ SunPower Corporation │ ├───────┼─────────────────────────────────────────┤ │ BPMC │ Blueprint Medicines Corporation │ ├───────┼─────────────────────────────────────────┤ │ GOGL │ Golden Ocean Group Limited │ └───────┴─────────────────────────────────────────┘ "},{"id":1103,"href":"/OpenBBTerminal/terminal/stocks/dps/ctb/","title":"Ctb","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: ctb [-n NUM] [--export {csv,json,xlsx}] [-h] Request a list of stocks that have the highest cost to borrow [Source: Interactive Broker]\noptional arguments: -n NUMBER, --number NUMBER Number of records to retrieve. (default: 20) --raw Print raw data. (default: False) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --source {ibkr,stocksera} Data source to select from (default: ibkr) Example:\n2022 Apr 07, 09:47 (�) /stocks/dps/ $ ctb Highest Cost to Borrow ┌─────────┬───────────┬───────────┐ │ Symbol │ Fees │ Available │ ├─────────┼───────────┼───────────┤ │ PIK │ 457.4402% │ 7000 │ ├─────────┼───────────┼───────────┤ │ EVTL │ 413.7294% │ 10000 │ ├─────────┼───────────┼───────────┤ │ CELZ │ 330.9411% │ 100000 │ ├─────────┼───────────┼───────────┤ │ DRCT │ 304.9628% │ 300000 │ ├─────────┼───────────┼───────────┤ │ MYNZ │ 291.8163% │ 3000 │ ├─────────┼───────────┼───────────┤ │ DCFC │ 279.0673% │ 10000 │ ├─────────┼───────────┼───────────┤ │ FGFPP │ 278.422% │ 8000 │ ├─────────┼───────────┼───────────┤ │ ZTEK │ 250.0307% │ 75000 │ ├─────────┼───────────┼───────────┤ │ FRGE │ 245.1883% │ 700 │ ├─────────┼───────────┼───────────┤ │ SATL │ 240.7341% │ 500 │ ├─────────┼───────────┼───────────┤ │ ARMR │ 240.5414% │ 5000 │ ├─────────┼───────────┼───────────┤ │ PILL │ 223.538% │ 55000 │ ├─────────┼───────────┼───────────┤ │ ARQQ │ 217.3978% │ 3000 │ ├─────────┼───────────┼───────────┤ │ NRSN │ 216.9888% │ 6000 │ ├─────────┼───────────┼───────────┤ │ ZIONL │ 215.2871% │ 35000 │ ├─────────┼───────────┼───────────┤ │ BLBX │ 213.441% │ 15000 │ ├─────────┼───────────┼───────────┤ │ WINSF │ 212.907% │ 10000 │ ├─────────┼───────────┼───────────┤ │ SKYH │ 206.7746% │ 25000 │ ├─────────┼───────────┼───────────┤ │ SOHON │ 205.1096% │ 40000 │ ├─────────┼───────────┼───────────┤ │ MH PRA │ 202.1235% │ 100000 │ └─────────┴───────────┴───────────┘ "},{"id":1104,"href":"/OpenBBTerminal/terminal/stocks/dps/dpotc/","title":"Dpotc","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: dpotc [--export {csv,json,xlsx}] [-h] Dark Pool traffic is considered to be all orders executed off-exchange and does not fall under the direct oversight of the SEC, ceding disciplinary actions to the discretion of an industry self-regulating organization, FINRA. The ability to circumvent reporting obligations to the SEC is a major motivating factor in the use of Dark Pools. Discount Brokers typically execute orders through internalizers which are routed through OTC channels, avoiding execution on a public exchange entirely.\nWhile much of the OTC volume here can be classified as retail purchases through discount brokers, it is important to recognize that OTC transactions frequently happen in the form of block trades and exotic options/derivatives products, and many companies listed on the NASDAQ/NYSE also have dual listings on the OTCX market.\nAlternative Trading Systems (ATS) are off-exchange venues operated by firms with proprietary trading desks. This data is reported weekly and includes individual tickers, the weekly share volume, and the weekly number of total trades. The major advantage a broker/dealer/HF/HFT has over an individual investor is the direct access to live data feeds from the unlit order books held off-exchange.\nThe data released to the public as \u0026ldquo;transparency\u0026rdquo; is strategically delayed and does not offer direct accountability for the positions held by individual firms. The many loopholes that exist in reporting obligations create an environment favourable to malicious actors and predatory short sellers. The quality of reported data for public consumption may improve in the near future, however, pushback from proprietary trading firms is likely to delay or degrade any progressions towards fair and transparent markets.\nUse the command \u0026lsquo;dpotc\u0026rsquo; to display a barchart comparing dark pool (ATS) and OTC (Non ATS) volume. The raw data sets are available through the \u0026lsquo;\u0026ndash;export\u0026rsquo; argument. Source: https://otctransparency.finra.org/otctransparency/\noptional arguments: --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) "},{"id":1105,"href":"/OpenBBTerminal/terminal/stocks/dps/ftd/","title":"Ftd","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: ftd [-s START] [-e END] [-n N_NUM] [--raw] [--export {csv,json,xlsx}] [-h] Display Fails to Deliver statistics for the loaded ticker. Source: https://www.sec.gov/data/foiadocsfailsdatahtm\noptional arguments: -s START, --start START start of datetime to see FTD -e END, --end END end of datetime to see FTD -n N_NUM, --num N_NUM number of latest fails-to-deliver being printed --raw Print raw data. --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file -h, --help show this help message "},{"id":1106,"href":"/OpenBBTerminal/terminal/stocks/dps/hsi/","title":"Hsi","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: hsi [-n N_NUM] [--export {csv,json,xlsx}] [-h] Browse a sorted database of stocks which have a short interest of over 20 percent. Additional key data such as the float, number of outstanding shares, and company industry is displayed. Data is presented for the Nasdaq Stock Market, the New York Stock Exchange, and the American Stock Exchange. Source: https://www.highshortinterest.com\noptional arguments: -n N_NUM, --num N_NUM Number of top stocks to print. (default: 10) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:49 (✨) /stocks/dps/ $ hsi Top Interest Stocks ┌────────┬───────────────────────────────┬──────────┬──────────┬─────────┬─────────┬────────────────────────────────────────────┐ │ Ticker │ Company │ Exchange │ ShortInt │ Float │ Outstd │ Industry │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ CRTX │ Cortexyme Inc │ Nasdaq │ 47.00% │ 15.56M │ 29.88M │ Biotechnology \u0026amp; Medical Research │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ BLNK │ Blink Charging Co │ Nasdaq │ 40.97% │ 36.46M │ 42.20M │ Utilities - Electric │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ GOGO │ Gogo Inc │ Nasdaq │ 39.10% │ 45.62M │ 109.95M │ Communications Services │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ FUV │ Arcimoto Inc │ Nasdaq │ 35.67% │ 28.76M │ 37.64M │ Auto \u0026amp; Truck Manufacturers │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ ICPT │ Intercept Pharmaceuticals Inc │ Nasdaq │ 35.61% │ 23.52M │ 29.55M │ Biotechnology \u0026amp; Medical Research │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ SFT │ Shift Technologies Inc │ Nasdaq │ 35.18% │ 54.48M │ 81.31M │ Retailers - Auto Vehicles, Parts \u0026amp; Service │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ BGFV │ Big 5 Sporting Goods Corp │ Nasdaq │ 34.45% │ 20.01M │ 22.31M │ Retailers - Miscellaneous Specialty │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ RMO │ Romeo Power Inc │ NYSE │ 34.28% │ 90.21M │ 134.46M │ Electrical Components \u0026amp; Equipment │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ BYND │ Beyond Meat Inc │ Nasdaq │ 33.99% │ 56.25M │ 63.33M │ Food Processing │ ├────────┼───────────────────────────────┼──────────┼──────────┼─────────┼─────────┼────────────────────────────────────────────┤ │ SDC │ SmileDirectClub Inc │ Nasdaq │ 33.23% │ 110.88M │ 119.14M │ Medical Equipment, Supplies \u0026amp; Distribution │ └────────┴───────────────────────────────┴──────────┴──────────┴─────────┴─────────┴────────────────────────────────────────────┘ "},{"id":1107,"href":"/OpenBBTerminal/terminal/stocks/dps/pos/","title":"Pos","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: pos [-n NUM] [-s {sv,sv_pct,nsv,nsv_dollar,dpp,dpp_dollar}] [-a] [--export {csv,json,xlsx}] [-h] Request a list of up to 200 (either positive or negative using the -a argument) Dark Pool Positions using the optional arguments to the feature command as described below. Source: https://www.stockgrid.io/darkpools\nVolume and short sale data for tickers trading on US-regulated public markets is updated daily on the FINRA website at approximately 6PM EST.\nA \u0026lsquo;position\u0026rsquo; is the result of the net aggregagte short sale volume over a rolling twenty day period. The available daily data sets currently go back as far as 2020. For an explanation on reading this data, consult the white paper from SqueezeMetrics: https://squeezemetrics.com/monitor/download/pdf/short_is_long.pdf?\noptional arguments: -n NUM, --number NUM Number of top tickers to show (default: 10) -s {sv,sv_pct,nsv,nsv_dollar,dpp,dpp_dollar}, --sort {sv,sv_pct,nsv,nsv_dollar,dpp,dpp_dollar} Field for which to sort by, where 'sv': Short Vol. [1M], 'sv_pct': Short Vol. %, 'nsv': Net Short Vol. [1M], 'nsv_dollar': Net Short Vol. ($100M), 'dpp': DP Position [1M], 'dpp_dollar': DP Position ($1B) (default: dpp_dollar) -a, --ascending Data in ascending order (default: False) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 08:51 (✨) /stocks/dps/ $ pos Data for: 2022-02-14 ┌────────┬─────────────────┬──────────────┬─────────────────────┬────────────────────────┬──────────────────┬───────────────────┐ │ Ticker │ Short Vol. [1M] │ Short Vol. % │ Net Short Vol. [1M] │ Net Short Vol. ($100M) │ DP Position [1M] │ DP Position ($1B) │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ QQQ │ 12.80 │ 66.45 │ 6.34 │ 22.02 │ 117.89 │ 42.14 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ AMD │ 45.65 │ 66.50 │ 22.65 │ 25.88 │ 171.23 │ 21.13 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ SPY │ 12.74 │ 53.08 │ 1.48 │ 6.49 │ 42.46 │ 19.11 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ NVDA │ 12.36 │ 55.73 │ 2.54 │ 6.17 │ 73.21 │ 18.07 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ IWM │ 3.33 │ 72.64 │ 2.07 │ 4.16 │ 33.92 │ 6.74 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ LQD │ 8.18 │ 83.55 │ 6.57 │ 8.13 │ 52.24 │ 6.62 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ HYG │ 8.20 │ 70.11 │ 4.70 │ 3.88 │ 59.81 │ 5.04 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ NFLX │ 1.28 │ 47.61 │ -0.13 │ -0.51 │ 11.19 │ 4.76 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ SNAP │ 13.34 │ 61.82 │ 5.10 │ 2.02 │ 105.93 │ 4.34 │ ├────────┼─────────────────┼──────────────┼─────────────────────┼────────────────────────┼──────────────────┼───────────────────┤ │ SMH │ 1.04 │ 62.44 │ 0.41 │ 1.10 │ 13.29 │ 3.67 │ └────────┴─────────────────┴──────────────┴─────────────────────┴────────────────────────┴──────────────────┴───────────────────┘ "},{"id":1108,"href":"/OpenBBTerminal/terminal/stocks/dps/prom/","title":"Prom","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: prom [-n N_NUM] [-l LIMIT] [-t {T1,T2,OTCE}] [-h] [--export {csv,json,xlsx}] Display and filter dark pool (ATS) data of tickers with growing trades activity outside of the NYSE/NASDAQ/AMEX/CBOE/ICE systems. Source: http://finra-markets.morningstar.com/MarketData/EquityOptions/default.jsp\noptional arguments: -n N_NUM, --num N_NUM Number of tickers to filter from entire ATS data based on the sum of the total weekly shares quantity. (default: 1000) -l LIMIT, --limit LIMIT Limit of most promising tickers to display. (default: 10) -t {T1,T2,OTCE}, --tier {T1,T2,OTCE} Tier to process data from. (default: ) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":1109,"href":"/OpenBBTerminal/terminal/stocks/dps/psi/","title":"Psi","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: psi [--source {quandl,stockgrid}] [--nyse] [-n NUM] [-r] [--export {csv,json,xlsx}] [-h] Shows a graph of price vs short interest volume over a variable number of days, selectable from two sources: StockGrid and Quandl API. Print the raw data using the \u0026lsquo;-r\u0026rsquo; argument for closer scrutiny of the data. Data is updated daily after market close.\noptional arguments: --source {quandl,stockgrid} Source of short interest volume --nyse ONLY QUANDL SOURCE. Data from NYSE flag. Otherwise comes from NASDAQ. -n NUM, --number NUM Number of last open market days to show -r Flag to print raw data instead --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file -h, --help show this help message "},{"id":1110,"href":"/OpenBBTerminal/terminal/stocks/dps/shorted/","title":"Shorted","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: shorted [-n NUM] [--export {csv,json,xlsx}] [-h] Request a list of up to 25 stocks that have accumulated the most short interest. [Source: Yahoo Finance]\noptional arguments: -n NUM, --num NUM Number of the most shorted stocks to retrieve. (default: 5) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 11:06 (✨) /stocks/dps/ $ shorted Most Shorted Stocks ┌────────┬────────────────────────────────────────┬──────────────────┬────────┬──────────┬────────┬───────────────────┬────────────┬────────────────┐ │ Symbol │ Name │ Price (Intraday) │ Change │ % Change │ Volume │ Avg Vol (3 month) │ Market Cap │ PE Ratio (TTM) │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ ECAT │ BlackRock ESG Capital Allocation Trust │ 16.86 │ 0.13 │ +0.78% │ 40765 │ 347083 │ 84300 │ │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ BLNK │ Blink Charging Co. │ 24.75 │ 0.97 │ +4.08% │ 354745 │ 2.357M │ 1.044B │ │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ HRTX │ Heron Therapeutics, Inc. │ 8.74 │ 0.22 │ +2.58% │ 200853 │ 2.077M │ 890.912M │ │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ SAVA │ Cassava Sciences, Inc. │ 48.83 │ 0.13 │ +0.28% │ 430440 │ 3.047M │ 1.954B │ │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ ARCH │ Arch Resources, Inc. │ 116.90 │ 3.64 │ +3.21% │ 623213 │ 493427 │ 1.79B │ 59.80 │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ EVGO │ EVgo, Inc. │ 10.01 │ 0.27 │ +2.77% │ 1.144M │ 4.419M │ 2.648B │ │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ BEEM │ Beam Global │ 14.56 │ 1.07 │ +7.92% │ 59466 │ 357145 │ 130.285M │ │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ SDC │ SmileDirectClub, Inc. │ 2.29 │ 0.07 │ +3.39% │ 1.018M │ 8.748M │ 886.831M │ │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ BGFV │ Big 5 Sporting Goods Corporation │ 17.84 │ 0.52 │ +3.00% │ 139821 │ 1.183M │ 398.025M │ 3.88 │ ├────────┼────────────────────────────────────────┼──────────────────┼────────┼──────────┼────────┼───────────────────┼────────────┼────────────────┤ │ BYND │ Beyond Meat, Inc. │ 59.97 │ 1.84 │ +3.17% │ 480665 │ 3.702M │ 3.798B │ │ └────────┴────────────────────────────────────────┴──────────────────┴────────┴──────────┴────────┴───────────────────┴────────────┴────────────────┘ "},{"id":1111,"href":"/OpenBBTerminal/terminal/stocks/dps/sidtc/","title":"Sidtc","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: sidtc [-n NUM] [-s {float,dtc,si}] [--export {csv,json,xlsx}] [-h] Request a list of shorted stocks, sorted by the optional arguments described below. Source: https://www.stockgrid.io/shortinterest\nNote: This data is delayed as per the short interest reporting schedule dictated by FINRA. https://www.nasdaqtrader.com/trader.aspx?id=shortintpubsch\noptional arguments: -n NUM, --number NUM Number of top tickers to show (default: 10) -s {float,dtc,si}, --sort {float,dtc,si} Field for which to sort by, where 'float': Float Short %, 'dtc': Days to Cover, 'si': Short Interest (default: float) --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 15, 11:07 (✨) /stocks/dps/ $ sidtc Data for: 2022-01-31 ┌────────┬───────────────┬───────────────┬─────────────────────┐ │ Ticker │ Float Short % │ Days to Cover │ Short Interest [1M] │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ VIEW │ 40.70 │ 14.92 │ 21.46 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ HRTX │ 34.06 │ 14.92 │ 34.64 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ IRBT │ 24.47 │ 13.85 │ 6.47 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ ZYXI │ 24.13 │ 14.43 │ 4.77 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ TDUP │ 22.94 │ 14.14 │ 11.93 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ GOGO │ 22.44 │ 25.02 │ 17.84 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ SATS │ 19.49 │ 23.27 │ 7.14 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ RLAY │ 19.32 │ 20.15 │ 14.88 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ OMER │ 18.89 │ 13.36 │ 11.32 │ ├────────┼───────────────┼───────────────┼─────────────────────┤ │ AXDX │ 18.75 │ 19.71 │ 7.00 │ └────────┴───────────────┴───────────────┴─────────────────────┘ "},{"id":1112,"href":"/OpenBBTerminal/terminal/stocks/dps/spos/","title":"Spos","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: spos [-n NUM] [-r] [--export {csv,json,xlsx}] [-h] Displays a charty of Net Short Vol. vs Position over a selectable number of days. Print the raw data for closer scrutiny. Source: https://www.stockgrid.io/darkpools\noptional arguments: -n NUM, --number NUM Number of last open market days to show -r Flag to print raw data instead --export {csv,json,xlsx} Export dataframe data to csv,json,xlsx file -h, --help show this help message "},{"id":1113,"href":"/OpenBBTerminal/terminal/stocks/dps/volexch/","title":"Volexch","parent":"Introduction to Dark Pools \u0026 Short Data","content":"usage: volexch [-r] [-s {,NetShort,Date,TotalVolume,PctShort}] [-a] [-p] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Displays short volume across lit NYSE venues. This data is updated nightly, this command may not not be available during updates.\noptional arguments: -r, --raw Display raw data -s {,NetShort,Date,TotalVolume,PctShort}, --sort {,NetShort,Date,TotalVolume,PctShort} Column to sort by -a, --asc Sort in ascending order -p, --plotly Display plot using interactive plotly. -h, --help show this help message --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg "},{"id":1114,"href":"/OpenBBTerminal/terminal/stocks/fa/analysis/","title":"Analysis","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: analysis [-h] [--export {csv,json,xlsx}] Display analysis of SEC filings based on NLP model. Source: https://eclect.us\nFor an explanation on how the NLP model is trained, refer to the example here: https://medium.com/@gonnellcough/predicting-equity-price-movement-from-financial-statements-using-nlp-c324b3f95bd\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Sample of output using MSFT as the loaded ticker:\nRISK FACTORS: We may not proactively discover such content due to scale and the limitations of existing technologies, and when discovered by users, such content may negatively affect our reputation, our brands, and user engagement. These acquisitions and other transactions and arrangements involve significant challenges and risks, including that they do not advance our business strategy, that we get an unsatisfactory return on our investment, that we have difficulty integrating and retaining new employees, business systems, and technology, that they distract management from our other businesses, or that announced transactions may not be completed. The occurrence of regional epidemics or a global pandemic may adversely affect our operations, financial condition, and results of operations. Despite our efforts to protect customer and user data, perceptions that the collection, use, and retention of personal information is not satisfactorily protected could inhibit sales of our products or services and could limit adoption of our cloud-based solutions by consumers, businesses, and government entities. For example, compliance with the 2017 United States Tax Cuts and Jobs Act (“ TCJA”) and possible future legislative changes may require the collection of information not regularly produced within the Company, the use of estimates in our consolidated financial statements, and the exercise of significant judgment in accounting for its provisions. Any defects we do not detect and fix in pre-release testing could cause reduced sales and revenue, damage to our reputation, repair or remediation costs, delays in the release of new products or versions, or legal liability. The extent to which the COVID-19 pandemic impacts our business going forward will depend on numerous evolving factors we cannot reliably predict, including the duration and scope of the pandemic; governmental, business, and individuals'actions in response to the pandemic; and the impact on economic activity including the possibility of recession or financial market instability. These events could negatively impact our results of operations, financial condition, and reputation. We acquire some device and datacenter components from sole suppliers. An IoT solution has multiple layers of hardware, sensors, processors, software, and firmware, several of which we may not develop or control. If a component from a sole-source supplier is delayed or becomes unavailable, whether because of supplier capacity constraint, industry shortages, legal or regulatory changes that restrict supply sources, or other reasons, we may not obtain timely replacement supplies, resulting in reduced sales or inadequate datacenter capacity. DISCUSSION AND ANALYSIS: Highlights from the first quarter of fiscal year 2022 compared with the first quarter of fiscal year 2021 included: 31 PART I Item 2 Industry Trends Our industry is dynamic and highly competitive, with frequent changes in both technologies and business models. Seasonality Our revenue fluctuates quarterly and is generally higher in the second and fourth quarters of our fiscal year. Revenue, gross margin, and operating income included a favorable foreign currency impact of 2%, 2%, and 3%, respectively. Gross margin increased $5.5 billion or 21% driven by growth across each of our segments. Second quarter revenue is driven by corporate year-end spending trends in our major markets and holiday season spending by consumers, and fourth quarter revenue is driven by the volume of multi-year on-premises contracts executed during the period. More Personal Computing Revenue increased $1.5 billion or 12%. Operating expenses increased $1.2 billion or 11% driven by investments in cloud engineering, Gaming, and commercial sales. INCOME TAXES Effective Tax Rate Our effective tax rate was 0% and 14% for the three months ended September 30, 2021 and 2020, respectively. Revenue, gross margin, and operating income included a favorable foreign currency impact of 2%, 2%, and 4%, respectively. Cost of revenue increased $2.6 billion or 24% driven by growth in Microsoft Cloud and Gaming. The acquisition has been approved by Nuance’ s shareholders, and we expect it to close by the end of the second quarter or early in the third quarter of fiscal year 2022, subject to the satisfaction of certain regulatory approvals and other customary closing conditions. 36 PART I Item 2 Intelligent Cloud Revenue increased $4.0 billion or 31%. The decrease in our effective tax rate for the current quarter compared to the prior year was primarily due to a $3.3 billion net income tax benefit in the first quarter of fiscal year 2022 related to the transfer of intangible properties. Key changes in operating expenses were: Operating income increased $4.4 billion or 27% driven by growth across each of our segments. In the first quarter of fiscal year 2022, we transferred certain intangible properties from our Puerto Rico subsidiary to the U. S. The transfer of intangible properties resulted in a $3.3 billion net income tax benefit in the first quarter of fiscal year 2022, as the value of future U. S. tax deductions exceeds the current tax liability from the U. S. global intangible low-taxed income tax. "},{"id":1115,"href":"/OpenBBTerminal/terminal/stocks/fa/balance/","title":"Balance","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: balance [-q] [-r] [-p PLOT [PLOT ...]] [-s {polygon,av,yf,fmp}] [-h] [--export EXPORT] [-l LIMIT] Prints a complete balance sheet statement over time. This can be either quarterly or annually. The following fields are expected: Accepted date, Account payables, Accumulated other comprehensive income loss, Cash and cash equivalents, Cash and short term investments, Common stock, Deferred revenue, Deferred revenue non current, Deferred tax liabilities non current, Filling date, Final link, Goodwill, Goodwill and intangible assets, Intangible assets, Inventory, Link, Long term debt, Long term investments, Net debt, Net receivables, Other assets, Other current assets, Other current liabilities, Other liabilities, Other non current assets, Other non current liabilities, Othertotal stockholders equity, Period, Property plant equipment net, Retained earnings, Short term debt, Short term investments, Tax assets, Tax payables, Total assets, Total current assets, Total current liabilities, Total debt, Total investments, Total liabilities, Total liabilities and stockholders equity, Total non current assets, Total non current liabilities, and Total stockholders equity. [Source: Alpha Vantage]\noptional arguments: -q, --quarter Quarter fundamental data flag. (default: False) -r, --ratios Shows percentage change of values. (default: False) -p PLOT [PLOT ...], --plot PLOT [PLOT ...] Rows to plot. (-1 represents invalid data) (default: []) -s {polygon,av,yf,fmp}, --source {polygon,av,yf,fmp} The source to get the data from (default: av) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 5) Example:\n2022 Feb 16, 04:44 (✨) /stocks/fa/ $ balance -l 4 MU Balance Sheet ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ 2018-08-30 ┃ 2019-08-29 ┃ 2020-09-03 ┃ 2021-09-02 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ reportedCurrency │ USD │ USD │ USD │ USD │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalAssets │ 43.376 B │ 48.887 B │ 53.678 B │ 58.849 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalCurrentAssets │ 16.039 B │ 16.503 B │ 17.965 B │ 19.907 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ cashAndCashEquivalentsAtCarryingValue │ 6.506 B │ 7.152 B │ 7.624 B │ 7.763 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ cashAndShortTermInvestments │ 6.506 B │ 7.955 B │ 8.142 B │ 8.633 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ inventory │ 3.595 B │ 5.118 B │ 5.373 B │ 4.487 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ currentNetReceivables │ None │ 3.195 B │ 3.912 B │ 5.311 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalNonCurrentAssets │ 26.396 B │ 32.511 B │ 5.174 B │ 6.495 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ propertyPlantEquipment │ 23.672 B │ 28.240 B │ 31.615 B │ 33.764 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ accumulatedDepreciationAmortizationPPE │ 25.419 B │ 29.584 B │ None │ None │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ intangibleAssets │ 1.559 B │ 1.568 B │ 1.562 B │ 1.577 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ intangibleAssetsExcludingGoodwill │ 331 M │ 340 M │ 334 M │ 349 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ goodwill │ 1.228 B │ 1.228 B │ 1.228 B │ 1.228 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ investments │ 769 M │ 1.967 B │ 1.566 B │ 2.635 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ longTermInvestments │ 473 M │ 1.164 B │ 1.048 B │ 1.765 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ shortTermInvestments │ 296 M │ 803 M │ 518 M │ 870 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherCurrentAssets │ 164 M │ 235 M │ 538 M │ 502 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherNonCurrrentAssets │ 611 M │ 575 M │ 781 M │ 1.054 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalLiabilities │ 10.112 B │ 12.019 B │ 14.682 B │ 14.916 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalCurrentLiabilities │ 5.754 B │ 6.390 B │ 6.635 B │ 6.424 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ currentAccountsPayable │ 1.923 B │ 1.840 B │ 2.357 B │ 2.090 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ deferredRevenue │ None │ 130 M │ 65 M │ 74 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ currentDebt │ 859 M │ 1.310 B │ 270 M │ 155 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ shortTermDebt │ 859 M │ 1.087 B │ 194 M │ 155 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalNonCurrentLiabilities │ 4.358 B │ 4.997 B │ 7.404 B │ 7.684 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ capitalLeaseObligations │ 845 M │ 368 M │ 410 M │ 649 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ longTermDebt │ 4.898 B │ 5.755 B │ 6.157 B │ 5.968 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ currentLongTermDebt │ 549 M │ 1.087 B │ 194 M │ 155 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ longTermDebtNoncurrent │ None │ None │ None │ None │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ shortLongTermDebtTotal │ 4.898 B │ 5.755 B │ 6.351 B │ 7.280 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherCurrentLiabilities │ 3.778 B │ 454 M │ 548 M │ 944 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherNonCurrentLiabilities │ 581 M │ 452 M │ 498 M │ 559 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalShareholderEquity │ 32.294 B │ 35.881 B │ 38.996 B │ 43.933 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ treasuryStock │ 429 M │ 3.221 B │ 3.495 B │ 4.695 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ retainedEarnings │ 24.395 B │ 30.761 B │ 33.384 B │ 39.051 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ commonStock │ 117 M │ 118 M │ 119 M │ 122 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ commonStockSharesOutstanding │ 1.161 B │ 1.106 B │ 1.113 B │ 1.119 B │ └────────────────────────────────────────┴────────────┴────────────┴────────────┴────────────┘ 2022 Feb 16, 04:44 (✨) /stocks/fa/ $ balance -l 4 -q MU Balance Sheet ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ 2021-03-04 ┃ 2021-06-03 ┃ 2021-09-02 ┃ 2021-12-02 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ reportedCurrency │ USD │ USD │ USD │ USD │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalAssets │ 54.135 B │ 55.943 B │ 58.849 B │ 61.246 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalCurrentAssets │ 17.279 B │ 18.561 B │ 19.907 B │ 20.191 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ cashAndCashEquivalentsAtCarryingValue │ 6.507 B │ 7.759 B │ 7.763 B │ 8.680 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ cashAndShortTermInvestments │ 6.507 B │ 7.759 B │ 8.633 B │ 9.580 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ inventory │ 4.743 B │ 4.537 B │ 4.487 B │ 4.827 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ currentNetReceivables │ 3.353 B │ 4.231 B │ 5.311 B │ 5.250 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalNonCurrentAssets │ 36.856 B │ 37.382 B │ 6.495 B │ 6.786 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ propertyPlantEquipment │ 32.423 B │ 32.767 B │ 33.764 B │ 35.729 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ accumulatedDepreciationAmortizationPPE │ None │ None │ None │ None │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ intangibleAssets │ 1.570 B │ 1.578 B │ 1.577 B │ 1.575 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ intangibleAssetsExcludingGoodwill │ 342 M │ 350 M │ 349 M │ 347 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ goodwill │ 1.228 B │ 1.228 B │ 1.228 B │ 1.228 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ investments │ None │ None │ 2.635 B │ 2.717 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ longTermInvestments │ 1.316 B │ 1.399 B │ 1.765 B │ 1.817 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ shortTermInvestments │ 677 M │ 590 M │ 870 M │ 900 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherCurrentAssets │ 538 M │ 478 M │ 502 M │ 521 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherNonCurrrentAssets │ 821 M │ 816 M │ 1.054 B │ 1.188 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalLiabilities │ 13.472 B │ 13.684 B │ 14.916 B │ 15.338 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalCurrentLiabilities │ 5.433 B │ 5.462 B │ 6.424 B │ 6.512 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ currentAccountsPayable │ None │ None │ 2.090 B │ 2.217 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ deferredRevenue │ None │ None │ 74 M │ 74 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ currentDebt │ 323 M │ 297 M │ 155 M │ 118 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ shortTermDebt │ 323 M │ 297 M │ 155 M │ 118 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalNonCurrentLiabilities │ 8.039 B │ 8.222 B │ 7.684 B │ 8.059 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ capitalLeaseObligations │ 395 M │ 454 M │ 649 M │ 808 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ longTermDebt │ 6.298 B │ 6.418 B │ 5.968 B │ 6.096 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ currentLongTermDebt │ 323 M │ 297 M │ 155 M │ 118 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ longTermDebtNoncurrent │ None │ None │ None │ None │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ shortLongTermDebtTotal │ 7.148 B │ 7.228 B │ 7.280 B │ 6.096 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherCurrentLiabilities │ 560 M │ 738 M │ 944 M │ 924 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherNonCurrentLiabilities │ 552 M │ 569 M │ 559 M │ 632 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalShareholderEquity │ 40.663 B │ 42.259 B │ 43.933 B │ 45.908 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ treasuryStock │ None │ None │ 4.695 B │ 4.954 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ retainedEarnings │ 34.723 B │ 36.452 B │ 39.051 B │ 41.267 B │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ commonStock │ 120 M │ 120 M │ 122 M │ 122 M │ ├────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ commonStockSharesOutstanding │ 1.121 B │ 1.120 B │ 1.119 B │ 1.120 B │ └────────────────────────────────────────┴────────────┴────────────┴────────────┴────────────┘ "},{"id":1116,"href":"/OpenBBTerminal/terminal/stocks/fa/cal/","title":"Cal","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: cal [-h] [--export {csv,json,xlsx}] Calendar earnings of the company. Including revenue and earnings estimates. [Source: Yahoo Finance]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example shown for the loaded ticker MSFT:\n2022 Feb 16, 04:47 (✨) /stocks/fa/ $ cal Ticker Calendar Earnings ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ Earnings Date ┃ Earnings Average ┃ Earnings Low ┃ Earnings High ┃ Revenue Average ┃ Revenue Low ┃ Revenue High ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ 04/25/2022 │ 2.190 │ 2.140 │ 2.290 │ 49.055 B │ 48.652 B │ 49.719 B │ ├───────────────┼──────────────────┼──────────────┼───────────────┼─────────────────┼─────────────┼──────────────┤ │ 04/29/2022 │ 2.190 │ 2.140 │ 2.290 │ 49.055 B │ 48.652 B │ 49.719 B │ └───────────────┴──────────────────┴──────────────┴───────────────┴─────────────────┴─────────────┴──────────────┘ "},{"id":1117,"href":"/OpenBBTerminal/terminal/stocks/fa/cash/","title":"Cash","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: cash [-l LIMIT] [-q] [-r] [-p PLOT [PLOT ...]] [-s {polygon,av,yf,fmp}] [-h] [--export EXPORT] Prints a complete cash flow statement over time. This can be either quarterly or annually. The following fields are expected: Accepted date, Accounts payables, Accounts receivables, Acquisitions net, Capital expenditure, Cash at beginning of period, Cash at end of period, Change in working capital, Common stock issued, Common stock repurchased, Debt repayment, Deferred income tax, Depreciation and amortization, Dividends paid, Effect of forex changes on cash, Filling date, Final link, Free cash flow, Inventory, Investments in property plant and equipment, Link, Net cash provided by operating activities, Net cash used for investing activities, Net cash used provided by financing activities, Net change in cash, Net income, Operating cash flow, Other financing activities, Other investing activities, Other non cash items, Other working capital, Period, Purchases of investments, Sales maturities of investments, Stock based compensation. [Source: Alpha Vantage]\noptional arguments: -l LIMIT, --limit LIMIT Number of latest years/quarters. (default: 1) -q, --quarter Quarter fundamental data flag. (default: False) -r, --ratios Shows percentage change of values. (default: False) -p PLOT [PLOT ...], --plot PLOT [PLOT ...] Rows to plot. (-1 represents invalid data) (default: []) -s {polygon,av,yf,fmp}, --source {polygon,av,yf,fmp} The source to get the data from (default: av) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 04:52 (✨) /stocks/fa/ $ cash -l 4 FB Balance Sheet ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ 2018-12-31 ┃ 2019-12-31 ┃ 2020-12-31 ┃ 2021-12-31 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ reportedCurrency │ USD │ USD │ USD │ USD │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ operatingCashflow │ 29.274 B │ 36.314 B │ 38.747 B │ 57.683 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ paymentsForOperatingActivities │ 1 M │ 914 M │ 1.222 B │ 1.421 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromOperatingActivities │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInOperatingLiabilities │ 1.057 B │ 9.123 B │ -1.312 B │ 5.909 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInOperatingAssets │ 2.741 B │ 1.873 B │ 1.411 B │ 5.209 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ depreciationDepletionAndAmortization │ 4.315 B │ 5.741 B │ 6.862 B │ 7.967 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ capitalExpenditures │ 13.915 B │ 15.102 B │ 15.115 B │ 18.567 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInReceivables │ 1.892 B │ 1.961 B │ 1.512 B │ 3.110 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInInventory │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ profitLoss │ 22.112 B │ 18.485 B │ 29.146 B │ 39.370 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ cashflowFromInvestment │ -11.603 B │ -19.864 B │ -30.059 B │ -7.570 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ cashflowFromFinancing │ -15.572 B │ -7.299 B │ -10.292 B │ -50.728 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromRepaymentsOfShortTermDebt │ 500 M │ -223 M │ 24 M │ 14 M │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ paymentsForRepurchaseOfCommonStock │ 12.879 B │ 4.202 B │ 6.272 B │ 44.537 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ paymentsForRepurchaseOfEquity │ 12.879 B │ 4.202 B │ 6.272 B │ 44.537 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ paymentsForRepurchaseOfPreferredStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ dividendPayout │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ dividendPayoutCommonStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ dividendPayoutPreferredStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromIssuanceOfCommonStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromIssuanceOfPreferredStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromRepurchaseOfEquity │ -12.879 B │ -4.202 B │ -6.272 B │ -44.537 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromSaleOfTreasuryStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInCashAndCashEquivalents │ 2.099 B │ 9.151 B │ -1.604 B │ -615 M │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInExchangeRate │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ netIncome │ 22.112 B │ 18.485 B │ 29.146 B │ 39.370 B │ └───────────────────────────────────────────────────────────┴────────────┴────────────┴────────────┴────────────┘ 2022 Feb 16, 04:52 (✨) /stocks/fa/ $ cash -l 4 -q FB Balance Sheet ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ 2021-03-31 ┃ 2021-06-30 ┃ 2021-09-30 ┃ 2021-12-31 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ reportedCurrency │ USD │ USD │ USD │ USD │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ operatingCashflow │ 12.242 B │ 13.247 B │ 14.090 B │ 18.104 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ paymentsForOperatingActivities │ 333 M │ 6.650 B │ 1.987 B │ -7.549 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromOperatingActivities │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInOperatingLiabilities │ -1.787 B │ 1.513 B │ 2.180 B │ 4.003 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInOperatingAssets │ -378 M │ 3.403 B │ 797 M │ 1.387 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ depreciationDepletionAndAmortization │ 1.972 B │ 1.986 B │ 1.995 B │ 2.014 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ capitalExpenditures │ 4.272 B │ 4.612 B │ 4.314 B │ 5.369 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInReceivables │ -849 M │ 1.366 B │ 555 M │ 2.038 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInInventory │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ profitLoss │ 9.497 B │ 10.394 B │ 9.194 B │ 10.285 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ cashflowFromInvestment │ -4.874 B │ -8.195 B │ -330 M │ 5.829 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ cashflowFromFinancing │ -5.185 B │ -8.549 B │ -15.252 B │ -21.742 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromRepaymentsOfShortTermDebt │ -50 M │ 53 M │ 12 M │ -1 M │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ paymentsForRepurchaseOfCommonStock │ 3.939 B │ 7.079 B │ 13.458 B │ 20.061 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ paymentsForRepurchaseOfEquity │ 3.939 B │ 7.079 B │ 13.458 B │ 20.061 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ paymentsForRepurchaseOfPreferredStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ dividendPayout │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ dividendPayoutCommonStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ dividendPayoutPreferredStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromIssuanceOfCommonStock │ 0 │ 0 │ 0 │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromIssuanceOfLongTermDebtAndCapitalSecuritiesNet │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromIssuanceOfPreferredStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromRepurchaseOfEquity │ -3.939 B │ -7.079 B │ -13.458 B │ -20.061 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ proceedsFromSaleOfTreasuryStock │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInCashAndCashEquivalents │ 2.183 B │ 12.254 B │ 11.064 B │ 2.191 B │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ changeInExchangeRate │ None │ None │ None │ None │ ├───────────────────────────────────────────────────────────┼────────────┼────────────┼────────────┼────────────┤ │ netIncome │ 9.497 B │ 10.394 B │ 9.194 B │ 10.285 B │ └───────────────────────────────────────────────────────────┴────────────┴────────────┴────────────┴────────────┘ "},{"id":1118,"href":"/OpenBBTerminal/terminal/stocks/fa/dcf/","title":"Dcf","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: dcf [-a] [--no-ratios] [--no-filter] [-p--prediction PREDICTION] [-s--similar SIMILAR] [-h] [--export {csv,json,xlsx}] A discounted cash flow statement looks to analyze the value of a company. To do this we need to predict the future cash flows and then determine how much those cash flows are worth to us today. We predict the future expected cash flows by prediciting what the financial statements will look like in the future, and then using this to determine the cash the company will have in the future. This cash is paid to share holders.\nWe use linear regression to predict the future financial statements. Once we have our predicted financial statements we need to determine how much the cash flows are worth today. This is done with a discount factor. Our DCF allows users to choose between Fama French and CAPM for the factor. This allows us to calculate the present value of the future cash flows. The present value of all of these cash payments is the companies' value. Dividing this value by the number of shares outstanding allows us to calculate the value of each share in a company [Source: https://stockanalysis.com/stocks/]\noptional arguments: -a, --audit Generates a tie-out for financial statement information pulled from online. (default: False) --no-ratios Removes ratios from DCF. (default: True) --no-filter Allow similar companies of any market cap to be shown. (default: False) -p--prediction PREDICTION Number of years to predict before using terminal value. (default: 10) -s--similar SIMILAR Number of similar companies to generate ratios for. (default: 6) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) The command creates an Excel that features the following sheets:\nFinancials\nFree Cash Flows\nExplanations\nRatios (partial view)\n"},{"id":1119,"href":"/OpenBBTerminal/terminal/stocks/fa/dcfc/","title":"Dcfc","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: dcfc [-l LIMIT] [-q] [-h] [--export {csv,json,xlsx}]h] Prints the discounted cash flow of a company over time including the DCF of today. The following fields are expected: DCF, Stock price, and Date. [Source: Financial Modeling Prep]\noptional arguments: -l LIMIT, --limit LIMIT Limit of latest years/quarters. (default: 1) -q, --quarter Quarter fundamental data flag. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":1120,"href":"/OpenBBTerminal/terminal/stocks/fa/divs/","title":"Divs","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: divs [-l LIMIT] [-p] [-h] [--export {csv,json,xlsx}] Historical dividends for a company.\noptional arguments: -l LIMIT, --limit LIMIT Number of previous dividends to show (default: 16) -p, --plot Plots changes in dividend over time (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example (from ticker MSFT):\n2022 Feb 16, 05:11 (✨) /stocks/fa/ $ divs Ticker Historical Dividends ┏━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━┓ ┃ ┃ Amount Paid ($) ┃ Change ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━┩ │ 2021-11-17 │ 0.62 │ 0.06 │ ├────────────┼─────────────────┼────────┤ │ 2021-08-18 │ 0.56 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2021-05-19 │ 0.56 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2021-02-17 │ 0.56 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2020-11-18 │ 0.56 │ 0.05 │ ├────────────┼─────────────────┼────────┤ │ 2020-08-19 │ 0.51 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2020-05-20 │ 0.51 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2020-02-19 │ 0.51 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2019-11-20 │ 0.51 │ 0.05 │ ├────────────┼─────────────────┼────────┤ │ 2019-08-14 │ 0.46 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2019-05-15 │ 0.46 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2019-02-20 │ 0.46 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2018-11-14 │ 0.46 │ 0.04 │ ├────────────┼─────────────────┼────────┤ │ 2018-08-15 │ 0.42 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2018-05-16 │ 0.42 │ 0.00 │ ├────────────┼─────────────────┼────────┤ │ 2018-02-14 │ 0.42 │ 0.00 │ └────────────┴─────────────────┴────────┘ "},{"id":1121,"href":"/OpenBBTerminal/terminal/stocks/fa/dupont/","title":"Dupont","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: dupont [-h] [--export {csv,json,xlsx}] The dupont ratio is a breakdown of the various components of return on equity. This breakdown gives investors a more complete picutre of how a company generates profit from its assets.\noptional arguments: -h, --help show this help message --raw show raw data instead of a graph --export {csv,json,xlsx} Export raw data into csv, json, xlsx "},{"id":1122,"href":"/OpenBBTerminal/terminal/stocks/fa/earnings/","title":"Earnings","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: earnings [-q] [-l LIMIT] [-h] [--export {csv,json,xlsx}] Shows earnings for the loaded ticker, selectable as yearly or quarterly; includes Estimated, Reported, and Surprise EPS results. [Source: Alpha Vantage]\noptional arguments: -q, --quarter Quarter fundamental data flag. (default: False) -l LIMIT, --limit LIMIT Number of latest info (default: 5) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 05:14 (✨) /stocks/fa/ $ earnings -l 12 MSFT Earnings ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ Fiscal Date Ending ┃ Reported EPS ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ 2021-12-31 │ 4.75 │ ├────────────────────┼──────────────┤ │ 2021-06-30 │ 7.97 │ ├────────────────────┼──────────────┤ │ 2020-06-30 │ 5.75 │ ├────────────────────┼──────────────┤ │ 2019-06-30 │ 4.75 │ ├────────────────────┼──────────────┤ │ 2018-06-30 │ 3.88 │ ├────────────────────┼──────────────┤ │ 2017-06-30 │ 3.31 │ ├────────────────────┼──────────────┤ │ 2016-06-30 │ 2.76 │ ├────────────────────┼──────────────┤ │ 2015-06-30 │ 2.46 │ ├────────────────────┼──────────────┤ │ 2014-06-30 │ 2.63 │ ├────────────────────┼──────────────┤ │ 2013-06-30 │ 2.67 │ ├────────────────────┼──────────────┤ │ 2012-06-30 │ 2.73 │ ├────────────────────┼──────────────┤ │ 2011-06-30 │ 2.69 │ └────────────────────┴──────────────┘ 2022 Feb 16, 05:15 (✨) /stocks/fa/ $ earnings -l 12 -q MSFT Earnings ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓ ┃ Fiscal Date Ending ┃ Reported Date ┃ Reported EPS ┃ Estimated EPS ┃ Surprise ┃ Surprise Percentage ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩ │ 2021-12-31 │ 2022-01-25 │ 2.48 │ 2.31 │ 0.17 │ 7.3593 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2021-09-30 │ 2021-10-26 │ 2.27 │ 2.081 │ 0.189 │ 9.0822 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2021-06-30 │ 2021-07-27 │ 2.17 │ 1.9252 │ 0.2448 │ 12.7156 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2021-03-31 │ 2021-04-27 │ 1.95 │ 1.7781 │ 0.1719 │ 9.6676 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2020-12-31 │ 2021-01-26 │ 2.03 │ 1.6373 │ 0.3927 │ 23.9846 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2020-09-30 │ 2020-10-27 │ 1.82 │ 1.546 │ 0.274 │ 17.7232 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2020-06-30 │ 2020-07-22 │ 1.46 │ 1.372 │ 0.088 │ 6.414 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2020-03-31 │ 2020-04-29 │ 1.4 │ 1.2688 │ 0.1312 │ 10.3405 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2019-12-31 │ 2020-01-29 │ 1.51 │ 1.325 │ 0.185 │ 13.9623 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2019-09-30 │ 2019-10-23 │ 1.38 │ 1.2435 │ 0.1365 │ 10.9771 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2019-06-30 │ 2019-07-18 │ 1.37 │ 1.2137 │ 0.1563 │ 12.878 │ ├────────────────────┼───────────────┼──────────────┼───────────────┼──────────┼─────────────────────┤ │ 2019-03-31 │ 2019-04-24 │ 1.14 │ 0.9985 │ 0.1415 │ 14.1713 │ └────────────────────┴───────────────┴──────────────┴───────────────┴──────────┴─────────────────────┘ "},{"id":1123,"href":"/OpenBBTerminal/terminal/stocks/fa/enterprise/","title":"Enterprise","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: enterprise [-l LIMIT] [-q] [-h] [--export {csv,json,xlsx}] Prints stock price, number of shares, market capitalization and enterprise value over time. [Source: Financial Modeling Prep]\noptional arguments: -l LIMIT, --limit LIMIT Limit of latest years/quarters. (default: 1) -q, --quarter Quarter fundamental data flag. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 05:26 (✨) /stocks/fa/ $ enterprise -l 10 GOOGL Enterprise ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ 2012 ┃ 2013 ┃ 2014 ┃ 2015 ┃ 2016 ┃ 2017 ┃ 2018 ┃ 2019 ┃ 2020 ┃ 2021 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ Symbol │ GOOGL │ GOOGL │ GOOGL │ GOOGL │ GOOGL │ GOOGL │ GOOGL │ GOOGL │ GOOGL │ GOOGL │ ├─────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤ │ Stock price │ 377.292 │ 568.263 │ 537.550 │ 761.350 │ 823.830 │ 1.177 K │ 1.098 K │ 1.454 K │ 1.827 K │ 2.667 K │ ├─────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤ │ Number of shares │ 665 M │ 737 M │ 687 M │ 692.930 M │ 698.706 M │ 703.584 M │ 703.285 M │ 698.556 M │ 665.758 M │ 667.650 M │ ├─────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤ │ Market capitalization │ 250.899 B │ 418.810 B │ 369.297 B │ 527.562 B │ 575.615 B │ 828.379 B │ 772.200 B │ 1.016 T │ 1.217 T │ 1.781 T │ ├─────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤ │ Minus cash and cash equivalents │ 14.778 B │ 18.898 B │ 18.347 B │ 16.549 B │ 12.918 B │ 10.715 B │ 16.701 B │ 18.498 B │ 26.465 B │ 20.945 B │ ├─────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤ │ Add total debt │ 5.537 B │ 5.245 B │ 5.237 B │ 5.220 B │ 3.935 B │ 3.969 B │ 4.012 B │ 5.753 B │ 26.772 B │ 28.395 B │ ├─────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┤ │ Enterprise value │ 241.658 B │ 405.157 B │ 356.187 B │ 516.233 B │ 566.632 B │ 821.633 B │ 759.511 B │ 1.003 T │ 1.217 T │ 1.788 T │ └─────────────────────────────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┘ "},{"id":1124,"href":"/OpenBBTerminal/terminal/stocks/fa/fraud/","title":"Fraud","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: fraud [-h] [-d] [-e] [--export {csv,json,xlsx}] optional arguments: -e, --explanation whether to show the description for the metrics (default: false) -d, --detail\tshow details on the calculation of mscore -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example (ticker is MSFT):\n2022 Feb 16, 05:42 (✨) /stocks/fa/ $ fraud AMscore Sub Stats: DSRI : 1.03 GMI : 0.98 AQI : 0.50 SGI : 1.18 DEPI : 1.07 SGAI : 0.86 LVGI : 0.95 TATA : -0.05 MSCORE: -2.62 (low chance of fraud) ZSCORE: -1.89 (high chance of bankruptcy) McKee: 0.86 (high chance of bankruptcy) Mscore:    The Beneish model is a statistical model that uses financial ratios calculated with accounting data of a specific company in order to check if it is likely (high probability) that the reported earnings of the company have been manipulated. A score of -5 to -2.22 indicated a low chance of fraud, a score of -2.22 to -1.78 indicates a moderate change of fraud, and a score above -1.78 indicated a high chance of fraud.[Source: Wikipedia]\nDSRI: Days Sales in Receivables Index gauges whether receivables and revenue are out of balance, a large number is expected to be associated with a higher likelihood that revenues and earnings are overstated.\nGMI: Gross Margin Index shows if gross margins are deteriorating. Research suggests that firms with worsening gross margin are more likely to engage in earnings management, therefore there should be a positive correlation between GMI and probability of earnings management.\nAQI: Asset Quality Index measures the proportion of assets where potential benefit is less certain. A positive relation between AQI and earnings manipulation is expected.\nSGI: Sales Growth Index shows the amount of growth companies are having. Higher growth companies are more likely to commit fraud so there should be a positive relation between SGI and earnings management.\nDEPI: Depreciation Index is the ratio for the rate of depreciation. A DEPI greater than 1 shows that the depreciation rate has slowed and is positively correlated with earnings management.\nSGAI: Sales General and Administrative Expenses Index measures the change in SG\u0026amp;A over sales. There should be a positive relationship between SGAI and earnings management.\nLVGI: Leverage Index represents change in leverage. A LVGI greater than one indicates a lower change of fraud.\nTATA: Total Accruals to Total Assets is a proxy for the extent that cash underlies earnigns. A higher number is associated with a higher likelihood of manipulation.\nZscore:    The Zmijewski Score is a bankruptcy model used to predict a firm\u0026rsquo;s bankruptcy in two years. The ratio uses in the Zmijewski score were determined by probit analysis (think of probit as probability unit). In this case, scores less than .5 represent a higher probability of default. One of the criticisms that Zmijewski made was that other bankruptcy scoring models oversampled distressed firms and favored situations with more complete data.[Source: YCharts]\nMcKee Score:    The McKee Score is a bankruptcy model used to predict a firm\u0026rsquo;s bankruptcy in one year. It looks at a companie\u0026rsquo;s size, profitability, and liquidity to determine the probability. This model is 80% accurate in predicting bankruptcy. Source: McKee and Lensberg\n"},{"id":1125,"href":"/OpenBBTerminal/terminal/stocks/fa/growth/","title":"Growth","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: growth [-l LIMIT] [-q] [-h] [--export {csv,json,xlsx}] Prints the growth of several financial statement items and ratios over time. This can be either annually and quarterly. [Source: Financial Modeling Prep]\noptional arguments: -l LIMIT, --limit LIMIT Limit of latest years/quarters. (default: 1) -q, --quarter Quarter fundamental data flag. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example (ticker is BABA):\n2022 Feb 16, 05:29 (✨) /stocks/fa/ $ growth -l 10 Ticker Growth ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┓ ┃ ┃ 2012 ┃ 2013 ┃ 2014 ┃ 2015 ┃ 2016 ┃ 2017 ┃ 2018 ┃ 2019 ┃ 2020 ┃ 2021 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━┩ │ Period │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Revenue growth │ 2.121 │ 0.724 │ 0.521 │ 0.451 │ 0.327 │ 0.565 │ 0.581 │ 0.506 │ 0.353 │ 0.407 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Gross profit growth │ 1.612 │ 0.841 │ 0.578 │ 0.338 │ 0.275 │ 0.479 │ 0.450 │ 0.186 │ 0.338 │ 0.302 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Ebitgrowth │ 2.165 │ 1.115 │ 1.229 │ -0.063 │ 0.267 │ 0.604 │ 0.464 │ -0.179 │ 0.610 │ -0.036 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Operating income growth │ 2.165 │ 1.115 │ 1.229 │ -0.063 │ 0.267 │ 0.604 │ 0.464 │ -0.179 │ 0.610 │ -0.036 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Net income growth │ 1.469 │ 1.018 │ 1.733 │ 0.041 │ 1.945 │ -0.389 │ 0.467 │ 0.371 │ 0.700 │ 0.008 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Epsgrowth │ 4.488 │ 0.962 │ 1.811 │ 0.004 │ 1.814 │ -0.397 │ 0.430 │ 0.355 │ 0.673 │ -0.021 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Epsdiluted growth │ 4.364 │ 0.969 │ 1.801 │ -0.030 │ 1.875 │ -0.392 │ 0.444 │ 0.362 │ 0.675 │ -0.021 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Weighted average shares growth │ -0.551 │ 0.012 │ -0.012 │ 0.031 │ 0.052 │ 0.014 │ 0.024 │ 0.011 │ 0.018 │ 0.029 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Weighted average shares diluted growth │ -0.541 │ 0.024 │ -0.024 │ 0.072 │ 0.025 │ 0.004 │ 0.014 │ 0.005 │ 0.017 │ 0.030 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Dividendsper share growth │ -1 │ 0 │ 1.044 │ -0.515 │ -1 │ 0 │ 0 │ 0 │ 0 │ 0 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Operating cash flow growth │ 3.251 │ 0.561 │ 0.822 │ 0.562 │ 0.379 │ 0.413 │ 0.558 │ 0.206 │ 0.196 │ 0.283 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Free cash flow growth │ 2.536 │ 0.685 │ 0.804 │ 0.551 │ 0.372 │ 0.365 │ 0.519 │ 0.063 │ 0.334 │ 0.395 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Ten y revenue growth per share │ 30.264 │ 52.231 │ 80.971 │ 114.358 │ 144.573 │ 141.660 │ 164.018 │ 189.016 │ 175.082 │ 207.632 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Five y revenue growth per share │ 18.858 │ 24.329 │ 29.143 │ 28.593 │ 31.343 │ 6.184 │ 5.515 │ 5.304 │ 4.950 │ 5.451 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Three y revenue growth per share │ 10.496 │ 12.656 │ 17.212 │ 2.690 │ 1.735 │ 1.740 │ 2.006 │ 2.550 │ 2.056 │ 1.708 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Ten y operating c f growth per share │ 26.029 │ 40.671 │ 75.873 │ 115.464 │ 151.692 │ 110.117 │ 155.681 │ 130.670 │ 0 │ 197.265 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Five y operating c f growth per share │ 13.116 │ 19.166 │ 25.194 │ 0 │ 52.450 │ 6.872 │ 6.770 │ 4.027 │ 2.898 │ 2.709 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Three y operating c f growth per share │ 8.210 │ 0 │ 25.909 │ 3.309 │ 2.664 │ 1.768 │ 1.780 │ 1.531 │ 1.134 │ 0.749 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Ten y net income growth per share │ 39.933 │ 80.593 │ 224.721 │ 226.744 │ 636.791 │ 86.974 │ 104.240 │ 168.500 │ 194.238 │ 163.096 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Five y net income growth per share │ 8.370 │ 14.591 │ 50.197 │ 34.633 │ 84.618 │ 8.389 │ 5.750 │ 2.311 │ 4.479 │ 0.917 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Three y net income growth per share │ 8.284 │ 11.766 │ 29.301 │ 4.564 │ 6.817 │ 0.703 │ 1.418 │ 0.172 │ 2.247 │ 1.220 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Ten y shareholders equity growth per share │ -3.048 M │ -996.493 K │ -3.835 M │ -13.649 M │ -19.361 M │ 173.846 │ 144.706 │ 192.235 │ 251.082 │ 234.882 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Five y shareholders equity growth per share │ 20.726 │ 3.620 │ 16.709 │ 53.559 │ 59.025 │ 7.048 │ 30.537 │ 9.912 │ 3.620 │ 2.930 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Three y shareholders equity growth per share │ 13.073 │ 2.983 │ 10.889 │ 3.479 │ 18.429 │ 5.396 │ 1.302 │ 1.161 │ 1.571 │ 1.421 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Ten y dividendper share growth per share │ -1 │ 0.102 │ 1.253 │ 0.092 │ -1 │ -1 │ 0 │ -1 │ 0 │ -1 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Five y dividendper share growth per share │ -1 │ 0 │ -0.479 │ 0 │ -1 │ 0 │ -1 │ -1 │ -1 │ 0 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Three y dividendper share growth per share │ -1 │ 0 │ -0.511 │ 0 │ -1 │ -1 │ -1 │ 0 │ 0 │ 0 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Receivables growth │ 1.304 │ 2.694 │ 2.339 │ -0.298 │ 0.052 │ 0.821 │ 0.187 │ 0.179 │ 0.458 │ 0.305 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Inventory growth │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0.882 │ 0.741 │ 0.875 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Asset growth │ 2.087 │ 0.351 │ 0.749 │ 1.290 │ 0.427 │ 0.391 │ 0.415 │ 0.346 │ 0.360 │ 0.287 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Book valueper share growth │ 0 │ 0 │ 0 │ 0 │ 0.419 │ 0.267 │ 0.281 │ 0.332 │ 0.507 │ 0.206 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Debt growth │ -0.003 │ 20.754 │ 0.472 │ 0.280 │ 0.098 │ 0.588 │ 0.369 │ 0.070 │ 0.097 │ 0.232 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Rdexpense growth │ 2.692 │ 0.295 │ 0.357 │ 1.093 │ 0.294 │ 0.237 │ 0.334 │ 0.645 │ 0.151 │ 0.329 │ ├──────────────────────────────────────────────┼──────────┼────────────┼──────────┼───────────┼───────────┼─────────┼─────────┼─────────┼─────────┼─────────┤ │ Sgaexpenses growth │ 2.454 │ 0.307 │ 0.460 │ 0.849 │ 0.180 │ 0.330 │ 0.327 │ 0.532 │ 0.133 │ 0.959 │ └──────────────────────────────────────────────┴──────────┴────────────┴──────────┴───────────┴───────────┴─────────┴─────────┴─────────┴─────────┴─────────┘ "},{"id":1126,"href":"/OpenBBTerminal/terminal/stocks/fa/hq/","title":"Hq","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: hq [-h] [--export {csv,json,xlsx}] Opens in Google Maps, the location of the company headquarters.\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) "},{"id":1127,"href":"/OpenBBTerminal/terminal/stocks/fa/income/","title":"Income","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: income [-q] [-r] [-p PLOT [PLOT ...]] [-h] [--export EXPORT] [-l LIMIT] [--source {yf,polygon,av,fmp}] Prints a complete income statement over time. This can be either quarterly or annually. The following fields are expected: Accepted date, Cost and expenses, Cost of revenue, Depreciation and amortization, Ebitda, Ebitda Ratio, Eps, EPS Diluted, Filling date, Final link, General and administrative expenses, Gross profit, Gross profit ratio, Income before tax, Income before tax ratio, Income tax expense, Interest expense, Link, Net income, Net income ratio, Operating expenses, Operating income, Operating income ratio, Other expenses, Period, Research and development expenses, Revenue, Selling and marketing expenses, Total other income expenses net, Weighted average shs out, Weighted average shs out dil [Source: Alpha Vantage]\noptional arguments: -q, --quarter Quarter fundamental data flag. (default: False) -r, --ratios Shows percentage change of values. (default: False) -p PLOT [PLOT ...], --plot PLOT [PLOT ...] Rows to plot. (-1 represents invalid data) (default: None) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 5) --source {yf,polygon,av,fmp} Data source to select from (default: yf) Example:\n2022 Feb 16, 06:23 (✨) /stocks/fa/ $ income -l 5 MSFT Income Statement ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ 2017-06-30 ┃ 2018-06-30 ┃ 2019-06-30 ┃ 2020-06-30 ┃ 2021-06-30 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ reportedCurrency │ USD │ USD │ USD │ USD │ USD │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ grossProfit │ 62.310 B │ 72.007 B │ 82.933 B │ 96.937 B │ 115.856 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ totalRevenue │ 96.571 B │ 107.222 B │ 123.495 B │ 140.503 B │ 165.936 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ costOfRevenue │ 34.261 B │ 62.776 B │ 67.908 B │ 73.159 B │ 79.977 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ costofGoodsAndServicesSold │ 34.261 B │ 38.353 B │ 42.910 B │ 46.078 B │ 52.232 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ operatingIncome │ 29.025 B │ 35.058 B │ 42.959 B │ 52.959 B │ 69.916 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ sellingGeneralAndAdministrative │ 20.020 B │ 22.223 B │ 23.098 B │ 24.709 B │ 25.224 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ researchAndDevelopment │ 13.037 B │ 14.726 B │ 16.876 B │ 19.269 B │ 20.716 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ operatingExpenses │ 35.063 B │ 39.149 B │ 41.874 B │ 46.350 B │ 48.461 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ investmentIncomeNet │ 1.387 B │ 2.214 B │ 2.762 B │ 2.680 B │ 2.131 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ netInterestIncome │ -2.222 B │ -2.733 B │ -2.686 B │ -2.591 B │ -2.346 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ interestIncome │ 1.182 B │ 1.522 B │ 812 M │ 2.680 B │ 2.131 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ interestExpense │ 2.222 B │ 2.733 B │ 2.686 B │ 2.591 B │ 2.346 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ nonInterestIncome │ -674 M │ 109.955 B │ 126.181 B │ 143.094 B │ 168.282 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ otherNonOperatingIncome │ -251 M │ -59 M │ -57 M │ -40 M │ 98 M │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ depreciation │ 6.100 B │ 7.700 B │ 9.700 B │ 10.700 B │ 9.300 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ depreciationAndAmortization │ 1.700 B │ 2.200 B │ 1.900 B │ 2.211 B │ 2.521 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ incomeBeforeTax │ 29.901 B │ 36.474 B │ 43.688 B │ 53.036 B │ 71.102 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ incomeTaxExpense │ 4.412 B │ 19.903 B │ 4.448 B │ 8.755 B │ 9.831 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ interestAndDebtExpense │ 2.222 B │ 2.733 B │ 2.686 B │ 2.591 B │ 2.346 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ netIncomeFromContinuingOperations │ 21.204 B │ 16.571 B │ 39.240 B │ 44.281 B │ 61.271 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ comprehensiveIncomeNetOfTax │ 24.322 B │ 13.715 B │ 41.154 B │ 47.807 B │ 59.897 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ ebit │ 32.123 B │ 39.207 B │ 46.374 B │ 55.627 B │ 73.448 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ ebitda │ 33.823 B │ 41.407 B │ 48.274 B │ 57.838 B │ 75.969 B │ ├───────────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ netIncome │ 25.489 B │ 16.571 B │ 39.240 B │ 44.281 B │ 61.271 B │ └───────────────────────────────────┴────────────┴────────────┴────────────┴────────────┴────────────┘ "},{"id":1128,"href":"/OpenBBTerminal/terminal/stocks/fa/info/","title":"Info","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: info [-h] [--export {csv,json,xlsx}] Print information about the company. [Source: Yahoo Finance]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:58 (✨) /stocks/fa/ $ info Ticker Info ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Zip │ 78725 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Sector │ Consumer Cyclical │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Full time employees │ 99.290 K │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ City │ Austin │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Phone │ (512) 516-8177 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ State │ TX │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Country │ United States │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Website │ https://www.tesla.com │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Max age │ 1 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Address │ 13101 Tesla Road │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Industry │ Auto Manufacturers │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Ebitda margins │ 0.173 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Profit margins │ 0.103 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Gross margins │ 0.253 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Operating cashflow │ 11.497 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Revenue growth │ 0.649 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Operating margins │ 0.121 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Ebitda │ 9.333 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Target low price │ 250 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Recommendation key │ hold │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Gross profits │ 13.606 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Free cashflow │ 4.628 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Target median price │ 1.035 K │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Current price │ 922.430 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Earnings growth │ 7.538 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Current ratio │ 1.375 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Return on assets │ 0.071 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Number of analyst opinions │ 36 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Target mean price │ 965.990 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Debt to equity │ 28.192 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Return on equity │ 0.204 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Target high price │ 1.480 K │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Total cash │ 17.707 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Total debt │ 8.904 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Total revenue │ 53.823 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Total cash per share │ 17.133 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Financial currency │ USD │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Revenue per share │ 54.587 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Quick ratio │ 0.999 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Recommendation mean │ 2.600 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Exchange │ NMS │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Short name │ Tesla, Inc. │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Long name │ Tesla, Inc. │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Exchange timezone name │ America/New_York │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Exchange timezone short name │ EST │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Is esg populated │ False │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Gmt off set milliseconds │ -18 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Quote type │ EQUITY │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Symbol │ TSLA │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Message board id │ finmb_27444752 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Market │ us_market │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Enterprise to revenue │ 16.679 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Enterprise to ebitda │ 96.185 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ 52 week change │ 0.156 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Forward EPS │ 12.540 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Shares outstanding │ 1.034 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Book value │ 29.225 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Shares short │ 24.057 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Shares percent shares out │ 0.023 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Last fiscal year end │ 1.641 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Held percent institutions │ 0.425 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Net income to common │ 5.524 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Trailing EPS │ 4.901 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Sand p52 week change │ 0.137 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Price to book │ 31.563 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Held percent insiders │ 0.194 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Next fiscal year end │ 1.704 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Most recent quarter │ 1.641 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Short ratio │ 0.770 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Shares short previous month date │ 1.641 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Float shares │ 838.195 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Beta │ 2.006 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Enterprise value │ 897.696 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Price hint │ 2 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Last split date │ 2020-08-31 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Last split factor │ 5:1 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Earnings quarterly growth │ 7.596 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Price to sales trailing 12 months │ 17.713 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Date short interest │ 1.644 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ PEG ratio │ 4.140 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Forward PE │ 73.559 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Short percent of float │ 0.028 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Shares short prior month │ 22.472 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Implied shares outstanding │ 0 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Previous close │ 875.760 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Regular market open │ 900 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Two hundred day average │ 826.031 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Trailing annual dividend yield │ 0 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Payout ratio │ 0 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Regular market day high │ 923 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Average daily volume 10 day │ 21.790 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Regular market previous close │ 875.760 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Fifty day average │ 987.997 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Trailing annual dividend rate │ 0 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Open │ 900 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Average volume 10 days │ 21.790 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Regular market day low │ 893.377 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Currency │ USD │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Trailing PE │ 188.213 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Regular market volume │ 19.217 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Market cap │ 953.341 B │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Average volume │ 26.044 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Day low │ 893.377 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Ask │ 922.940 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Ask size │ 2.200 K │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Volume │ 19.217 M │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Fifty two week high │ 1.243 K │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Fifty two week low │ 539.490 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Bid │ 925 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Tradeable │ False │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Bid size │ 1 K │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Day high │ 923 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Regular market price │ 922.430 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Pre market price │ 917 │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Logo_url │ https://logo.clearbit.com/tesla.com │ ├───────────────────────────────────┼─────────────────────────────────────┤ │ Trailing peg ratio │ 2.587 │ └───────────────────────────────────┴─────────────────────────────────────┘ Business Summary: Tesla, Inc. designs, develops, manufactures, leases, and sells electric vehicles, and energy generation and storage systems in the United States, China, and internationally. The company operates in two segments, Automotive, and Energy Generation and Storage. The Automotive segment offers electric vehicles, as well as sells automotive regulatory credits. It provides sedans and sport utility vehicles through direct and used vehicle sales, a network of Tesla Superchargers, and in-app upgrades; and purchase financing and leasing services. This segment is also involved in the provision of non-warranty after-sales vehicle services, sale of used vehicles, retail merchandise, and vehicle insurance, as well as sale of products to third party customers; services for electric vehicles through its company-owned service locations, and Tesla mobile service technicians; and vehicle limited warranties and extended service plans. The Energy Generation and Storage segment engages in the design, manufacture, installation, sale, and leasing of solar energy generation and energy storage products, and related services to residential, commercial, and industrial customers and utilities through its website, stores, and galleries, as well as through a network of channel partners. This segment also offers service and repairs to its energy product customers, including under warranty; and various financing options to its solar customers. The company was formerly known as Tesla Motors, Inc. and changed its name to Tesla, Inc. in February 2017. Tesla, Inc. was incorporated in 2003 and is headquartered in Austin, Texas. "},{"id":1129,"href":"/OpenBBTerminal/terminal/stocks/fa/key/","title":"Key","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: key [-h] [--export {csv,json,xlsx}] Gives main key metrics about the company (it\u0026rsquo;s a subset of the Overview data from Alpha Vantage API). The following fields are expected: Market capitalization, EBITDA, EPS, PE ratio, PEG ratio, Price to book ratio, Return on equity TTM, Payout ratio, Price to sales ratio TTM, Dividend yield, 50 day moving average, Analyst target price, Beta [Source: Alpha Vantage API]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 06:54 (✨) /stocks/fa/ $ key AAPL Key Metrics ┏━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ Market capitalization │ 2.820 T │ ├──────────────────────────┼───────────┤ │ EBITDA │ 128.218 B │ ├──────────────────────────┼───────────┤ │ EPS │ 6.01 │ ├──────────────────────────┼───────────┤ │ PE ratio │ 28.73 │ ├──────────────────────────┼───────────┤ │ PEG ratio │ 3.28 │ ├──────────────────────────┼───────────┤ │ Price to book ratio │ 38.31 │ ├──────────────────────────┼───────────┤ │ Return on equity TTM │ 1.456 │ ├──────────────────────────┼───────────┤ │ Price to sales ratio TTM │ 7.45 │ ├──────────────────────────┼───────────┤ │ Dividend yield │ 0.0052 │ ├──────────────────────────┼───────────┤ │ 50 day moving average │ 172.3 │ ├──────────────────────────┼───────────┤ │ Analyst target price │ 192.52 │ ├──────────────────────────┼───────────┤ │ Beta │ 1.188 │ └──────────────────────────┴───────────┘ "},{"id":1130,"href":"/OpenBBTerminal/terminal/stocks/fa/metrics/","title":"Metrics","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: metrics [-l LIMIT] [-q] [-h] [--export {csv,json,xlsx}] Prints a list of the key metrics of a company over time. This can be either quarterly or annually. [Source: Financial Modeling Prep]\noptional arguments: -l LIMIT, --limit LIMIT Limit of latest years/quarters. (default: 1) -q, --quarter Quarter fundamental data flag. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example (ticker is AMZN):\n2022 Feb 16, 05:34 (✨) /stocks/fa/ $ metrics -l 10 Ticker Key Metrics ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ 2012 ┃ 2013 ┃ 2014 ┃ 2015 ┃ 2016 ┃ 2017 ┃ 2018 ┃ 2019 ┃ 2020 ┃ 2021 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Period │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Revenue per share │ 134.863 │ 162.915 │ 192.615 │ 229.135 │ 286.892 │ 370.554 │ 478.207 │ 567.858 │ 764.483 │ 930.341 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Net income per share │ -0.086 │ 0.600 │ -0.522 │ 1.276 │ 5.002 │ 6.319 │ 20.684 │ 23.457 │ 42.240 │ 66.067 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Operating cash flow per share │ 9.227 │ 11.980 │ 14.810 │ 25.525 │ 34.690 │ 38.404 │ 63.086 │ 77.964 │ 130.820 │ 91.737 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Free cash flow per share │ 0.872 │ 4.444 │ 4.219 │ 15.698 │ 20.477 │ 13.498 │ 35.515 │ 43.832 │ 51.335 │ -29.160 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Cash per share │ 25.272 │ 27.236 │ 37.697 │ 42.415 │ 54.812 │ 64.554 │ 84.702 │ 111.379 │ 167.121 │ 190.196 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Book value per share │ 18.084 │ 21.326 │ 23.249 │ 28.660 │ 40.686 │ 57.727 │ 89.423 │ 125.628 │ 184.958 │ 273.752 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Tangible book value per share │ 10.850 │ 14.105 │ 14.411 │ 18.979 │ 30.901 │ 22.892 │ 51.111 │ 87.565 │ 145.358 │ 243.315 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Shareholders equity per share │ 18.084 │ 21.326 │ 23.249 │ 28.660 │ 40.686 │ 57.727 │ 89.423 │ 125.628 │ 184.958 │ 273.752 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Interest debt per share │ 7.011 │ 7.291 │ 18.344 │ 18.617 │ 17.253 │ 53.315 │ 51.154 │ 50.636 │ 170.368 │ 234.067 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Market cap │ 123.560 B │ 184.176 B │ 163.793 B │ 274.129 B │ 393.600 B │ 690.154 B │ 813.499 B │ 924.116 B │ 1.619 T │ 1.454 T │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Enterprise value │ 118.560 B │ 178.709 B │ 157.501 B │ 266.474 B │ 381.960 B │ 694.375 B │ 805.244 B │ 911.438 B │ 1.661 T │ 1.534 T │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Pe ratio │ -3.168 K │ 672.174 │ -679.638 │ 459.948 │ 166.006 │ 227.548 │ 80.760 │ 79.748 │ 75.905 │ 43.585 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Price to sales ratio │ 2.022 │ 2.474 │ 1.841 │ 2.562 │ 2.894 │ 3.880 │ 3.493 │ 3.294 │ 4.194 │ 3.095 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Pocfratio │ 29.560 │ 33.639 │ 23.939 │ 22.997 │ 23.937 │ 37.439 │ 26.479 │ 23.994 │ 24.509 │ 31.389 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Pfcf ratio │ 312.811 │ 90.682 │ 84.039 │ 37.393 │ 40.552 │ 106.522 │ 47.034 │ 42.678 │ 62.457 │ -98.749 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Pb ratio │ 15.083 │ 18.898 │ 15.249 │ 20.482 │ 20.410 │ 24.907 │ 18.680 │ 14.891 │ 17.335 │ 10.519 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Ptb ratio │ 15.083 │ 18.898 │ 15.249 │ 20.482 │ 20.410 │ 24.907 │ 18.680 │ 14.891 │ 17.335 │ 10.519 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Ev to sales │ 1.941 │ 2.400 │ 1.770 │ 2.490 │ 2.809 │ 3.904 │ 3.458 │ 3.249 │ 4.303 │ 3.266 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Enterprise value over EBITDA │ 44.909 │ 46.672 │ 32.262 │ 32.160 │ 30.813 │ 43.054 │ 28.730 │ 24.402 │ 32.518 │ 20.662 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Ev to operating cash flow │ 28.364 │ 32.641 │ 23.020 │ 22.355 │ 23.229 │ 37.668 │ 26.210 │ 23.665 │ 25.148 │ 33.120 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Ev to free cash flow │ 300.153 │ 87.990 │ 80.811 │ 36.349 │ 39.353 │ 107.173 │ 46.557 │ 42.093 │ 64.087 │ -104.193 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Earnings yield │ -0.000 │ 0.001 │ -0.001 │ 0.002 │ 0.006 │ 0.004 │ 0.012 │ 0.013 │ 0.013 │ 0.023 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Free cash flow yield │ 0.003 │ 0.011 │ 0.012 │ 0.027 │ 0.025 │ 0.009 │ 0.021 │ 0.023 │ 0.016 │ -0.010 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Debt to equity │ 0.376 │ 0.327 │ 0.769 │ 0.615 │ 0.399 │ 0.893 │ 0.540 │ 0.377 │ 0.903 │ 0.842 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Debt to assets │ 0.748 │ 0.757 │ 0.803 │ 0.795 │ 0.769 │ 0.789 │ 0.732 │ 0.724 │ 0.709 │ 0.671 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Net debt to EBITDA │ -1.894 │ -1.428 │ -1.289 │ -0.924 │ -0.939 │ 0.262 │ -0.295 │ -0.339 │ 0.827 │ 1.080 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Current ratio │ 1.121 │ 1.072 │ 1.115 │ 1.076 │ 1.045 │ 1.040 │ 1.098 │ 1.097 │ 1.050 │ 1.136 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Interest coverage │ 7.348 │ 5.284 │ 0.848 │ 4.865 │ 8.649 │ 4.842 │ 8.766 │ 9.088 │ 13.903 │ 13.753 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Income quality │ -107.179 │ 19.982 │ -28.390 │ 20 │ 6.935 │ 6.078 │ 3.050 │ 3.324 │ 3.097 │ 1.389 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Payout ratio │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ 0 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Sales general and administrative to revenue │ 0.015 │ 0.015 │ 0.017 │ 0.016 │ 0.018 │ 0.021 │ 0.019 │ 0.019 │ 0.017 │ 0.019 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Research and ddevelopement to revenue │ 0.075 │ 0.088 │ 0.104 │ 0.117 │ 0.118 │ 0.127 │ 0.124 │ 0.128 │ 0.111 │ 0.119 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Intangibles to total assets │ 0.101 │ 0.082 │ 0.075 │ 0.069 │ 0.056 │ 0.127 │ 0.115 │ 0.083 │ 0.062 │ 0.037 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Capex to operating cash flow │ -0.906 │ -0.629 │ -0.715 │ -0.385 │ -0.410 │ -0.649 │ -0.437 │ -0.438 │ -0.608 │ -1.318 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Capex to revenue │ -0.062 │ -0.046 │ -0.055 │ -0.043 │ -0.050 │ -0.067 │ -0.058 │ -0.060 │ -0.104 │ -0.130 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Capex to depreciation │ -1.753 │ -1.059 │ -1.031 │ -0.731 │ -0.830 │ -1.042 │ -0.875 │ -0.774 │ -1.590 │ -1.780 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Stock based compensation to revenue │ 0.014 │ 0.015 │ 0.017 │ 0.020 │ 0.022 │ 0.024 │ 0.023 │ 0.024 │ 0.024 │ 0.027 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Graham number │ 5.919 │ 16.961 │ 16.519 │ 28.687 │ 67.669 │ 90.593 │ 204.000 │ 257.498 │ 419.265 │ 637.916 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Roic │ 0.050 │ 0.043 │ 0.007 │ 0.071 │ 0.106 │ 0.056 │ 0.132 │ 0.106 │ 0.118 │ 0.089 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Return on tangible assets │ -0.001 │ 0.007 │ -0.005 │ 0.010 │ 0.030 │ 0.026 │ 0.070 │ 0.056 │ 0.071 │ 0.082 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Graham net net │ -16.284 │ -23.381 │ -38.938 │ -47.780 │ -55.171 │ -113.997 │ -116.539 │ -166.612 │ -223.943 │ -287.657 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Working capital │ 2.294 B │ 1.645 B │ 3.238 B │ 2.575 B │ 1.965 B │ 2.314 B │ 6.710 B │ 8.522 B │ 6.348 B │ 19.314 B │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Tangible asset value │ 4.915 B │ 6.446 B │ 6.658 B │ 8.863 B │ 14.647 B │ 10.988 B │ 24.891 B │ 43.257 B │ 73.406 B │ 122.874 B │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Net current asset value │ -3.067 B │ -5.788 B │ -12.437 B │ -15.586 B │ -18.336 B │ -43.404 B │ -43.998 B │ -66.854 B │ -95.058 B │ -120.724 B │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Invested capital │ 0.376 │ 0.327 │ 0.769 │ 0.615 │ 0.399 │ 0.893 │ 0.540 │ 0.377 │ 0.903 │ 0.842 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Average receivables │ 13.953 B │ 14.655 B │ 15.077 B │ 15.482 B │ 16.441 B │ 18.853 B │ 20.610 B │ 22.679 B │ 24.542 B │ 28.716 B │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Average payables │ 42.928 B │ 43.836 B │ 44.499 B │ 46.468 B │ 48.924 B │ 53.578 B │ 55.365 B │ 59.861 B │ 72.539 B │ 75.602 B │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Average inventory │ 14.913 B │ 15.603 B │ 16.047 B │ 17.019 B │ 17.628 B │ 19.921 B │ 20.485 B │ 22.146 B │ 23.795 B │ 28.218 B │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Days sales outstanding │ 20.098 │ 23.370 │ 23.019 │ 21.909 │ 22.383 │ 27.014 │ 26.138 │ 27.085 │ 23.203 │ 25.553 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Days payables outstanding │ 92.786 │ 88.002 │ 81.715 │ 87.524 │ 87.244 │ 92.102 │ 80.493 │ 83.695 │ 90.728 │ 82.636 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Days of inventory on hand │ 42.018 │ 43.097 │ 41.203 │ 43.953 │ 39.508 │ 42.696 │ 36.196 │ 36.358 │ 29.762 │ 34.288 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Receivables turnover │ 18.161 │ 15.618 │ 15.857 │ 16.660 │ 16.307 │ 13.512 │ 13.965 │ 13.476 │ 15.731 │ 14.284 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Payables turnover │ 3.934 │ 4.148 │ 4.467 │ 4.170 │ 4.184 │ 3.963 │ 4.535 │ 4.361 │ 4.023 │ 4.417 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Inventory turnover │ 8.687 │ 8.469 │ 8.859 │ 8.304 │ 9.239 │ 8.549 │ 10.084 │ 10.039 │ 12.264 │ 10.645 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Roe │ -0.005 │ 0.028 │ -0.022 │ 0.045 │ 0.123 │ 0.109 │ 0.231 │ 0.187 │ 0.228 │ 0.241 │ ├─────────────────────────────────────────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼───────────┼────────────┤ │ Capex per share │ -8.355 │ -7.536 │ -10.591 │ -9.827 │ -14.213 │ -24.906 │ -27.571 │ -34.132 │ -79.485 │ -120.897 │ └─────────────────────────────────────────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┴───────────┴────────────┘ "},{"id":1131,"href":"/OpenBBTerminal/terminal/stocks/fa/mgmt/","title":"Mgmt","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: mgmt [-h] Show the management team. Namely: Name, Title, Information from Google and Insider Activity. Source: https://businessinsider.com\nThe loaded stock in the screenshot below is, GE.\noptional arguments: -h, --help show this help message (default: False) "},{"id":1132,"href":"/OpenBBTerminal/terminal/stocks/fa/mktcap/","title":"Mktcap","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: mktcap [-s START] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Market cap estimate over time. [Source: Yahoo Finance]\noptional arguments: -s START, --start START The starting date (format YYYY-MM-DD) of the ETF (default: 2019-03-03) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1133,"href":"/OpenBBTerminal/terminal/stocks/fa/overview/","title":"Overview","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: overview [-h] [--export {csv,json,xlsx}] Prints an overview about the company. Also, the C i k field corresponds to Central Index Key, which can be used to search a company on https://www.sec.gov/edgar/searchedgar/cik.htm [Source: Alpha Vantage]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:03 (✨) /stocks/fa/ $ overview TSLA Overview ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Symbol │ TSLA │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Asset type │ Common Stock │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Name │ Tesla Inc │ ├───────────────────────────────┼───────────────────────────────────────┤ │ C i k │ 1318605 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Exchange │ NASDAQ │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Currency │ USD │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Country │ USA │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Sector │ MANUFACTURING │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Industry │ MOTOR VEHICLES \u0026amp; PASSENGER CAR BODIES │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Address │ 3500 DEER CREEK RD, PALO ALTO, CA, US │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Fiscal year end │ December │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Latest quarter │ 2021-12-31 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Market capitalization │ 953.341 B │ ├───────────────────────────────┼───────────────────────────────────────┤ │ EBITDA │ 9.333 B │ ├───────────────────────────────┼───────────────────────────────────────┤ │ PE ratio │ 188.21 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ PEG ratio │ 2.587 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Book value │ 29.23 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Dividend per share │ 0 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Dividend yield │ 0 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ EPS │ 4.901 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Revenue per share TTM │ 54.59 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Profit margin │ 0.102 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Operating margin TTM │ 0.121 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Return on assets TTM │ 0.0714 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Return on equity TTM │ 0.204 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Revenue TTM │ 53.823 B │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Gross profit TTM │ 13.606 B │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Diluted EPS TTM │ 4.901 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Quarterly earnings growth YOY │ 7.54 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Quarterly revenue growth YOY │ 0.649 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Analyst target price │ 965.99 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Trailing PE │ 188.21 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Forward PE │ 88.5 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Price to sales ratio TTM │ 17.71 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Price to book ratio │ 29.98 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ EV to revenue │ 16.65 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ EV to EBITDA │ 93.12 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Beta │ 2.006 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ 52 week high │ 1243.49 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ 52 week low │ 539.49 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ 50 day moving average │ 989.85 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ 200 day moving average │ 824.84 │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Shares outstanding │ 1.034 B │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Dividend date │ None │ ├───────────────────────────────┼───────────────────────────────────────┤ │ Ex dividend date │ None │ └───────────────────────────────┴───────────────────────────────────────┘ Company Description: Tesla, Inc. is an American electric vehicle and clean energy company based in Palo Alto, California. Tesla's current products include electric cars, battery energy storage from home to grid-scale, solar panels and solar roof tiles, as well as other related products and services. In 2020, Tesla had the highest sales in the plug-in and battery electric passenger car segments, capturing 16% of the plug-in market (which includes plug-in hybrids) and 23% of the battery-electric (purely electric) market. Through its subsidiary Tesla Energy, the company develops and is a major installer of solar photovoltaic energy generation systems in the United States. Tesla Energy is also one of the largest global suppliers of battery energy storage systems, with 3 GWh of battery storage supplied in 2020. "},{"id":1134,"href":"/OpenBBTerminal/terminal/stocks/fa/profile/","title":"Profile","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: profile [-h] Displays a profile of the loaded company. Source: https://site.financialmodelingprep.com/developer/\noptional arguments: -h, --help show this help message (default: False) "},{"id":1135,"href":"/OpenBBTerminal/terminal/stocks/fa/quote/","title":"Quote","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: quote [-h] Displays a detailed quote of the loaded company. Source: https://site.financialmodelingprep.com/developer/docs\noptional arguments: -h, --help show this help message (default: False) "},{"id":1136,"href":"/OpenBBTerminal/terminal/stocks/fa/ratios/","title":"Ratios","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: ratios [-l LIMIT] [-q] [-h] [--export {csv,json,xlsx}] Prints in-depth ratios of a company over time. This can be either quarterly or annually. This contains, among other things, Price-to-Book Ratio, Payout Ratio and Operating Cycle. [Source: Financial Modeling Prep]\noptional arguments: -l LIMIT, --limit LIMIT Limit of latest years/quarters. (default: 1) -q, --quarter Quarter fundamental data flag. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example (ticker is AAPL):\n2022 Feb 16, 05:39 (✨) /stocks/fa/ $ ratios -l 10 Ticker Ratios ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┓ ┃ ┃ 2012 ┃ 2013 ┃ 2014 ┃ 2015 ┃ 2016 ┃ 2017 ┃ 2018 ┃ 2019 ┃ 2020 ┃ 2021 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━┩ │ Period │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ FY │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Current ratio │ 1.496 │ 1.679 │ 1.080 │ 1.109 │ 1.353 │ 1.276 │ 1.124 │ 1.540 │ 1.364 │ 1.075 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Quick ratio │ 1.241 │ 1.402 │ 0.824 │ 0.892 │ 1.221 │ 1.090 │ 0.987 │ 1.384 │ 1.218 │ 0.910 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Cash ratio │ 0.279 │ 0.327 │ 0.218 │ 0.262 │ 0.259 │ 0.201 │ 0.222 │ 0.462 │ 0.361 │ 0.278 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Days of sales outstanding │ 43.593 │ 44.081 │ 54.350 │ 47.388 │ 49.593 │ 56.801 │ 67.332 │ 64.259 │ 49.788 │ 51.391 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Days of inventory outstanding │ 3.287 │ 6.040 │ 6.864 │ 6.120 │ 5.923 │ 12.564 │ 8.818 │ 9.264 │ 8.742 │ 11.277 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Operating cycle │ 46.879 │ 50.121 │ 61.214 │ 53.508 │ 55.516 │ 69.364 │ 76.150 │ 73.522 │ 58.529 │ 62.668 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Days of payables outstanding │ 87.982 │ 76.581 │ 98.180 │ 92.469 │ 103.613 │ 126.928 │ 124.570 │ 104.314 │ 91.048 │ 93.851 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Cash conversion cycle │ -41.103 │ -26.460 │ -36.967 │ -38.961 │ -48.097 │ -57.563 │ -48.420 │ -30.792 │ -32.519 │ -31.184 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Gross profit margin │ 0.439 │ 0.376 │ 0.386 │ 0.401 │ 0.391 │ 0.385 │ 0.383 │ 0.378 │ 0.382 │ 0.418 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Operating profit margin │ 0.353 │ 0.287 │ 0.287 │ 0.305 │ 0.278 │ 0.268 │ 0.267 │ 0.246 │ 0.241 │ 0.298 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Pretax profit margin │ 0.356 │ 0.293 │ 0.293 │ 0.310 │ 0.285 │ 0.280 │ 0.274 │ 0.253 │ 0.244 │ 0.299 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Net profit margin │ 0.267 │ 0.217 │ 0.216 │ 0.228 │ 0.212 │ 0.211 │ 0.224 │ 0.212 │ 0.209 │ 0.259 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Effective tax rate │ 0.252 │ 0.262 │ 0.261 │ 0.264 │ 0.256 │ 0.246 │ 0.183 │ 0.159 │ 0.144 │ 0.133 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Return on assets │ 0.237 │ 0.179 │ 0.170 │ 0.184 │ 0.142 │ 0.129 │ 0.163 │ 0.163 │ 0.177 │ 0.270 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Return on equity │ 0.353 │ 0.300 │ 0.354 │ 0.447 │ 0.356 │ 0.361 │ 0.556 │ 0.611 │ 0.879 │ 1.501 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Return on capital employed │ 0.402 │ 0.300 │ 0.312 │ 0.339 │ 0.247 │ 0.223 │ 0.285 │ 0.275 │ 0.303 │ 0.483 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Net income per EBT │ 0.748 │ 0.738 │ 0.739 │ 0.736 │ 0.744 │ 0.754 │ 0.817 │ 0.841 │ 0.856 │ 0.867 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Ebt per ebit │ 1.009 │ 1.024 │ 1.019 │ 1.018 │ 1.022 │ 1.045 │ 1.028 │ 1.028 │ 1.012 │ 1.002 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Ebit per revenue │ 0.353 │ 0.287 │ 0.287 │ 0.305 │ 0.278 │ 0.268 │ 0.267 │ 0.246 │ 0.241 │ 0.298 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Debt ratio │ 0.329 │ 0.403 │ 0.519 │ 0.589 │ 0.601 │ 0.643 │ 0.707 │ 0.733 │ 0.798 │ 0.820 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Debt equity ratio │ 0.489 │ 0.675 │ 1.078 │ 1.434 │ 1.508 │ 1.800 │ 2.413 │ 2.741 │ 3.957 │ 4.564 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Company equity multiplier │ 1.489 │ 1.675 │ 2.078 │ 2.434 │ 2.508 │ 2.800 │ 3.413 │ 3.741 │ 4.957 │ 5.564 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Receivables turnover │ 8.373 │ 8.280 │ 6.716 │ 7.702 │ 7.360 │ 6.426 │ 5.421 │ 5.680 │ 7.331 │ 7.102 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Payables turnover │ 4.149 │ 4.766 │ 3.718 │ 3.947 │ 3.523 │ 2.876 │ 2.930 │ 3.499 │ 4.009 │ 3.889 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Inventory turnover │ 111.057 │ 60.434 │ 53.178 │ 59.638 │ 61.621 │ 29.052 │ 41.394 │ 39.401 │ 41.753 │ 32.368 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Fixed asset turnover │ 10.129 │ 10.298 │ 8.863 │ 10.401 │ 7.984 │ 6.785 │ 6.430 │ 6.961 │ 7.467 │ 9.275 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Asset turnover │ 0.889 │ 0.826 │ 0.788 │ 0.805 │ 0.670 │ 0.611 │ 0.726 │ 0.769 │ 0.848 │ 1.042 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Operating cash flow per share │ 1.943 │ 2.071 │ 2.453 │ 3.531 │ 3.008 │ 3.047 │ 3.907 │ 3.757 │ 4.649 │ 6.229 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Free cash flow per share │ 1.584 │ 1.721 │ 2.050 │ 3.032 │ 2.389 │ 2.434 │ 3.235 │ 3.189 │ 4.228 │ 5.566 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Cash per share │ 1.113 │ 1.565 │ 1.030 │ 1.808 │ 3.069 │ 3.555 │ 3.345 │ 5.444 │ 5.241 │ 3.751 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Payout ratio │ 0.060 │ 0.285 │ 0.282 │ 0.217 │ 0.266 │ 0.264 │ 0.230 │ 0.256 │ 0.245 │ 0.153 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Operating cash flow sales ratio │ 0.325 │ 0.314 │ 0.327 │ 0.348 │ 0.305 │ 0.277 │ 0.292 │ 0.267 │ 0.294 │ 0.284 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Free cash flow operating cash flow ratio │ 0.815 │ 0.831 │ 0.836 │ 0.859 │ 0.794 │ 0.799 │ 0.828 │ 0.849 │ 0.909 │ 0.893 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Capital expenditure coverage ratio │ -5.409 │ -5.913 │ -6.085 │ -7.074 │ -4.859 │ -4.971 │ -5.816 │ -6.612 │ -11.038 │ -9.385 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Dividend paid and capex coverage ratio │ -7.356 │ 36.066 │ 45.478 │ 1.113 K │ -47.084 │ -2.446 K │ 194.070 │ 19.148 │ 11.913 │ 30.762 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Dividend payout ratio │ 0.060 │ 0.285 │ 0.282 │ 0.217 │ 0.266 │ 0.264 │ 0.230 │ 0.256 │ 0.245 │ 0.153 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price book value ratio │ 4.776 │ 3.969 │ 5.734 │ 5.557 │ 5.019 │ 6.489 │ 9.816 │ 12.710 │ 30.554 │ 39.348 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price to book ratio │ 4.776 │ 3.969 │ 5.734 │ 5.557 │ 5.019 │ 6.489 │ 9.816 │ 12.710 │ 30.554 │ 39.348 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price to sales ratio │ 3.608 │ 2.869 │ 3.499 │ 2.838 │ 2.985 │ 3.794 │ 3.960 │ 4.420 │ 7.272 │ 6.786 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price earnings ratio │ 13.530 │ 13.239 │ 16.190 │ 12.422 │ 14.088 │ 17.990 │ 17.667 │ 20.814 │ 34.773 │ 26.220 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price to free cash flows ratio │ 13.621 │ 10.996 │ 12.819 │ 9.505 │ 12.312 │ 17.121 │ 16.402 │ 19.527 │ 27.211 │ 26.707 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price to operating cash flows ratio │ 11.103 │ 9.136 │ 10.712 │ 8.162 │ 9.778 │ 13.677 │ 13.582 │ 16.574 │ 24.746 │ 23.861 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price cash flow ratio │ 11.103 │ 9.136 │ 10.712 │ 8.162 │ 9.778 │ 13.677 │ 13.582 │ 16.574 │ 24.746 │ 23.861 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price earnings to growth ratio │ 0.229 │ -1.282 │ 1.200 │ 0.289 │ -1.406 │ 1.633 │ 0.598 │ -62.493 │ 3.277 │ 0.368 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price sales ratio │ 3.608 │ 2.869 │ 3.499 │ 2.838 │ 2.985 │ 3.794 │ 3.960 │ 4.420 │ 7.272 │ 6.786 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Dividend yield │ 0.004 │ 0.022 │ 0.017 │ 0.017 │ 0.019 │ 0.015 │ 0.013 │ 0.012 │ 0.007 │ 0.006 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Enterprise value multiple │ 9.382 │ 8.642 │ 10.695 │ 8.362 │ 9.684 │ 12.606 │ 13.100 │ 14.772 │ 25.559 │ 20.890 │ ├──────────────────────────────────────────┼─────────┼─────────┼─────────┼─────────┼─────────┼──────────┼─────────┼─────────┼─────────┼─────────┤ │ Price fair value │ 4.776 │ 3.969 │ 5.734 │ 5.557 │ 5.019 │ 6.489 │ 9.816 │ 12.710 │ 30.554 │ 39.348 │ └──────────────────────────────────────────┴─────────┴─────────┴─────────┴─────────┴─────────┴──────────┴─────────┴─────────┴─────────┴─────────┘ "},{"id":1137,"href":"/OpenBBTerminal/terminal/stocks/fa/score/","title":"Score","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: score [-h] [--export {csv,json,xlsx}] Value investing tool based on Warren Buffett, Joseph Piotroski and Benjamin Graham thoughts. [Source: Financial Modelling Prep]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example (ticker is TSLA):\n2022 Feb 16, 07:05 (✨) /stocks/fa/ $ score Score: 32.22 % "},{"id":1138,"href":"/OpenBBTerminal/terminal/stocks/fa/shrs/","title":"Shrs","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: shrs [-h] [--export {csv,json,xlsx}] Print Major, institutional and mutualfunds shareholders. [Source: Yahoo Finance]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example (ticker is TSLA):\n2022 Feb 16, 07:08 (✨) /stocks/fa/ $ shrs Major Holders: Ticker Shareholders ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ 0 ┃ 1 ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ 19.39% │ Percentage of Shares Held by All Insider │ ├────────┼───────────────────────────────────────────┤ │ 42.53% │ Percentage of Shares Held by Institutions │ ├────────┼───────────────────────────────────────────┤ │ 52.76% │ Percentage of Float Held by Institutions │ ├────────┼───────────────────────────────────────────┤ │ 3205 │ Number of Institutions Holding Shares │ └────────┴───────────────────────────────────────────┘ Institutional Holders: Ticker Shareholders ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┓ ┃ Holder ┃ Shares ┃ Date Reported ┃ Stake ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━┩ │ Vanguard Group, Inc. (The) │ 62.449 M │ 2021-12-30 00:00:00 │ 6.22 % │ 65.994 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Blackrock Inc. │ 52.845 M │ 2021-12-30 00:00:00 │ 5.26 % │ 55.846 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Capital World Investors │ 36.665 M │ 2021-12-30 00:00:00 │ 3.65 % │ 38.747 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ State Street Corporation │ 31.230 M │ 2021-09-29 00:00:00 │ 3.11 % │ 24.218 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Geode Capital Management, LLC │ 13.572 M │ 2021-12-30 00:00:00 │ 1.35 % │ 14.342 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Baillie Gifford and Company │ 10.798 M │ 2021-12-30 00:00:00 │ 1.08 % │ 11.411 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Jennison Associates LLC │ 10.627 M │ 2021-12-30 00:00:00 │ 1.06 % │ 11.230 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ FMR, LLC │ 9.576 M │ 2021-06-29 00:00:00 │ 0.95 % │ 6.509 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Northern Trust Corporation │ 8.558 M │ 2021-12-30 00:00:00 │ 0.85 % │ 9.044 B │ ├───────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Norges Bank Investment Management │ 7.790 M │ 2020-12-30 00:00:00 │ 0.78 % │ 5.497 B │ └───────────────────────────────────┴──────────┴─────────────────────┴────────┴──────────┘ Mutual Fund Holders: Ticker Shareholders ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┓ ┃ Holder ┃ Shares ┃ Date Reported ┃ Stake ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━┩ │ Vanguard Total Stock Market Index Fund │ 22.648 M │ 2021-09-29 00:00:00 │ 2.26 % │ 17.563 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Growth Fund Of America Inc │ 20.853 M │ 2021-11-29 00:00:00 │ 2.08 % │ 23.872 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Vanguard 500 Index Fund │ 17.040 M │ 2021-09-29 00:00:00 │ 1.70 % │ 13.214 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Invesco ETF Tr-Invesco QQQ Tr, Series 1 ETF │ 11.082 M │ 2021-11-29 00:00:00 │ 1.10 % │ 12.686 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ New Perspective Fund Inc │ 10.651 M │ 2021-09-29 00:00:00 │ 1.06 % │ 8.260 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ SPDR S\u0026amp;P 500 ETF Trust │ 8.729 M │ 2021-11-29 00:00:00 │ 0.87 % │ 9.993 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Fidelity 500 Index Fund │ 7.918 M │ 2021-11-29 00:00:00 │ 0.79 % │ 9.064 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ iShares Core S\u0026amp;P 500 ETF │ 6.649 M │ 2021-11-29 00:00:00 │ 0.66 % │ 7.612 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Vanguard Growth Index Fund │ 6.325 M │ 2021-09-29 00:00:00 │ 0.63 % │ 4.905 B │ ├────────────────────────────────────────────────────────────┼──────────┼─────────────────────┼────────┼──────────┤ │ Vanguard Institutional Index Fund-Institutional Index Fund │ 6.226 M │ 2021-09-29 00:00:00 │ 0.62 % │ 4.828 B │ └────────────────────────────────────────────────────────────┴──────────┴─────────────────────┴────────┴──────────┘ "},{"id":1139,"href":"/OpenBBTerminal/terminal/stocks/fa/splits/","title":"Splits","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: splits [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Stock splits and reverse split events since IPO [Source: Yahoo Finance]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1140,"href":"/OpenBBTerminal/terminal/stocks/fa/sust/","title":"Sust","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: sust [-h] [--export {csv,json,xlsx}] Print sustainability values of the company. [Source: Yahoo Finance]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 09:01 (✨) /stocks/fa/ $ sust Ticker Sustainability ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ Palm oil │ False │ ├────────────────────────┼─────────────┤ │ Controversial weapons │ False │ ├────────────────────────┼─────────────┤ │ Gambling │ False │ ├────────────────────────┼─────────────┤ │ Social score │ 16.16 │ ├────────────────────────┼─────────────┤ │ Nuclear │ False │ ├────────────────────────┼─────────────┤ │ Fur leather │ False │ ├────────────────────────┼─────────────┤ │ Alcoholic │ False │ ├────────────────────────┼─────────────┤ │ Gmo │ False │ ├────────────────────────┼─────────────┤ │ Catholic │ False │ ├────────────────────────┼─────────────┤ │ Social percentile │ None │ ├────────────────────────┼─────────────┤ │ Peer count │ 37 │ ├────────────────────────┼─────────────┤ │ Governance score │ 9.61 │ ├────────────────────────┼─────────────┤ │ Environment percentile │ None │ ├────────────────────────┼─────────────┤ │ Animal testing │ False │ ├────────────────────────┼─────────────┤ │ Tobacco │ False │ ├────────────────────────┼─────────────┤ │ Total esg │ 28.54 │ ├────────────────────────┼─────────────┤ │ Highest controversy │ 3 │ ├────────────────────────┼─────────────┤ │ Esg performance │ AVG_PERF │ ├────────────────────────┼─────────────┤ │ Coal │ False │ ├────────────────────────┼─────────────┤ │ Pesticides │ False │ ├────────────────────────┼─────────────┤ │ Adult │ False │ ├────────────────────────┼─────────────┤ │ Percentile │ 55.73 │ ├────────────────────────┼─────────────┤ │ Peer group │ Automobiles │ ├────────────────────────┼─────────────┤ │ Small arms │ False │ ├────────────────────────┼─────────────┤ │ Environment score │ 2.78 │ ├────────────────────────┼─────────────┤ │ Governance percentile │ None │ ├────────────────────────┼─────────────┤ │ Military contract │ False │ └────────────────────────┴─────────────┘ "},{"id":1141,"href":"/OpenBBTerminal/terminal/stocks/fa/warnings/","title":"Warnings","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: warnings [-d] [-h] [--export {csv,json,xlsx}] Sean Seah warnings. Check: Consistent historical earnings per share; Consistently high return on equity; Consistently high return on assets; 5x Net Income \u0026gt; Long-Term Debt; and Interest coverage ratio more than 3. See https://www.drwealth.com/gone-fishing-with- buffett-by-sean-seah/comment-page-1/ [Source: Market Watch]\noptional arguments: -d, --debug print insights into warnings calculation. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example:\n2022 Feb 16, 07:14 (✨) /stocks/fa/ $ warnings Sean Seah Warnings ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ ┃ 2017 ┃ 2018 ┃ 2019 ┃ 2020 ┃ 2021 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ EPS (Basic) │ 6.32 │ 20.68 │ 23.46 │ 42.66 │ 65.94 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ Net Income │ 3030000000 │ 10070000000 │ 11590000000 │ 21330000000 │ 33360000000 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ Interest Expense │ 848000000 │ 1420000000 │ 1600000000 │ 1650000000 │ 1810000000 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ EBITDA │ 13520000000 │ 25330000000 │ 30460000000 │ 39570000000 │ 48360000000 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ Total Shareholders' Equity │ 27710000000 │ 43550000000 │ 62060000000 │ 93400000000 │ 138250000000 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ Liabilities \u0026amp; Shareholders' Equity │ 131310000000 │ 162650000000 │ 225250000000 │ 321200000000 │ 420550000000 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ Long-Term Debt │ 37930000000 │ 39790000000 │ 63210000000 │ 84390000000 │ 116400000000 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ ROE │ 0.11 │ 0.23 │ 0.19 │ 0.23 │ 0.24 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ Interest Coverage Ratio │ 15.94 │ 17.84 │ 19.04 │ 23.98 │ 26.72 │ ├────────────────────────────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤ │ ROA │ 0.02 │ 0.06 │ 0.05 │ 0.07 │ 0.08 │ └────────────────────────────────────┴───────────────┴───────────────┴───────────────┴───────────────┴───────────────┘ Warnings: NOT consistently high return on equity NOT consistently high return on assets 5x Net Income \u0026lt; Long-Term Debt "},{"id":1142,"href":"/OpenBBTerminal/terminal/stocks/fa/web/","title":"Web","parent":"Introduction to the Fundamental Analysis Menu","content":"usage: web [-h] Opens the company\u0026rsquo;s website in your browser.\noptional arguments: -h, --help show this help message (default: False) "},{"id":1143,"href":"/OpenBBTerminal/terminal/stocks/gov/contracts/","title":"Contracts","parent":"Introduction to the Government Menu","content":"usage: contracts [-p PAST_TRANSACTION_DAYS] [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Contracts associated with the loaded ticker. [Source: www.quiverquant.com]\noptional arguments: -p PAST_TRANSACTION_DAYS, --past_transaction_days PAST_TRANSACTION_DAYS Past transaction days (default: 10) --raw Print raw data. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1144,"href":"/OpenBBTerminal/terminal/stocks/gov/gtrades/","title":"Gtrades","parent":"Introduction to the Government Menu","content":"usage: gtrades [-p PAST_TRANSACTIONS_MONTHS] [-g {congress,senate,house}] [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] US Representatives trading in the loaded ticker. [Source: www.quiverquant.com]\noptional arguments: -p PAST_TRANSACTIONS_MONTHS, --past_transactions_months PAST_TRANSACTIONS_MONTHS Past transaction months (default: 6) -g {congress,senate,house}, --govtype {congress,senate,house} --raw Print raw data. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: "},{"id":1145,"href":"/OpenBBTerminal/terminal/stocks/gov/histcont/","title":"Histcont","parent":"Introduction to the Government Menu","content":"usage: histcont [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Shows the value of quarterly-contracts granted by the US governement. [Source: www.quiverquant.com]\noptional arguments: --raw Print raw data. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1146,"href":"/OpenBBTerminal/terminal/stocks/gov/lastcontracts/","title":"Lastcontracts","parent":"Introduction to the Government Menu","content":"usage: lastcontracts [-p PAST_TRANSACTION_DAYS] [-l LIMIT] [-s] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Details US government spending. [Source: www.quiverquant.com]\noptional arguments: -p PAST_TRANSACTION_DAYS, --past_transaction_days PAST_TRANSACTION_DAYS Past transaction days (default: 2) -l LIMIT, --limit LIMIT Limit of contracts to display (default: 20) -s, --sum Flag to show total amount of contracts. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 07:22 (✨) /stocks/gov/ $ lastcontracts Last Government Contracts ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Date ┃ Ticker ┃ Amount ┃ Description ┃ Agency ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ 2022-02-12 00:00:00 │ EW │ 32500.00 │ HEART VALVE │ DEPARTMENT OF VETERANS AFFAIRS (VA) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ HNGR │ 0.00 │ PROSTHETIC LIMB │ DEPARTMENT OF VETERANS AFFAIRS (VA) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ WBA │ 11425.69 │ JYNARQUE │ DEPARTMENT OF VETERANS AFFAIRS (VA) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ VSTO │ 14563.20 │ AMMUNITION FOR TRAINING FOR SIU CLASSES │ DEPARTMENT OF JUSTICE (DOJ) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ VSTO │ 680239.08 │ 556M RH JACKETED FRANGIBLE AMMUNITION PN Z556AA40 │ DEPARTMENT OF HOMELAND SECURITY (DHS) │ │ │ │ │ (DOD VERSION OF PN BC556X1) │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ VSTO │ 1070.18 │ AMMUNITION ORDER - D45 W/MO │ DEPARTMENT OF JUSTICE (DOJ) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ VAR │ 712143.00 │ PREVENTATIVE MAINTENANCE AND REPAIRS OF VARIAN │ DEPARTMENT OF VETERANS AFFAIRS (VA) │ │ │ │ │ LINEAR ACCELERATORS LOCATED AT THE LTC CHARLES S. │ │ │ │ │ │ KETTLES VAMC │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ VAR │ 298800.00 │ DATA HOSTING FOR VARIAN LINAC SOFTWARE │ DEPARTMENT OF VETERANS AFFAIRS (VA) │ │ │ │ │ (ECLIPSE/ARIA) │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ UPS │ 4500.00 │ EXPRESS MAIL AND COURIER SERVICES FOR THE COEUR │ DEPARTMENT OF AGRICULTURE (USDA) │ │ │ │ │ D'ALENE NURSERY, ID │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ TTEK │ 215214.00 │ SUPERFUND TECHNICAL ASSESSMENT \u0026amp; RESPONSE TEAM 5 │ ENVIRONMENTAL PROTECTION AGENCY (EPA) │ │ │ │ │ (START V) CONTRACT FOR EPA REGION 7 - SITE/PROJECT │ │ │ │ │ │ NAME: NEBRASKA SITE ASSESSMENTS. │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ TTEK │ 65468.54 │ SUPERFUND TECHNICAL ASSESSMENT \u0026amp; RESPONSE TEAM 5 │ ENVIRONMENTAL PROTECTION AGENCY (EPA) │ │ │ │ │ (START V) CONTRACT FOR EPA REGION 7 - SITE/PROJECT │ │ │ │ │ │ NAME: FABALL ABANDONED CONTAINER. │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ TTEK │ 60769.52 │ SUPERFUND TECHNICAL ASSESSMENT \u0026amp; RESPONSE TEAM 5 │ ENVIRONMENTAL PROTECTION AGENCY (EPA) │ │ │ │ │ (START V) CONTRACT FOR EPA REGION 7 - SITE/PROJECT │ │ │ │ │ │ NAME: 10TH STREET SITE ASSESSMENT IN COLUMBUS, NE. │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ TTEK │ 231856.02 │ SUPERFUND TECHNICAL ASSESSMENT \u0026amp; RESPONSE TEAM 5 │ ENVIRONMENTAL PROTECTION AGENCY (EPA) │ │ │ │ │ (START V) CONTRACT FOR EPA REGION 7 - SITE/PROJECT │ │ │ │ │ │ NAME: IOWA SITE ASSESSMENTS. │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ T │ 9817.28 │ TELECOMMUNICATION SERVICES (JANUARY) │ DEPARTMENT OF JUSTICE (DOJ) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ T │ 187.49 │ LOCAL LONG DISTANCE PHONE SERVICE - 2ND QUARTER FY │ DEPARTMENT OF JUSTICE (DOJ) │ │ │ │ │ 2022 │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ SYY │ 88158.78 │ BASE FOOD ORDER TO REPLENISH THE WAREHOUSE. │ DEPARTMENT OF JUSTICE (DOJ) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ SYK │ 12938.43 │ HIP REPLACEMENT │ DEPARTMENT OF VETERANS AFFAIRS (VA) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ SYK │ 43282.32 │ STRYKER NEPTUNE SERVICES │ DEPARTMENT OF VETERANS AFFAIRS (VA) │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ SO │ 4697.51 │ TO PROVIDE NON-PERSONAL SERVICE TO REPAIR FDC AT │ GENERAL SERVICES ADMINISTRATION (GSA) │ │ │ │ │ THE CUSTOM HOUSE (GSA BLDG. NO. TX0101ZZ), LOCATED │ │ │ │ │ │ AT 701 SAN JACINTO STREET, HOUSTON, TX 77002-3673. │ │ ├─────────────────────┼────────┼───────────┼────────────────────────────────────────────────────┼───────────────────────────────────────┤ │ 2022-02-11 00:00:00 │ NOC │ 416297.80 │ THE PURPOSE OF THIS CALL ORDER IS FOR THE │ SOCIAL SECURITY ADMINISTRATION (SSA) │ │ │ │ │ CONTRACTOR TO PROVIDE DATA COLLECTION \u0026amp; ANALYTICS │ │ │ │ │ │ (M-21-31 ENTERPRISE LOGGING ONBOARDING SUPPORT) │ │ │ │ │ │ SERVICES. │ │ └─────────────────────┴────────┴───────────┴────────────────────────────────────────────────────┴───────────────────────────────────────┘ "},{"id":1147,"href":"/OpenBBTerminal/terminal/stocks/gov/lasttrades/","title":"Lasttrades","parent":"Introduction to the Government Menu","content":"usage: lasttrades [-g {congress,senate,house}] [-p PAST_TRANSACTIONS_DAYS] [-r REPRESENTATIVE] [-h] [--export {csv,json,xlsx}] Latest government representative trading, searchable by representative. [Source: www.quiverquant.com]\noptional arguments: -g {congress,senate,house}, --govtype {congress,senate,house} -p PAST_TRANSACTIONS_DAYS, --past_transactions_days PAST_TRANSACTIONS_DAYS Past transaction days (default: 5) -r REPRESENTATIVE, --representative REPRESENTATIVE Representative (default: ) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:24 (✨) /stocks/gov/ $ lasttrades Last transactions for CONGRESS Representative Trading ┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ Transaction Date ┃ Ticker ┃ Representative ┃ Transaction ┃ Range ┃ House ┃ Report Date ┃ ┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ 2022-02-09 │ AM │ Mark Dr Green │ Sale │ $1,000,001-$5,000,000 │ Representatives │ 2022-02-14 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-02-09 │ QQQ │ Pete Sessions │ Purchase │ $1,001-$15,000 │ Representatives │ 2022-02-11 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-02-09 │ ET │ Mark Dr Green │ Purchase │ $500,001 │ Representatives │ 2022-02-14 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-02-09 │ ENLC │ Mark Dr Green │ Purchase │ $500,001 │ Representatives │ 2022-02-14 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-02-07 │ ET │ Mark Dr Green │ Purchase │ $250,001-$1,000,000 │ Representatives │ 2022-02-14 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-02-07 │ AM │ Mark Dr Green │ Purchase │ $100,001-250,000 │ Representatives │ 2022-02-14 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-02-04 │ BNS │ Pete Sessions │ Purchase │ $1,001-$15,000 │ Representatives │ 2022-02-11 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-02-02 │ GOOGL │ Bob Gibbs │ Purchase │ $15,001-$50,000 │ Representatives │ 2022-02-06 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ FSP │ Virginia Foxx │ Sale │ $50,001-$100,000 │ Representatives │ 2022-02-04 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ FIMKX │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ CEF │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ PTMC │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ MOO │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ ITA │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ JHMM │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ GNR │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ WIW │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ XAR │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ SI │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ LUBFX │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ GEMIX │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ D │ Pete Sessions │ Sale │ $1,001-$15,000 │ Representatives │ 2022-02-11 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ CYRX │ Donald Sternoff Beyer Jr. │ Sale │ $1,001-$15,000 │ Representatives │ 2022-02-01 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ TRNO │ Donald Sternoff Beyer Jr. │ Purchase │ $1,001-$15,000 │ Representatives │ 2022-02-01 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ PEP │ Donald Sternoff Beyer Jr. │ Purchase │ $1,001-$15,000 │ Representatives │ 2022-02-01 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ COST │ Donald Sternoff Beyer Jr. │ Purchase │ $1,001-$15,000 │ Representatives │ 2022-02-01 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ JPM │ Kevin Hern │ Purchase │ $1,001-$15,000 │ Representatives │ 2022-02-02 │ ├──────────────────┼────────┼───────────────────────────┼─────────────┼───────────────────────┼─────────────────┼─────────────┤ │ 2022-01-31 │ NVDA │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ └──────────────────┴────────┴───────────────────────────┴─────────────┴───────────────────────┴─────────────────┴─────────────┘ 2022 Feb 16, 07:25 (✨) /stocks/gov/ $ lasttrades -r Thomas R. Carper Last transactions for CONGRESS Representative Trading ┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ Transaction Date ┃ Ticker ┃ Representative ┃ Transaction ┃ Range ┃ House ┃ Report Date ┃ ┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━┩ │ 2022-01-31 │ FIMKX │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ CEF │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ PTMC │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ MOO │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ ITA │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ JHMM │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ GNR │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ WIW │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ XAR │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ SI │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ LUBFX │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ GEMIX │ Thomas R. Carper │ Sale │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ ├──────────────────┼────────┼──────────────────┼─────────────┼──────────────────┼────────┼─────────────┤ │ 2022-01-31 │ NVDA │ Thomas R. Carper │ Purchase │ $1,001 - $15,000 │ Senate │ 2022-02-03 │ └──────────────────┴────────┴──────────────────┴─────────────┴──────────────────┴────────┴─────────────┘ "},{"id":1148,"href":"/OpenBBTerminal/terminal/stocks/gov/lobbying/","title":"Lobbying","parent":"Introduction to the Government Menu","content":"usage: lobbying [-l LIMIT] [-h] Lobbying details for the loaded company. [Source: www.quiverquant.com]\noptional arguments: -l LIMIT, --limit LIMIT Limit of events to show (default: 10) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 07:27 (✨) /stocks/gov/ $ lobbying 2021-01-21: TESLA INC N/A 2020-10-20: TESLA INC N/A 2020-10-20: TESLA INC N/A 2020-07-20: TESLA INC $70000 Discussions regarding Sec. 30D electric vehicle tax credit (S.1094/H.R.2256, the Driving America Forward Act) Sec. 30C alternative fuel infrastructure tax credit(S.3735, Securing America's Clean Fuel Infrastructure Act) Sec. 48 and 25D solar investment tax credit Storage tax credit (S.1142/H.R.2096,Energy Storage Tax Incentive and Deployment Act) 2020-07-19: TESLA INC N/A 2020-04-20: TESLA INC $140000 H.R.748/S.3548, Coronavirus Aid, Relief, and Economic Security Act 2020-04-20: TESLA INC $30000 Issues related to the 30D EV tax credit, including the Driving America Forward Act, S. 1094 and H.R. 2256. 2020-01-21: TESLA INC $150000 Discussions regarding Sec. 30D electric vehicle tax credit (S.1094/H.R.2256, the Driving America Forward Act) Sec. 30C alternative tax credit (H.R.3301, the Taxpayer Certainty and Disaster Tax Relief Act) Sec. 48 and 25D solar investment tax credits (H.R.3961/S.2289, Renewable Energy Extension Act) Storage tax credit (S.1142/H.R.2096,Energy Storage Tax Incentive and Deployment Act) H.R.1865, Further Consolidated Appropriations Act, 2020 2020-01-17: TESLA INC $30000 Issues related to the 30D EV tax credit, including the Driving America Forward Act, S. 1094 and H.R. 2256. 2019-10-21: TESLA INC $150000 Discussions regarding electric vehicle manufacturing and sales policies,charging infrastructure and regulation (S.2302, America's Transportation and Infrastruction Act;H.R.2616/S.674, Clean Corridors Act) Issues impacting autonomous vehicles "},{"id":1149,"href":"/OpenBBTerminal/terminal/stocks/gov/qtrcontracts/","title":"Qtrcontracts","parent":"Introduction to the Government Menu","content":"usage: qtrcontracts [-l LIMIT] [-a {total,upmom,downmom}] [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Total value of contracts awarded to individual companies. [Source: www.quiverquant.com]\noptional arguments: -l LIMIT, --limit LIMIT Limit of tickers to get (default: 5) -a {total,upmom,downmom}, --analysis {total,upmom,downmom} Analysis to look at contracts. 'Total' shows summed contracts. 'Upmom' shows highest sloped contacts while 'downmom' shows highest decreasing slopes. (default: total) --raw Print raw data. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 07:33 (✨) /stocks/gov/ $ qtrcontracts -l 20 Quarterly Contracts ┏━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ ┃ Total ┃ ┡━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ NYRT │ 189265686585.09 │ ├──────┼─────────────────┤ │ LMT │ 70707036450.10 │ ├──────┼─────────────────┤ │ BA │ 36291094000.97 │ ├──────┼─────────────────┤ │ RTX │ 30810798491.64 │ ├──────┼─────────────────┤ │ NOC │ 18155712025.66 │ ├──────┼─────────────────┤ │ MCK │ 15593287674.59 │ ├──────┼─────────────────┤ │ AAL │ 12873580340.33 │ ├──────┼─────────────────┤ │ DAL │ 12053655150.25 │ ├──────┼─────────────────┤ │ GD │ 11113338870.17 │ ├──────┼─────────────────┤ │ UAL │ 10937247542.42 │ ├──────┼─────────────────┤ │ HUM │ 10433454331.45 │ ├──────┼─────────────────┤ │ FLR │ 7630289754.85 │ ├──────┼─────────────────┤ │ SO │ 7451534354.06 │ ├──────┼─────────────────┤ │ LUV │ 7218696161.20 │ ├──────┼─────────────────┤ │ MRNA │ 6233021716.31 │ ├──────┼─────────────────┤ │ PFE │ 5717928167.45 │ ├──────┼─────────────────┤ │ SSB │ 5122966968.19 │ ├──────┼─────────────────┤ │ GE │ 4973975130.38 │ ├──────┼─────────────────┤ │ EXPR │ 4617652107.41 │ ├──────┼─────────────────┤ │ PW │ 4466721029.89 │ └──────┴─────────────────┘ "},{"id":1150,"href":"/OpenBBTerminal/terminal/stocks/gov/topbuys/","title":"Topbuys","parent":"Introduction to the Government Menu","content":"usage: topbuys [-g {congress,senate,house}] [-p PAST_TRANSACTIONS_MONTHS] [-l LIMIT] [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Top stock buys amongst US representatives. Source: https://www.quiverquant.com\noptional arguments: -g {congress,senate,house}, --govtype {congress,senate,house} -p PAST_TRANSACTIONS_MONTHS, --past_transactions_months PAST_TRANSACTIONS_MONTHS Past transaction months (default: 6) -l LIMIT, --limit LIMIT Limit of top tickers to display (default: 10) --raw Print raw data. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1151,"href":"/OpenBBTerminal/terminal/stocks/gov/toplobbying/","title":"Toplobbying","parent":"Introduction to the Government Menu","content":"usage: toplobbying [-l LIMIT] [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Shows companies responsible for the most amount of US governement lobbying. [Source: www.quiverquant.com]\noptional arguments: -l LIMIT, --limit LIMIT Limit of stocks to display (default: 10) --raw Print raw data. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1152,"href":"/OpenBBTerminal/terminal/stocks/gov/topsells/","title":"Topsells","parent":"Introduction to the Government Menu","content":"usage: topsells [-g {congress,senate,house}] [-p PAST_TRANSACTIONS_MONTHS] [-l LIMIT] [--raw] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Companies experiencing the most stock sales by US governement representatives. [Source: www.quiverquant.com]\noptional arguments: -g {congress,senate,house}, --govtype {congress,senate,house} -p PAST_TRANSACTIONS_MONTHS, --past_transactions_months PAST_TRANSACTIONS_MONTHS Past transaction months (default: 6) -l LIMIT, --limit LIMIT Limit of top tickers to display (default: 10) --raw Print raw data. (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1153,"href":"/OpenBBTerminal/terminal/stocks/ins/act/","title":"Act","parent":"Introduction to the Insider Trading Menu","content":"usage: act [-l LIMIT] [--raw] [-h] [--export {csv,json,xlsx}] Prints executive, or director, dispositions or acquisitions over time using information collected by: Business Insider\noptional arguments: -l LIMIT, --limit LIMIT Limit of latest insider activity. --raw Print raw data. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx "},{"id":1154,"href":"/OpenBBTerminal/terminal/stocks/ins/blcp/","title":"Blcp","parent":"Introduction to the Insider Trading Menu","content":"usage: blcp [-l LIMIT] [-h] [--export {csv,json,xlsx}] Search a SEC Form 4 database for the latest excutive and director dispositions or acquisitions and the corporations they are associated with. Sourece: http://openinsider.com\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:45 (✨) /stocks/ins/ $ blcp Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ D │ 2022-02-14 │ 2020-07-31 │ VERX │ Vertex, Inc. │ Schwab John R │ CFO │ P - Purchase │ $19.00 │ +2,894 │ 5,579 │ +108% │ +$54,986 │ │ │ 14:11:46 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-14 │ 2022-02-11 │ FLXS │ Flexsteel Industries │ Schmidt Derek P │ CFO, COO │ P - Purchase │ $22.38 │ +17,111 │ 174,275 │ +11% │ +$382,859 │ │ │ 13:09:00 │ │ │ Inc │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-14 │ 2022-02-14 │ SKYX │ Sql Technologies │ Campi John P. │ CEO │ P - Purchase │ $14.00 │ +14,285 │ 1,184,285 │ +1% │ +$199,990 │ │ │ 12:56:34 │ │ │ Corp. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-11 │ 2022-02-09 │ AIRT │ Air T Inc │ Swenson Nicholas │ CEO, 10% │ P - Purchase │ $27.32 │ +2,625 │ 1,347,599 │ 0% │ +$71,724 │ │ │ 19:37:55 │ │ │ │ John │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-11 │ 2022-02-09 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $63.20 │ +1,250,000 │ 21,986,722 │ +6% │ +$79,005,992 │ │ │ 18:50:54 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-11 │ 2022-02-09 │ LOB │ Live Oak Bancshares, │ Losch William C III │ CFO │ P - Purchase │ $63.74 │ +6,250 │ 9,750 │ +179% │ +$398,382 │ │ │ 18:26:14 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-11 │ 2022-02-09 │ EMMA │ Emmaus Life │ Niihara Yutaka │ COB, CEO, │ P - Purchase │ $1.46 │ +30,500 │ 11,350,200 │ 0% │ +$44,385 │ │ │ 17:00:36 │ │ │ Sciences, Inc. │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-09 │ 2022-02-08 │ MYPS │ Playstudios, Inc. │ Pascal Andrew S │ COB, CEO, │ P - Purchase │ $4.77 │ +25,700 │ 16,242,900 │ 0% │ +$122,602 │ │ │ 19:36:53 │ │ │ │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-09 │ 2022-02-07 │ CSII │ Cardiovascular │ Ward Scott R. │ COB, CEO │ P - Purchase │ $18.52 │ +2,500 │ 577,713 │ 0% │ +$46,293 │ │ │ 16:15:36 │ │ │ Systems Inc │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-08 │ 2022-02-04 │ AIRT │ Air T Inc │ Swenson Nicholas │ CEO, 10% │ P - Purchase │ $24.74 │ +2,470 │ 1,344,974 │ 0% │ +$61,104 │ │ │ 18:39:00 │ │ │ │ John │ │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴──────────────────────┴─────────────────────┴────────────┴──────────────┴────────┴────────────┴────────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1155,"href":"/OpenBBTerminal/terminal/stocks/ins/blcs/","title":"Blcs","parent":"Introduction to the Insider Trading Menu","content":"usage: blcs [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print big latest CEO/CFO sales ($100k+) Source: http://openinsider.com\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:47 (✨) /stocks/ins/ $ blcs Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ D │ 2022-02-15 │ 2022-02-15 │ EW │ Edwards Lifesciences │ Mussallem Michael A │ COB, CEO │ S - Sale+OE │ $110.09 │ -32,550 │ 3,820,007 │ -1% │ -$3,583,289 │ │ │ 20:50:39 │ │ │ Corp │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ AGCO │ Agco Corp /de │ Beck Andrew H │ SVP, CFO │ S - Sale+OE │ $131.83 │ -25,000 │ 107,337 │ -19% │ -$3,295,750 │ │ │ 20:38:48 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ AON │ Aon Plc │ Davies Christa │ CFO │ S - Sale+OE │ $283.72 │ -616 │ 200,237 │ 0% │ -$174,772 │ │ │ 19:36:49 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ AMP │ Ameriprise Financial │ Truscott William F │ CEO, │ S - Sale+OE │ $305.09 │ -16,000 │ 28,647 │ -36% │ -$4,881,468 │ │ │ 18:09:39 │ │ │ Inc │ │ Global │ │ │ │ │ │ │ │ │ │ │ │ │ │ Asset │ │ │ │ │ │ │ │ │ │ │ │ │ │ Management │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ HUBB │ Hubbell Inc │ Bakker Gerben │ COB, Pres, │ S - Sale+OE │ $186.37 │ -1,148 │ 38,132 │ -3% │ -$213,948 │ │ │ 17:56:10 │ │ │ │ │ CEO │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ DM │ 2022-02-15 │ 2022-02-11 │ EXPI │ Exp World Holdings, │ Sanford Glenn Darrel │ CEO, COB, │ S - Sale+OE │ $29.27 │ -18,000 │ 42,034,338 │ 0% │ -$526,920 │ │ │ 17:07:11 │ │ │ Inc. │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ CRM │ Salesforce.Com, Inc. │ Benioff Marc │ COB, co- │ S - Sale+OE │ $207.46 │ -2,300 │ 28,918,241 │ 0% │ -$477,162 │ │ │ 16:39:51 │ │ │ │ │ CEO │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ M │ 2022-02-15 │ 2021-10-15 │ XBIT │ Xbiotech Inc. │ Simard John │ CEO, 10% │ S - Sale │ $13.15 │ -50,000 │ 3,823,166 │ -1% │ -$657,725 │ │ │ 16:05:31 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ LSCC │ Lattice │ Anderson James │ Pres, CEO │ S - Sale+OE │ $55.56 │ -2,142 │ 603,008 │ 0% │ -$119,010 │ │ │ 15:19:30 │ │ │ Semiconductor Corp │ Robert │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼────────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ RBCAA │ Republic Bancorp Inc │ Trager Steve │ COB, CEO, │ S - Sale+OE │ $48.41 │ -77,366 │ 4,073,652 │ -2% │ -$3,745,293 │ │ │ 11:40:03 │ │ │ /ky/ │ │ 10% │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴──────────────────────┴──────────────────────┴────────────┴─────────────┴─────────┴─────────┴────────────┴──────────┴─────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1156,"href":"/OpenBBTerminal/terminal/stocks/ins/blip/","title":"Blip","parent":"Introduction to the Insider Trading Menu","content":"usage: blip [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print latest insider purchases ($25k+) Source: http://openinsider.com\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:47 (✨) /stocks/ins/ $ blip Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-16 │ 2022-02-09 │ ZIVO │ Zivo Bioscience, │ Maggiore Christopher │ Dir, 10% │ P - Purchase │ $3.72 │ +91,334 │ 803,105 │ +13% │ +$340,098 │ │ │ 06:02:09 │ │ │ Inc. │ D. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ RSVR │ Reservoir Media, │ Richmond Hill │ May be │ P - Purchase │ $6.75 │ +136,364 │ 136,364 │ New │ +$920,717 │ │ │ 21:57:01 │ │ │ Inc. │ Investments, LLC │ deemed a │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% owner │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ RSVR │ Reservoir Media, │ Richmond Hill │ May be │ P - Purchase │ $6.75 │ +58,441 │ 58,441 │ New │ +$394,588 │ │ │ 21:56:17 │ │ │ Inc. │ Capital Partners, LP │ deemed a │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% owner │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ KNTE │ Kinnate Biopharma │ Gordon Carl L │ Dir │ P - Purchase │ $10.17 │ +195,700 │ 4,043,629 │ +5% │ +$1,989,446 │ │ │ 21:51:12 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ KNTE │ Kinnate Biopharma │ Orbimed Advisors LLC │ Dir │ P - Purchase │ $10.17 │ +195,700 │ 4,043,629 │ +5% │ +$1,989,446 │ │ │ 21:42:44 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-15 │ 2022-02-14 │ RSVR │ Reservoir Media, │ Cook Stephen M. │ Dir │ P - Purchase │ $7.29 │ +41,510 │ 1,057,171 │ +4% │ +$302,565 │ │ │ 21:32:18 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-15 │ 2022-02-11 │ AREN │ Arena Group │ B. Riley Financial, │ 10% │ P - Purchase │ $8.26 │ +1,977,982 │ 5,411,514 │ +58% │ +$16,329,921 │ │ │ 21:30:53 │ │ │ Holdings, Inc. │ Inc. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-14 │ TWOU │ 2U, Inc. │ Chernis Mark │ COO │ P - Purchase │ $9.29 │ +43,482 │ 349,939 │ +14% │ +$403,886 │ │ │ 20:47:47 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ CRCT │ Cricut, Inc. │ Abdiel Capital │ 10% │ P - Purchase │ $19.80 │ +148,069 │ 24,650,327 │ +1% │ +$2,931,718 │ │ │ 19:55:23 │ │ │ │ Management, LLC │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ RSVR │ Reservoir Media, │ Taylor Ryan P. │ See │ P - Purchase │ $6.75 │ +194,805 │ 13,787,598 │ +1% │ +$1,315,305 │ │ │ 18:28:36 │ │ │ Inc. │ │ Remarks │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴───────────────────┴──────────────────────┴───────────┴──────────────┴────────┴────────────┴────────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1157,"href":"/OpenBBTerminal/terminal/stocks/ins/blis/","title":"Blis","parent":"Introduction to the Insider Trading Menu","content":"usage: blis [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print latest insider sales 100k. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:48 (✨) /stocks/ins/ $ blis Insider Data ┏━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ D │ 2022-02-15 │ 2022-02-15 │ EW │ Edwards Lifesciences │ Mussallem Michael A │ COB, CEO │ S - Sale+OE │ $110.09 │ -32,550 │ 3,820,007 │ -1% │ -$3,583,289 │ │ │ 20:50:39 │ │ │ Corp │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ AGCO │ Agco Corp /de │ Beck Andrew H │ SVP, CFO │ S - Sale+OE │ $131.83 │ -25,000 │ 107,337 │ -19% │ -$3,295,750 │ │ │ 20:38:48 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ PUBM │ Pubmatic, Inc. │ Goel Amar K. │ Chief │ S - Sale+OE │ $29.85 │ -24,000 │ 0 │ -100% │ -$716,444 │ │ │ 20:24:51 │ │ │ │ │ Innovation │ │ │ │ │ │ │ │ │ │ │ │ │ │ Officer, │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ NET │ Cloudflare, Inc. │ Meresman Stanley J │ Dir │ S - Sale+OE │ $106.00 │ -18,622 │ 2,441 │ -88% │ -$1,973,993 │ │ │ 19:57:51 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ AON │ Aon Plc │ Davies Christa │ CFO │ S - Sale+OE │ $283.72 │ -616 │ 200,237 │ 0% │ -$174,772 │ │ │ 19:36:49 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ NOW │ Servicenow, Inc. │ Desai Chirantan │ COO │ S - Sale+OE │ $578.48 │ -3,000 │ 50,376 │ -6% │ -$1,735,431 │ │ │ 19:05:07 │ │ │ │ Jitendra │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ IBKR │ Interactive Brokers │ Peterffy Thomas │ COB │ S - Sale │ $73.61 │ -33,000 │ 3,874,511 │ -1% │ -$2,429,184 │ │ │ 18:59:49 │ │ │ Group, Inc. │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ AMP │ Ameriprise Financial │ Sweeney Joseph │ Pres-AWM │ S - Sale+OE │ $315.45 │ -12,981 │ 10,423 │ -55% │ -$4,094,838 │ │ │ 18:10:56 │ │ │ Inc │ Edward │ Products, │ │ │ │ │ │ │ │ │ │ │ │ │ │ Services │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ AMP │ Ameriprise Financial │ Thissen Karen Wilson │ EVP, GC │ S - Sale+OE │ $313.88 │ -6,444 │ 10,472 │ -38% │ -$2,022,661 │ │ │ 18:10:40 │ │ │ Inc │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ AMP │ Ameriprise Financial │ Truscott William F │ CEO, │ S - Sale+OE │ $305.09 │ -16,000 │ 28,647 │ -36% │ -$4,881,468 │ │ │ 18:09:39 │ │ │ Inc │ │ Global │ │ │ │ │ │ │ │ │ │ │ │ │ │ Asset │ │ │ │ │ │ │ │ │ │ │ │ │ │ Management │ │ │ │ │ │ │ └───┴─────────────┴────────────┴────────┴──────────────────────┴──────────────────────┴────────────┴─────────────┴─────────┴─────────┴───────────┴──────────┴─────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1158,"href":"/OpenBBTerminal/terminal/stocks/ins/blop/","title":"Blop","parent":"Introduction to the Insider Trading Menu","content":"usage: blop [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print latest officer purchases 25k. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:49 (✨) /stocks/ins/ $ blop Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-15 │ 2022-02-14 │ TWOU │ 2U, Inc. │ Chernis Mark │ COO │ P - Purchase │ $9.29 │ +43,482 │ 349,939 │ +14% │ +$403,886 │ │ │ 20:47:47 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ NMRK │ Newmark Group, Inc. │ Lutnick Howard W │ COB, 10% │ P - Purchase │ $17.21 │ +277,000 │ 14,009,707 │ +2% │ +$4,767,220 │ │ │ 17:17:30 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-14 │ 2022-02-10 │ NXDT │ Nexpoint Diversified │ Dondero James D │ See │ P - Purchase │ $15.05 │ +83,825 │ 5,681,792 │ +1% │ +$1,261,481 │ │ │ 18:26:27 │ │ │ Real Estate Trust │ │ Remarks, │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-14 │ 2020-07-31 │ VERX │ Vertex, Inc. │ Schwab John R │ CFO │ P - Purchase │ $19.00 │ +2,894 │ 5,579 │ +108% │ +$54,986 │ │ │ 14:11:46 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-14 │ 2022-02-11 │ FLXS │ Flexsteel Industries │ Schmidt Derek P │ CFO, COO │ P - Purchase │ $22.38 │ +17,111 │ 174,275 │ +11% │ +$382,859 │ │ │ 13:09:00 │ │ │ Inc │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-14 │ 2022-02-14 │ SKYX │ Sql Technologies │ Campi John P. │ CEO │ P - Purchase │ $14.00 │ +14,285 │ 1,184,285 │ +1% │ +$199,990 │ │ │ 12:56:34 │ │ │ Corp. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-11 │ 2022-02-09 │ AIRT │ Air T Inc │ Swenson Nicholas │ CEO, 10% │ P - Purchase │ $27.32 │ +2,625 │ 1,347,599 │ 0% │ +$71,724 │ │ │ 19:37:55 │ │ │ │ John │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-11 │ 2022-02-09 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $63.20 │ +1,250,000 │ 21,986,722 │ +6% │ +$79,005,992 │ │ │ 18:50:54 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-11 │ 2022-02-09 │ LOB │ Live Oak Bancshares, │ Losch William C III │ CFO │ P - Purchase │ $63.74 │ +6,250 │ 9,750 │ +179% │ +$398,382 │ │ │ 18:26:14 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-11 │ 2022-02-10 │ GHM │ Graham Corp │ Smith Alan E │ VP, GM - │ P - Purchase │ $9.10 │ +8,000 │ 59,163 │ +16% │ +$72,800 │ │ │ 15:02:12 │ │ │ │ │ Batavia │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴──────────────────────┴─────────────────────┴────────────┴──────────────┴────────┴────────────┴────────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1159,"href":"/OpenBBTerminal/terminal/stocks/ins/blos/","title":"Blos","parent":"Introduction to the Insider Trading Menu","content":"usage: blos [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print big latest officer sales ($100k+) Source: https://Openinsider.com\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:51 (✨) /stocks/ins/ $ blos Insider Data ┏━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ D │ 2022-02-15 │ 2022-02-15 │ EW │ Edwards Lifesciences │ Mussallem Michael A │ COB, CEO │ S - Sale+OE │ $110.09 │ -32,550 │ 3,820,007 │ -1% │ -$3,583,289 │ │ │ 20:50:39 │ │ │ Corp │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ AGCO │ Agco Corp /de │ Beck Andrew H │ SVP, CFO │ S - Sale+OE │ $131.83 │ -25,000 │ 107,337 │ -19% │ -$3,295,750 │ │ │ 20:38:48 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ PUBM │ Pubmatic, Inc. │ Goel Amar K. │ Chief │ S - Sale+OE │ $29.85 │ -24,000 │ 0 │ -100% │ -$716,444 │ │ │ 20:24:51 │ │ │ │ │ Innovation │ │ │ │ │ │ │ │ │ │ │ │ │ │ Officer, │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ AON │ Aon Plc │ Davies Christa │ CFO │ S - Sale+OE │ $283.72 │ -616 │ 200,237 │ 0% │ -$174,772 │ │ │ 19:36:49 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ NOW │ Servicenow, Inc. │ Desai Chirantan │ COO │ S - Sale+OE │ $578.48 │ -3,000 │ 50,376 │ -6% │ -$1,735,431 │ │ │ 19:05:07 │ │ │ │ Jitendra │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ IBKR │ Interactive Brokers │ Peterffy Thomas │ COB │ S - Sale │ $73.61 │ -33,000 │ 3,874,511 │ -1% │ -$2,429,184 │ │ │ 18:59:49 │ │ │ Group, Inc. │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ AMP │ Ameriprise Financial │ Sweeney Joseph │ Pres-AWM │ S - Sale+OE │ $315.45 │ -12,981 │ 10,423 │ -55% │ -$4,094,838 │ │ │ 18:10:56 │ │ │ Inc │ Edward │ Products, │ │ │ │ │ │ │ │ │ │ │ │ │ │ Services │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ AMP │ Ameriprise Financial │ Thissen Karen Wilson │ EVP, GC │ S - Sale+OE │ $313.88 │ -6,444 │ 10,472 │ -38% │ -$2,022,661 │ │ │ 18:10:40 │ │ │ Inc │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ AMP │ Ameriprise Financial │ Truscott William F │ CEO, │ S - Sale+OE │ $305.09 │ -16,000 │ 28,647 │ -36% │ -$4,881,468 │ │ │ 18:09:39 │ │ │ Inc │ │ Global │ │ │ │ │ │ │ │ │ │ │ │ │ │ Asset │ │ │ │ │ │ │ │ │ │ │ │ │ │ Management │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ DDOG │ Datadog, Inc. │ Agarwal Amit │ Chief │ S - Sale+OE │ $173.24 │ -2,500 │ 164,118 │ -2% │ -$433,095 │ │ │ 17:58:07 │ │ │ │ │ Product │ │ │ │ │ │ │ │ │ │ │ │ │ │ Officer │ │ │ │ │ │ │ └───┴─────────────┴────────────┴────────┴──────────────────────┴──────────────────────┴────────────┴─────────────┴─────────┴─────────┴───────────┴──────────┴─────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1160,"href":"/OpenBBTerminal/terminal/stocks/ins/filter/","title":"Filter","parent":"Introduction to the Insider Trading Menu","content":"usage: filter [-l LIMIT] [-u] [-h] [--export {csv,json,xlsx}] Print open insider filtered data using loaded preset. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -u, --urls Flag to show hyperlinks (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:51 (✨) /stocks/ins/ $ filter Insider filtered ┏━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ X ┃ Trading Date ┃ Ticker ┃ Insider ┃ Title ┃ Price ┃ Quantity ┃ Owned ┃ Delta Own ┃ Value ┃ Company ┃ ┡━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ │ 2022-02-14 │ MGM │ Meister Keith A. │ Dir │ $45.00 │ -4,500,000 │ 6,673,778 │ -40% │ -$202,500,000 │ Mgm Resorts International │ ├───┼──────────────┼────────┼───────────────────────┼──────────────────────────────┼─────────┼─────────────┼─────────────┼───────────┼─────────────────┼────────────────────────────┤ │ M │ 2022-02-10 │ MA │ Mastercard Foundation │ 10% │ $375.58 │ -465,180 │ 104,471,071 │ 0% │ -$174,712,785 │ Mastercard Inc │ ├───┼──────────────┼────────┼───────────────────────┼──────────────────────────────┼─────────┼─────────────┼─────────────┼───────────┼─────────────────┼────────────────────────────┤ │ D │ 2022-02-10 │ EL │ Lauder Ronald S │ COB, Clinique Labs, LLC, 10% │ $307.08 │ -700,000 │ 6,364 │ -99% │ -$214,956,000 │ Estee Lauder Companies Inc │ ├───┼──────────────┼────────┼───────────────────────┼──────────────────────────────┼─────────┼─────────────┼─────────────┼───────────┼─────────────────┼────────────────────────────┤ │ M │ 2022-02-07 │ MA │ Mastercard Foundation │ 10% │ $378.65 │ -465,180 │ 104,936,251 │ 0% │ -$176,139,632 │ Mastercard Inc │ ├───┼──────────────┼────────┼───────────────────────┼──────────────────────────────┼─────────┼─────────────┼─────────────┼───────────┼─────────────────┼────────────────────────────┤ │ │ 2022-02-04 │ VIRT │ Gic Private Ltd │ 10% │ $31.04 │ -4,027,062 │ 8,731,144 │ -32% │ -$125,000,004 │ Virtu Financial, Inc. │ ├───┼──────────────┼────────┼───────────────────────┼──────────────────────────────┼─────────┼─────────────┼─────────────┼───────────┼─────────────────┼────────────────────────────┤ │ D │ 2022-02-04 │ BKR │ General Electric Co │ 10% │ $25.98 │ -50,097,840 │ 116,548,079 │ -30% │ -$1,301,541,883 │ Baker Hughes Co │ ├───┼──────────────┼────────┼───────────────────────┼──────────────────────────────┼─────────┼─────────────┼─────────────┼───────────┼─────────────────┼────────────────────────────┤ │ D │ 2022-02-03 │ MGY │ Enervest, Ltd. │ Dir, 10% │ $21.00 │ -7,455,815 │ 16,282,900 │ -31% │ -$156,572,115 │ Magnolia Oil \u0026amp; Gas Corp │ ├───┼──────────────┼────────┼───────────────────────┼──────────────────────────────┼─────────┼─────────────┼─────────────┼───────────┼─────────────────┼────────────────────────────┤ │ D │ 2022-02-03 │ MGY │ Walker John B │ Dir, 10% │ $21.00 │ -7,455,815 │ 16,879,220 │ -31% │ -$156,572,115 │ Magnolia Oil \u0026amp; Gas Corp │ └───┴──────────────┴────────┴───────────────────────┴──────────────────────────────┴─────────┴─────────────┴─────────────┴───────────┴─────────────────┴────────────────────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price S - Sale: Sale of securities on an exchange or to another person S - Sale+OE: Sale of securities on an exchange or to another person (after option exercise) "},{"id":1161,"href":"/OpenBBTerminal/terminal/stocks/ins/lcb/","title":"Lcb","parent":"Introduction to the Insider Trading Menu","content":"usage: lcb [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print latest cluster buys. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:52 (✨) /stocks/ins/ $ lcb Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Industry ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ DM │ 2022-02-15 │ 2022-02-11 │ RSVR │ Reservoir Media, │ Amusement \u0026amp; │ 6 │ P - Purchase │ $6.79 │ +504,505 │ 15,285,695 │ +3% │ +$3,426,335 │ │ │ 21:57:01 │ │ │ Inc. │ Recreation Services │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ M │ 2022-02-15 │ 2022-02-14 │ TWOU │ 2U, Inc. │ Prepackaged Software │ 3 │ P - Purchase │ $9.43 │ +179,522 │ 1,176,241 │ +18% │ +$1,692,212 │ │ │ 20:47:47 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ M │ 2022-02-15 │ 2022-02-14 │ MTRX │ Matrix Service Co │ Special Trade │ 3 │ P - Purchase │ $6.78 │ +29,800 │ 505,338 │ +6% │ +$202,017 │ │ │ 17:18:30 │ │ │ │ Contractors │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ D │ 2022-02-14 │ 2022-02-11 │ GHM │ Graham Corp │ General Industrial │ 4 │ P - Purchase │ $9.15 │ +25,600 │ 155,113 │ +20% │ +$234,160 │ │ │ 16:16:44 │ │ │ │ Machinery \u0026amp; │ │ │ │ │ │ │ │ │ │ │ │ │ │ Equipment │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ M │ 2022-02-14 │ 2021-11-18 │ CTLP │ Cantaloupe, Inc. │ Calculating \u0026amp; │ 3 │ P - Purchase │ $8.07 │ +129,297 │ 12,223,845 │ +1% │ +$1,044,001 │ │ │ 16:14:49 │ │ │ │ Accounting Machines │ │ │ │ │ │ │ │ │ │ │ │ │ │ (No Electronic │ │ │ │ │ │ │ │ │ │ │ │ │ │ Computers) │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ DM │ 2022-02-14 │ 2022-02-11 │ FLXS │ Flexsteel Industries │ Household Furniture │ 3 │ P - Purchase │ $22.98 │ +22,977 │ 199,923 │ +13% │ +$528,044 │ │ │ 13:09:00 │ │ │ Inc │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ M │ 2022-02-11 │ 2022-02-09 │ ASAN │ Asana, Inc. │ Prepackaged Software │ 2 │ P - Purchase │ $64.41 │ +12,625,661 │ 22,075,784 │ +134% │ +$813,188,832 │ │ │ 18:50:54 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ DM │ 2022-02-11 │ 2022-02-09 │ LOB │ Live Oak Bancshares, │ State Commercial │ 2 │ P - Purchase │ $63.98 │ +21,875 │ 1,353,036 │ +2% │ +$1,399,565 │ │ │ 18:28:13 │ │ │ Inc. │ Banks │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ M │ 2022-02-10 │ 2022-02-08 │ ECAT │ Blackrock Esg │ Closed-End Funds │ 3 │ P - Purchase │ $18.72 │ +61,879 │ 119,380 │ +108% │ +$1,158,411 │ │ │ 15:12:22 │ │ │ Capital Allocation │ │ │ │ │ │ │ │ │ │ │ │ │ │ Trust │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼───────┼──────────────┼────────┼─────────────┼────────────┼──────────┼───────────────┤ │ D │ 2022-02-09 │ 2022-02-07 │ CSII │ Cardiovascular │ Surgical \u0026amp; Medical │ 3 │ P - Purchase │ $18.43 │ +6,067 │ 285,893 │ +2% │ +$111,801 │ │ │ 16:45:18 │ │ │ Systems Inc │ Instruments \u0026amp; │ │ │ │ │ │ │ │ │ │ │ │ │ │ Apparatus │ │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴──────────────────────┴──────────────────────┴───────┴──────────────┴────────┴─────────────┴────────────┴──────────┴───────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1162,"href":"/OpenBBTerminal/terminal/stocks/ins/lins/","title":"Lins","parent":"Introduction to the Insider Trading Menu","content":"usage: lins [-l LIMIT] [-h] [--export {csv,json,xlsx}] Prints information about inside traders. The following fields are expected: Date, Relationship, Transaction, #Shares, Cost, Value ($), #Shares Total, Insider Trading, SEC Form 4. [Source: Finviz]\noptional arguments: -l LIMIT, --limit LIMIT Limit of latest inside traders. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx Example:\n2022 Feb 16, 07:54 (✨) /stocks/ins/ $ lins Insider Activity ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ ┃ Relationship ┃ Transaction ┃ #Shares ┃ Cost ┃ Value ($) ┃ #Shares Total ┃ Insider Trading ┃ SEC Form 4 ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ Feb 03 │ SVP, GC and Secretary │ Sale │ 25,000 │ 174.78 │ 4,369,548 │ 419,715 │ Adams Katherine L. │ Feb 07 06:30 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Feb 01 │ Director │ Sale │ 1,986 │ 173.29 │ 344,154 │ 4,532,724 │ LEVINSON ARTHUR D │ Feb 03 06:35 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Nov 12 │ Principal Accounting Officer │ Sale │ 9,005 │ 150.00 │ 1,350,750 │ 37,197 │ KONDO CHRIS │ Nov 16 06:30 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Nov 01 │ SVP, GC and Secretary │ Sale │ 25,000 │ 148.68 │ 3,716,895 │ 447,993 │ Adams Katherine L. │ Nov 03 06:31 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Oct 19 │ Senior Vice President, CFO │ Sale │ 165,829 │ 148.62 │ 24,645,506 │ 110,501 │ Maestri Luca │ Oct 21 06:30 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Oct 18 │ Senior Vice President │ Sale │ 18,247 │ 146.35 │ 2,670,391 │ 136,118 │ O'BRIEN DEIRDRE │ Oct 19 06:31 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Oct 04 │ COO │ Sale │ 165,829 │ 138.83 │ 23,022,040 │ 489,490 │ WILLIAMS JEFFREY E │ Oct 05 06:44 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Oct 04 │ Senior Vice President │ Sale │ 89,437 │ 138.83 │ 12,416,539 │ 136,118 │ O'BRIEN DEIRDRE │ Oct 05 06:43 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Aug 25 │ Chief Executive Officer │ Sale │ 2,386,440 │ 148.58 │ 354,568,479 │ 3,279,726 │ COOK TIMOTHY D │ Aug 26 06:30 PM │ ├────────┼──────────────────────────────┼─────────────┼───────────┼────────┼─────────────┼───────────────┼────────────────────┼─────────────────┤ │ Aug 06 │ Senior Vice President │ Sale │ 14,877 │ 145.99 │ 2,171,893 │ 136,118 │ O'BRIEN DEIRDRE │ Aug 09 06:30 PM │ └────────┴──────────────────────────────┴─────────────┴───────────┴────────┴─────────────┴───────────────┴────────────────────┴─────────────────┘ "},{"id":1163,"href":"/OpenBBTerminal/terminal/stocks/ins/lip/","title":"Lip","parent":"Introduction to the Insider Trading Menu","content":"usage: lip [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print latest insider purchases. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:55 (✨) /stocks/ins/ $ lip Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-16 │ 2022-02-09 │ ZIVO │ Zivo Bioscience, │ Maggiore Christopher │ Dir, 10% │ P - Purchase │ $3.72 │ +91,334 │ 803,105 │ +13% │ +$340,098 │ │ │ 06:02:09 │ │ │ Inc. │ D. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ RSVR │ Reservoir Media, │ Richmond Hill │ May be │ P - Purchase │ $6.75 │ +136,364 │ 136,364 │ New │ +$920,717 │ │ │ 21:57:01 │ │ │ Inc. │ Investments, LLC │ deemed a │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% owner │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ RSVR │ Reservoir Media, │ Richmond Hill │ May be │ P - Purchase │ $6.75 │ +58,441 │ 58,441 │ New │ +$394,588 │ │ │ 21:56:17 │ │ │ Inc. │ Capital Partners, LP │ deemed a │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% owner │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ KNTE │ Kinnate Biopharma │ Gordon Carl L │ Dir │ P - Purchase │ $10.17 │ +195,700 │ 4,043,629 │ +5% │ +$1,989,446 │ │ │ 21:51:12 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ KNTE │ Kinnate Biopharma │ Orbimed Advisors LLC │ Dir │ P - Purchase │ $10.17 │ +195,700 │ 4,043,629 │ +5% │ +$1,989,446 │ │ │ 21:42:44 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-15 │ 2022-02-14 │ RSVR │ Reservoir Media, │ Cook Stephen M. │ Dir │ P - Purchase │ $7.29 │ +41,510 │ 1,057,171 │ +4% │ +$302,565 │ │ │ 21:32:18 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-15 │ 2022-02-11 │ AREN │ Arena Group │ B. Riley Financial, │ 10% │ P - Purchase │ $8.26 │ +1,977,982 │ 5,411,514 │ +58% │ +$16,329,921 │ │ │ 21:30:53 │ │ │ Holdings, Inc. │ Inc. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-14 │ TWOU │ 2U, Inc. │ Chernis Mark │ COO │ P - Purchase │ $9.29 │ +43,482 │ 349,939 │ +14% │ +$403,886 │ │ │ 20:47:47 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ CRCT │ Cricut, Inc. │ Abdiel Capital │ 10% │ P - Purchase │ $19.80 │ +148,069 │ 24,650,327 │ +1% │ +$2,931,718 │ │ │ 19:55:23 │ │ │ │ Management, LLC │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ LFT │ Lument Finance │ Keenan Walter C │ Dir │ P - Purchase │ $0.00 │ +0 │ 91,911 │ 0% │ +$0 │ │ │ 18:38:21 │ │ │ Trust, Inc. │ │ │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴───────────────────┴──────────────────────┴───────────┴──────────────┴────────┴────────────┴────────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1164,"href":"/OpenBBTerminal/terminal/stocks/ins/lis/","title":"Lis","parent":"Introduction to the Insider Trading Menu","content":"usage: lis [-l LIMIT] [-h] [--export {csv,json,xlsx}] The latest insider dispositions across the corporate landscape in America. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:56 (✨) /stocks/ins/ $ lis Insider Data ┏━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ D │ 2022-02-15 │ 2022-02-14 │ BVS │ Bioventus Inc. │ D'Adamio Anthony │ SVP, GC │ S - Sale+OE │ $11.99 │ -1,294 │ 18,672 │ -6% │ -$15,513 │ │ │ 21:31:03 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ BVS │ Bioventus Inc. │ Anglum Gregory O. │ SVP, CFO │ S - Sale+OE │ $11.99 │ -1,294 │ 55,013 │ -2% │ -$15,518 │ │ │ 21:27:43 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ BVS │ Bioventus Inc. │ Nosenzo John │ Chief │ S - Sale+OE │ $11.99 │ -534 │ 43,370 │ -1% │ -$6,401 │ │ │ 21:17:44 │ │ │ │ │ Commercial │ │ │ │ │ │ │ │ │ │ │ │ │ │ Officer │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ PGNY │ Progyny, Inc. │ Schlanger David J │ Exec COB │ S - Sale+OE │ $42.00 │ -1,000 │ 84,000 │ -1% │ -$42,000 │ │ │ 21:09:05 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-15 │ EW │ Edwards Lifesciences │ Mussallem Michael A │ COB, CEO │ S - Sale+OE │ $110.09 │ -32,550 │ 3,820,007 │ -1% │ -$3,583,289 │ │ │ 20:50:39 │ │ │ Corp │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-11 │ AGCO │ Agco Corp /de │ Beck Andrew H │ SVP, CFO │ S - Sale+OE │ $131.83 │ -25,000 │ 107,337 │ -19% │ -$3,295,750 │ │ │ 20:38:48 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ PUBM │ Pubmatic, Inc. │ Goel Amar K. │ Chief │ S - Sale+OE │ $29.85 │ -24,000 │ 0 │ -100% │ -$716,444 │ │ │ 20:24:51 │ │ │ │ │ Innovation │ │ │ │ │ │ │ │ │ │ │ │ │ │ Officer, │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ NET │ Cloudflare, Inc. │ Meresman Stanley J │ Dir │ S - Sale+OE │ $106.00 │ -18,622 │ 2,441 │ -88% │ -$1,973,993 │ │ │ 19:57:51 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ AON │ Aon Plc │ Davies Christa │ CFO │ S - Sale+OE │ $283.72 │ -616 │ 200,237 │ 0% │ -$174,772 │ │ │ 19:36:49 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼─────────────┼─────────┼─────────┼───────────┼──────────┼─────────────┤ │ D │ 2022-02-15 │ 2022-02-15 │ RYTM │ Rhythm │ Shulman Joseph │ Chief │ S - Sale+OE │ $6.10 │ -557 │ 1,006 │ -36% │ -$3,398 │ │ │ 19:32:08 │ │ │ Pharmaceuticals, │ │ Technical │ │ │ │ │ │ │ │ │ │ │ │ Inc. │ │ Officer │ │ │ │ │ │ │ └───┴─────────────┴────────────┴────────┴──────────────────────┴─────────────────────┴────────────┴─────────────┴─────────┴─────────┴───────────┴──────────┴─────────────┘ D: Derivative transaction in filing (usually option exercise) "},{"id":1165,"href":"/OpenBBTerminal/terminal/stocks/ins/lit/","title":"Lit","parent":"Introduction to the Insider Trading Menu","content":"usage: lit [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print latest insider trading. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 07:58 (✨) /stocks/ins/ $ lit Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-16 │ 2022-02-09 │ ZIVO │ Zivo Bioscience, │ Maggiore Christopher │ Dir, 10% │ P - Purchase │ $3.72 │ +91,334 │ 803,105 │ +13% │ +$340,098 │ │ │ 06:02:09 │ │ │ Inc. │ D. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ RSVR │ Reservoir Media, │ Richmond Hill │ May be │ P - Purchase │ $6.75 │ +136,364 │ 136,364 │ New │ +$920,717 │ │ │ 21:57:01 │ │ │ Inc. │ Investments, LLC │ deemed a │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% owner │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ RSVR │ Reservoir Media, │ Richmond Hill │ May be │ P - Purchase │ $6.75 │ +58,441 │ 58,441 │ New │ +$394,588 │ │ │ 21:56:17 │ │ │ Inc. │ Capital Partners, LP │ deemed a │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% owner │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ KNTE │ Kinnate Biopharma │ Gordon Carl L │ Dir │ P - Purchase │ $10.17 │ +195,700 │ 4,043,629 │ +5% │ +$1,989,446 │ │ │ 21:51:12 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ KNTE │ Kinnate Biopharma │ Orbimed Advisors LLC │ Dir │ P - Purchase │ $10.17 │ +195,700 │ 4,043,629 │ +5% │ +$1,989,446 │ │ │ 21:42:44 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ DM │ 2022-02-15 │ 2022-02-14 │ RSVR │ Reservoir Media, │ Cook Stephen M. │ Dir │ P - Purchase │ $7.29 │ +41,510 │ 1,057,171 │ +4% │ +$302,565 │ │ │ 21:32:18 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ BVS │ Bioventus Inc. │ D'Adamio Anthony │ SVP, GC │ S - Sale+OE │ $11.99 │ -1,294 │ 18,672 │ -6% │ -$15,513 │ │ │ 21:31:03 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ DM │ 2022-02-15 │ 2022-02-11 │ AREN │ Arena Group │ B. Riley Financial, │ 10% │ P - Purchase │ $8.26 │ +1,977,982 │ 5,411,514 │ +58% │ +$16,329,921 │ │ │ 21:30:53 │ │ │ Holdings, Inc. │ Inc. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ BVS │ Bioventus Inc. │ Anglum Gregory O. │ SVP, CFO │ S - Sale+OE │ $11.99 │ -1,294 │ 55,013 │ -2% │ -$15,518 │ │ │ 21:27:43 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼────────────┼──────────────┼────────┼────────────┼───────────┼──────────┼──────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ BVS │ Bioventus Inc. │ Nosenzo John │ Chief │ S - Sale+OE │ $11.99 │ -534 │ 43,370 │ -1% │ -$6,401 │ │ │ 21:17:44 │ │ │ │ │ Commercial │ │ │ │ │ │ │ │ │ │ │ │ │ │ Officer │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴───────────────────┴──────────────────────┴────────────┴──────────────┴────────┴────────────┴───────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1166,"href":"/OpenBBTerminal/terminal/stocks/ins/load/","title":"Load","parent":"Introduction to the Insider Trading Menu","content":"usage: load [-t S_TICKER] [-s S_START_DATE] [-i {1,5,15,30,60}] [--source {yf,av,iex}] [-p] [-h] See: load\noptional arguments: -t S_TICKER, --ticker S_TICKER Stock ticker (default: None) -s S_START_DATE, --start S_START_DATE The starting date (format YYYY-MM-DD) of the stock (default: 2020-09-15) -i {1,5,15,30,60}, --interval {1,5,15,30,60} Intraday stock minutes (default: 1440) --source {yf,av,iex} Source of historical data. (default: yf) -p, --prepost Pre/After market hours. Only works for 'yf' source, and intraday data (default: False) -h, --help show this help message (default: False) "},{"id":1167,"href":"/OpenBBTerminal/terminal/stocks/ins/lpsb/","title":"Lpsb","parent":"Introduction to the Insider Trading Menu","content":"usage: lpsb [-l LIMIT] [-h] [--export {csv,json,xlsx}] See the latest, penny stock, executive and director acquisitions. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:13 (✨) /stocks/ins/ $ lpsb Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-16 │ 2022-02-09 │ ZIVO │ Zivo Bioscience, │ Maggiore Christopher │ Dir, 10% │ P - Purchase │ $3.72 │ +91,334 │ 803,105 │ +13% │ +$340,098 │ │ │ 06:02:09 │ │ │ Inc. │ D. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-15 │ 2021-07-12 │ VGZ │ Vista Gold Corp │ Sun Valley Gold │ 10% │ P - Purchase │ $1.10 │ +1,300,000 │ 19,922,544 │ +7% │ +$1,430,000 │ │ │ 16:34:28 │ │ │ │ Master Fund, Ltd │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-14 │ 2022-02-10 │ SNSE │ Sensei │ Peyer James │ Dir, 10% │ P - Purchase │ $4.45 │ +17,500 │ 5,175,786 │ 0% │ +$77,900 │ │ │ 19:19:52 │ │ │ Biotherapeutics, │ │ │ │ │ │ │ │ │ │ │ │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-14 │ 2022-02-10 │ SNSE │ Sensei │ Cambrian Biopharma │ 10% │ P - Purchase │ $4.45 │ +17,500 │ 5,175,786 │ 0% │ +$77,900 │ │ │ 19:18:48 │ │ │ Biotherapeutics, │ Inc │ │ │ │ │ │ │ │ │ │ │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-14 │ 2022-02-10 │ IMRA │ Imara Inc. │ Mott David M │ Dir │ P - Purchase │ $1.23 │ +31,826 │ 31,826 │ New │ +$39,246 │ │ │ 17:02:52 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-11 │ 2022-02-09 │ ARMP │ Armata │ Innoviva, Inc. │ Dir, 10% │ P - Purchase │ $5.00 │ +3,614,792 │ 19,691,561 │ +22% │ +$18,073,960 │ │ │ 18:56:05 │ │ │ Pharmaceuticals, │ │ │ │ │ │ │ │ │ │ │ │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-11 │ 2022-02-09 │ EMMA │ Emmaus Life │ Niihara Yutaka │ COB, CEO, │ P - Purchase │ $1.46 │ +30,500 │ 11,350,200 │ 0% │ +$44,385 │ │ │ 17:00:36 │ │ │ Sciences, Inc. │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-10 │ 2022-02-08 │ REVB │ Revelation │ Tidmarsh George F │ Dir, 10% │ P - Purchase │ $2.55 │ +31,000 │ 1,970,491 │ +2% │ +$79,139 │ │ │ 18:22:45 │ │ │ Biosciences, Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-09 │ 2022-02-08 │ MYPS │ Playstudios, Inc. │ Pascal Andrew S │ COB, CEO, │ P - Purchase │ $4.77 │ +25,700 │ 16,242,900 │ 0% │ +$122,602 │ │ │ 19:36:53 │ │ │ │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼───────────────────┼──────────────────────┼───────────┼──────────────┼───────┼────────────┼────────────┼──────────┼──────────────┤ │ AM │ 2022-02-09 │ 2022-02-04 │ REVB │ Revelation │ Tidmarsh George F │ Dir, 10% │ P - Purchase │ $2.56 │ +52,000 │ 1,939,491 │ +3% │ +$132,936 │ │ │ 16:24:52 │ │ │ Biosciences, Inc. │ │ │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴───────────────────┴──────────────────────┴───────────┴──────────────┴───────┴────────────┴────────────┴──────────┴──────────────┘ A: Amended filing D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1168,"href":"/OpenBBTerminal/terminal/stocks/ins/set/","title":"Set","parent":"Introduction to the Insider Trading Menu","content":"usage: set [-p {Gold-Silver,Personal-Credit,Business-Services,Furniture,Mining,Brokers,Wholesale-Trade,Manufacturing,Nondurable-Goods,Legal,template,Construction,Retail-Trade,Hotels,Professional-Services,Guided-Missiles,Durable-Goods,Insurance-Agents,whales,Building-Materials,Closed-End-Funds,Utility-Communications,Ground-Freight,Lumber,Grocery,Electronics,Tobacco,Agriculture,Real-Estate,Agro-Chemicals,Credit-Industry,Railroads,Retail-Stores,Apparel,Insurance-Carriers,Investment-Offices,Banks,Restaurants,Pharmaceuticals,Health,Air-Transportation,Utility-Gas,Mortgages}] [-h] Set the preset from the available list of user-generated presets. Use the template file, save as the desired name for the new preset in the same directory.\noptional arguments: -p {Gold-Silver,Personal-Credit,Business-Services,Furniture,Mining,Brokers,Wholesale-Trade,Manufacturing,Nondurable-Goods,Legal,template,Construction,Retail-Trade,Hotels,Professional-Services,Guided-Missiles,Durable-Goods,Insurance-Agents,whales,Building-Materials,Closed-End-Funds,Utility-Communications,Ground-Freight,Lumber,Grocery,Electronics,Tobacco,Agriculture,Real-Estate,Agro-Chemicals,Credit-Industry,Railroads,Retail-Stores,Apparel,Insurance-Carriers,Investment-Offices,Banks,Restaurants,Pharmaceuticals,Health,Air-Transportation,Utility-Gas,Mortgages}, --preset {Gold-Silver,Personal-Credit,Business-Services,Furniture,Mining,Brokers,Wholesale-Trade,Manufacturing,Nondurable-Goods,Legal,template,Construction,Retail-Trade,Hotels,Professional-Services,Guided-Missiles,Durable-Goods,Insurance-Agents,whales,Building-Materials,Closed-End-Funds,Utility-Communications,Ground-Freight,Lumber,Grocery,Electronics,Tobacco,Agriculture,Real-Estate,Agro-Chemicals,Credit-Industry,Railroads,Retail-Stores,Apparel,Insurance-Carriers,Investment-Offices,Banks,Restaurants,Pharmaceuticals,Health,Air-Transportation,Utility-Gas,Mortgages} Filter presets -h, --help show this help message "},{"id":1169,"href":"/OpenBBTerminal/terminal/stocks/ins/tippm/","title":"Tippm","parent":"Introduction to the Insider Trading Menu","content":"usage: tippm [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print top insider purchases of the month. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:15 (✨) /stocks/ins/ $ tippm Insider Data ┏━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-11 │ 2022-02-09 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $63.20 │ +1,250,000 │ 21,986,722 │ +6% │ +$79,005,992 │ │ │ 18:50:54 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-01-21 │ 2022-01-19 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $54.38 │ +1,250,000 │ 18,236,722 │ +7% │ +$67,971,300 │ │ │ 20:10:14 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-01-28 │ 2022-01-26 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $48.97 │ +1,250,000 │ 19,486,722 │ +7% │ +$61,206,304 │ │ │ 19:49:05 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-04 │ 2022-02-02 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $48.15 │ +1,250,000 │ 20,736,722 │ +6% │ +$60,187,048 │ │ │ 17:49:06 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-01-18 │ 2022-01-13 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $63.57 │ +750,000 │ 16,986,722 │ +5% │ +$47,678,117 │ │ │ 18:33:06 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-01 │ 2022-01-31 │ EPZM │ Epizyme, Inc. │ Legorreta Pablo G. │ Dir, 10% │ P - Purchase │ $1.50 │ +22,666,667 │ 31,833,334 │ +247% │ +$34,000,001 │ │ │ 16:17:51 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-01-25 │ 2022-01-21 │ KOD │ Kodiak Sciences Inc. │ Baker Bros. Advisors │ Dir, 10% │ P - Purchase │ $57.49 │ +501,111 │ 15,182,415 │ +3% │ +$28,806,796 │ │ │ 17:40:15 │ │ │ │ LP │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-10 │ 2022-02-08 │ ACLX │ Arcellx, Inc. │ Sr One Capital │ 10% │ P - Purchase │ $15.00 │ +1,666,667 │ 2,033,196 │ +455% │ +$25,000,005 │ │ │ 08:41:09 │ │ │ │ Management, LLC │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-09 │ 2022-02-08 │ ACLX │ Arcellx, Inc. │ Carroll Jill │ Dir │ P - Purchase │ $15.00 │ +1,666,667 │ 2,033,196 │ +455% │ +$25,000,005 │ │ │ 17:51:42 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼──────────────┼────────┼─────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-09 │ 2022-02-08 │ ACLX │ Arcellx, Inc. │ New Enterprise │ 10% │ P - Purchase │ $15.00 │ +1,583,333 │ 6,432,762 │ +33% │ +$23,749,995 │ │ │ 18:18:55 │ │ │ │ Associates 15, L.P. │ │ │ │ │ │ │ │ └───┴─────────────┴────────────┴────────┴──────────────────────┴──────────────────────┴────────────┴──────────────┴────────┴─────────────┴────────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1170,"href":"/OpenBBTerminal/terminal/stocks/ins/tippw/","title":"Tippw","parent":"Introduction to the Insider Trading Menu","content":"usage: tippw [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print top insider purchases of the week. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:16 (✨) /stocks/ins/ $ tippw Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-11 │ 2022-02-09 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $63.20 │ +1,250,000 │ 21,986,722 │ +6% │ +$79,005,992 │ │ │ 18:50:54 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-10 │ 2022-02-08 │ ACLX │ Arcellx, Inc. │ Sr One Capital │ 10% │ P - Purchase │ $15.00 │ +1,666,667 │ 2,033,196 │ +455% │ +$25,000,005 │ │ │ 08:41:09 │ │ │ │ Management, LLC │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-11 │ 2022-02-09 │ ARMP │ Armata │ Innoviva, Inc. │ Dir, 10% │ P - Purchase │ $5.00 │ +3,614,792 │ 19,691,561 │ +22% │ +$18,073,960 │ │ │ 18:56:05 │ │ │ Pharmaceuticals, │ │ │ │ │ │ │ │ │ │ │ │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-15 │ 2022-02-11 │ AREN │ Arena Group │ B. Riley Financial, │ 10% │ P - Purchase │ $8.26 │ +1,977,982 │ 5,411,514 │ +58% │ +$16,329,921 │ │ │ 21:30:53 │ │ │ Holdings, Inc. │ Inc. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-11 │ 2022-02-09 │ PFSI │ Pennymac Financial │ Nanji Farhad │ Dir │ P - Purchase │ $61.11 │ +204,018 │ 4,607,478 │ +5% │ +$12,466,937 │ │ │ 17:34:36 │ │ │ Services, Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-11 │ 2022-02-09 │ PFSI │ Pennymac Financial │ Mfn Partners, LP │ Dir │ P - Purchase │ $61.11 │ +204,018 │ 4,435,810 │ +5% │ +$12,466,937 │ │ │ 17:38:48 │ │ │ Services, Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ INDT │ Indus Realty Trust, │ Ccp Sbs Gp, LLC │ 10% │ P - Purchase │ $75.91 │ +90,492 │ 8,855 │ -111% │ +$6,869,060 │ │ │ 17:30:17 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ PFSI │ Pennymac Financial │ Mfn Partners, LP │ Dir │ P - Purchase │ $60.88 │ +95,982 │ 4,531,792 │ +2% │ +$5,843,238 │ │ │ 16:39:45 │ │ │ Services, Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ PFSI │ Pennymac Financial │ Nanji Farhad │ Dir │ P - Purchase │ $60.88 │ +95,982 │ 4,703,460 │ +2% │ +$5,843,238 │ │ │ 16:43:39 │ │ │ Services, Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-15 │ 2022-02-14 │ APRN │ Blue Apron Holdings, │ Sanberg Joseph N. │ 10% │ P - Purchase │ $14.00 │ +357,143 │ 6,935,469 │ +5% │ +$5,000,002 │ │ │ 17:00:42 │ │ │ Inc. │ │ │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴──────────────────────┴─────────────────────┴────────────┴──────────────┴────────┴────────────┴────────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1171,"href":"/OpenBBTerminal/terminal/stocks/ins/tipt/","title":"Tipt","parent":"Introduction to the Insider Trading Menu","content":"usage: tipt [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print top insider purchases of the day. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:18 (✨) /stocks/ins/ $ tipt Insider Data ┏━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━┩ │ M │ 2022-02-16 │ 2022-02-09 │ ZIVO │ Zivo Bioscience, │ Maggiore Christopher │ Dir, 10% │ P - Purchase │ $3.72 │ +91,334 │ 803,105 │ +13% │ +$340,098 │ │ │ 06:02:09 │ │ │ Inc. │ D. │ │ │ │ │ │ │ │ └───┴─────────────┴────────────┴────────┴──────────────────┴──────────────────────┴──────────┴──────────────┴───────┴─────────┴─────────┴──────────┴───────────┘ M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1172,"href":"/OpenBBTerminal/terminal/stocks/ins/tispm/","title":"Tispm","parent":"Introduction to the Insider Trading Menu","content":"usage: tispm [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print top insider sales of the month. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:18 (✨) /stocks/ins/ $ tispm Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ D │ 2022-02-08 │ 2022-02-04 │ BKR │ Baker Hughes Co │ General Electric Co │ 10% │ S - Sale+OE │ $25.98 │ -50,097,840 │ 116,548,079 │ -30% │ -$1,301,541,883 │ │ │ 06:12:02 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ M │ 2022-02-14 │ 2021-03-10 │ RBLX │ Roblox Corp │ Index Ventures │ 10% │ S - Sale │ $67.38 │ -3,885,536 │ 49,220,602 │ -7% │ -$261,800,110 │ │ │ 09:14:09 │ │ │ │ Growth III (Jersey), │ │ │ │ │ │ │ │ │ │ │ │ │ │ L.P. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ D │ 2022-02-11 │ 2022-02-10 │ EL │ Estee Lauder │ Lauder Ronald S │ COB, │ S - Sale+OE │ $307.08 │ -700,000 │ 6,364 │ -99% │ -$214,956,000 │ │ │ 15:35:52 │ │ │ Companies Inc │ │ Clinique │ │ │ │ │ │ │ │ │ │ │ │ │ │ Labs, LLC, │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ M │ 2022-02-09 │ 2022-02-07 │ MA │ Mastercard Inc │ Mastercard │ 10% │ S - Sale │ $378.65 │ -465,180 │ 104,936,251 │ 0% │ -$176,139,632 │ │ │ 16:40:01 │ │ │ │ Foundation │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ M │ 2022-02-14 │ 2022-02-10 │ MA │ Mastercard Inc │ Mastercard │ 10% │ S - Sale │ $375.58 │ -465,180 │ 104,471,071 │ 0% │ -$174,712,785 │ │ │ 16:57:44 │ │ │ │ Foundation │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ D │ 2022-02-07 │ 2022-02-03 │ MGY │ Magnolia Oil \u0026amp; Gas │ Enervest, Ltd. │ Dir, 10% │ S - Sale+OE │ $21.00 │ -7,455,815 │ 16,282,900 │ -31% │ -$156,572,115 │ │ │ 21:24:38 │ │ │ Corp │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ D │ 2022-02-07 │ 2022-02-03 │ MGY │ Magnolia Oil \u0026amp; Gas │ Walker John B │ Dir, 10% │ S - Sale+OE │ $21.00 │ -7,455,815 │ 16,879,220 │ -31% │ -$156,572,115 │ │ │ 21:23:37 │ │ │ Corp │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ D │ 2022-01-19 │ 2022-01-14 │ NXST │ Nexstar Media Group, │ Sook Perry A │ CEO │ S - Sale+OE │ $170.10 │ -352,703 │ 1,395,738 │ -20% │ -$59,995,168 │ │ │ 12:23:49 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ AD │ 2022-02-07 │ 2022-02-01 │ AXP │ American Express Co │ Squeri Stephen J │ COB, CEO │ S - Sale+OE │ $178.60 │ -267,656 │ 246,354 │ -52% │ -$47,804,524 │ │ │ 18:18:36 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼─────────┼─────────────┼─────────────┼──────────┼─────────────────┤ │ D │ 2022-02-02 │ 2022-02-01 │ AXP │ American Express Co │ Squeri Stephen J │ COB, CEO │ S - Sale+OE │ $178.60 │ -267,656 │ 246,353 │ -52% │ -$47,804,524 │ │ │ 17:16:49 │ │ │ │ │ │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴──────────────────────┴──────────────────────┴────────────┴─────────────┴─────────┴─────────────┴─────────────┴──────────┴─────────────────┘ A: Amended filing D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1173,"href":"/OpenBBTerminal/terminal/stocks/ins/tispw/","title":"Tispw","parent":"Introduction to the Insider Trading Menu","content":"usage: tispw [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print top insider sales of the week. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:20 (✨) /stocks/ins/ $ tispw Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ M │ 2022-02-14 │ 2021-03-10 │ RBLX │ Roblox Corp │ Index Ventures │ 10% │ S - Sale │ $67.38 │ -3,885,536 │ 49,220,602 │ -7% │ -$261,800,110 │ │ │ 09:14:09 │ │ │ │ Growth III (Jersey), │ │ │ │ │ │ │ │ │ │ │ │ │ │ L.P. │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ D │ 2022-02-11 │ 2022-02-10 │ EL │ Estee Lauder │ Lauder Ronald S │ COB, │ S - Sale+OE │ $307.08 │ -700,000 │ 6,364 │ -99% │ -$214,956,000 │ │ │ 15:35:52 │ │ │ Companies Inc │ │ Clinique │ │ │ │ │ │ │ │ │ │ │ │ │ │ Labs, LLC, │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ M │ 2022-02-14 │ 2022-02-10 │ MA │ Mastercard Inc │ Mastercard │ 10% │ S - Sale │ $375.58 │ -465,180 │ 104,471,071 │ 0% │ -$174,712,785 │ │ │ 16:57:44 │ │ │ │ Foundation │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ D │ 2022-02-11 │ 2022-02-09 │ GOOG │ Alphabet Inc. │ Brin Sergey │ Dir, 10% │ S - Sale+OE │ $3,222.87 │ -13,010 │ 879 │ -94% │ -$41,929,493 │ │ │ 12:12:28 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ D │ 2022-02-11 │ 2022-02-09 │ GOOG │ Alphabet Inc. │ Brin Sergey │ Dir, 10% │ S - Sale+OE │ $2,822.51 │ -14,768 │ 18,670,368 │ 0% │ -$41,682,866 │ │ │ 12:14:06 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ D │ 2022-02-10 │ 2022-02-08 │ GOOG │ Alphabet Inc. │ Brin Sergey │ Dir, 10% │ S - Sale+OE │ $2,720.42 │ -10,864 │ 3,025 │ -78% │ -$29,554,666 │ │ │ 17:05:02 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ M │ 2022-02-11 │ 2022-02-09 │ ARES │ Ares Management Corp │ Arougheti Michael J │ Co- │ S - Sale │ $81.02 │ -364,590 │ 1,640,867 │ -18% │ -$29,537,725 │ │ │ 20:25:29 │ │ │ │ │ Founder, │ │ │ │ │ │ │ │ │ │ │ │ │ │ CEO, Pres │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ AD │ 2022-02-10 │ 2021-11-03 │ BB │ Blackberry Ltd │ Chen John S │ Exec COB, │ S - Sale+OE │ $11.14 │ -2,222,844 │ 6,002,344 │ -27% │ -$24,762,482 │ │ │ 17:09:01 │ │ │ │ │ CEO │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ M │ 2022-02-10 │ 2021-11-19 │ DUOL │ Duolingo, Inc. │ Capitalg 2014 LP │ 10% │ S - Sale │ $133.27 │ -151,954 │ 137,258 │ -53% │ -$20,250,618 │ │ │ 16:42:12 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼──────────────────────┼────────────┼─────────────┼───────────┼────────────┼─────────────┼──────────┼───────────────┤ │ M │ 2022-02-14 │ 2022-02-10 │ ZI │ Zoominfo │ Carlyle Group Inc. │ 10% │ S - Sale │ $58.16 │ -327,235 │ 43,914,747 │ -1% │ -$19,030,502 │ │ │ 16:06:35 │ │ │ Technologies Inc. │ │ │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴──────────────────────┴──────────────────────┴────────────┴─────────────┴───────────┴────────────┴─────────────┴──────────┴───────────────┘ A: Amended filing D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1174,"href":"/OpenBBTerminal/terminal/stocks/ins/tist/","title":"Tist","parent":"Introduction to the Insider Trading Menu","content":"usage: tist [-n NUM] [-h] Today\u0026rsquo;s top insider dispositions. Source: http://openinsider.com\noptional arguments: -n NUM, --num NUM Number of datarows to display (default: 20) -h, --help show this help message (default: False) "},{"id":1175,"href":"/OpenBBTerminal/terminal/stocks/ins/toppm/","title":"Toppm","parent":"Introduction to the Insider Trading Menu","content":"usage: toppm [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print top officer purchases of the month. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:23 (✨) /stocks/ins/ $ toppm Insider Data ┏━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-11 │ 2022-02-09 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $63.20 │ +1,250,000 │ 21,986,722 │ +6% │ +$79,005,992 │ │ │ 18:50:54 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-01-21 │ 2022-01-19 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $54.38 │ +1,250,000 │ 18,236,722 │ +7% │ +$67,971,300 │ │ │ 20:10:14 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-01-28 │ 2022-01-26 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $48.97 │ +1,250,000 │ 19,486,722 │ +7% │ +$61,206,304 │ │ │ 19:49:05 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-04 │ 2022-02-02 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $48.15 │ +1,250,000 │ 20,736,722 │ +6% │ +$60,187,048 │ │ │ 17:49:06 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-01-18 │ 2022-01-13 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $63.57 │ +750,000 │ 16,986,722 │ +5% │ +$47,678,117 │ │ │ 18:33:06 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-01-28 │ 2022-01-27 │ NFLX │ Netflix Inc │ Hastings Reed │ Co-CEO │ P - Purchase │ $388.83 │ +51,440 │ 5,158,941 │ +1% │ +$20,001,609 │ │ │ 19:25:13 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-07 │ 2022-02-03 │ LDI │ Loandepot, Inc. │ Hsieh Anthony Li │ CEO, 10% │ P - Purchase │ $3.68 │ +1,584,611 │ 3,061,782 │ +107% │ +$5,832,930 │ │ │ 17:01:16 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-01-24 │ 2022-01-20 │ TETE │ Technology \u0026amp; │ Ng Tek Che │ CEO, 10% │ P - Purchase │ $10.00 │ +532,500 │ 3,407,500 │ +19% │ +$5,325,000 │ │ │ 21:53:22 │ │ │ Telecommunication │ │ │ │ │ │ │ │ │ │ │ │ │ │ Acquisition Corp │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ NMRK │ Newmark Group, Inc. │ Lutnick Howard W │ COB, 10% │ P - Purchase │ $17.21 │ +277,000 │ 14,009,707 │ +2% │ +$4,767,220 │ │ │ 17:17:30 │ │ │ │ │ │ │ │ │ │ │ │ ├───┼─────────────┼────────────┼────────┼─────────────────────┼─────────────────────┼────────────┼──────────────┼─────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-01-31 │ 2022-01-27 │ VCNX │ Vaccinex, Inc. │ Zauderer Maurice │ Pres, CEO │ P - Purchase │ $1.11 │ +1,801,801 │ 3,502,672 │ +106% │ +$1,999,999 │ │ │ 16:23:00 │ │ │ │ │ │ │ │ │ │ │ │ └───┴─────────────┴────────────┴────────┴─────────────────────┴─────────────────────┴────────────┴──────────────┴─────────┴────────────┴────────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1176,"href":"/OpenBBTerminal/terminal/stocks/ins/toppw/","title":"Toppw","parent":"Introduction to the Insider Trading Menu","content":"usage: toppw [-l LIMIT] [-h] [--export {csv,json,xlsx}] Print top officer purchases of the week. [Source: OpenInsider]\noptional arguments: -l LIMIT, --limit LIMIT Limit of datarows to display (default: 10) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 08:23 (✨) /stocks/ins/ $ toppw Insider Data ┏━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ X ┃ Filing Date ┃ Trade Date ┃ Ticker ┃ Company Name ┃ Insider Name ┃ Title ┃ Trade Type ┃ Price ┃ Qty ┃ Owned ┃ Diff Own ┃ Value ┃ ┡━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ M │ 2022-02-11 │ 2022-02-09 │ ASAN │ Asana, Inc. │ Moskovitz Dustin A. │ Pres, CEO, │ P - Purchase │ $63.20 │ +1,250,000 │ 21,986,722 │ +6% │ +$79,005,992 │ │ │ 18:50:54 │ │ │ │ │ Chair, 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-11 │ NMRK │ Newmark Group, Inc. │ Lutnick Howard W │ COB, 10% │ P - Purchase │ $17.21 │ +277,000 │ 14,009,707 │ +2% │ +$4,767,220 │ │ │ 17:17:30 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-14 │ 2022-02-10 │ NXDT │ Nexpoint Diversified │ Dondero James D │ See │ P - Purchase │ $15.05 │ +83,825 │ 5,681,792 │ +1% │ +$1,261,481 │ │ │ 18:26:27 │ │ │ Real Estate Trust │ │ Remarks, │ │ │ │ │ │ │ │ │ │ │ │ │ │ 10% │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ M │ 2022-02-15 │ 2022-02-14 │ TWOU │ 2U, Inc. │ Chernis Mark │ COO │ P - Purchase │ $9.29 │ +43,482 │ 349,939 │ +14% │ +$403,886 │ │ │ 20:47:47 │ │ │ │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-11 │ 2022-02-09 │ LOB │ Live Oak Bancshares, │ Losch William C III │ CFO │ P - Purchase │ $63.74 │ +6,250 │ 9,750 │ +179% │ +$398,382 │ │ │ 18:26:14 │ │ │ Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ DM │ 2022-02-14 │ 2022-02-11 │ FLXS │ Flexsteel Industries │ Schmidt Derek P │ CFO, COO │ P - Purchase │ $22.38 │ +17,111 │ 174,275 │ +11% │ +$382,859 │ │ │ 13:09:00 │ │ │ Inc │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-14 │ 2022-02-14 │ SKYX │ Sql Technologies │ Campi John P. │ CEO │ P - Purchase │ $14.00 │ +14,285 │ 1,184,285 │ +1% │ +$199,990 │ │ │ 12:56:34 │ │ │ Corp. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-11 │ 2022-02-10 │ GHM │ Graham Corp │ Smith Alan E │ VP, GM - │ P - Purchase │ $9.10 │ +8,000 │ 59,163 │ +16% │ +$72,800 │ │ │ 15:02:12 │ │ │ │ │ Batavia │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-14 │ 2022-02-14 │ CFFN │ Capitol Federal │ Haag Natalie G. │ EVP │ P - Purchase │ $10.96 │ +670 │ 85,102 │ +1% │ +$7,343 │ │ │ 14:57:26 │ │ │ Financial, Inc. │ │ │ │ │ │ │ │ │ ├────┼─────────────┼────────────┼────────┼──────────────────────┼─────────────────────┼────────────┼──────────────┼────────┼────────────┼────────────┼──────────┼──────────────┤ │ D │ 2022-02-15 │ 2022-02-15 │ CFFN │ Capitol Federal │ Haag Natalie G. │ EVP │ P - Purchase │ $11.10 │ +545 │ 85,647 │ +1% │ +$6,050 │ │ │ 13:11:41 │ │ │ Financial, Inc. │ │ │ │ │ │ │ │ │ └────┴─────────────┴────────────┴────────┴──────────────────────┴─────────────────────┴────────────┴──────────────┴────────┴────────────┴────────────┴──────────┴──────────────┘ D: Derivative transaction in filing (usually option exercise) M: Multiple transactions in filing; earliest reported transaction date \u0026amp; weighted average transaction price "},{"id":1177,"href":"/OpenBBTerminal/terminal/stocks/ins/topt/","title":"Topt","parent":"Introduction to the Insider Trading Menu","content":"usage: topt [-n NUM] [-h] Corporate officer acquisitions today. Source: http://openinsider.com\noptional arguments: -n NUM, --num NUM Number of datarows to display (default: 20) -h, --help show this help message (default: False) "},{"id":1178,"href":"/OpenBBTerminal/terminal/stocks/ins/view/","title":"View","parent":"Introduction to the Insider Trading Menu","content":"usage: view [-p {Gold-Silver,Personal-Credit,Business-Services,Furniture,Mining,Brokers,Wholesale-Trade,Manufacturing,Nondurable-Goods,Legal,template,Construction,Retail-Trade,Hotels,Professional-Services,Guided-Missiles,Durable-Goods,Insurance-Agents,whales,Building-Materials,Closed-End-Funds,Utility-Communications,Ground-Freight,Lumber,Grocery,Electronics,Tobacco,Agriculture,Real-Estate,Agro-Chemicals,Credit-Industry,Railroads,Retail-Stores,Apparel,Insurance-Carriers,Investment-Offices,Banks,Restaurants,Pharmaceuticals,Health,Air-Transportation,Utility-Gas,Mortgages}] [-h] View available presets under presets folder. [Source: OpenInsider]\noptional arguments: -p {Gold-Silver,Personal-Credit,Business-Services,Furniture,Mining,Brokers,Wholesale-Trade,Manufacturing,Nondurable-Goods,Legal,template,Construction,Retail-Trade,Hotels,Professional-Services,Guided-Missiles,Durable-Goods,Insurance-Agents,whales,Building-Materials,Closed-End-Funds,Utility-Communications,Ground-Freight,Lumber,Grocery,Electronics,Tobacco,Agriculture,Real-Estate,Agro-Chemicals,Credit-Industry,Railroads,Retail-Stores,Apparel,Insurance-Carriers,Investment-Offices,Banks,Restaurants,Pharmaceuticals,Health,Air-Transportation,Utility-Gas,Mortgages}, --preset {Gold-Silver,Personal-Credit,Business-Services,Furniture,Mining,Brokers,Wholesale-Trade,Manufacturing,Nondurable-Goods,Legal,template,Construction,Retail-Trade,Hotels,Professional-Services,Guided-Missiles,Durable-Goods,Insurance-Agents,whales,Building-Materials,Closed-End-Funds,Utility-Communications,Ground-Freight,Lumber,Grocery,Electronics,Tobacco,Agriculture,Real-Estate,Agro-Chemicals,Credit-Industry,Railroads,Retail-Stores,Apparel,Insurance-Carriers,Investment-Offices,Banks,Restaurants,Pharmaceuticals,Health,Air-Transportation,Utility-Gas,Mortgages} View specific preset -h, --help show this help message See available options:\n2022 Feb 16, 08:27 (✨) /stocks/ins/ $ view PRESET: Gold-Silver Gold and Silver Producers - Last 3 Months - All Transactions PRESET: Personal-Credit Personal Credit - Last 3 Months - All Transactions PRESET: Business-Services B2B Services Industry - Last 3 Months - All Transactions PRESET: Furniture Furniture Producers - Last 3 Months - All Transactions PRESET: Mining Mining Industry - Last 3 Months - All Transactions PRESET: Brokers Security and Commodity Brokers - Last 3 Months - All Transactions PRESET: Wholesale-Trade Whosesale Trade Industry - Last 3 Months - All Transactions PRESET: Manufacturing Manufacturing Industry - Last 3 Months - All Transactions PRESET: Nondurable-Goods Nondurable Goods Producers - Last 3 Months - All Transactions PRESET: Legal Legal Services Industry - Last 3 Months - All Transactions PRESET: template The user that adds the preset can add a description for what type of insiders this is meant. PRESET: Construction Construction Industry - Last 3 Months - All Transactions PRESET: Retail-Trade Retail Trade - Last 3 Months - All Transactions PRESET: Hotels Hotel Industry - Last 3 Months - All Transactions PRESET: Professional-Services Professional Services - Last 3 Months - All Transactions PRESET: Guided-Missiles Guided Missile Industry - Last 3 Months - All Transactions PRESET: Durable-Goods Durable Goods Producers - Last 3 Months - All Transactions PRESET: Insurance-Agents Insurance Agents - Last 3 Months - All Transactions PRESET: whales Tries to catch whales that have traded a minimum of 100M$ with a stock with a minimum share price of 20$ in the past 2 weeks. PRESET: Building-Materials Building Materials Industry - Last 3 Months - All Transactions PRESET: Closed-End-Funds Closed-End Funds - Last 3 Months - All Transactions PRESET: Utility-Communications Communications Utilities - Last 3 Months - All Transactions PRESET: Ground-Freight Ground Freight - Last 3 Months - All Transactions PRESET: Lumber Lumber Industry - Last 3 Months - All Transactions PRESET: Grocery Grocery Industry - Last 3 Months - All Transactions PRESET: Electronics Electronics Components Producers - Last 3 Months - All Transactions PRESET: Tobacco Tobacco Industry - Last 3 Months - All Transactions PRESET: Agriculture Agriculture Services Industry - Last 3 Months - All Transactions PRESET: Real-Estate Real Estate - Last 3 Months - All Transactions PRESET: Agro-Chemicals Agriculture Services Industry - Last 3 Months - All Transactions PRESET: Credit-Industry Credit Industry - Last 3 Months - All Transactions PRESET: Railroads Railroads - Last 3 Months - All Transactions PRESET: Retail-Stores Retail Stores - Last 3 Months - All Transactions PRESET: Apparel Apparel Industry - Last 3 Months - All Transactions PRESET: Insurance-Carriers Insurance Carriers - Last 3 Months - All Transactions PRESET: Investment-Offices Investment Offices - Last 3 Months - All Transactions PRESET: Banks Banks - Last 3 Months - All Transactions PRESET: Restaurants Restaurants - Last 3 Months - All Transactions PRESET: Pharmaceuticals Pharmaceuticals - Last 3 Months - All Transactions PRESET: Health Health Services Industry - Last 3 Months - All Transactions PRESET: Air-Transportation Air Transportation - Last 3 Months - All Transactions PRESET: Utility-Gas Gas Utilities - Last 3 Months - All Transactions PRESET: Mortgages Mortgage Industry - Last 3 Months - All Transactions "},{"id":1179,"href":"/OpenBBTerminal/terminal/stocks/load/","title":"Load","parent":"Introduction to Stocks","content":"usage: load [-t TICKER] [-s START] [-e END] [-i {1,5,15,30,60}] [--source {yf,av,iex}] [-p] [-f {Test.csv}] [-m] [-w] [-r {ytd,1y,2y,5y,6m}] [-h] Load a symbol to perform analysis using the string above as a template. Optional arguments and their descriptions are listed below.\nThe default source is, yFinance (https://pypi.org/project/yfinance/). Alternatively, one may select either AlphaVantage (https://www.alphavantage.co/documentation/) or IEX Cloud (https://iexcloud.io/docs/api/) as the data source for the analysis. Please note that certain analytical features are exclusive to the source.\nTo load a symbol from an exchange outside of the NYSE/NASDAQ default, use yFinance as the source and add the corresponding exchange to the end of the symbol. i.e. \u0026lsquo;BNS.TO\u0026rsquo;.\nBNS is a dual-listed stock, there are separate options chains and order books for each listing. Opportunities for arbitrage may arise from momentary pricing discrepancies between listings with a dynamic exchange rate as a second order opportunity in ForEx spreads.\nFind the full list of supported exchanges here: https://help.yahoo.com/kb/exchanges-data-providers-yahoo-finance-sln2310.html\nCertain analytical features, such as VWAP, require the ticker to be loaded as intraday using the \u0026lsquo;-i x\u0026rsquo; argument. When encountering this error, simply reload the symbol using the interval argument. i.e. \u0026lsquo;load -t BNS -s YYYY-MM-DD -i 1 -p\u0026rsquo; loads one-minute intervals, including Pre/After Market data, using the default source, yFinance.\nCertain features, such as the Prediction menu, require the symbol to be loaded as daily and not intraday.\noptional arguments: -t TICKER, --ticker TICKER Stock ticker (default: None) -s START, --start START The starting date (format YYYY-MM-DD) of the stock (default: 2019-06-06) -e END, --end END The ending date (format YYYY-MM-DD) of the stock (default: 2022-06-10) -i {1,5,15,30,60}, --interval {1,5,15,30,60} Intraday stock minutes (default: 1440) --source {yf,av,iex,polygon} Source of historical data. (default: stocks.load value from $OPENBB_PREFERRED_DATA_SOURCE_FILE file) -p, --prepost Pre/After market hours. Only works for \u0026#39;yf\u0026#39; source, and intraday data (default: False) -f FILEPATH, --file FILEPATH Path to load custom file. (default: None) -m, --monthly Load monthly data (default: False) -w, --weekly Load weekly data (default: False) -r {ytd,1y,2y,5y,6m}, --iexrange {ytd,1y,2y,5y,6m} Range for using the iexcloud api. Note that longer range requires more tokens in account (default: ytd) -h, --help show this help message (default: False) Note that loading monthly and weekly data are limited to yahoo finance, and monthly data has displayed issues where older data just downloads as nan.\nLoading a custom file looks in the folder custom_imports/stocks and is currently only designed for csv files.\nExample:\n2022 Feb 16, 08:29 (✨) /stocks/ $ load TSLA Loading Daily TSLA stock with starting period 2019-02-11 for analysis. Datetime: 2022 Feb 16 08:30 Timezone: America/New_York Currency: USD Market: OPEN 2022 Feb 16, 08:30 (✨) /stocks/ $ load AAPL Loading Daily AAPL stock with starting period 2019-02-11 for analysis. Datetime: 2022 Feb 16 08:30 Timezone: America/New_York Currency: USD Market: OPEN 2022 Feb 16, 08:30 (✨) /stocks/ $ load AMZN Loading Daily AMZN stock with starting period 2019-02-11 for analysis. Datetime: 2022 Feb 16 08:30 Timezone: America/New_York Currency: USD Market: OPEN "},{"id":1180,"href":"/OpenBBTerminal/terminal/stocks/news/","title":"News","parent":"Introduction to Stocks","content":"usage: news [-n N_NUM] [-d N_START_DATE] [-o] [-s SOURCES [SOURCES ...]] [-h] Using the loaded ticker, the \u0026lsquo;news\u0026rsquo; command will search articles and blogs with the News API where the ticker symbol or company name are mentioned. Searches are limited to the past thirty days when using the free API key available. Searches may bring unwanted results when the ticker or business name contains words used as the Dictionary defines. Optional arguments can be added to the command string as described below.\noptional arguments: -n N_NUM, --num N_NUM Number of latest news being printed. -d N_START_DATE, --date N_START_DATE The starting date (format YYYY-MM-DD) to search articles from -o, --oldest Show oldest articles first -s SOURCES [SOURCES ...], --sources SOURCES [SOURCES ...] Show news only from the sources specified (e.g bbc yahoo.com) -h, --help show this help message Example:\n2022 Jul 04, 16:54 (🦋) /stocks/ $ news 543 news articles for Apple+Inc. were found since 2022-06-27 Three ways to patch your thinking about open-source software security ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐ │ Content │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ 2022-07-04 20:11:03 │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ What comes to mind when you hear “open source?” Is it a community? Better-quality software? A technology advantage │ │ that helps companies scale quickly? If so, congratulations. You understand the value developing with open-source │ │ software can bring to a business… │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ https://siliconangle.com/2022/07/04/three-ways-patch-thinking-open-source-software-security/ │ └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ HUUUGE, INC.: Informacja o kwartalnych przychodach ze sprzedaży ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐ │ Content │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ 2022-07-04 18:55:11 │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Spis treści:1. RAPORT BIEŻĄCY2. MESSAGE (ENGLISH VERSION)3. INFORMACJE O PODMIOCIE4. PODPISY OSÓB REPREZENTUJĄCYCH │ │ SPÓŁKĘ KOMISJA NADZORU FINANSOWEGO \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt;\u0026lt;font face='Times New... │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ https://www.bankier.pl/wiadomosc/HUUUGE-INC-Informacja-o-kwartalnych-przychodach-ze-sprzedazy-8369875.html │ └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ 5 Carpooling Apps to Help You Save Money on Transportation ┌─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐ │ Content │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ 2022-07-04 16:00:22 │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ When we were kids, our parents told us not to get into cars with strangers, but that’s before we all had │ │ smartphones in our pockets and the price of gas skyrocketed. Now, if you need to get around, carpooling is a way to │ │ save at the gas pump — or the electric… │ ├─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ https://www.thepennyhoarder.com/save-money/carpool-apps/ │ └─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ "},{"id":1181,"href":"/OpenBBTerminal/terminal/stocks/options/binom/","title":"Binom","parent":"Introduction to the Options Menu","content":"usage: binom [-s STRIKE] [-p] [-e] [-x] [--plot] [-v VOLATILITY] [-h] Shows the value of an option using binomial option pricing. Can also show raw data and provide a graph with predicted underlying asset ending values. The binomial options model calculates how big an up step or down step in the next time period will likely be. Then it creates a tree doing this at each period. The end results of this is a tree with possible asset values at each \u0026ldquo;step\u0026rdquo;. For our calculations we use a day as our \u0026ldquo;step\u0026rdquo; time period. We then take all of the expected values at the finishing date and use this to begin a tree of option values at each step. The ending results is the value of the option today.\nThe up step is calculated by taking e to the power of volatility times the square root of the change in time during the step. This is the percentage we expect the stock to increase if there is an upward movement. The down step is the inverse of the up step. The probability of the up step is calculated by taking e to the power of the risk free rate minus the dividend yield. This is multiplied by the change in time for the step and then subtracted by the expected downward movement. This number is then divided by the up step subtracted by then down step. The probability of a downward step is just one minus the probability of an upward step.\nFormulas: up_step = e ^ (volatility * (delta_t ^ (1 / 2))) down_step = 1 / up_step\nprob_up = (e ^ ((risk_free - div_yield) * delta_t) - down_step) / (up_step - down_step) prob_down = 1 - prob_up\noptional arguments: -s STRIKE, --strike STRIKE Strike price for option shown (default: 0) -p, --put Value a put instead of a call (default: False) -e, --european Value a European option instead of an American one (default: False) -x, --xlsx Export an excel spreadsheet with binomial pricing data (default: False) --plot Plot expected ending values (default: False) -v VOLATILITY, --volatility VOLATILITY Underlying asset annualized volatility. (None indicates that the historical volatility is being used) (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 08:40 (✨) /stocks/options/ $ binom -s 3100 -e --plot AMZN call at $3100.00 expiring on 2022-03-25 is worth $136.85 2022 Feb 16, 08:41 (✨) /stocks/options/ $ binom -s 3500 -p --plot AMZN put at $3500.00 expiring on 2022-03-25 is worth $389.72 "},{"id":1182,"href":"/OpenBBTerminal/terminal/stocks/options/calc/","title":"Calc","parent":"Introduction to the Options Menu","content":"usage: calc [--put] [--sell] [-s STRIKE] [-p PREMIUM] [-m MIN] [-M MAX] [-h] Calculate profit or loss for given option settings.\noptional arguments: --put Flag to calculate put option (default: False) --sell Flag to get profit chart of selling contract (default: False) -s STRIKE, --strike STRIKE Option strike price (default: 10) -p PREMIUM, --premium PREMIUM Premium price (default: 1) -m MIN, --min MIN Min price to look at (default: -1) -M MAX, --max MAX Max price to look at (default: -1) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 08:45 (✨) /stocks/options/ $ calc -s 30 -p 6 -m 1 -M 50 Strike: $30.0 Premium: $6.0 Breakeven price: $36.0 Max profit: Unlimited Max loss: $-600.0 "},{"id":1183,"href":"/OpenBBTerminal/terminal/stocks/options/chains/","title":"Chains","parent":"Introduction to the Options Menu","content":"usage: chains [-c] [-p] [-m MIN_SP] [-M MAX_SP] [-d TO_DISPLAY] [-h] [--export EXPORT] [--source {yf,tradier}] Display option chains for selected ticker and expiration\noptions: -c, --calls Flag to show calls only (default: False) -p, --puts Flag to show puts only (default: False) -m MIN_SP, --min MIN_SP minimum strike price to consider. (default: -1) -M MAX_SP, --max MAX_SP maximum strike price to consider. (default: -1) -d TO_DISPLAY, --display TO_DISPLAY (tradier only) Columns to look at. Columns can be: bid, ask, strike, bidsize, asksize, volume, open_interest, delta, gamma, theta, vega, ask_iv, bid_iv, mid_iv. E.g. 'bid,ask,strike' (default: ['mid_iv', 'vega', 'delta', 'gamma', 'theta', 'volume', 'open_interest', 'bid', 'ask']) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) --source {yf,tradier} Data source to select from (default: yf) For more information and examples, use 'about chains' to access the related guide. "},{"id":1184,"href":"/OpenBBTerminal/terminal/stocks/options/exp/","title":"Exp","parent":"Introduction to the Options Menu","content":"usage: exp [-i {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}] [-d {2022-02-18,2022-02-25,2022-03-04,2022-03-11,2022-03-18,2022-03-25,2022-04-01,2022-04-14,2022-05-20,2022-06-17,2022-07-15,2022-08-19,2022-09-16,2022-10-21,2022-11-18,2022-12-16,2023-01-20,2023-03-17,2023-06-16,2023-09-15,2024-01-19,}] [-h] See and set the expiration dates.\noptional arguments: -i {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}, --index {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20} Select index for expiry date. (default: -1) -d {2022-02-18,2022-02-25,2022-03-04,2022-03-11,2022-03-18,2022-03-25,2022-04-01,2022-04-14,2022-05-20,2022-06-17,2022-07-15,2022-08-19,2022-09-16,2022-10-21,2022-11-18,2022-12-16,2023-01-20,2023-03-17,2023-06-16,2023-09-15,2024-01-19,}, --date {2022-02-18,2022-02-25,2022-03-04,2022-03-11,2022-03-18,2022-03-25,2022-04-01,2022-04-14,2022-05-20,2022-06-17,2022-07-15,2022-08-19,2022-09-16,2022-10-21,2022-11-18,2022-12-16,2023-01-20,2023-03-17,2023-06-16,2023-09-15,2024-01-19,} Select date (YYYY-MM-DD) (default: ) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 08:50 (✨) /stocks/options/ $ exp Available expiry dates: 0. 2022-02-18 1. 2022-02-25 2. 2022-03-04 3. 2022-03-11 4. 2022-03-18 5. 2022-03-25 6. 2022-04-01 7. 2022-04-14 8. 2022-05-20 9. 2022-06-17 10. 2022-07-15 11. 2022-08-19 12. 2022-09-16 13. 2022-10-21 14. 2022-11-18 15. 2022-12-16 16. 2023-01-20 17. 2023-03-17 18. 2023-06-16 19. 2023-09-15 20. 2024-01-19 2022 Feb 16, 08:50 (✨) /stocks/options/ $ exp 7 Expiration set to 2022-04-14 "},{"id":1185,"href":"/OpenBBTerminal/terminal/stocks/options/greeks/","title":"Greeks","parent":"Introduction to the Options Menu","content":"usage: greeks [-d DIVIDEND] [-r RISK_FREE] [-p] [-m MIN] [-M MAX] [-a--all] [-h] [--export {png,jpg,pdf,svg}] Greeks are used to show risks in the options market. Each Greek is an assumption of a relationship between the market and another variable.\noptional arguments: -d DIVIDEND, --div DIVIDEND The dividend continuous rate (default: 0) -r RISK_FREE, --risk-free RISK_FREE The risk free rate (default: None) -p, --put Whether the option is a put. (default: False) -m MIN, --min MIN Minimum strike price to show. (default: None) -M MAX, --max MAX Maximum strike price to show. (default: None) -a--all Whether to show all greeks. (default: False) -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 08:52 (✨) /stocks/options/ $ greeks -a Greeks ┏━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┃ Strike ┃ Implied Vol ┃ Delta ┃ Gamma ┃ Vega ┃ Theta ┃ Rho ┃ Phi ┃ Charm ┃ Vanna ┃ Vomma ┃ ┡━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━┩ │ 690.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 700.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 710.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 720.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 725.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 730.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 740.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 750.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 760.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 770.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 775.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 780.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 790.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 800.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 825.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 850.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 875.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 900.00 │ 0.00 │ 1.00 │ 0.00 │ 0.00 │ -0.00 │ 0.01 │ -0.01 │ 0.00 │ -0.00 │ -0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 925.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 950.00 │ 0.02 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 975.00 │ 0.03 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1000.00 │ 0.03 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1025.00 │ 0.06 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1050.00 │ 0.06 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1075.00 │ 0.06 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1100.00 │ 0.06 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1105.00 │ 0.06 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1110.00 │ 0.06 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1115.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1120.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1125.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1130.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1135.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1140.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1145.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1150.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1155.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1160.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1165.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1170.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1175.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1180.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1185.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1190.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1195.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1200.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1205.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1210.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1215.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1220.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1225.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1230.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1235.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1240.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1245.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1250.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1255.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1260.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1265.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1270.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1275.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1280.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1285.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1290.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1295.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1300.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1325.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1350.00 │ 0.13 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1375.00 │ 0.25 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1400.00 │ 0.25 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1425.00 │ 0.25 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1450.00 │ 0.25 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ ├─────────┼─────────────┼───────┼───────┼──────┼───────┼──────┼───────┼───────┼───────┼───────┤ │ 1475.00 │ 0.25 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ 0.00 │ -0.00 │ -0.00 │ 0.00 │ 0.00 │ └─────────┴─────────────┴───────┴───────┴──────┴───────┴──────┴───────┴───────┴───────┴───────┘ "},{"id":1186,"href":"/OpenBBTerminal/terminal/stocks/options/grhist/","title":"Grhist","parent":"Introduction to the Options Menu","content":"usage: grhist [-s STRIKE] [-p] [-g {iv,gamma,theta,vega,delta,rho,premium}] [-c CHAIN_ID] [-r] [-l LIMIT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Plot historical option greeks by strike price for the loaded ticker.\noptional arguments: -s STRIKE, --strike STRIKE Strike price to look at (default: None) -p, --put Flag for showing put option (default: False) -g {iv,gamma,theta,vega,delta,rho,premium}, --greek {iv,gamma,theta,vega,delta,rho,premium} Greek column to select (default: delta) -c CHAIN_ID, --chain CHAIN_ID OCC option symbol (default: ) -r, --raw Display raw data (default: False) -l LIMIT, --limit LIMIT Limit of raw data rows to display (default: 20) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1187,"href":"/OpenBBTerminal/terminal/stocks/options/hedge/add/","title":"Add","parent":"Introduction to the Hedge Submenu","content":"usage: add [-p] [-s] [-i {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55}] [-h] Add options to the diagram.\noptional arguments: -p, --put Buy a put instead of a call -s, --short Short the option instead of buying it -i {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55}, --identifier {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55} The identifier of the option as found in the list command -h, --help show this help message Example:\n2022 May 10, 09:17 (🦋) /stocks/options/hedge/ $ add 25 ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ Positions ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ Delta │ 1.00 │ ├────────────────────┼───────────┤ │ Gamma │ 7253.89 │ ├────────────────────┼───────────┤ │ Vega │ 0.14 │ ├────────────────────┼───────────┤ │ Implied Volatility │ 1.00e-05 │ ├────────────────────┼───────────┤ │ Strike Price │ 147.00 │ └────────────────────┴───────────┘ Current Option Positions ┏━━━━━━┳━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ Type ┃ Hold ┃ Strike ┃ Implied Volatility ┃ ┡━━━━━━╇━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ Call │ Long │ 147.00 │ 1.00e-05 │ └──────┴──────┴────────┴────────────────────┘ 2022 May 10, 09:18 (🦋) /stocks/options/hedge/ $ add 30 ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ Positions ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ Delta │ 3.67e-04 │ ├────────────────────┼───────────┤ │ Gamma │ 4.26e-04 │ ├────────────────────┼───────────┤ │ Vega │ 5.06e-05 │ ├────────────────────┼───────────┤ │ Implied Volatility │ 0.06 │ ├────────────────────┼───────────┤ │ Strike Price │ 155.00 │ └────────────────────┴───────────┘ Current Option Positions ┏━━━━━━┳━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ Type ┃ Hold ┃ Strike ┃ Implied Volatility ┃ ┡━━━━━━╇━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ Call │ Long │ 147.00 │ 1.00e-05 │ ├──────┼──────┼────────┼────────────────────┤ │ Call │ Long │ 155.00 │ 0.06 │ └──────┴──────┴────────┴────────────────────┘ Adding two options will automaically calculate the Neutral Portfolio Weights:\n Neutral Portfolio Weights ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ Positions ┃ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ Weight Option A │ 0.00 │ ├─────────────────┼───────────┤ │ Weight Option B │ 0.00 │ ├─────────────────┼───────────┤ │ Weight Shares │ -136.00 │ └─────────────────┴───────────┘ "},{"id":1188,"href":"/OpenBBTerminal/terminal/stocks/options/hedge/list/","title":"List","parent":"Introduction to the Hedge Submenu","content":"usage: list [-h] Lists available calls and puts. optional arguments: -h, --help show this help message Example:\n2022 May 10, 09:21 (🦋) /stocks/options/hedge/ $ list Available Calls and Puts ┏━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┓ ┃ Identifier ┃ Calls ┃ Puts ┃ ┡━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━┩ │ 0 │ 100.00 │ 100.00 │ ├────────────┼────────┼────────┤ │ 1 │ 110.00 │ 105.00 │ ├────────────┼────────┼────────┤ │ 2 │ 115.00 │ 110.00 │ ├────────────┼────────┼────────┤ │ 3 │ 120.00 │ 115.00 │ ├────────────┼────────┼────────┤ │ 4 │ 124.00 │ 120.00 │ ├────────────┼────────┼────────┤ │ 5 │ 125.00 │ 123.00 │ ├────────────┼────────┼────────┤ │ 6 │ 126.00 │ 124.00 │ ├────────────┼────────┼────────┤ │ 7 │ 127.00 │ 125.00 │ ├────────────┼────────┼────────┤ │ 8 │ 129.00 │ 126.00 │ ├────────────┼────────┼────────┤ │ 9 │ 130.00 │ 127.00 │ ├────────────┼────────┼────────┤ │ 10 │ 131.00 │ 128.00 │ ├────────────┼────────┼────────┤ │ 11 │ 132.00 │ 129.00 │ ├────────────┼────────┼────────┤ │ 12 │ 133.00 │ 130.00 │ ├────────────┼────────┼────────┤ │ 13 │ 134.00 │ 131.00 │ ├────────────┼────────┼────────┤ │ 14 │ 135.00 │ 132.00 │ ├────────────┼────────┼────────┤ │ 15 │ 137.00 │ 133.00 │ ├────────────┼────────┼────────┤ │ 16 │ 138.00 │ 134.00 │ ├────────────┼────────┼────────┤ │ 17 │ 139.00 │ 135.00 │ ├────────────┼────────┼────────┤ │ 18 │ 140.00 │ 136.00 │ ├────────────┼────────┼────────┤ │ 19 │ 141.00 │ 137.00 │ ├────────────┼────────┼────────┤ │ 20 │ 142.00 │ 138.00 │ ├────────────┼────────┼────────┤ │ 21 │ 143.00 │ 139.00 │ ├────────────┼────────┼────────┤ │ 22 │ 144.00 │ 140.00 │ ├────────────┼────────┼────────┤ │ 23 │ 145.00 │ 141.00 │ ├────────────┼────────┼────────┤ │ 24 │ 146.00 │ 142.00 │ ├────────────┼────────┼────────┤ │ 25 │ 147.00 │ 143.00 │ ├────────────┼────────┼────────┤ │ 26 │ 148.00 │ 144.00 │ ├────────────┼────────┼────────┤ │ 27 │ 149.00 │ 145.00 │ ├────────────┼────────┼────────┤ │ 28 │ 150.00 │ 146.00 │ ├────────────┼────────┼────────┤ │ 29 │ 152.50 │ 147.00 │ ├────────────┼────────┼────────┤ │ 30 │ 155.00 │ 148.00 │ ├────────────┼────────┼────────┤ │ 31 │ 157.50 │ 149.00 │ ├────────────┼────────┼────────┤ │ 32 │ 160.00 │ 150.00 │ ├────────────┼────────┼────────┤ │ 33 │ 162.50 │ 152.50 │ ├────────────┼────────┼────────┤ │ 34 │ 165.00 │ 155.00 │ ├────────────┼────────┼────────┤ │ 35 │ 167.50 │ 157.50 │ ├────────────┼────────┼────────┤ │ 36 │ 170.00 │ 160.00 │ ├────────────┼────────┼────────┤ │ 37 │ 172.50 │ 162.50 │ ├────────────┼────────┼────────┤ │ 38 │ 175.00 │ 165.00 │ ├────────────┼────────┼────────┤ │ 39 │ 177.50 │ 167.50 │ ├────────────┼────────┼────────┤ │ 40 │ 180.00 │ 170.00 │ ├────────────┼────────┼────────┤ │ 41 │ 182.50 │ 172.50 │ ├────────────┼────────┼────────┤ │ 42 │ 185.00 │ 175.00 │ ├────────────┼────────┼────────┤ │ 43 │ 187.50 │ 177.50 │ ├────────────┼────────┼────────┤ │ 44 │ 190.00 │ 180.00 │ ├────────────┼────────┼────────┤ │ 45 │ 195.00 │ 182.50 │ ├────────────┼────────┼────────┤ │ 46 │ 200.00 │ 185.00 │ ├────────────┼────────┼────────┤ │ 47 │ 205.00 │ 187.50 │ ├────────────┼────────┼────────┤ │ 48 │ 210.00 │ 190.00 │ ├────────────┼────────┼────────┤ │ 49 │ 215.00 │ 195.00 │ ├────────────┼────────┼────────┤ │ 50 │ 220.00 │ 200.00 │ ├────────────┼────────┼────────┤ │ 51 │ 225.00 │ 205.00 │ ├────────────┼────────┼────────┤ │ 52 │ 235.00 │ 210.00 │ ├────────────┼────────┼────────┤ │ 53 │ 240.00 │ 215.00 │ ├────────────┼────────┼────────┤ │ 54 │ 245.00 │ 220.00 │ ├────────────┼────────┼────────┤ │ 55 │ 250.00 │ 225.00 │ ├────────────┼────────┼────────┤ │ 56 │ - │ 230.00 │ ├────────────┼────────┼────────┤ │ 57 │ - │ 235.00 │ ├────────────┼────────┼────────┤ │ 58 │ - │ 250.00 │ └────────────┴────────┴────────┘ "},{"id":1189,"href":"/OpenBBTerminal/terminal/stocks/options/hedge/pick/","title":"Pick","parent":"Introduction to the Hedge Submenu","content":"usage: long [-p PICK [PICK ...]] [-a AMOUNT] [-h] This function plots option hedge diagrams optional arguments: -p PICK [PICK ...], --pick PICK [PICK ...] Choose what you would like to pick (default: None) -a AMOUNT, --amount AMOUNT Choose the amount invested (default: 1000) -h, --help show this help message (default: False) Example\n2022 May 10, 09:21 (🦋) /stocks/options/hedge/ $ pick 170 Short Call -a 500 2022 May 10, 09:22 (🦋) /stocks/options/hedge/ $ help ╭──────────────────────Stocks - Options - Hedge ─────────────────────────╮ │ Ticker: | AAPL | │ Expiry: | 2022-05-13 | │ pick pick the underlying asset position │ │ Underlying Asset Position: Short Call 500 @ 170 │ │ list show the available strike prices for calls and puts │ add add an option to the list of options │ rmv remove an option from the list of options │ sop show selected options and neutral portfolio weights | ╰──────────────────────────────────────────────────────OpenBB Terminal ─╯ "},{"id":1190,"href":"/OpenBBTerminal/terminal/stocks/options/hedge/rmv/","title":"Rmv","parent":"Introduction to the Hedge Submenu","content":"usage: rmv [-o OPTION [OPTION ...]] [-a] [-h] Remove one of the options to be shown in the hedge. optional arguments: -o OPTION [OPTION ...], --option OPTION [OPTION ...] index of the option to remove -a, --all remove all of the options -h, --help show this help message Example:\n2022 May 10, 09:32 (🦋) /stocks/options/hedge/ $ rmv Option A Current Option Positions ┏━━━━━━┳━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ Type ┃ Hold ┃ Strike ┃ Implied Volatility ┃ ┡━━━━━━╇━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ Call │ Long │ 155.00 │ 0.06 │ └──────┴──────┴────────┴────────────────────┘ "},{"id":1191,"href":"/OpenBBTerminal/terminal/stocks/options/hedge/sop/","title":"Sop","parent":"Introduction to the Hedge Submenu","content":"usage: sop [-h] Displays selected option optional arguments: -h, --help show this help message (default: False) Example:\n2022 May 10, 09:34 (🦋) /stocks/options/hedge/ $ add 20 Current Option Positions ┏━━━━━━┳━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ Type ┃ Hold ┃ Strike ┃ Implied Volatility ┃ ┡━━━━━━╇━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ Call │ Long │ 142.00 │ 0.05 │ ├──────┼──────┼────────┼────────────────────┤ │ Call │ Long │ 155.00 │ 0.06 │ └──────┴──────┴────────┴────────────────────┘ "},{"id":1192,"href":"/OpenBBTerminal/terminal/stocks/options/hist/","title":"Hist","parent":"Introduction to the Options Menu","content":"usage: hist -s STRIKE [-p] [-c CHAIN_ID] [-r] [--source {tradier,chartexchange}] [-l LIMIT] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] The price history for a specified strike price from the loaded options chain.\noptional arguments: -s STRIKE, --strike STRIKE Strike price to look at (default: None) -p, --put Flag for showing put option (default: False) -c CHAIN_ID, --chain CHAIN_ID OCC option symbol (default: None) -r, --raw Display raw data (default: False) --source {tradier,chartexchange} Choose Tradier or ChartExchange, only affects raw data (default: chartexchange) -l LIMIT, --limit LIMIT Limit of data rows to display (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 09:07 (✨) /stocks/options/ $ hist -s 3300 -p AMZN raw data ┏━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ ┃ Date ┃ Open ┃ High ┃ Low ┃ Close ┃ Change ┃ Volume ┃ Open Interest ┃ Change Since ┃ ┡━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ 0 │ 2022-02-11 │ 327.53 │ 386.93 │ 327.53 │ 386.93 │ 0.26 │ 6.00 │ 98.00 │ 0.00 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 1 │ 2022-02-10 │ 313.51 │ 313.51 │ 297.92 │ 307.95 │ 0.05 │ 6.00 │ 97.00 │ 0.26 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 2 │ 2022-02-09 │ 272.93 │ 292.00 │ 272.00 │ 292.00 │ 0.02 │ 7.00 │ 96.00 │ 0.33 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 3 │ 2022-02-08 │ 321.15 │ 321.15 │ 287.15 │ 287.15 │ -0.10 │ 17.00 │ 96.00 │ 0.35 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 4 │ 2022-02-07 │ 292.28 │ 319.55 │ 292.28 │ 319.55 │ 0.02 │ 7.00 │ 106.00 │ 0.21 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 5 │ 2022-02-04 │ 395.34 │ 395.34 │ 311.87 │ 311.90 │ -0.48 │ 14.00 │ 104.00 │ 0.24 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 6 │ 2022-02-03 │ 601.59 │ 601.59 │ 599.94 │ 599.94 │ 0.15 │ 2.00 │ 104.00 │ -0.36 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 7 │ 2022-01-27 │ 527.86 │ 527.93 │ 513.45 │ 520.77 │ -0.13 │ 62.00 │ 103.00 │ -0.26 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 8 │ 2022-01-25 │ 574.01 │ 598.50 │ 574.01 │ 598.50 │ 0.01 │ 5.00 │ 103.00 │ -0.35 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 9 │ 2022-01-24 │ 572.19 │ 617.00 │ 572.19 │ 593.00 │ 0.12 │ 8.00 │ 107.00 │ -0.35 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 10 │ 2022-01-21 │ 446.38 │ 532.21 │ 446.38 │ 531.03 │ 0.36 │ 16.00 │ 106.00 │ -0.27 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 11 │ 2022-01-20 │ 333.40 │ 389.75 │ 332.17 │ 389.75 │ 0.23 │ 13.00 │ 103.00 │ -0.01 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 12 │ 2022-01-19 │ 325.00 │ 325.00 │ 316.58 │ 316.58 │ -0.03 │ 11.00 │ 97.00 │ 0.22 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 13 │ 2022-01-18 │ 319.90 │ 325.00 │ 314.90 │ 325.00 │ 0.05 │ 5.00 │ 96.00 │ 0.19 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 14 │ 2022-01-14 │ 295.10 │ 310.09 │ 295.10 │ 310.09 │ 0.07 │ 2.00 │ 95.00 │ 0.25 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 15 │ 2022-01-13 │ 260.17 │ 290.68 │ 260.12 │ 290.68 │ 0.14 │ 38.00 │ 95.00 │ 0.33 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 16 │ 2022-01-12 │ 255.55 │ 255.55 │ 254.00 │ 254.00 │ -0.02 │ 3.00 │ 113.00 │ 0.52 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 17 │ 2022-01-11 │ 282.10 │ 282.10 │ 253.15 │ 258.89 │ -0.22 │ 28.00 │ 114.00 │ 0.49 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 18 │ 2022-01-10 │ 357.10 │ 365.85 │ 333.90 │ 333.90 │ 0.15 │ 8.00 │ 97.00 │ 0.16 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 19 │ 2022-01-07 │ 290.40 │ 290.40 │ 290.40 │ 290.40 │ 0.23 │ 41.00 │ 98.00 │ 0.33 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 20 │ 2022-01-04 │ 237.00 │ 237.00 │ 237.00 │ 237.00 │ -0.01 │ 1.00 │ 77.00 │ 0.63 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 21 │ 2021-12-28 │ 238.50 │ 238.50 │ 238.50 │ 238.50 │ 0.05 │ 1.00 │ 75.00 │ 0.62 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 22 │ 2021-12-23 │ 228.00 │ 228.00 │ 228.00 │ 228.00 │ -0.09 │ 1.00 │ 82.00 │ 0.70 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 23 │ 2021-12-21 │ 250.00 │ 250.00 │ 250.00 │ 250.00 │ -0.13 │ 1.00 │ 82.00 │ 0.55 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 24 │ 2021-12-20 │ 290.00 │ 297.00 │ 283.50 │ 289.00 │ 0.11 │ 17.00 │ 82.00 │ 0.34 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 25 │ 2021-12-17 │ 262.80 │ 262.80 │ 260.24 │ 260.51 │ 0.02 │ 7.00 │ 82.00 │ 0.49 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 26 │ 2021-12-16 │ 250.04 │ 256.42 │ 250.04 │ 256.42 │ 0.12 │ 3.00 │ 80.00 │ 0.51 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 27 │ 2021-12-15 │ 282.10 │ 288.62 │ 229.73 │ 229.73 │ -0.06 │ 16.00 │ 77.00 │ 0.68 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 28 │ 2021-12-13 │ 245.50 │ 245.50 │ 245.50 │ 245.50 │ 0.01 │ 1.00 │ 63.00 │ 0.58 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 29 │ 2021-12-10 │ 243.42 │ 243.42 │ 243.42 │ 243.42 │ 0.08 │ 2.00 │ 63.00 │ 0.59 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 30 │ 2021-12-07 │ 234.85 │ 234.85 │ 224.38 │ 224.45 │ -0.15 │ 3.00 │ 61.00 │ 0.72 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 31 │ 2021-12-06 │ 283.15 │ 285.20 │ 263.81 │ 263.81 │ -0.08 │ 14.00 │ 45.00 │ 0.47 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 32 │ 2021-12-03 │ 290.59 │ 293.03 │ 286.41 │ 286.81 │ 0.16 │ 20.00 │ 45.00 │ 0.35 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 33 │ 2021-11-30 │ 225.00 │ 246.50 │ 225.00 │ 246.50 │ 0.10 │ 3.00 │ 25.00 │ 0.57 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 34 │ 2021-11-23 │ 224.00 │ 224.00 │ 224.00 │ 224.00 │ 0.12 │ 1.00 │ 24.00 │ 0.73 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 35 │ 2021-11-22 │ 177.26 │ 200.50 │ 177.26 │ 200.50 │ 0.15 │ 2.00 │ 23.00 │ 0.93 │ ├────┼────────────┼────────┼────────┼────────┼────────┼────────┼────────┼───────────────┼──────────────┤ │ 36 │ 2021-11-19 │ 169.00 │ 174.20 │ 169.00 │ 174.20 │ 0.00 │ 22.00 │ 22.00 │ 1.22 │ └────┴────────────┴────────┴────────┴────────┴────────┴────────┴────────┴───────────────┴──────────────┘ "},{"id":1193,"href":"/OpenBBTerminal/terminal/stocks/options/info/","title":"Info","parent":"Introduction to the Options Menu","content":"usage: info [-h] [--export {csv,json,xlsx}] Display option data [Source: Barchart.com]\noptional arguments: -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 09:09 (✨) /stocks/options/ $ info Options Information ┏━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Implied Volatility │ 31.27% ( -3.04%) │ ├───────────────────────┼─────────────────────────┤ │ Historical Volatility │ 54.71% │ ├───────────────────────┼─────────────────────────┤ │ IV Percentile │ 81% │ ├───────────────────────┼─────────────────────────┤ │ IV Rank │ 37.04% │ ├───────────────────────┼─────────────────────────┤ │ IV High │ 53.44% on 02/03/22 │ ├───────────────────────┼─────────────────────────┤ │ IV Low │ 18.22% on 08/27/21 │ ├───────────────────────┼─────────────────────────┤ │ Put/Call Vol Ratio │ 0.85 │ ├───────────────────────┼─────────────────────────┤ │ Today's Volume │ 143,740 │ ├───────────────────────┼─────────────────────────┤ │ Volume Avg (30-Day) │ 241,667 │ ├───────────────────────┼─────────────────────────┤ │ Put/Call OI Ratio │ 0.98 │ ├───────────────────────┼─────────────────────────┤ │ Today's Open Interest │ 582,975 │ ├───────────────────────┼─────────────────────────┤ │ Open Int (30-Day) │ 721,047 │ └───────────────────────┴─────────────────────────┘ "},{"id":1194,"href":"/OpenBBTerminal/terminal/stocks/options/load/","title":"Load","parent":"Introduction to the Options Menu","content":"usage: load [-t TICKER] [--source {tradier,yf}] [-h] Load a ticker into the Options menu\noptional arguments: -t TICKER, --ticker TICKER Stock ticker (default: None) --source {tradier ,yf} Tradier or Yahoo Finance (default: tradier) Source to get option expirations from (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 09:13 (✨) /stocks/options/ $ load TSLA 2022 Feb 16, 09:13 (✨) /stocks/options/ $ ? ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Stocks - Options ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ unu show unusual options activity [Fdscanner.com] │ │ calc basic call/put PnL calculator │ │ │ │ load load new ticker │ │ exp see and set expiration dates │ │ │ │ Ticker: TSLA │ │ Expiry: None │ │ │ │ pcr display put call ratio for ticker [AlphaQuery.com] │ │ info display option information (volatility, IV rank etc) [Barchart.com] │ │ chains display option chains with greeks [Tradier] │ │ oi plot open interest [Tradier/YFinance] │ │ vol plot volume [Tradier/YFinance] │ │ voi plot volume and open interest [Tradier/YFinance] │ │ hist plot option history [Tradier] │ │ vsurf show 3D volatility surface [Yfinance] │ │ grhist plot option greek history [Syncretism.io] │ │ plot plot variables provided by the user [Yfinance] │ │ parity shows whether options are above or below expected price [Yfinance] │ │ binom shows the value of an option using binomial options pricing [Yfinance] │ │ greeks shows the greeks for a given option [Yfinance] │ │ │ │ \u0026gt; screen screens tickers based on preset [Syncretism.io] │ │ \u0026gt; payoff shows payoff diagram for a selection of options [Yfinance] │ │ \u0026gt; pricing shows options pricing and risk neutral valuation [Yfinance] │ │ │ ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Gamestonk Terminal ─╯ "},{"id":1195,"href":"/OpenBBTerminal/terminal/stocks/options/oi/","title":"Oi","parent":"Introduction to the Options Menu","content":"usage: oi [-m MIN] [-M MAX] [-c] [-p] [--source {tradier,yf}] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Plot open interest. Open interest is the number of outstanding contracts, which typically represent one hundred shares.\noptional arguments: -m MIN, --min MIN Min strike to plot (default: -1) -M MAX, --max MAX Max strike to plot (default: -1) -c, --calls Flag to plot call options only (default: False) -p, --puts Flag to plot put options only (default: False) --source {tradier ,yf} Source to get data from (default: tradier) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 09:13 (✨) /stocks/options/ $ load SPY 2022 Feb 16, 09:14 (✨) /stocks/options/ $ exp 10 Expiration set to 2022-03-11 2022 Feb 16, 09:14 (✨) /stocks/options/ $ oi "},{"id":1196,"href":"/OpenBBTerminal/terminal/stocks/options/parity/","title":"Parity","parent":"Introduction to the Options Menu","content":"usage: parity [-p] [-a] [-m MINI] [-M MAXI] [-h] [--export {csv,json,xlsx}] An advanced strategy that seeks arbitrage opportunites in put-call spreads relative to the forward underlying asset price; put-call parity defines the relationship between calls, puts and the underlying futures contract. This principle requires that the puts and calls are the same strike, same expiration and have the same underlying futures contract. The put call relationship is highly correlated, so if put call parity is violated, an arbitrage opportunity exists.\noptional arguments: -p, --put Shows puts instead of calls (default: False) -a, --ask Use ask price instead of lastPrice (default: False) -m MINI, --min MINI Minimum strike price shown (default: None) -M MAXI, --max MAXI Maximum strike price shown (default: None) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 09:17 (✨) /stocks/options/ $ load TSLA 2022 Feb 16, 09:18 (✨) /stocks/options/ $ parity -m 900 -M 950 Warning: Low volume options may be difficult to trade. ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ Strike ┃ Call Difference ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ 900.00 │ -3.49 │ ├────────┼─────────────────┤ │ 905.00 │ -3.37 │ ├────────┼─────────────────┤ │ 910.00 │ -4.09 │ ├────────┼─────────────────┤ │ 915.00 │ -1.39 │ ├────────┼─────────────────┤ │ 920.00 │ -2.34 │ ├────────┼─────────────────┤ │ 925.00 │ -2.65 │ ├────────┼─────────────────┤ │ 930.00 │ -2.46 │ ├────────┼─────────────────┤ │ 935.00 │ -5.14 │ ├────────┼─────────────────┤ │ 940.00 │ -3.89 │ ├────────┼─────────────────┤ │ 945.00 │ -8.08 │ ├────────┼─────────────────┤ │ 950.00 │ -3.23 │ └────────┴─────────────────┘ "},{"id":1197,"href":"/OpenBBTerminal/terminal/stocks/options/payoff/","title":"Payoff","parent":"Introduction to the Options Menu","content":"    Add     List     Pick     Plot     Rmv     Sop     "},{"id":1198,"href":"/OpenBBTerminal/terminal/stocks/options/payoff/add/","title":"Add","parent":"Payoff","content":"usage: add [-p] [-s] [-i {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102}] [-h] Add specific options to the diagram.\noptional arguments: -p, --put buy a put instead of a call -s, --short short the option instead of buying it -i {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102}, --index {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102} list index of the option -h, --help show this help message Example:\n2022 Feb 16, 09:23 (✨) /stocks/options/payoff/ $ add 3 # Type Hold Strike Cost 0 call Long 730.0 189.05 2022 Feb 16, 09:23 (✨) /stocks/options/payoff/ $ add 7 # Type Hold Strike Cost 0 call Long 730.0 189.05 1 call Long 780.0 141.96 2022 Feb 16, 09:23 (✨) /stocks/options/payoff/ $ add 15 # Type Hold Strike Cost 0 call Long 730.0 189.05 1 call Long 780.0 141.96 2 call Long 850.0 102.0 2022 Feb 16, 09:23 (✨) /stocks/options/payoff/ $ add 20 # Type Hold Strike Cost 0 call Long 730.0 189.05 1 call Long 780.0 141.96 2 call Long 850.0 102.0 3 call Long 875.0 89.4 "},{"id":1199,"href":"/OpenBBTerminal/terminal/stocks/options/payoff/list/","title":"List","parent":"Payoff","content":"usage: list [-h] Lists available calls and puts.\noptional arguments: -h, --help show this help message Example:\n2022 Feb 16, 09:31 (✨) /stocks/options/payoff/ $ list # call put 0 600.0 200.0 1 700.0 250.0 2 720.0 300.0 3 730.0 350.0 4 740.0 400.0 5 750.0 450.0 6 760.0 500.0 7 780.0 550.0 8 800.0 600.0 9 810.0 650.0 10 820.0 700.0 11 825.0 710.0 12 830.0 720.0 13 835.0 730.0 14 840.0 740.0 15 850.0 750.0 16 855.0 755.0 17 860.0 760.0 18 865.0 765.0 19 870.0 770.0 20 875.0 775.0 21 880.0 780.0 22 885.0 785.0 23 890.0 790.0 24 895.0 795.0 25 900.0 800.0 26 905.0 805.0 27 910.0 810.0 28 915.0 815.0 29 920.0 820.0 30 925.0 825.0 31 930.0 830.0 32 935.0 835.0 33 940.0 840.0 34 945.0 845.0 35 950.0 850.0 36 955.0 855.0 37 960.0 860.0 38 965.0 865.0 39 970.0 870.0 40 975.0 875.0 41 980.0 880.0 42 985.0 885.0 43 990.0 890.0 44 995.0 895.0 45 1000.0 900.0 46 1005.0 905.0 47 1010.0 910.0 48 1015.0 915.0 49 1020.0 920.0 50 1025.0 925.0 51 1030.0 930.0 52 1035.0 935.0 53 1040.0 940.0 54 1045.0 945.0 55 1050.0 950.0 56 1055.0 955.0 57 1060.0 960.0 58 1065.0 965.0 59 1070.0 970.0 60 1075.0 975.0 61 1080.0 980.0 62 1090.0 985.0 63 1100.0 990.0 64 1110.0 995.0 65 1120.0 1000.0 66 1125.0 1010.0 67 1130.0 1015.0 68 1140.0 1020.0 69 1150.0 1025.0 70 1160.0 1030.0 71 1170.0 1045.0 72 1175.0 1050.0 73 1180.0 1060.0 74 1190.0 1065.0 75 1200.0 1070.0 76 1210.0 1080.0 77 1220.0 1090.0 78 1230.0 1100.0 79 1250.0 1110.0 80 1260.0 1140.0 81 1270.0 1150.0 82 1275.0 1160.0 83 1280.0 1200.0 84 1290.0 85 1300.0 86 1325.0 87 1350.0 88 1375.0 89 1400.0 90 1425.0 91 1450.0 92 1475.0 93 1500.0 94 1525.0 95 1550.0 96 1575.0 97 1600.0 98 1625.0 99 1650.0 100 1700.0 101 1750.0 "},{"id":1200,"href":"/OpenBBTerminal/terminal/stocks/options/payoff/pick/","title":"Pick","parent":"Payoff","content":"usage: pick [-t OPTION] [-h] Select the status of the underlying: long, short, none.\noptional arguments: -t {long,short,none}, --type {long,short,none} Choose what you would like to do with the underlying asset (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 09:25 (✨) /stocks/options/payoff/ $ pick -t long 2022 Feb 16, 09:25 (✨) /stocks/options/payoff/ $ ? ╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Stocks - Options - Payoff ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ Ticker: TSLA │ │ Expiry: 2022-03-25 │ │ │ │ pick long, short, or none (default) underlying asset │ │ │ │ Underlying Asset: Long │ │ │ │ list list available strike prices for calls and puts │ │ │ │ add add option to the list of the options to be plotted │ │ rmv remove option from the list of the options to be plotted │ │ │ │ sop selected options │ │ plot show the option payoff diagram │ │ │ ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Gamestonk Terminal ─╯ "},{"id":1201,"href":"/OpenBBTerminal/terminal/stocks/options/payoff/plot/","title":"Plot","parent":"Payoff","content":"usage: plot [-h] Shows the options payoff diagram using the variables entered in to the \u0026lsquo;pick\u0026rsquo; and \u0026lsquo;add\u0026rsquo; commands.\noptional arguments: -h, --help show this help message (default: False) "},{"id":1202,"href":"/OpenBBTerminal/terminal/stocks/options/payoff/rmv/","title":"Rmv","parent":"Payoff","content":"usage: rmv [-k RMV_STRIKE] [-h] Remove one or all of the options from the diagram.\noptional arguments: -i RMV_STRIKE, --index RMV_STRIKE index of the option to remove -a, --all remove all of the options -h, --help show this help message Example:\n2022 Feb 16, 09:28 (✨) /stocks/options/payoff/ $ rmv 0 # Type Hold Strike Cost 0 call Long 780.0 141.96 1 call Long 850.0 102.0 2 call Long 875.0 89.4 3 call Long 600.0 320.73 4 call Long 700.0 226.06 2022 Feb 16, 09:28 (✨) /stocks/options/payoff/ $ rmv 3 # Type Hold Strike Cost 0 call Long 780.0 141.96 1 call Long 850.0 102.0 2 call Long 875.0 89.4 3 call Long 700.0 226.06 2022 Feb 16, 09:28 (✨) /stocks/options/payoff/ $ rmv 2 # Type Hold Strike Cost 0 call Long 780.0 141.96 1 call Long 850.0 102.0 2 call Long 700.0 226.06 "},{"id":1203,"href":"/OpenBBTerminal/terminal/stocks/options/payoff/sop/","title":"Sop","parent":"Payoff","content":"usage: sop [-h] Displays selected option\noptional arguments: -h, --help show this help message (default: False) Example:\n2022 Feb 16, 09:30 (✨) /stocks/options/payoff/ $ sop # Type Hold Strike Cost 0 call Long 780.0 141.96 1 call Long 850.0 102.0 2 call Long 700.0 226.06 "},{"id":1204,"href":"/OpenBBTerminal/terminal/stocks/options/pcr/","title":"Pcr","parent":"Introduction to the Options Menu","content":"usage: pcr [-l {10,20,30,60,90,120,150,180}] [-s START] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Display put to call ratio for ticker [Source: AlphaQuery.com]\noptional arguments: -l {10,20,30,60,90,120,150,180}, -length {10,20,30,60,90,120,150,180} Window length to get (default: 30) -s START, --start START Start date for plot (default: 2021-02-15 15:33:46.387854) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1205,"href":"/OpenBBTerminal/terminal/stocks/options/plot/","title":"Plot","parent":"Introduction to the Options Menu","content":"usage: plot [-p] [-x {ltd,s,lp,b,a,c,pc,v,oi,iv}] [-y {ltd,s,lp,b,a,c,pc,v,oi,iv}] [-c {smile}] [-h] [--export {png,jpg,pdf,svg}] Shows a plot for the given x and y variables.\noptional arguments: -p, --put Shows puts instead of calls (default: False) -x {ltd,s,lp,b,a,c,pc,v,oi,iv}, --x_axis {ltd,s,lp,b,a,c,pc,v,oi,iv} ltd- last trade date, s- strike, lp- last price, b- bid, a- ask,c- change, pc- percent change, v- volume, oi- open interest, iv- implied volatility (default: None) -y {ltd,s,lp,b,a,c,pc,v,oi,iv}, --y_axis {ltd,s,lp,b,a,c,pc,v,oi,iv} ltd- last trade date, s- strike, lp- last price, b- bid, a- ask,c- change, pc- percent change, v- volume, oi- open interest, iv- implied volatility (default: None) -c {smile}, --custom {smile} Choose from already created graphs (default: None) -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export figure into png, jpg, pdf, svg (default: ) Example:\n2022 Feb 16, 09:37 (✨) /stocks/options/ $ plot -p -x s -y iv "},{"id":1206,"href":"/OpenBBTerminal/terminal/stocks/options/pricing/add/","title":"Add","parent":"Introduction to the Options Pricing Submenu","content":"usage: add [-p PRICE] [-c CHANCE] [-h] Add price and probability points to the list\noptional arguments: -p PRICE, --price PRICE Projected price of the stock at the expiration date (default: None) -c CHANCE, --chance CHANCE Chance that the stock is at a given projected price (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 09:42 (✨) /stocks/options/pricing/ $ add -p 175 -c 0.5 2022 Feb 16, 09:43 (✨) /stocks/options/pricing/ $ add -p 165 -c 0.5 2022 Feb 16, 09:43 (✨) /stocks/options/pricing/ $ show Estimated price(s) of AAPL at 2022-05-20 ┏━━━━━━━━┳━━━━━━━━┓ ┃ Price ┃ Chance ┃ ┡━━━━━━━━╇━━━━━━━━┩ │ 165.00 │ 0.50 │ ├────────┼────────┤ │ 175.00 │ 0.50 │ └────────┴────────┘ "},{"id":1207,"href":"/OpenBBTerminal/terminal/stocks/options/pricing/rmv/","title":"Rmv","parent":"Introduction to the Options Pricing Submenu","content":"usage: rmv [-p PRICE] [-a] [-h] Removes one or all entries from the list.\noptional arguments: -p PRICE, --price PRICE Price you want to remove from the list (default: None) -a, --all Remove all prices from the list (default: False) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 09:44 (✨) /stocks/options/pricing/ $ rmv -p 165 2022 Feb 16, 09:44 (✨) /stocks/options/pricing/ $ show Estimated price(s) of AAPL at 2022-05-20 ┏━━━━━━━━┳━━━━━━━━┓ ┃ Price ┃ Chance ┃ ┡━━━━━━━━╇━━━━━━━━┩ │ 175.00 │ 0.50 │ └────────┴────────┘ "},{"id":1208,"href":"/OpenBBTerminal/terminal/stocks/options/pricing/rnval/","title":"Rnval","parent":"Introduction to the Options Pricing Submenu","content":"usage: rnval [-p] [-m MINI] [-M MAXI] [-r RISK] [-h] Calculates the expcected value of a given option by multiplying the payoff at each predicted stock price by the probability of that stock price happening. This expected profit is divided by one plus the risk free rate to determine the value of those future dollars today. The expected payoff for each strike price is then compared with the last traded price to determine if there are differences in the market.\nFor example, if you assume the price of AAPL has an equal chance of finishing at $100 or $200 for a given expiration, you could use this to value an option at that expiration. To value a call with a strike of $150, you would calculate the payoff for each stock price, which would be $0 and $50. Then, we calculate the weighted average payoff of $25. We need to divide this amount by the risk-free rate, assumed to be 0.02. So the value of this option expiring in one year is 25/1.02, or $24.51.\noptional arguments: -p, --put Show puts instead of calls (default: False) -m MINI, --min MINI Minimum strike price shown (default: None) -M MAXI, --max MAXI Maximum strike price shown (default: None) -r RISK, --risk RISK The risk-free rate to use (default: None) -h, --help show this help message (default: False) Example:\n2022 Feb 16, 09:45 (✨) /stocks/options/pricing/ $ add -p 100 -c 0.5 2022 Feb 16, 09:46 (✨) /stocks/options/pricing/ $ add -p 200 -c 0.5 2022 Feb 16, 09:46 (✨) /stocks/options/pricing/ $ show Estimated price(s) of AAPL at 2022-05-20 ┏━━━━━━━━┳━━━━━━━━┓ ┃ Price ┃ Chance ┃ ┡━━━━━━━━╇━━━━━━━━┩ │ 100.00 │ 0.50 │ ├────────┼────────┤ │ 200.00 │ 0.50 │ └────────┴────────┘ 2022 Feb 16, 09:46 (✨) /stocks/options/pricing/ $ rnval Risk Neutral Values ┏━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━┓ ┃ Strike ┃ Last Price ┃ Value ┃ Difference ┃ ┡━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━┩ │ 120.00 │ 53.25 │ 39.99 │ 13.26 │ ├────────┼────────────┼───────┼────────────┤ │ 125.00 │ 48.11 │ 37.49 │ 10.62 │ ├────────┼────────────┼───────┼────────────┤ │ 130.00 │ 43.80 │ 34.99 │ 8.81 │ ├────────┼────────────┼───────┼────────────┤ │ 135.00 │ 37.71 │ 32.49 │ 5.22 │ ├────────┼────────────┼───────┼────────────┤ │ 140.00 │ 35.00 │ 29.99 │ 5.01 │ ├────────┼────────────┼───────┼────────────┤ │ 145.00 │ 30.35 │ 27.49 │ 2.86 │ ├────────┼────────────┼───────┼────────────┤ │ 150.00 │ 26.30 │ 24.99 │ 1.31 │ ├────────┼────────────┼───────┼────────────┤ │ 155.00 │ 22.35 │ 22.49 │ -0.14 │ ├────────┼────────────┼───────┼────────────┤ │ 160.00 │ 18.30 │ 19.99 │ -1.69 │ ├────────┼────────────┼───────┼────────────┤ │ 165.00 │ 15.00 │ 17.50 │ -2.50 │ ├────────┼────────────┼───────┼────────────┤ │ 170.00 │ 11.35 │ 15.00 │ -3.65 │ ├────────┼────────────┼───────┼────────────┤ │ 175.00 │ 8.65 │ 12.50 │ -3.85 │ ├────────┼────────────┼───────┼────────────┤ │ 180.00 │ 6.70 │ 10.00 │ -3.30 │ ├────────┼────────────┼───────┼────────────┤ │ 185.00 │ 4.60 │ 7.50 │ -2.90 │ ├────────┼────────────┼───────┼────────────┤ │ 190.00 │ 3.25 │ 5.00 │ -1.75 │ ├────────┼────────────┼───────┼────────────┤ │ 195.00 │ 2.29 │ 2.50 │ -0.21 │ ├────────┼────────────┼───────┼────────────┤ │ 200.00 │ 1.59 │ 0.00 │ 1.59 │ ├────────┼────────────┼───────┼────────────┤ │ 210.00 │ 0.70 │ 0.00 │ 0.70 │ └────────┴────────────┴───────┴────────────┘ "},{"id":1209,"href":"/OpenBBTerminal/terminal/stocks/options/pricing/show/","title":"Show","parent":"Introduction to the Options Pricing Submenu","content":"usage: show [-h] Shows the list of prices and probabilities entered using the add command.\noptional arguments: -h, --help show this help message (default: False) Example:\n2022 Feb 16, 09:45 (✨) /stocks/options/pricing/ $ add -p 100 -c 0.5 2022 Feb 16, 09:46 (✨) /stocks/options/pricing/ $ add -p 200 -c 0.5 2022 Feb 16, 09:46 (✨) /stocks/options/pricing/ $ show Estimated price(s) of AAPL at 2022-05-20 ┏━━━━━━━━┳━━━━━━━━┓ ┃ Price ┃ Chance ┃ ┡━━━━━━━━╇━━━━━━━━┩ │ 100.00 │ 0.50 │ ├────────┼────────┤ │ 200.00 │ 0.50 │ └────────┴────────┘ "},{"id":1210,"href":"/OpenBBTerminal/terminal/stocks/options/unu/","title":"Unu","parent":"Introduction to the Options Menu","content":"usage: unu [-l LIMIT] [-s {Strike,Vol/OI,Vol,OI,Bid,Ask,Exp,Ticker} [{Strike,Vol/OI,Vol,OI,Bid,Ask,Exp,Ticker} ...]] [-a] [-p] [-c] [-h] [--export {csv,json,xlsx}] See unusual options activity and sort by the available columns. Source: https://fdsscanner.com\nNote that sorting by multiple columns can be done by using multiple arguments, i.e -s Ticker Strike\noptional arguments: -l LIMIT, --limit LIMIT Limit of options to show. Each scraped page gives 20 results. (default: 20) -s {Strike,Vol/OI,Vol,OI,Bid,Ask,Exp,Ticker} [{Strike,Vol/OI,Vol,OI,Bid,Ask,Exp,Ticker} ...], --sortby {Strike,Vol/OI,Vol,OI,Bid,Ask,Exp,Ticker} [{Strike,Vol/OI,Vol,OI,Bid,Ask,Exp,Ticker} ...] Column to sort by. Vol/OI is the default and typical variable to be considered unusual. (default: Vol/OI) -a, --ascending Flag to sort in ascending order (default: False) -p, --puts_only Flag to show puts only (default: False) -c, --calls_only Flag to show calls only (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx} Export raw data into csv, json, xlsx (default: ) Example:\n2022 Feb 16, 09:51 (✨) /stocks/options/ $ unu Last Updated: 2022-02-15 16:37:03 (EST) ┏━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━━━┓ ┃ Ticker ┃ Exp ┃ Strike ┃ Type ┃ Vol/OI ┃ Vol ┃ OI ┃ Bid ┃ Ask ┃ ┡━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━╇━━━━━━━╇━━━━━━━┩ │ ABT │ 2022-05-20 │ 65.00 │ Put │ 59.40 │ 8374.00 │ 141.00 │ 0.05 │ 0.11 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ AAPL │ 2022-03-04 │ 177.50 │ Call │ 52.30 │ 15858.00 │ 303.00 │ 1.41 │ 1.43 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ WMT │ 2022-03-04 │ 150.00 │ Call │ 44.60 │ 9095.00 │ 204.00 │ 0.23 │ 0.24 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ TSLA │ 2022-02-25 │ 915.00 │ Put │ 28.60 │ 6659.00 │ 233.00 │ 27.45 │ 28.20 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ JNJ │ 2022-03-04 │ 160.00 │ Put │ 28.20 │ 4208.00 │ 149.00 │ 0.83 │ 0.93 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ AAPL │ 2022-03-04 │ 157.50 │ Put │ 23.20 │ 3136.00 │ 135.00 │ 0.69 │ 0.70 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ F │ 2022-03-04 │ 17.50 │ Put │ 21.70 │ 2716.00 │ 125.00 │ 0.46 │ 0.49 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ TWTR │ 2022-03-04 │ 37.00 │ Call │ 21.10 │ 5899.00 │ 280.00 │ 1.42 │ 1.54 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ WDC │ 2022-02-25 │ 56.00 │ Call │ 21.00 │ 4061.00 │ 193.00 │ 1.30 │ 1.40 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ UAA │ 2022-02-25 │ 17.00 │ Put │ 19.60 │ 5064.00 │ 258.00 │ 0.24 │ 0.27 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ TSLA │ 2022-02-18 │ 915.00 │ Put │ 19.60 │ 15775.00 │ 804.00 │ 14.90 │ 15.30 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ IBM │ 2022-02-18 │ 133.00 │ Call │ 19.40 │ 7248.00 │ 374.00 │ 0.22 │ 0.25 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ WDC │ 2022-02-18 │ 59.00 │ Call │ 18.10 │ 2099.00 │ 116.00 │ 0.11 │ 0.16 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ CVX │ 2022-09-16 │ 110.00 │ Put │ 16.60 │ 3026.00 │ 182.00 │ 3.45 │ 4.10 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ UAL │ 2022-05-20 │ 65.00 │ Call │ 16.50 │ 2765.00 │ 168.00 │ 1.04 │ 1.17 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ GPS │ 2022-03-04 │ 15.50 │ Put │ 16.30 │ 2947.00 │ 181.00 │ 1.05 │ 1.12 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ SO │ 2022-02-18 │ 67.00 │ Call │ 16.20 │ 2942.00 │ 182.00 │ 0.05 │ 0.10 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ TWTR │ 2022-03-04 │ 35.00 │ Put │ 14.60 │ 6467.00 │ 442.00 │ 0.68 │ 0.78 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ QCOM │ 2022-03-04 │ 145.00 │ Put │ 14.10 │ 2275.00 │ 161.00 │ 0.73 │ 0.82 │ ├────────┼────────────┼────────┼──────┼────────┼──────────┼────────┼───────┼───────┤ │ GPS │ 2022-02-25 │ 15.50 │ Put │ 13.10 │ 2716.00 │ 208.00 │ 0.49 │ 0.53 │ └────────┴────────────┴────────┴──────┴────────┴──────────┴────────┴───────┴───────┘ "},{"id":1211,"href":"/OpenBBTerminal/terminal/stocks/options/voi/","title":"Voi","parent":"Introduction to the Options Menu","content":"usage: voi [-v MIN_VOL] [-m MIN_SP] [-M MAX_SP] [--source {tradier,yf}] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Plots volume and open interest of calls vs puts for the selected expiration date.\noptional arguments: -v MIN_VOL, --minv MIN_VOL minimum volume (considering open interest) threshold of the plot. (default: -1) -m MIN_SP, --min MIN_SP minimum strike price to consider in the plot. (default: -1) -M MAX_SP, --max MAX_SP maximum strike price to consider in the plot. (default: -1) --source {tradier ,yf} Source to get data from (default: tradier) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1212,"href":"/OpenBBTerminal/terminal/stocks/options/vol/","title":"Vol","parent":"Introduction to the Options Menu","content":"usage: vol [-m MIN] [-M MAX] [-c] [-p] [--source {tradier,yf}] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Plot volume. Volume refers to the number of contracts traded today.\noptional arguments: -m MIN, --min MIN Min strike to plot (default: -1) -M MAX, --max MAX Max strike to plot (default: -1) -c, --calls Flag to plot call options only (default: False) -p, --puts Flag to plot put options only (default: False) --source {tradier ,yf} Source to get data from (default: tradier) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1213,"href":"/OpenBBTerminal/terminal/stocks/options/vsurf/","title":"Vsurf","parent":"Introduction to the Options Menu","content":"usage: vsurf [-z {IV,OI,LP}] [-h] [--export {png,jpg,pdf,svg}] Plot 3D volatility surface.\noptional arguments: -z {IV,OI,LP}, --z-axis {IV,OI,LP} The data for the Z axis (default: IV) -h, --help show this help message (default: False) --export {png,jpg,pdf,svg} Export figure into png, jpg, pdf, svg (default: ) "},{"id":1214,"href":"/OpenBBTerminal/terminal/stocks/quote/","title":"Quote","parent":"Introduction to Stocks","content":"usage: quote [-t S_TICKER] [-p] [-h] Retrieves a current quote from the currently loaded ticker. To view a quote from a different symbol than what is currently loaded, add the \u0026lsquo;-t\u0026rsquo; argument to the command string.\noptional arguments: -t S_TICKER, --ticker S_TICKER Stock ticker (default: TSLA) -p, --price Price only (default: False) -h, --help show this help message (default: False) 2022 Feb 14, 08:59 (✨) /stocks/ $ quote Ticker Quote ┌────────────────┬─────────────┐ │ │ TSLA │ ├────────────────┼─────────────┤ │ Name │ Tesla, Inc. │ ├────────────────┼─────────────┤ │ Price │ 860.00 │ ├────────────────┼─────────────┤ │ Open │ 909.63 │ ├────────────────┼─────────────┤ │ High │ 915.96 │ ├────────────────┼─────────────┤ │ Low │ 850.71 │ ├────────────────┼─────────────┤ │ Previous Close │ 904.55 │ ├────────────────┼─────────────┤ │ Volume │ 26,548,623 │ ├────────────────┼─────────────┤ │ 52 Week High │ 1243.49 │ ├────────────────┼─────────────┤ │ 52 Week Low │ 539.49 │ ├────────────────┼─────────────┤ │ Change │ -44.55 │ ├────────────────┼─────────────┤ │ Change % │ -4.93% │ └────────────────┴─────────────┘ 2022 Feb 14, 09:00 (✨) /stocks/ $ quote -t AAPL Ticker Quote ┌────────────────┬────────────┐ │ │ AAPL │ ├────────────────┼────────────┤ │ Name │ Apple Inc. │ ├────────────────┼────────────┤ │ Price │ 168.64 │ ├────────────────┼────────────┤ │ Open │ 172.33 │ ├────────────────┼────────────┤ │ High │ 173.08 │ ├────────────────┼────────────┤ │ Low │ 168.04 │ ├────────────────┼────────────┤ │ Previous Close │ 172.12 │ ├────────────────┼────────────┤ │ Volume │ 98,670,687 │ ├────────────────┼────────────┤ │ 52 Week High │ 182.94 │ ├────────────────┼────────────┤ │ 52 Week Low │ 116.21 │ ├────────────────┼────────────┤ │ Change │ -3.48 │ ├────────────────┼────────────┤ │ Change % │ -2.02% │ └────────────────┴────────────┘ "},{"id":1215,"href":"/OpenBBTerminal/terminal/stocks/res/","title":"Res","parent":"Introduction to Stocks","content":"The research menu provides a variety of Financial sources that can be used to further delve into the chosen stock.\nAvailable commands:    Barchart     Bullrun     Businessinsider     Fidelity     Fintel     Finviz     Fmp     Fool     Grufity     Macroaxis     Macrotrends     Marketchameleon     Marketwatch     Newsfilter     Stockanalysis     Stockrow     Tradingview     Yahoo     Zacks     "},{"id":1216,"href":"/OpenBBTerminal/terminal/stocks/res/barchart/","title":"Barchart","parent":"Res","content":"usage: barchart Access www.barchart.com\n"},{"id":1217,"href":"/OpenBBTerminal/terminal/stocks/res/bullrun/","title":"Bullrun","parent":"Res","content":"usage: bullrun Access www.bullrun.com.br\n"},{"id":1218,"href":"/OpenBBTerminal/terminal/stocks/res/businessinsider/","title":"Businessinsider","parent":"Res","content":"usage: businessinsider Access www.markets.businessinsider.com\n"},{"id":1219,"href":"/OpenBBTerminal/terminal/stocks/res/fidelity/","title":"Fidelity","parent":"Res","content":"usage: fidelity Access www.eresearch.fidelity.com\n"},{"id":1220,"href":"/OpenBBTerminal/terminal/stocks/res/fintel/","title":"Fintel","parent":"Res","content":"usage: fintel Access www.fintel.com\n"},{"id":1221,"href":"/OpenBBTerminal/terminal/stocks/res/finviz/","title":"Finviz","parent":"Res","content":"usage: finviz Access www.finviz.com\n"},{"id":1222,"href":"/OpenBBTerminal/terminal/stocks/res/fmp/","title":"Fmp","parent":"Res","content":"usage: fmp Access www.financialmodelingprep.com\n"},{"id":1223,"href":"/OpenBBTerminal/terminal/stocks/res/fool/","title":"Fool","parent":"Res","content":"usage: fool Access www.fool.com\n"},{"id":1224,"href":"/OpenBBTerminal/terminal/stocks/res/grufity/","title":"Grufity","parent":"Res","content":"usage: grufity Access www.grufity.com\n"},{"id":1225,"href":"/OpenBBTerminal/terminal/stocks/res/macroaxis/","title":"Macroaxis","parent":"Res","content":"usage: macroaxis Access www.macroaxis.com\n"},{"id":1226,"href":"/OpenBBTerminal/terminal/stocks/res/macrotrends/","title":"Macrotrends","parent":"Res","content":"usage: macrotrends Access www.macrotrends.net\n"},{"id":1227,"href":"/OpenBBTerminal/terminal/stocks/res/marketchameleon/","title":"Marketchameleon","parent":"Res","content":"usage: marketchameleon Access www.marketchameleon.com\n"},{"id":1228,"href":"/OpenBBTerminal/terminal/stocks/res/marketwatch/","title":"Marketwatch","parent":"Res","content":"usage: marketwatch Access www.marketwatch.com\n"},{"id":1229,"href":"/OpenBBTerminal/terminal/stocks/res/newsfilter/","title":"Newsfilter","parent":"Res","content":"usage: newsfilter Access www.newsfilter.io\n"},{"id":1230,"href":"/OpenBBTerminal/terminal/stocks/res/stockanalysis/","title":"Stockanalysis","parent":"Res","content":"usage: stockanalysis Access www.stockanalysis.com\n"},{"id":1231,"href":"/OpenBBTerminal/terminal/stocks/res/stockrow/","title":"Stockrow","parent":"Res","content":"usage: stockrow Access www.stockrow.com\n"},{"id":1232,"href":"/OpenBBTerminal/terminal/stocks/res/tradingview/","title":"Tradingview","parent":"Res","content":"usage: tradingview Access www.tradingview.com\n"},{"id":1233,"href":"/OpenBBTerminal/terminal/stocks/res/yahoo/","title":"Yahoo","parent":"Res","content":"usage: yahoo Access www.finance.yahoo.com\n"},{"id":1234,"href":"/OpenBBTerminal/terminal/stocks/res/zacks/","title":"Zacks","parent":"Res","content":"usage: zacks Access www.zacks.com\n"},{"id":1235,"href":"/OpenBBTerminal/terminal/stocks/scr/financial/","title":"Financial","parent":"Introduction to the Stock Screener","content":"usage: financial [-p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}] [-l LIMIT] [-a] [-s {Ticker,Market Cap,Dividend,ROA,ROE,ROI,Curr R,Quick R,LTDebt/Eq,Debt/Eq,Gross M,Oper M,Profit M,Earnings,Price,Change,Volume} [{Ticker,Market Cap,Dividend,ROA,ROE,ROI,Curr R,Quick R,LTDebt/Eq,Debt/Eq,Gross M,Oper M,Profit M,Earnings,Price,Change,Volume} ...]] [-h] [--export {csv,json,xlsx}] Prints financial data of the companies that meet the pre-set filtering. [Source: Finviz]\noptional arguments: -p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}, --preset {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse} Filter presets -l LIMIT, --limit LIMIT Limit of stocks to print -a, --ascend Set order to Ascend, the default is Descend -s {Ticker,Market Cap,Dividend,ROA,ROE,ROI,Curr R,Quick R,LTDebt/Eq,Debt/Eq,Gross M,Oper M,Profit M,Earnings,Price,Change,Volume} [{Ticker,Market Cap,Dividend,ROA,ROE,ROI,Curr R,Quick R,LTDebt/Eq,Debt/Eq,Gross M,Oper M,Profit M,Earnings,Price,Change,Volume} ...], --sort {Ticker,Market Cap,Dividend,ROA,ROE,ROI,Curr R,Quick R,LTDebt/Eq,Debt/Eq,Gross M,Oper M,Profit M,Earnings,Price,Change,Volume} [{Ticker,Market Cap,Dividend,ROA,ROE,ROI,Curr R,Quick R,LTDebt/Eq,Debt/Eq,Gross M,Oper M,Profit M,Earnings,Price,Change,Volume} ...] Sort elements of the table. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx  Finzin Screener ┌────────┬───────────────┬──────────┬───────┬───────┬───────┬────────┬─────────┬───────────┬─────────┬─────────┬────────┬──────────┬──────────┬───────┬────────┬──────────────┐ │ Ticker │ Market Cap │ Dividend │ ROA │ ROE │ ROI │ Curr R │ Quick R │ LTDebt/Eq │ Debt/Eq │ Gross M │ Oper M │ Profit M │ Earnings │ Price │ Change │ Volume │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ YMAB │ 285860000.00 │ │ -0.17 │ -0.19 │ -1.13 │ 9.10 │ 8.90 │ 0.00 │ 0.00 │ 0.98 │ │ -0.83 │ Nov 04/a │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ COE │ 27700000.00 │ │ 0.02 │ -0.05 │ -0.12 │ 0.50 │ 0.50 │ │ │ 0.73 │ 0.00 │ 0.02 │ - │ 1.59 │ 0.23 │ 2292209.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ KAVL │ 51610000.00 │ │ -0.30 │ -1.12 │ 0.87 │ 1.40 │ 0.50 │ 0.00 │ 0.00 │ 0.21 │ -0.10 │ -0.11 │ - │ 2.24 │ 0.23 │ 131650688.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ INCR │ 368950000.00 │ │ │ │ │ │ │ │ │ │ │ │ Nov 16/b │ 8.20 │ 0.22 │ 1396666.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ RSVR │ 371430000.00 │ │ -0.01 │ -0.01 │ │ 1.50 │ 1.50 │ 0.00 │ 0.00 │ │ │ │ Feb 08/b │ 7.02 │ 0.21 │ 332318.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ COOP │ 3100000000.00 │ │ 0.06 │ 0.48 │ 0.04 │ │ │ 3.15 │ 3.98 │ │ 0.48 │ 0.40 │ Feb 11/b │ 49.22 │ 0.19 │ 4171073.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ AGFY │ 152330000.00 │ │ -0.26 │ -0.31 │ -2.72 │ 5.80 │ 5.30 │ 0.01 │ 0.01 │ -0.02 │ -0.74 │ -0.83 │ Nov 10/b │ 8.51 │ 0.19 │ 1933556.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ AZYO │ 66790000.00 │ │ -0.29 │ -1.41 │ -0.31 │ 1.70 │ 1.30 │ 1.52 │ 2.78 │ 0.44 │ -0.33 │ -0.43 │ Nov 09/a │ 6.41 │ 0.19 │ 16694.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ SNDL │ 1150000000.00 │ │ -0.22 │ -0.24 │ -0.71 │ 13.40 │ 12.80 │ 0.02 │ 0.02 │ 0.08 │ │ │ Nov 11/a │ 0.66 │ 0.19 │ 246995920.00 │ ├────────┼───────────────┼──────────┼───────┼───────┼───────┼────────┼─────────┼───────────┼─────────┼─────────┼────────┼──────────┼──────────┼───────┼────────┼──────────────┤ │ CRS │ 1600000000.00 │ 0.02 │ -0.05 │ -0.10 │ -0.09 │ 3.50 │ 1.70 │ 0.52 │ 0.00 │ 0.02 │ -0.10 │ -0.09 │ Feb 02/b │ 38.73 │ 0.17 │ 1839490.00 │ └────────┴───────────────┴──────────┴───────┴───────┴───────┴────────┴─────────┴───────────┴─────────┴─────────┴────────┴──────────┴──────────┴───────┴────────┴──────────────┘ "},{"id":1236,"href":"/OpenBBTerminal/terminal/stocks/scr/historical/","title":"Historical","parent":"Introduction to the Stock Screener","content":"usage: historical [-l LIMIT] [-n] [-s START] [-t {o,h,l,c,a}] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Historical price comparison between similar companies [Source: Yahoo Finance]\noptional arguments: -l LIMIT, --limit LIMIT Limit of the most shorted stocks to retrieve. -n, --no-scale Flag to not put all prices on same 0-1 scale -s START, --start START The starting date (format YYYY-MM-DD) of the historical price to plot -t {o,h,l,c,a}, --type {o,h,l,c,a} type of candles: o-open, h-high, l-low, c-close, a-adjusted close. -h, --help show this help message --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg "},{"id":1237,"href":"/OpenBBTerminal/terminal/stocks/scr/overview/","title":"Overview","parent":"Introduction to the Stock Screener","content":"usage: overview [-p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}] [-l LIMIT] [-a] [-s {Ticker,Company,Sector,Industry,Country,Market Cap,P/E,Price,Change,Volume} [{Ticker,Company,Sector,Industry,Country,Market Cap,P/E,Price,Change,Volume} ...]] [-h] [--export {csv,json,xlsx}] Prints overview data of the companies that meet the pre-set filtering. [Source: Finviz]\noptional arguments: -p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}, --preset {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse} Filter presets -l LIMIT, --limit LIMIT Limit of stocks to print -a, --ascend Set order to Ascend, the default is Descend -s {Ticker,Company,Sector,Industry,Country,Market Cap,P/E,Price,Change,Volume} [{Ticker,Company,Sector,Industry,Country,Market Cap,P/E,Price,Change,Volume} ...], --sort {Ticker,Company,Sector,Industry,Country,Market Cap,P/E,Price,Change,Volume} [{Ticker,Company,Sector,Industry,Country,Market Cap,P/E,Price,Change,Volume} ...] Sort elements of the table. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx 2022 Feb 14, 08:40 (✨) /stocks/scr/ $ overview -p buffett_like Finzin Screener ┌────────┬───────────────────────────────────────┬────────────────────────┬──────────────────────────────────────────┬─────────┬───────────────┬──────┬───────┬────────┬──────────────┐ │ Ticker │ Company │ Sector │ Industry │ Country │ Market Cap │ P/E │ Price │ Change │ Volume │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ YMAB │ Y-mAbs Therapeutics, Inc. │ Healthcare │ Biotechnology │ USA │ 285860000.00 │ │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ COE │ China Online Education Group │ Consumer Defensive │ Education \u0026amp; Training Services │ China │ 27700000.00 │ 5.39 │ 1.59 │ 0.23 │ 2292209.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ KAVL │ Kaival Brands Innovations Group, Inc. │ Consumer Defensive │ Tobacco │ USA │ 51610000.00 │ │ 2.24 │ 0.23 │ 131650688.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ INCR │ InterCure Ltd. │ Healthcare │ Drug Manufacturers - Specialty \u0026amp; Generic │ Israel │ 368950000.00 │ │ 8.20 │ 0.22 │ 1396666.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ RSVR │ Reservoir Media, Inc. │ Communication Services │ Entertainment │ USA │ 371430000.00 │ │ 7.02 │ 0.21 │ 332318.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ COOP │ Mr. Cooper Group Inc. │ Financial │ Mortgage Finance │ USA │ 3100000000.00 │ 3.03 │ 49.22 │ 0.19 │ 4171073.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ AGFY │ Agrify Corporation │ Industrials │ Engineering \u0026amp; Construction │ USA │ 152330000.00 │ │ 8.51 │ 0.19 │ 1933556.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ AZYO │ Aziyo Biologics, Inc. │ Healthcare │ Medical Devices │ USA │ 66790000.00 │ │ 6.41 │ 0.19 │ 16694.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ SNDL │ Sundial Growers Inc. │ Healthcare │ Drug Manufacturers - Specialty \u0026amp; Generic │ Canada │ 1150000000.00 │ │ 0.66 │ 0.19 │ 246995920.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ CRS │ Carpenter Technology Corporation │ Industrials │ Metal Fabrication │ USA │ 1600000000.00 │ │ 38.73 │ 0.17 │ 1839490.00 │ └────────┴───────────────────────────────────────┴────────────────────────┴──────────────────────────────────────────┴─────────┴───────────────┴──────┴───────┴────────┴──────────────┘ 2022 Feb 14, 08:40 (✨) /stocks/scr/ $ overview -p channel_up Finzin Screener ┌────────┬───────────────────────────────────────┬────────────────────────┬──────────────────────────────────────────┬─────────┬───────────────┬──────┬───────┬────────┬──────────────┐ │ Ticker │ Company │ Sector │ Industry │ Country │ Market Cap │ P/E │ Price │ Change │ Volume │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ YMAB │ Y-mAbs Therapeutics, Inc. │ Healthcare │ Biotechnology │ USA │ 285860000.00 │ │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ COE │ China Online Education Group │ Consumer Defensive │ Education \u0026amp; Training Services │ China │ 27700000.00 │ 5.39 │ 1.59 │ 0.23 │ 2292209.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ KAVL │ Kaival Brands Innovations Group, Inc. │ Consumer Defensive │ Tobacco │ USA │ 51610000.00 │ │ 2.24 │ 0.23 │ 131650688.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ INCR │ InterCure Ltd. │ Healthcare │ Drug Manufacturers - Specialty \u0026amp; Generic │ Israel │ 368950000.00 │ │ 8.20 │ 0.22 │ 1396666.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ RSVR │ Reservoir Media, Inc. │ Communication Services │ Entertainment │ USA │ 371430000.00 │ │ 7.02 │ 0.21 │ 332318.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ COOP │ Mr. Cooper Group Inc. │ Financial │ Mortgage Finance │ USA │ 3100000000.00 │ 3.03 │ 49.22 │ 0.19 │ 4171073.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ AGFY │ Agrify Corporation │ Industrials │ Engineering \u0026amp; Construction │ USA │ 152330000.00 │ │ 8.51 │ 0.19 │ 1933556.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ AZYO │ Aziyo Biologics, Inc. │ Healthcare │ Medical Devices │ USA │ 66790000.00 │ │ 6.41 │ 0.19 │ 16694.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ SNDL │ Sundial Growers Inc. │ Healthcare │ Drug Manufacturers - Specialty \u0026amp; Generic │ Canada │ 1150000000.00 │ │ 0.66 │ 0.19 │ 246995920.00 │ ├────────┼───────────────────────────────────────┼────────────────────────┼──────────────────────────────────────────┼─────────┼───────────────┼──────┼───────┼────────┼──────────────┤ │ CRS │ Carpenter Technology Corporation │ Industrials │ Metal Fabrication │ USA │ 1600000000.00 │ │ 38.73 │ 0.17 │ 1839490.00 │ └────────┴───────────────────────────────────────┴────────────────────────┴──────────────────────────────────────────┴─────────┴───────────────┴──────┴───────┴────────┴──────────────┘ "},{"id":1238,"href":"/OpenBBTerminal/terminal/stocks/scr/ownership/","title":"Ownership","parent":"Introduction to the Stock Screener","content":"usage: ownership [-p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}] [-l LIMIT] [-a] [-s {Ticker,Market Cap,Outstanding,Float,Insider Own,Insider Trans,Inst Own,Inst Trans,Float Short,Short Ratio,Avg Volume,Price,Change,Volume} [{Ticker,Market Cap,Outstanding,Float,Insider Own,Insider Trans,Inst Own,Inst Trans,Float Short,Short Ratio,Avg Volume,Price,Change,Volume} ...]] [-h] [--export {csv,json,xlsx}] Prints ownership data of the companies that meet the pre-set filtering. [Source: Finviz]\noptional arguments: -p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}, --preset {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse} Filter presets -l LIMIT, --limit LIMIT Limit of stocks to print -a, --ascend Set order to Ascend, the default is Descend -s {Ticker,Market Cap,Outstanding,Float,Insider Own,Insider Trans,Inst Own,Inst Trans,Float Short,Short Ratio,Avg Volume,Price,Change,Volume} [{Ticker,Market Cap,Outstanding,Float,Insider Own,Insider Trans,Inst Own,Inst Trans,Float Short,Short Ratio,Avg Volume,Price,Change,Volume} ...], --sort {Ticker,Market Cap,Outstanding,Float,Insider Own,Insider Trans,Inst Own,Inst Trans,Float Short,Short Ratio,Avg Volume,Price,Change,Volume} [{Ticker,Market Cap,Outstanding,Float,Insider Own,Insider Trans,Inst Own,Inst Trans,Float Short,Short Ratio,Avg Volume,Price,Change,Volume} ...] Sort elements of the table. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx 2022 Feb 14, 08:43 (✨) /stocks/scr/ $ ownership -p top_performers_all Finzin Screener ┌────────┬───────────────┬───────────────┬───────────────┬─────────────┬───────────────┬──────────┬────────────┬─────────────┬─────────────┬──────────────┬───────┬────────┬──────────────┐ │ Ticker │ Market Cap │ Outstanding │ Float │ Insider Own │ Insider Trans │ Inst Own │ Inst Trans │ Float Short │ Short Ratio │ Avg Volume │ Price │ Change │ Volume │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ YMAB │ 285860000.00 │ 43600000.00 │ 36580000.00 │ 0.01 │ -0.86 │ 0.68 │ -0.01 │ 0.05 │ 3.23 │ 606550.00 │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ COE │ 27700000.00 │ 21760000.00 │ 3690000.00 │ 0.02 │ 0.00 │ 0.82 │ 0.00 │ 0.05 │ 0.61 │ 287550.00 │ 1.59 │ 0.23 │ 2292209.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ KAVL │ 51610000.00 │ 28330000.00 │ 15950000.00 │ 0.60 │ 0.00 │ 0.02 │ 0.06 │ 0.03 │ 0.08 │ 5800000.00 │ 2.24 │ 0.23 │ 131650688.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ INCR │ 368950000.00 │ 44990000.00 │ 25770000.00 │ 0.40 │ 0.00 │ 0.12 │ │ 0.01 │ 1.45 │ 93280.00 │ 8.20 │ 0.22 │ 1396666.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ RSVR │ 371430000.00 │ 11060000.00 │ │ 0.02 │ 0.00 │ 0.42 │ 0.01 │ │ 11.42 │ 91770.00 │ 7.02 │ 0.21 │ 332318.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ COOP │ 3100000000.00 │ 78940000.00 │ 73640000.00 │ 0.02 │ -0.08 │ 0.89 │ 0.00 │ 0.03 │ 2.83 │ 872470.00 │ 49.22 │ 0.19 │ 4171073.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ AGFY │ 152330000.00 │ 20830000.00 │ 18820000.00 │ 0.00 │ -0.65 │ 0.32 │ 0.51 │ 0.11 │ 2.70 │ 743420.00 │ 8.51 │ 0.19 │ 1933556.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ AZYO │ 66790000.00 │ 10230000.00 │ 8560000.00 │ 0.00 │ │ 0.89 │ 0.23 │ 0.00 │ 0.06 │ 15940.00 │ 6.41 │ 0.19 │ 16694.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ SNDL │ 1150000000.00 │ 2050000000.00 │ 2040000000.00 │ 0.01 │ 0.00 │ 0.05 │ 0.21 │ 0.12 │ 2.31 │ 107080000.00 │ 0.66 │ 0.19 │ 246995920.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ CRS │ 1600000000.00 │ 48600000.00 │ 47320000.00 │ 0.01 │ 0.00 │ 0.92 │ -0.00 │ 0.03 │ 3.67 │ 437500.00 │ 38.73 │ 0.17 │ 1839490.00 │ └────────┴───────────────┴───────────────┴───────────────┴─────────────┴───────────────┴──────────┴────────────┴─────────────┴─────────────┴──────────────┴───────┴────────┴──────────────┘ 2022 Feb 14, 08:43 (✨) /stocks/scr/ $ ownership -p double_bottom Finzin Screener ┌────────┬───────────────┬───────────────┬───────────────┬─────────────┬───────────────┬──────────┬────────────┬─────────────┬─────────────┬──────────────┬───────┬────────┬──────────────┐ │ Ticker │ Market Cap │ Outstanding │ Float │ Insider Own │ Insider Trans │ Inst Own │ Inst Trans │ Float Short │ Short Ratio │ Avg Volume │ Price │ Change │ Volume │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ YMAB │ 285860000.00 │ 43600000.00 │ 36580000.00 │ 0.01 │ -0.86 │ 0.68 │ -0.01 │ 0.05 │ 3.23 │ 606550.00 │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ COE │ 27700000.00 │ 21760000.00 │ 3690000.00 │ 0.02 │ 0.00 │ 0.82 │ 0.00 │ 0.05 │ 0.61 │ 287550.00 │ 1.59 │ 0.23 │ 2292209.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ KAVL │ 51610000.00 │ 28330000.00 │ 15950000.00 │ 0.60 │ 0.00 │ 0.02 │ 0.06 │ 0.03 │ 0.08 │ 5800000.00 │ 2.24 │ 0.23 │ 131650688.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ INCR │ 368950000.00 │ 44990000.00 │ 25770000.00 │ 0.40 │ 0.00 │ 0.12 │ │ 0.01 │ 1.45 │ 93280.00 │ 8.20 │ 0.22 │ 1396666.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ RSVR │ 371430000.00 │ 11060000.00 │ │ 0.02 │ 0.00 │ 0.42 │ 0.01 │ │ 11.42 │ 91770.00 │ 7.02 │ 0.21 │ 332318.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ COOP │ 3100000000.00 │ 78940000.00 │ 73640000.00 │ 0.02 │ -0.08 │ 0.89 │ 0.00 │ 0.03 │ 2.83 │ 872470.00 │ 49.22 │ 0.19 │ 4171073.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ AGFY │ 152330000.00 │ 20830000.00 │ 18820000.00 │ 0.00 │ -0.65 │ 0.32 │ 0.51 │ 0.11 │ 2.70 │ 743420.00 │ 8.51 │ 0.19 │ 1933556.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ AZYO │ 66790000.00 │ 10230000.00 │ 8560000.00 │ 0.00 │ │ 0.89 │ 0.23 │ 0.00 │ 0.06 │ 15940.00 │ 6.41 │ 0.19 │ 16694.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ SNDL │ 1150000000.00 │ 2050000000.00 │ 2040000000.00 │ 0.01 │ 0.00 │ 0.05 │ 0.21 │ 0.12 │ 2.31 │ 107080000.00 │ 0.66 │ 0.19 │ 246995920.00 │ ├────────┼───────────────┼───────────────┼───────────────┼─────────────┼───────────────┼──────────┼────────────┼─────────────┼─────────────┼──────────────┼───────┼────────┼──────────────┤ │ CRS │ 1600000000.00 │ 48600000.00 │ 47320000.00 │ 0.01 │ 0.00 │ 0.92 │ -0.00 │ 0.03 │ 3.67 │ 437500.00 │ 38.73 │ 0.17 │ 1839490.00 │ └────────┴───────────────┴───────────────┴───────────────┴─────────────┴───────────────┴──────────┴────────────┴─────────────┴─────────────┴──────────────┴───────┴────────┴──────────────┘ "},{"id":1239,"href":"/OpenBBTerminal/terminal/stocks/scr/performance/","title":"Performance","parent":"Introduction to the Stock Screener","content":"usage: performance [-p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}] [-l LIMIT] [-a] [-s {Ticker,Perf Week,Perf Month,Perf Quart,Perf Half,Perf Year,Perf YTD,Volatility W,Volatility M,Recom,Avg Volume,Rel Volume,Price,Change,Volume} [{Ticker,Perf Week,Perf Month,Perf Quart,Perf Half,Perf Year,Perf YTD,Volatility W,Volatility M,Recom,Avg Volume,Rel Volume,Price,Change,Volume} ...]] [-h] [--export {csv,json,xlsx}] Prints performance data of the companies that meet the pre-set filtering. [Source: Finviz]\noptional arguments: -p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}, --preset {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse} Filter presets -l LIMIT, --limit LIMIT Limit of stocks to print -a, --ascend Set order to Ascend, the default is Descend -s {Ticker,Perf Week,Perf Month,Perf Quart,Perf Half,Perf Year,Perf YTD,Volatility W,Volatility M,Recom,Avg Volume,Rel Volume,Price,Change,Volume} [{Ticker,Perf Week,Perf Month,Perf Quart,Perf Half,Perf Year,Perf YTD,Volatility W,Volatility M,Recom,Avg Volume,Rel Volume,Price,Change,Volume} ...], --sort {Ticker,Perf Week,Perf Month,Perf Quart,Perf Half,Perf Year,Perf YTD,Volatility W,Volatility M,Recom,Avg Volume,Rel Volume,Price,Change,Volume} [{Ticker,Perf Week,Perf Month,Perf Quart,Perf Half,Perf Year,Perf YTD,Volatility W,Volatility M,Recom,Avg Volume,Rel Volume,Price,Change,Volume} ...] Sort elements of the table. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx 2022 Feb 14, 08:44 (✨) /stocks/scr/ $ performance -p rosenwald Finzin Screener ┌────────┬───────────┬────────────┬────────────┬───────────┬───────────┬──────────┬──────────────┬──────────────┬───────┬──────────────┬────────────┬───────┬────────┬──────────────┐ │ Ticker │ Perf Week │ Perf Month │ Perf Quart │ Perf Half │ Perf Year │ Perf YTD │ Volatility W │ Volatility M │ Recom │ Avg Volume │ Rel Volume │ Price │ Change │ Volume │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ YMAB │ 0.07 │ -0.36 │ -0.62 │ -0.72 │ -0.83 │ -0.49 │ 0.17 │ 0.13 │ 1.90 │ 606550.00 │ 29.55 │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ COE │ 0.80 │ 0.45 │ -0.33 │ -0.36 │ -0.94 │ 0.31 │ 0.21 │ 0.14 │ 2.50 │ 287550.00 │ 8.88 │ 1.59 │ 0.23 │ 2292209.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ KAVL │ 1.09 │ 1.88 │ 0.22 │ -0.63 │ -0.93 │ 2.01 │ 0.41 │ 0.24 │ │ 5800000.00 │ 34.99 │ 2.24 │ 0.23 │ 131650688.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ INCR │ 0.30 │ 0.21 │ 0.04 │ 0.31 │ -0.12 │ 0.27 │ 0.10 │ 0.06 │ │ 93280.00 │ 19.04 │ 8.20 │ 0.22 │ 1396666.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ RSVR │ 0.14 │ -0.01 │ -0.26 │ -0.08 │ -0.35 │ -0.11 │ 0.12 │ 0.07 │ 2.00 │ 91770.00 │ 3.76 │ 7.02 │ 0.21 │ 332318.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ COOP │ 0.29 │ 0.14 │ 0.13 │ 0.28 │ 0.65 │ 0.18 │ 0.06 │ 0.04 │ 2.10 │ 872470.00 │ 5.13 │ 49.22 │ 0.19 │ 4171073.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ AGFY │ 0.26 │ -0.08 │ -0.57 │ -0.71 │ -0.55 │ -0.07 │ 0.14 │ 0.13 │ 2.00 │ 743420.00 │ 2.64 │ 8.51 │ 0.19 │ 1933556.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ AZYO │ 0.21 │ 0.02 │ 0.03 │ -0.24 │ -0.59 │ 0.02 │ 0.06 │ 0.10 │ 2.00 │ 15940.00 │ 1.02 │ 6.41 │ 0.19 │ 16694.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ SNDL │ 0.25 │ 0.14 │ -0.08 │ -0.12 │ -0.68 │ 0.15 │ 0.11 │ 0.09 │ 3.20 │ 107080000.00 │ 2.30 │ 0.66 │ 0.19 │ 246995920.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ CRS │ 0.34 │ 0.19 │ 0.16 │ 0.05 │ 0.08 │ 0.33 │ 0.09 │ 0.07 │ 2.50 │ 437500.00 │ 4.48 │ 38.73 │ 0.17 │ 1839490.00 │ └────────┴───────────┴────────────┴────────────┴───────────┴───────────┴──────────┴──────────────┴──────────────┴───────┴──────────────┴────────────┴───────┴────────┴──────────────┘ 2022 Feb 14, 08:45 (✨) /stocks/scr/ $ performance -p head_shoulders_inverse Finzin Screener ┌────────┬───────────┬────────────┬────────────┬───────────┬───────────┬──────────┬──────────────┬──────────────┬───────┬──────────────┬────────────┬───────┬────────┬──────────────┐ │ Ticker │ Perf Week │ Perf Month │ Perf Quart │ Perf Half │ Perf Year │ Perf YTD │ Volatility W │ Volatility M │ Recom │ Avg Volume │ Rel Volume │ Price │ Change │ Volume │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ YMAB │ 0.07 │ -0.36 │ -0.62 │ -0.72 │ -0.83 │ -0.49 │ 0.17 │ 0.13 │ 1.90 │ 606550.00 │ 29.55 │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ COE │ 0.80 │ 0.45 │ -0.33 │ -0.36 │ -0.94 │ 0.31 │ 0.21 │ 0.14 │ 2.50 │ 287550.00 │ 8.88 │ 1.59 │ 0.23 │ 2292209.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ KAVL │ 1.09 │ 1.88 │ 0.22 │ -0.63 │ -0.93 │ 2.01 │ 0.41 │ 0.24 │ │ 5800000.00 │ 34.99 │ 2.24 │ 0.23 │ 131650688.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ INCR │ 0.30 │ 0.21 │ 0.04 │ 0.31 │ -0.12 │ 0.27 │ 0.10 │ 0.06 │ │ 93280.00 │ 19.04 │ 8.20 │ 0.22 │ 1396666.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ RSVR │ 0.14 │ -0.01 │ -0.26 │ -0.08 │ -0.35 │ -0.11 │ 0.12 │ 0.07 │ 2.00 │ 91770.00 │ 3.76 │ 7.02 │ 0.21 │ 332318.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ COOP │ 0.29 │ 0.14 │ 0.13 │ 0.28 │ 0.65 │ 0.18 │ 0.06 │ 0.04 │ 2.10 │ 872470.00 │ 5.13 │ 49.22 │ 0.19 │ 4171073.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ AGFY │ 0.26 │ -0.08 │ -0.57 │ -0.71 │ -0.55 │ -0.07 │ 0.14 │ 0.13 │ 2.00 │ 743420.00 │ 2.64 │ 8.51 │ 0.19 │ 1933556.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ AZYO │ 0.21 │ 0.02 │ 0.03 │ -0.24 │ -0.59 │ 0.02 │ 0.06 │ 0.10 │ 2.00 │ 15940.00 │ 1.02 │ 6.41 │ 0.19 │ 16694.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ SNDL │ 0.25 │ 0.14 │ -0.08 │ -0.12 │ -0.68 │ 0.15 │ 0.11 │ 0.09 │ 3.20 │ 107080000.00 │ 2.30 │ 0.66 │ 0.19 │ 246995920.00 │ ├────────┼───────────┼────────────┼────────────┼───────────┼───────────┼──────────┼──────────────┼──────────────┼───────┼──────────────┼────────────┼───────┼────────┼──────────────┤ │ CRS │ 0.34 │ 0.19 │ 0.16 │ 0.05 │ 0.08 │ 0.33 │ 0.09 │ 0.07 │ 2.50 │ 437500.00 │ 4.48 │ 38.73 │ 0.17 │ 1839490.00 │ └────────┴───────────┴────────────┴────────────┴───────────┴───────────┴──────────┴──────────────┴──────────────┴───────┴──────────────┴────────────┴───────┴────────┴──────────────┘ "},{"id":1240,"href":"/OpenBBTerminal/terminal/stocks/scr/set/","title":"Set","parent":"Introduction to the Stock Screener","content":"usage: set [-p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}] [-h] Set preset from custom and default ones.\noptional arguments: -p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}, --preset {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse} Filter presets -h, --help show this help message "},{"id":1241,"href":"/OpenBBTerminal/terminal/stocks/scr/technical/","title":"Technical","parent":"Introduction to the Stock Screener","content":"usage: technical [-p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}] [-l LIMIT] [-a] [-s {Ticker,Beta,ATR,SMA20,SMA50,SMA200,52W High,52W Low,RSI,Price,Change,from Open,Gap,Volume} [{Ticker,Beta,ATR,SMA20,SMA50,SMA200,52W High,52W Low,RSI,Price,Change,from Open,Gap,Volume} ...]] [-h] [--export {csv,json,xlsx}] Prints technical data of the companies that meet the pre-set filtering. [Source: Finviz]\noptional arguments: -p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}, --preset {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse} Filter presets -l LIMIT, --limit LIMIT Limit of stocks to print -a, --ascend Set order to Ascend, the default is Descend -s {Ticker,Beta,ATR,SMA20,SMA50,SMA200,52W High,52W Low,RSI,Price,Change,from Open,Gap,Volume} [{Ticker,Beta,ATR,SMA20,SMA50,SMA200,52W High,52W Low,RSI,Price,Change,from Open,Gap,Volume} ...], --sort {Ticker,Beta,ATR,SMA20,SMA50,SMA200,52W High,52W Low,RSI,Price,Change,from Open,Gap,Volume} [{Ticker,Beta,ATR,SMA20,SMA50,SMA200,52W High,52W Low,RSI,Price,Change,from Open,Gap,Volume} ...] Sort elements of the table. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx 2022 Feb 14, 08:53 (✨) /stocks/scr/ $ technical -p cheap_bottom_dividend Finzin Screener ┌────────┬───────┬───────┬───────┬───────┬────────┬──────────┬─────────┬───────┬────────┬────────┬───────────┬───────┬─────────────┐ │ Ticker │ Beta │ ATR │ SMA20 │ SMA50 │ SMA200 │ 52W High │ 52W Low │ RSI │ Price │ Change │ from Open │ Gap │ Volume │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZYNE │ 2.12 │ 0.17 │ 0.03 │ -0.08 │ -0.35 │ -0.67 │ 0.20 │ 46.60 │ 2.65 │ -0.07 │ -0.07 │ 0.00 │ 2010373.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZS │ 0.97 │ 16.67 │ 0.08 │ -0.03 │ 0.05 │ -0.27 │ 0.74 │ 52.90 │ 273.00 │ -0.04 │ -0.04 │ 0.00 │ 2014963.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZNGA │ -0.09 │ 0.31 │ 0.02 │ 0.22 │ 0.06 │ -0.26 │ 0.64 │ 70.17 │ 9.16 │ -0.00 │ 0.00 │ -0.00 │ 22552624.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZION │ 1.31 │ 2.26 │ 0.07 │ 0.11 │ 0.22 │ -0.03 │ 0.56 │ 64.14 │ 73.22 │ -0.01 │ -0.00 │ -0.01 │ 1226228.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZI │ │ 3.69 │ 0.10 │ -0.02 │ -0.04 │ -0.30 │ 0.47 │ 53.94 │ 55.69 │ -0.02 │ -0.03 │ 0.00 │ 3612070.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZGNX │ 0.90 │ 0.66 │ 0.07 │ 0.40 │ 0.56 │ -0.02 │ 1.37 │ 78.94 │ 26.15 │ -0.01 │ -0.00 │ -0.00 │ 1507686.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZG │ 1.54 │ 3.19 │ 0.08 │ -0.03 │ -0.39 │ -0.75 │ 0.22 │ 55.39 │ 53.92 │ 0.13 │ -0.01 │ 0.14 │ 8236415.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ Z │ │ 3.27 │ 0.09 │ -0.02 │ -0.37 │ -0.73 │ 0.24 │ 56.28 │ 55.40 │ 0.14 │ -0.01 │ 0.15 │ 50184008.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ YMAB │ 1.28 │ 1.16 │ -0.13 │ -0.39 │ -0.68 │ -0.84 │ 0.27 │ 37.67 │ 8.25 │ 0.26 │ 0.25 │ 0.01 │ 12286763.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ YELL │ 3.10 │ 0.81 │ -0.05 │ -0.14 │ 0.19 │ -0.35 │ 1.05 │ 43.45 │ 9.96 │ -0.05 │ -0.04 │ -0.01 │ 505353.00 │ └────────┴───────┴───────┴───────┴───────┴────────┴──────────┴─────────┴───────┴────────┴────────┴───────────┴───────┴─────────────┘ 2022 Feb 14, 08:53 (✨) /stocks/scr/ $ technical -p recent_insider_selling Finzin Screener ┌────────┬───────┬───────┬───────┬───────┬────────┬──────────┬─────────┬───────┬────────┬────────┬───────────┬───────┬─────────────┐ │ Ticker │ Beta │ ATR │ SMA20 │ SMA50 │ SMA200 │ 52W High │ 52W Low │ RSI │ Price │ Change │ from Open │ Gap │ Volume │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZYNE │ 2.12 │ 0.17 │ 0.03 │ -0.08 │ -0.35 │ -0.67 │ 0.20 │ 46.60 │ 2.65 │ -0.07 │ -0.07 │ 0.00 │ 2010373.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZS │ 0.97 │ 16.67 │ 0.08 │ -0.03 │ 0.05 │ -0.27 │ 0.74 │ 52.90 │ 273.00 │ -0.04 │ -0.04 │ 0.00 │ 2014963.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZNGA │ -0.09 │ 0.31 │ 0.02 │ 0.22 │ 0.06 │ -0.26 │ 0.64 │ 70.17 │ 9.16 │ -0.00 │ 0.00 │ -0.00 │ 22552624.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZION │ 1.31 │ 2.26 │ 0.07 │ 0.11 │ 0.22 │ -0.03 │ 0.56 │ 64.14 │ 73.22 │ -0.01 │ -0.00 │ -0.01 │ 1226228.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZI │ │ 3.69 │ 0.10 │ -0.02 │ -0.04 │ -0.30 │ 0.47 │ 53.94 │ 55.69 │ -0.02 │ -0.03 │ 0.00 │ 3612070.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZGNX │ 0.90 │ 0.66 │ 0.07 │ 0.40 │ 0.56 │ -0.02 │ 1.37 │ 78.94 │ 26.15 │ -0.01 │ -0.00 │ -0.00 │ 1507686.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ ZG │ 1.54 │ 3.19 │ 0.08 │ -0.03 │ -0.39 │ -0.75 │ 0.22 │ 55.39 │ 53.92 │ 0.13 │ -0.01 │ 0.14 │ 8236415.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ Z │ │ 3.27 │ 0.09 │ -0.02 │ -0.37 │ -0.73 │ 0.24 │ 56.28 │ 55.40 │ 0.14 │ -0.01 │ 0.15 │ 50184008.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ YMAB │ 1.28 │ 1.16 │ -0.13 │ -0.39 │ -0.68 │ -0.84 │ 0.27 │ 37.67 │ 8.25 │ 0.26 │ 0.25 │ 0.01 │ 12286763.00 │ ├────────┼───────┼───────┼───────┼───────┼────────┼──────────┼─────────┼───────┼────────┼────────┼───────────┼───────┼─────────────┤ │ YELL │ 3.10 │ 0.81 │ -0.05 │ -0.14 │ 0.19 │ -0.35 │ 1.05 │ 43.45 │ 9.96 │ -0.05 │ -0.04 │ -0.01 │ 505353.00 │ └────────┴───────┴───────┴───────┴───────┴────────┴──────────┴─────────┴───────┴────────┴────────┴───────────┴───────┴─────────────┘ "},{"id":1242,"href":"/OpenBBTerminal/terminal/stocks/scr/valuation/","title":"Valuation","parent":"Introduction to the Stock Screener","content":"usage: valuation [-p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}] [-l LIMIT] [-a] [-s {Ticker,Market Cap,P/E,Fwd P/E,PEG,P/S,P/B,P/C,P/FCF,EPS this Y,EPS next Y,EPS past 5Y,EPS next 5Y,Sales past 5Y,Price,Change,Volume} [{Ticker,Market Cap,P/E,Fwd P/E,PEG,P/S,P/B,P/C,P/FCF,EPS this Y,EPS next Y,EPS past 5Y,EPS next 5Y,Sales past 5Y,Price,Change,Volume} ...]] [-h] [--export {csv,json,xlsx}] Prints valuation data of the companies that meet the pre-set filtering. [Source: Finviz]\noptional arguments: -p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse}, --preset {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers,top_gainers,top_losers,new_high,new_low,most_volatile,most_active,unusual_volume,overbought,oversold,downgrades,upgrades,earnings_before,earnings_after,recent_insider_buying,recent_insider_selling,major_news,horizontal_sr,tl_resistance,tl_support,wedge_up,wedge_down,wedge,triangle_ascending,triangle_descending,channel_up,channel_down,channel,double_top,double_bottom,multiple_top,multiple_bottom,head_shoulders,head_shoulders_inverse} Filter presets -l LIMIT, --limit LIMIT Limit of stocks to print -a, --ascend Set order to Ascend, the default is Descend -s {Ticker,Market Cap,P/E,Fwd P/E,PEG,P/S,P/B,P/C,P/FCF,EPS this Y,EPS next Y,EPS past 5Y,EPS next 5Y,Sales past 5Y,Price,Change,Volume} [{Ticker,Market Cap,P/E,Fwd P/E,PEG,P/S,P/B,P/C,P/FCF,EPS this Y,EPS next Y,EPS past 5Y,EPS next 5Y,Sales past 5Y,Price,Change,Volume} ...], --sort {Ticker,Market Cap,P/E,Fwd P/E,PEG,P/S,P/B,P/C,P/FCF,EPS this Y,EPS next Y,EPS past 5Y,EPS next 5Y,Sales past 5Y,Price,Change,Volume} [{Ticker,Market Cap,P/E,Fwd P/E,PEG,P/S,P/B,P/C,P/FCF,EPS this Y,EPS next Y,EPS past 5Y,EPS next 5Y,Sales past 5Y,Price,Change,Volume} ...] Sort elements of the table. -h, --help show this help message --export {csv,json,xlsx} Export raw data into csv, json, xlsx 2022 Feb 14, 08:55 (✨) /stocks/scr/ $ valuation -p potential_reversals Finzin Screener ┌────────┬────────────────┬────────┬─────────┬───────┬───────┬───────┬───────┬────────┬────────────┬────────────┬─────────────┬─────────────┬───────────────┬────────┬────────┬─────────────┐ │ Ticker │ Market Cap │ P/E │ Fwd P/E │ PEG │ P/S │ P/B │ P/C │ P/FCF │ EPS this Y │ EPS next Y │ EPS past 5Y │ EPS next 5Y │ Sales past 5Y │ Price │ Change │ Volume │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZYNE │ 117100000.00 │ │ │ │ │ 1.35 │ 1.55 │ │ -0.27 │ -0.04 │ 0.08 │ │ │ 2.65 │ -0.07 │ 2010373.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZS │ 39800000000.00 │ │ 294.82 │ │ 52.30 │ 71.65 │ 25.12 │ 202.95 │ -1.17 │ 0.77 │ -0.44 │ 0.45 │ 0.53 │ 273.00 │ -0.04 │ 2014963.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZNGA │ 10270000000.00 │ │ 19.61 │ │ 3.67 │ 3.34 │ 7.67 │ 33.69 │ -0.03 │ 0.20 │ -0.26 │ 0.18 │ 0.21 │ 9.16 │ -0.00 │ 22552624.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZION │ 11600000000.00 │ 11.00 │ 12.68 │ │ 5.08 │ 1.60 │ 0.89 │ 67.04 │ -0.27 │ 0.16 │ 0.20 │ │ 0.05 │ 73.22 │ -0.01 │ 1226228.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZI │ 22650000000.00 │ 818.97 │ 81.18 │ 19.45 │ 34.08 │ 8.21 │ 97.09 │ 82.61 │ 0.53 │ 0.33 │ │ 0.42 │ │ 55.69 │ -0.02 │ 3612070.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZGNX │ 1470000000.00 │ │ │ │ 23.17 │ 6.52 │ 4.30 │ │ 0.60 │ 0.31 │ -0.15 │ │ -0.13 │ 26.15 │ -0.01 │ 1507686.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZG │ 12310000000.00 │ │ 19.08 │ │ 2.44 │ 2.57 │ 3.94 │ │ -1.92 │ 0.61 │ -0.12 │ │ 0.57 │ 53.92 │ 0.13 │ 8236415.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ Z │ 10370000000.00 │ │ 71.95 │ │ 2.05 │ 2.45 │ │ │ -3.43 │ 1.72 │ │ │ │ 55.40 │ 0.14 │ 50184008.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ YMAB │ 285860000.00 │ │ │ │ 6.21 │ 1.70 │ 1.33 │ │ -0.29 │ 0.12 │ │ │ │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ YELL │ 538640000.00 │ │ 9.31 │ │ 0.11 │ │ 1.73 │ │ -0.68 │ 0.24 │ -0.40 │ │ 0.02 │ 9.96 │ -0.05 │ 505353.00 │ └────────┴────────────────┴────────┴─────────┴───────┴───────┴───────┴───────┴────────┴────────────┴────────────┴─────────────┴─────────────┴───────────────┴────────┴────────┴─────────────┘ 2022 Feb 14, 08:56 (✨) /stocks/scr/ $ valuation -p major_news Finzin Screener ┌────────┬────────────────┬────────┬─────────┬───────┬───────┬───────┬───────┬────────┬────────────┬────────────┬─────────────┬─────────────┬───────────────┬────────┬────────┬─────────────┐ │ Ticker │ Market Cap │ P/E │ Fwd P/E │ PEG │ P/S │ P/B │ P/C │ P/FCF │ EPS this Y │ EPS next Y │ EPS past 5Y │ EPS next 5Y │ Sales past 5Y │ Price │ Change │ Volume │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZYNE │ 117100000.00 │ │ │ │ │ 1.35 │ 1.55 │ │ -0.27 │ -0.04 │ 0.08 │ │ │ 2.65 │ -0.07 │ 2010373.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZS │ 39800000000.00 │ │ 294.82 │ │ 52.30 │ 71.65 │ 25.12 │ 202.95 │ -1.17 │ 0.77 │ -0.44 │ 0.45 │ 0.53 │ 273.00 │ -0.04 │ 2014963.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZNGA │ 10270000000.00 │ │ 19.61 │ │ 3.67 │ 3.34 │ 7.67 │ 33.69 │ -0.03 │ 0.20 │ -0.26 │ 0.18 │ 0.21 │ 9.16 │ -0.00 │ 22552624.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZION │ 11600000000.00 │ 11.00 │ 12.68 │ │ 5.08 │ 1.60 │ 0.89 │ 67.04 │ -0.27 │ 0.16 │ 0.20 │ │ 0.05 │ 73.22 │ -0.01 │ 1226228.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZI │ 22650000000.00 │ 818.97 │ 81.18 │ 19.45 │ 34.08 │ 8.21 │ 97.09 │ 82.61 │ 0.53 │ 0.33 │ │ 0.42 │ │ 55.69 │ -0.02 │ 3612070.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZGNX │ 1470000000.00 │ │ │ │ 23.17 │ 6.52 │ 4.30 │ │ 0.60 │ 0.31 │ -0.15 │ │ -0.13 │ 26.15 │ -0.01 │ 1507686.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ ZG │ 12310000000.00 │ │ 19.08 │ │ 2.44 │ 2.57 │ 3.94 │ │ -1.92 │ 0.61 │ -0.12 │ │ 0.57 │ 53.92 │ 0.13 │ 8236415.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ Z │ 10370000000.00 │ │ 71.95 │ │ 2.05 │ 2.45 │ │ │ -3.43 │ 1.72 │ │ │ │ 55.40 │ 0.14 │ 50184008.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ YMAB │ 285860000.00 │ │ │ │ 6.21 │ 1.70 │ 1.33 │ │ -0.29 │ 0.12 │ │ │ │ 8.25 │ 0.26 │ 12286763.00 │ ├────────┼────────────────┼────────┼─────────┼───────┼───────┼───────┼───────┼────────┼────────────┼────────────┼─────────────┼─────────────┼───────────────┼────────┼────────┼─────────────┤ │ YELL │ 538640000.00 │ │ 9.31 │ │ 0.11 │ │ 1.73 │ │ -0.68 │ 0.24 │ -0.40 │ │ 0.02 │ 9.96 │ -0.05 │ 505353.00 │ └────────┴────────────────┴────────┴─────────┴───────┴───────┴───────┴───────┴────────┴────────────┴────────────┴─────────────┴─────────────┴───────────────┴────────┴────────┴─────────────┘ "},{"id":1243,"href":"/OpenBBTerminal/terminal/stocks/scr/view/","title":"View","parent":"Introduction to the Stock Screener","content":"usage: view [-p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers}] [-h] View available presets.\noptional arguments: -p {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers}, --preset {5pct_above_low,analyst_strong_buy,break_out_stocks,buffett_like,bull_runs_over_10pct,channel_up_and_low_debt_and_sma_50and200,cheap_bottom_dividend,cheap_dividend,cheap_oversold,continued_momentum_scan,death_cross,golden_cross,golden_cross_penny,growth_stocks,heavy_inst_ins,high_vol_and_low_debt,modified_dreman,modified_neff,news_scanner,oversold,oversold_under_3dol,oversold_under_5dol,potential_reversals,recent_growth_and_support,rosenwald,rosenwald_gtfo,sexy_year,short_squeeze_scan,simplistic_momentum_scanner_under_7dol,stocks_strong_support_levels,template,top_performers_all,top_performers_healthcare,top_performers_tech,undervalue,under_15dol_stocks,unusual_volume,value_stocks,weak_support_and_top_performers} View specific custom preset -h, --help show this help message Custom Presets: 5pct_above_low 5% Above Low analyst_strong_buy Analyst Strong Buy break_out_stocks Break out Stocks buffett_like Buffet like value screener (Value invsting for long term growth) bull_runs_over_10pct Bull runs over 10% channel_up_and_low_debt_and_sma_50and200 (Channel Up, Low Debt, Above 50 \u0026amp; 200 SMA) cheap_bottom_dividend High Yield Dividend stonks that are at-or-near their lowest price. Inverse Head and shoulders pattern recognized. cheap_dividend Cheap dividend stocks cheap_oversold Cheap stonks that are oversold: under 10% above the low, and oversold on the RSI. continued_momentum_scan Continued Momentum Scan death_cross When the 50 sma crosses below the 200 sma. More information can be found in https://www.investopedia.com/terms/d/deathcross.asp golden_cross Golden Cross when the 50 day moves above the200 day from below. golden_cross_penny Golden Cross growth_stocks Growth Stocks heavy_inst_ins Heavily owned by institutions and insiders (\u0026gt;30% each) high_vol_and_low_debt High Volume, NEW Volume, Low Debt modified_dreman Modified Version of the Dreman Screener. modified_neff Neff Screener with modifications // operational margin \u0026lt;50%. More information can be found in https://marketxls.com/template/neff-screen/ news_scanner News Scanner oversold Oversold oversold_under_3dol Oversold Under $3 oversold_under_5dol Oversold Under $5 potential_reversals Potential Reversals recent_growth_and_support Recent Growth, Support rosenwald The \u0026quot;classic rosenwald\u0026quot; screen based on some dude i work with best guess. rosenwald_gtfo Too many indicators indicating an impending crash. sexy_year This is just a sample. The user that adds the preset can add a description for what type of stocks these filters are aimed for short_squeeze_scan Short Squeeze Scan simplistic_momentum_scanner_under_7dol Simplistic Momentum Scanner Under $7 stocks_strong_support_levels Stocks Strong Support Levels template Template with all available filters and their options menu. More information can be found in https://finviz.com/help/screener.ashx and https://finviz.com/help/technical-analysis/charts-patterns.ashx top_performers_all Top performers (ALL) top_performers_healthcare Top performers (Healthcare) top_performers_tech Top performers (tech) undervalue Potential Undervalued stocks under_15dol_stocks Under $15 Stocks unusual_volume Unusual Volume value_stocks Value Stocks weak_support_and_top_performers (Weak Support Trendlines, Top Performers) Default Presets: top_gainers stocks with the highest %% price gain today top_losers stocks with the highest %% price loss today new_high stocks making 52-week high today new_low stocks making 52-week low today most_volatile stocks with the highest widest high/low trading range today most_active stocks with the highest trading volume today unusual_volume stocks with unusually high volume today - the highest relative volume ratio overbought stock is becoming overvalued and may experience a pullback. oversold oversold stocks may represent a buying opportunity for investors downgrades stocks downgraded by analysts today upgrades stocks upgraded by analysts today earnings_before companies reporting earnings today, before market open earnings_after companies reporting earnings today, after market close recent_insider_buying stocks with recent insider buying activity recent_insider_selling stocks with recent insider selling activity major_news stocks with the highest news coverage today horizontal_sr horizontal channel of price range between support and resistance trendlines tl_resistance once a rising trendline is broken tl_support once a falling trendline is broken wedge_up upward trendline support and upward trendline resistance (reversal) wedge_down downward trendline support and downward trendline resistance (reversal) wedge upward trendline support, downward trendline resistance (contiunation) triangle_ascending upward trendline support and horizontal trendline resistance triangle_descending horizontal trendline support and downward trendline resistance channel_up both support and resistance trendlines slope upward channel_down both support and resistance trendlines slope downward channel both support and resistance trendlines are horizontal double_top stock with 'M' shape that indicates a bearish reversal in trend double_bottom stock with 'W' shape that indicates a bullish reversal in trend multiple_top same as double_top hitting more highs multiple_bottom same as double_bottom hitting more lows head_shoulders chart formation that predicts a bullish-to-bearish trend reversal head_shoulders_inverse chart formation that predicts a bearish-to-bullish trend reversal "},{"id":1244,"href":"/OpenBBTerminal/terminal/stocks/search/","title":"Search","parent":"Introduction to Stocks","content":"usage: search [-q QUERY] [-a AMOUNT] [-c {Afghanistan,Anguilla,Argentina,Australia,Austria,Azerbaijan,Bahamas,Bangladesh,Barbados,Belgium,Belize,Bermuda,Botswana,Brazil,British Virgin Islands,Cambodia,Canada,Cayman Islands,Chile,China,Colombia,Costa Rica,Cyprus,Czech Republic,Denmark,Dominican Republic,Egypt,Estonia,Falkland Islands,Finland,France,French Guiana,Gabon,Georgia,Germany,Ghana,Gibraltar,Greece,Greenland,Guernsey,Hong Kong,Hungary,Iceland,India,Indonesia,Ireland,Isle of Man,Israel,Italy,Ivory Coast,Japan,Jersey,Jordan,Kazakhstan,Kyrgyzstan,Latvia,Liechtenstein,Lithuania,Luxembourg,Macau,Macedonia,Malaysia,Malta,Mauritius,Mexico,Monaco,Mongolia,Montenegro,Morocco,Mozambique,Myanmar,Namibia,Netherlands,Netherlands Antilles,New Zealand,Nigeria,Norway,Panama,Papua New Guinea,Peru,Philippines,Poland,Portugal,Qatar,Reunion,Romania,Russia,Saudi Arabia,Senegal,Singapore,Slovakia,Slovenia,South Africa,South Korea,Spain,Suriname,Sweden,Switzerland,Taiwan,Tanzania,Thailand,Turkey,Ukraine,United Arab Emirates,United Kingdom,United States,Uruguay,Vietnam,Zambia}] [-s {,Basic Materials,Communication Services,Conglomerates,Consumer Cyclical,Consumer Defensive,Consumer Goods,Energy,Financial,Financial Services,Healthcare,Industrial Goods,Industrials,Real Estate,Services,Technology,Utilities}] [-i {,Advertising Agencies,Aerospace \u0026amp; Defense,Aerospace Defense - Major Diversified,Aerospace Defense Products \u0026amp; Services,Agricultural Chemicals,Agricultural Inputs,Air Delivery \u0026amp; Freight Services,Airlines,Airports \u0026amp; Air Services,Aluminum,Apparel Manufacturing,Apparel Retail,Apparel Stores,Asset Management,Auto \u0026amp; Truck Dealerships,Auto Dealerships,Auto Manufacturers,Auto Manufacturers - Major,Auto Parts,Banks - Diversified,Banks - Regional,Beverages - Brewers,Beverages - Non-Alcoholic,Beverages - Soft Drinks,Beverages - Wineries \u0026amp; Distilleries,Beverages - Wineries \u0026amp; Distillers,Biotechnology,Broadcasting,Broadcasting - TV,Building Materials,Building Products \u0026amp; Equipment,Business Equipment,Business Equipment \u0026amp; Supplies,Business Services,Business Software \u0026amp; Services,Capital Markets,Chemicals,Chemicals - Major Diversified,Cigarettes,Closed-End Fund - Equity,Coking Coal,Communication Equipment,Computer Based Systems,Computer Hardware,Confectioners,Conglomerates,Consulting Services,Consumer Electronics,Copper,Credit Services,Department Stores,Diagnostics \u0026amp; Research,Discount Stores,Discount, Variety Stores,Diversified Computer Systems,Diversified Electronics,Diversified Investments,Diversified Machinery,Diversified Utilities,Drug Manufacturers - General,Drug Manufacturers - Major,Drug Manufacturers - Other,Drug Manufacturers - Specialty \u0026amp; Generic,Drugs - Generic,Education \u0026amp; Training Services,Electric Utilities,Electrical Equipment \u0026amp; Parts,Electronic Components,Electronic Equipment,Electronic Gaming \u0026amp; Multimedia,Electronics \u0026amp; Computer Distribution,Electronics Wholesale,Engineering \u0026amp; Construction,Entertainment,Entertainment - Diversified,Farm \u0026amp; Construction Machinery,Farm \u0026amp; Heavy Construction Machinery,Farm Products,Financial Conglomerates,Financial Data \u0026amp; Stock Exchanges,Food - Major Diversified,Food Distribution,Food Wholesale,Footwear \u0026amp; Accessories,Furnishings, Fixtures \u0026amp; Appliances,Gambling,Gaming Activities,General Building Materials,General Contractors,Gold,Grocery Stores,Health Care Plans,Health Information Services,Healthcare Information Services,Healthcare Plans,Heavy Construction,Home Furnishings \u0026amp; Fixtures,Home Improvement Retail,Hospitals,Household \u0026amp; Personal Products,Independent Oil \u0026amp; Gas,Industrial Distribution,Industrial Equipment Wholesale,Industrial Metals \u0026amp; Minerals,Information Technology Services,Infrastructure Operations,Insurance - Diversified,Insurance - Life,Insurance - Property \u0026amp; Casualty,Insurance - Reinsurance,Insurance - Specialty,Insurance Brokers,Integrated Freight \u0026amp; Logistics,Internet Content \u0026amp; Information,Internet Information Providers,Internet Retail,Internet Service Providers,Internet Software \u0026amp; Services,Investment Brokerage - National,Jewelry Stores,Leisure,Life Insurance,Lodging,Long Distance Carriers,Lumber \u0026amp; Wood Production,Lumber, Wood Production,Luxury Goods,Machine Tools \u0026amp; Accessories,Major Airlines,Major Integrated Oil \u0026amp; Gas,Marine Shipping,Marketing Services,Medical Appliances \u0026amp; Equipment,Medical Care Facilities,Medical Devices,Medical Distribution,Medical Instruments \u0026amp; Supplies,Medical Laboratories \u0026amp; Research,Metal Fabrication,Money Center Banks,Mortgage Finance,Mortgage Investment,Multimedia \u0026amp; Graphics Software,Networking \u0026amp; Communication Devices,Nonmetallic Mineral Mining,Oil \u0026amp; Gas Drilling,Oil \u0026amp; Gas Drilling \u0026amp; Exploration,Oil \u0026amp; Gas E\u0026amp;P,Oil \u0026amp; Gas Equipment \u0026amp; Services,Oil \u0026amp; Gas Integrated,Oil \u0026amp; Gas Midstream,Oil \u0026amp; Gas Pipelines,Oil \u0026amp; Gas Refining \u0026amp; Marketing,Other Industrial Metals \u0026amp; Mining,Other Precious Metals \u0026amp; Mining,Packaged Foods,Packaging \u0026amp; Containers,Paper \u0026amp; Paper Products,Personal Products,Personal Services,Pharmaceutical Retailers,Pollution \u0026amp; Treatment Controls,Printed Circuit Boards,Processed \u0026amp; Packaged Goods,Property \u0026amp; Casualty Insurance,Property Management,Publishing,Publishing - Newspapers,REIT - Diversified,REIT - Healthcare Facilities,REIT - Hotel \u0026amp; Motel,REIT - Industrial,REIT - Mortgage,REIT - Office,REIT - Residential,REIT - Retail,REIT - Specialty,Railroads,Real Estate - Development,Real Estate - Diversified,Real Estate Development,Real Estate Services,Recreational Goods, Other,Recreational Vehicles,Regional - Mid-Atlantic Banks,Rental \u0026amp; Leasing Services,Research Services,Residential Construction,Resorts \u0026amp; Casinos,Restaurants,Rubber \u0026amp; Plastics,Scientific \u0026amp; Technical Instruments,Security \u0026amp; Protection Services,Security Software \u0026amp; Services,Semiconductor - Broad Line,Semiconductor Equipment \u0026amp; Materials,Semiconductor- Memory Chips,Semiconductors,Shell Companies,Shipping,Silver,Software - Application,Software - Infrastructure,Solar,Specialized Health Services,Specialty Business Services,Specialty Chemicals,Specialty Industrial Machinery,Specialty Retail,Specialty Retail, Other,Staffing \u0026amp; Employment Services,Staffing \u0026amp; Outsourcing Services,Steel,Steel \u0026amp; Iron,Technical \u0026amp; System Software,Telecom Services,Textile - Apparel Clothing,Textile - Apparel Footwear \u0026amp; Accessories,Textile Industrial,Textile Manufacturing,Thermal Coal,Tobacco,Tobacco Products, Other,Tools \u0026amp; Accessories,Travel Services,Trucking,Trucks \u0026amp; Other Vehicles,Uranium,Utilities - Diversified,Utilities - Independent Power Producers,Utilities - Regulated Electric,Utilities - Regulated Gas,Utilities - Regulated Water,Utilities - Renewable,Waste Management,Water Utilities,Wireless Communications}] [-e {USA,Argentina,Austria,Australia,Belgium,Brazil,Canada,Chile,China,Czech-Republic,Denmark,Egypt,Estonia,Europe,Finland,France,Germany,Greece,Hong-Kong,Hungary,Iceland,India,Indonesia,Ireland,Israel,Italy,Japan,Latvia,Lithuania,Malaysia,Mexico,Netherlands,New-Zealand,Norway,Portugal,Qatar,Russia,Singapore,South-Africa,South-Korea,Spain,Saudi-Arabia,Sweden,Switzerland,Taiwan,Thailand,Turkey,United-Kingdom,Venezuela}] [-h] [--export EXPORT] Show companies matching the search query. optional arguments: -q QUERY, --query QUERY The search term used to find company tickers. (default: ) -a AMOUNT, --amount AMOUNT Enter the number of Equities you wish to see in the table window. (default: 0) -c {Afghanistan,Anguilla,Argentina,Australia,Austria,Azerbaijan,Bahamas,Bangladesh,Barbados,Belgium,Belize,Bermuda,Botswana,Brazil,British Virgin Islands,Cambodia,Canada,Cayman Islands,Chile,China,Colombia,Costa Rica,Cyprus,Czech Republic,Denmark,Dominican Republic,Egypt,Estonia,Falkland Islands,Finland,France,French Guiana,Gabon,Georgia,Germany,Ghana,Gibraltar,Greece,Greenland,Guernsey,Hong Kong,Hungary,Iceland,India,Indonesia,Ireland,Isle of Man,Israel,Italy,Ivory Coast,Japan,Jersey,Jordan,Kazakhstan,Kyrgyzstan,Latvia,Liechtenstein,Lithuania,Luxembourg,Macau,Macedonia,Malaysia,Malta,Mauritius,Mexico,Monaco,Mongolia,Montenegro,Morocco,Mozambique,Myanmar,Namibia,Netherlands,Netherlands Antilles,New Zealand,Nigeria,Norway,Panama,Papua New Guinea,Peru,Philippines,Poland,Portugal,Qatar,Reunion,Romania,Russia,Saudi Arabia,Senegal,Singapore,Slovakia,Slovenia,South Africa,South Korea,Spain,Suriname,Sweden,Switzerland,Taiwan,Tanzania,Thailand,Turkey,Ukraine,United Arab Emirates,United Kingdom,United States,Uruguay,Vietnam,Zambia}, --country {Afghanistan,Anguilla,Argentina,Australia,Austria,Azerbaijan,Bahamas,Bangladesh,Barbados,Belgium,Belize,Bermuda,Botswana,Brazil,British Virgin Islands,Cambodia,Canada,Cayman Islands,Chile,China,Colombia,Costa Rica,Cyprus,Czech Republic,Denmark,Dominican Republic,Egypt,Estonia,Falkland Islands,Finland,France,French Guiana,Gabon,Georgia,Germany,Ghana,Gibraltar,Greece,Greenland,Guernsey,Hong Kong,Hungary,Iceland,India,Indonesia,Ireland,Isle of Man,Israel,Italy,Ivory Coast,Japan,Jersey,Jordan,Kazakhstan,Kyrgyzstan,Latvia,Liechtenstein,Lithuania,Luxembourg,Macau,Macedonia,Malaysia,Malta,Mauritius,Mexico,Monaco,Mongolia,Montenegro,Morocco,Mozambique,Myanmar,Namibia,Netherlands,Netherlands Antilles,New Zealand,Nigeria,Norway,Panama,Papua New Guinea,Peru,Philippines,Poland,Portugal,Qatar,Reunion,Romania,Russia,Saudi Arabia,Senegal,Singapore,Slovakia,Slovenia,South Africa,South Korea,Spain,Suriname,Sweden,Switzerland,Taiwan,Tanzania,Thailand,Turkey,Ukraine,United Arab Emirates,United Kingdom,United States,Uruguay,Vietnam,Zambia} Search by country to find stocks matching the criteria. (default: None) -s {,Basic Materials,Communication Services,Conglomerates,Consumer Cyclical,Consumer Defensive,Consumer Goods,Energy,Financial,Financial Services,Healthcare,Industrial Goods,Industrials,Real Estate,Services,Technology,Utilities}, --sector {,Basic Materials,Communication Services,Conglomerates,Consumer Cyclical,Consumer Defensive,Consumer Goods,Energy,Financial,Financial Services,Healthcare,Industrial Goods,Industrials,Real Estate,Services,Technology,Utilities} Search by sector to find stocks matching the criteria. (default: ) -i {,Advertising Agencies,Aerospace \u0026amp; Defense,Aerospace Defense - Major Diversified,Aerospace Defense Products \u0026amp; Services,Agricultural Chemicals,Agricultural Inputs,Air Delivery \u0026amp; Freight Services,Airlines,Airports \u0026amp; Air Services,Aluminum,Apparel Manufacturing,Apparel Retail,Apparel Stores,Asset Management,Auto \u0026amp; Truck Dealerships,Auto Dealerships,Auto Manufacturers,Auto Manufacturers - Major,Auto Parts,Banks - Diversified,Banks - Regional,Beverages - Brewers,Beverages - Non-Alcoholic,Beverages - Soft Drinks,Beverages - Wineries \u0026amp; Distilleries,Beverages - Wineries \u0026amp; Distillers,Biotechnology,Broadcasting,Broadcasting - TV,Building Materials,Building Products \u0026amp; Equipment,Business Equipment,Business Equipment \u0026amp; Supplies,Business Services,Business Software \u0026amp; Services,Capital Markets,Chemicals,Chemicals - Major Diversified,Cigarettes,Closed-End Fund - Equity,Coking Coal,Communication Equipment,Computer Based Systems,Computer Hardware,Confectioners,Conglomerates,Consulting Services,Consumer Electronics,Copper,Credit Services,Department Stores,Diagnostics \u0026amp; Research,Discount Stores,Discount, Variety Stores,Diversified Computer Systems,Diversified Electronics,Diversified Investments,Diversified Machinery,Diversified Utilities,Drug Manufacturers - General,Drug Manufacturers - Major,Drug Manufacturers - Other,Drug Manufacturers - Specialty \u0026amp; Generic,Drugs - Generic,Education \u0026amp; Training Services,Electric Utilities,Electrical Equipment \u0026amp; Parts,Electronic Components,Electronic Equipment,Electronic Gaming \u0026amp; Multimedia,Electronics \u0026amp; Computer Distribution,Electronics Wholesale,Engineering \u0026amp; Construction,Entertainment,Entertainment - Diversified,Farm \u0026amp; Construction Machinery,Farm \u0026amp; Heavy Construction Machinery,Farm Products,Financial Conglomerates,Financial Data \u0026amp; Stock Exchanges,Food - Major Diversified,Food Distribution,Food Wholesale,Footwear \u0026amp; Accessories,Furnishings, Fixtures \u0026amp; Appliances,Gambling,Gaming Activities,General Building Materials,General Contractors,Gold,Grocery Stores,Health Care Plans,Health Information Services,Healthcare Information Services,Healthcare Plans,Heavy Construction,Home Furnishings \u0026amp; Fixtures,Home Improvement Retail,Hospitals,Household \u0026amp; Personal Products,Independent Oil \u0026amp; Gas,Industrial Distribution,Industrial Equipment Wholesale,Industrial Metals \u0026amp; Minerals,Information Technology Services,Infrastructure Operations,Insurance - Diversified,Insurance - Life,Insurance - Property \u0026amp; Casualty,Insurance - Reinsurance,Insurance - Specialty,Insurance Brokers,Integrated Freight \u0026amp; Logistics,Internet Content \u0026amp; Information,Internet Information Providers,Internet Retail,Internet Service Providers,Internet Software \u0026amp; Services,Investment Brokerage - National,Jewelry Stores,Leisure,Life Insurance,Lodging,Long Distance Carriers,Lumber \u0026amp; Wood Production,Lumber, Wood Production,Luxury Goods,Machine Tools \u0026amp; Accessories,Major Airlines,Major Integrated Oil \u0026amp; Gas,Marine Shipping,Marketing Services,Medical Appliances \u0026amp; Equipment,Medical Care Facilities,Medical Devices,Medical Distribution,Medical Instruments \u0026amp; Supplies,Medical Laboratories \u0026amp; Research,Metal Fabrication,Money Center Banks,Mortgage Finance,Mortgage Investment,Multimedia \u0026amp; Graphics Software,Networking \u0026amp; Communication Devices,Nonmetallic Mineral Mining,Oil \u0026amp; Gas Drilling,Oil \u0026amp; Gas Drilling \u0026amp; Exploration,Oil \u0026amp; Gas E\u0026amp;P,Oil \u0026amp; Gas Equipment \u0026amp; Services,Oil \u0026amp; Gas Integrated,Oil \u0026amp; Gas Midstream,Oil \u0026amp; Gas Pipelines,Oil \u0026amp; Gas Refining \u0026amp; Marketing,Other Industrial Metals \u0026amp; Mining,Other Precious Metals \u0026amp; Mining,Packaged Foods,Packaging \u0026amp; Containers,Paper \u0026amp; Paper Products,Personal Products,Personal Services,Pharmaceutical Retailers,Pollution \u0026amp; Treatment Controls,Printed Circuit Boards,Processed \u0026amp; Packaged Goods,Property \u0026amp; Casualty Insurance,Property Management,Publishing,Publishing - Newspapers,REIT - Diversified,REIT - Healthcare Facilities,REIT - Hotel \u0026amp; Motel,REIT - Industrial,REIT - Mortgage,REIT - Office,REIT - Residential,REIT - Retail,REIT - Specialty,Railroads,Real Estate - Development,Real Estate - Diversified,Real Estate Development,Real Estate Services,Recreational Goods, Other,Recreational Vehicles,Regional - Mid-Atlantic Banks,Rental \u0026amp; Leasing Services,Research Services,Residential Construction,Resorts \u0026amp; Casinos,Restaurants,Rubber \u0026amp; Plastics,Scientific \u0026amp; Technical Instruments,Security \u0026amp; Protection Services,Security Software \u0026amp; Services,Semiconductor - Broad Line,Semiconductor Equipment \u0026amp; Materials,Semiconductor- Memory Chips,Semiconductors,Shell Companies,Shipping,Silver,Software - Application,Software - Infrastructure,Solar,Specialized Health Services,Specialty Business Services,Specialty Chemicals,Specialty Industrial Machinery,Specialty Retail,Specialty Retail, Other,Staffing \u0026amp; Employment Services,Staffing \u0026amp; Outsourcing Services,Steel,Steel \u0026amp; Iron,Technical \u0026amp; System Software,Telecom Services,Textile - Apparel Clothing,Textile - Apparel Footwear \u0026amp; Accessories,Textile Industrial,Textile Manufacturing,Thermal Coal,Tobacco,Tobacco Products, Other,Tools \u0026amp; Accessories,Travel Services,Trucking,Trucks \u0026amp; Other Vehicles,Uranium,Utilities - Diversified,Utilities - Independent Power Producers,Utilities - Regulated Electric,Utilities - Regulated Gas,Utilities - Regulated Water,Utilities - Renewable,Waste Management,Water Utilities,Wireless Communications}, --industry {,Advertising Agencies,Aerospace \u0026amp; Defense,Aerospace Defense - Major Diversified,Aerospace Defense Products \u0026amp; Services,Agricultural Chemicals,Agricultural Inputs,Air Delivery \u0026amp; Freight Services,Airlines,Airports \u0026amp; Air Services,Aluminum,Apparel Manufacturing,Apparel Retail,Apparel Stores,Asset Management,Auto \u0026amp; Truck Dealerships,Auto Dealerships,Auto Manufacturers,Auto Manufacturers - Major,Auto Parts,Banks - Diversified,Banks - Regional,Beverages - Brewers,Beverages - Non-Alcoholic,Beverages - Soft Drinks,Beverages - Wineries \u0026amp; Distilleries,Beverages - Wineries \u0026amp; Distillers,Biotechnology,Broadcasting,Broadcasting - TV,Building Materials,Building Products \u0026amp; Equipment,Business Equipment,Business Equipment \u0026amp; Supplies,Business Services,Business Software \u0026amp; Services,Capital Markets,Chemicals,Chemicals - Major Diversified,Cigarettes,Closed-End Fund - Equity,Coking Coal,Communication Equipment,Computer Based Systems,Computer Hardware,Confectioners,Conglomerates,Consulting Services,Consumer Electronics,Copper,Credit Services,Department Stores,Diagnostics \u0026amp; Research,Discount Stores,Discount, Variety Stores,Diversified Computer Systems,Diversified Electronics,Diversified Investments,Diversified Machinery,Diversified Utilities,Drug Manufacturers - General,Drug Manufacturers - Major,Drug Manufacturers - Other,Drug Manufacturers - Specialty \u0026amp; Generic,Drugs - Generic,Education \u0026amp; Training Services,Electric Utilities,Electrical Equipment \u0026amp; Parts,Electronic Components,Electronic Equipment,Electronic Gaming \u0026amp; Multimedia,Electronics \u0026amp; Computer Distribution,Electronics Wholesale,Engineering \u0026amp; Construction,Entertainment,Entertainment - Diversified,Farm \u0026amp; Construction Machinery,Farm \u0026amp; Heavy Construction Machinery,Farm Products,Financial Conglomerates,Financial Data \u0026amp; Stock Exchanges,Food - Major Diversified,Food Distribution,Food Wholesale,Footwear \u0026amp; Accessories,Furnishings, Fixtures \u0026amp; Appliances,Gambling,Gaming Activities,General Building Materials,General Contractors,Gold,Grocery Stores,Health Care Plans,Health Information Services,Healthcare Information Services,Healthcare Plans,Heavy Construction,Home Furnishings \u0026amp; Fixtures,Home Improvement Retail,Hospitals,Household \u0026amp; Personal Products,Independent Oil \u0026amp; Gas,Industrial Distribution,Industrial Equipment Wholesale,Industrial Metals \u0026amp; Minerals,Information Technology Services,Infrastructure Operations,Insurance - Diversified,Insurance - Life,Insurance - Property \u0026amp; Casualty,Insurance - Reinsurance,Insurance - Specialty,Insurance Brokers,Integrated Freight \u0026amp; Logistics,Internet Content \u0026amp; Information,Internet Information Providers,Internet Retail,Internet Service Providers,Internet Software \u0026amp; Services,Investment Brokerage - National,Jewelry Stores,Leisure,Life Insurance,Lodging,Long Distance Carriers,Lumber \u0026amp; Wood Production,Lumber, Wood Production,Luxury Goods,Machine Tools \u0026amp; Accessories,Major Airlines,Major Integrated Oil \u0026amp; Gas,Marine Shipping,Marketing Services,Medical Appliances \u0026amp; Equipment,Medical Care Facilities,Medical Devices,Medical Distribution,Medical Instruments \u0026amp; Supplies,Medical Laboratories \u0026amp; Research,Metal Fabrication,Money Center Banks,Mortgage Finance,Mortgage Investment,Multimedia \u0026amp; Graphics Software,Networking \u0026amp; Communication Devices,Nonmetallic Mineral Mining,Oil \u0026amp; Gas Drilling,Oil \u0026amp; Gas Drilling \u0026amp; Exploration,Oil \u0026amp; Gas E\u0026amp;P,Oil \u0026amp; Gas Equipment \u0026amp; Services,Oil \u0026amp; Gas Integrated,Oil \u0026amp; Gas Midstream,Oil \u0026amp; Gas Pipelines,Oil \u0026amp; Gas Refining \u0026amp; Marketing,Other Industrial Metals \u0026amp; Mining,Other Precious Metals \u0026amp; Mining,Packaged Foods,Packaging \u0026amp; Containers,Paper \u0026amp; Paper Products,Personal Products,Personal Services,Pharmaceutical Retailers,Pollution \u0026amp; Treatment Controls,Printed Circuit Boards,Processed \u0026amp; Packaged Goods,Property \u0026amp; Casualty Insurance,Property Management,Publishing,Publishing - Newspapers,REIT - Diversified,REIT - Healthcare Facilities,REIT - Hotel \u0026amp; Motel,REIT - Industrial,REIT - Mortgage,REIT - Office,REIT - Residential,REIT - Retail,REIT - Specialty,Railroads,Real Estate - Development,Real Estate - Diversified,Real Estate Development,Real Estate Services,Recreational Goods, Other,Recreational Vehicles,Regional - Mid-Atlantic Banks,Rental \u0026amp; Leasing Services,Research Services,Residential Construction,Resorts \u0026amp; Casinos,Restaurants,Rubber \u0026amp; Plastics,Scientific \u0026amp; Technical Instruments,Security \u0026amp; Protection Services,Security Software \u0026amp; Services,Semiconductor - Broad Line,Semiconductor Equipment \u0026amp; Materials,Semiconductor- Memory Chips,Semiconductors,Shell Companies,Shipping,Silver,Software - Application,Software - Infrastructure,Solar,Specialized Health Services,Specialty Business Services,Specialty Chemicals,Specialty Industrial Machinery,Specialty Retail,Specialty Retail, Other,Staffing \u0026amp; Employment Services,Staffing \u0026amp; Outsourcing Services,Steel,Steel \u0026amp; Iron,Technical \u0026amp; System Software,Telecom Services,Textile - Apparel Clothing,Textile - Apparel Footwear \u0026amp; Accessories,Textile Industrial,Textile Manufacturing,Thermal Coal,Tobacco,Tobacco Products, Other,Tools \u0026amp; Accessories,Travel Services,Trucking,Trucks \u0026amp; Other Vehicles,Uranium,Utilities - Diversified,Utilities - Independent Power Producers,Utilities - Regulated Electric,Utilities - Regulated Gas,Utilities - Regulated Water,Utilities - Renewable,Waste Management,Water Utilities,Wireless Communications} Search by industry to find stocks matching the criteria. (default: ) -e {USA,Argentina,Austria,Australia,Belgium,Brazil,Canada,Chile,China,Czech-Republic,Denmark,Egypt,Estonia,Europe,Finland,France,Germany,Greece,Hong-Kong,Hungary,Iceland,India,Indonesia,Ireland,Israel,Italy,Japan,Latvia,Lithuania,Malaysia,Mexico,Netherlands,New-Zealand,Norway,Portugal,Qatar,Russia,Singapore,South-Africa,South-Korea,Spain,Saudi-Arabia,Sweden,Switzerland,Taiwan,Thailand,Turkey,United-Kingdom,Venezuela}, --exchange {USA,Argentina,Austria,Australia,Belgium,Brazil,Canada,Chile,China,Czech-Republic,Denmark,Egypt,Estonia,Europe,Finland,France,Germany,Greece,Hong-Kong,Hungary,Iceland,India,Indonesia,Ireland,Israel,Italy,Japan,Latvia,Lithuania,Malaysia,Mexico,Netherlands,New-Zealand,Norway,Portugal,Qatar,Russia,Singapore,South-Africa,South-Korea,Spain,Saudi-Arabia,Sweden,Switzerland,Taiwan,Thailand,Turkey,United-Kingdom,Venezuela} Search by a specific exchange country to find stocks matching the criteria. (default: ) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx (default: ) "},{"id":1245,"href":"/OpenBBTerminal/terminal/stocks/sia/clear/","title":"Clear","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: clear [-p {industry,sector,country,mktcap}] [-h] Clear all or a particular parameter\noptional arguments: -p {industry,sector,country,mktcap}, --parameter {industry,sector,country,mktcap} parameter to clear (default: None) -h, --help show this help message (default: False) "},{"id":1246,"href":"/OpenBBTerminal/terminal/stocks/sia/country/","title":"Country","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: country [-n NAME [NAME ...]] [-h] See existing countries, or set country if arg specified\noptional arguments: -n NAME [NAME ...], --name NAME [NAME ...] country to select (default: None) -h, --help show this help message (default: False) List of countries\nAustralia Austria Belgium Bermuda Brazil British Virgin Islands Canada Cayman Islands Chile China Colombia Cyprus Denmark Finland France Germany Greece Guernsey Hong Kong India Indonesia Ireland Isle of Man Israel Italy Japan Jersey Latvia Lithuania Luxembourg Malaysia Malta Mauritius Mexico Myanmar Netherlands Netherlands Antilles New Zealand Norway Poland Portugal Qatar Russia Saudi Arabia Singapore Slovenia South Africa South Korea Spain Sweden Switzerland Taiwan Thailand Turkey United Kingdom United States "},{"id":1247,"href":"/OpenBBTerminal/terminal/stocks/sia/cpci/","title":"Cpci","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: cpci [-M MAX_COUNTRIES_TO_DISPLAY] [-m MIN_PCT_TO_DISPLAY_COUNTRY] [-r] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Companies per Country based on Industry and Market Cap\noptional arguments: -M MAX_COUNTRIES_TO_DISPLAY, --max MAX_COUNTRIES_TO_DISPLAY Maximum number of countries to display (default: 15) -m MIN_PCT_TO_DISPLAY_COUNTRY, --min MIN_PCT_TO_DISPLAY_COUNTRY Minimum percentage to display country (default: 0.015) -r, --raw Output all raw data (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1248,"href":"/OpenBBTerminal/terminal/stocks/sia/cpcs/","title":"Cpcs","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: cpcs [-M MAX_COUNTRIES_TO_DISPLAY] [-m MIN_PCT_TO_DISPLAY_COUNTRY] [-r] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Companies per Country based on Sector and Market Cap\noptional arguments: -M MAX_COUNTRIES_TO_DISPLAY, --max MAX_COUNTRIES_TO_DISPLAY Maximum number of countries to display (default: 15) -m MIN_PCT_TO_DISPLAY_COUNTRY, --min MIN_PCT_TO_DISPLAY_COUNTRY Minimum percentage to display country (default: 0.015) -r, --raw Output all raw data (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1249,"href":"/OpenBBTerminal/terminal/stocks/sia/cpic/","title":"Cpic","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: cpic [-M MAX_INDUSTRIES_TO_DISPLAY] [-m MIN_PCT_TO_DISPLAY_INDUSTRY] [-r] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Companies per Industry based on Country and Market Cap\noptional arguments: -M MAX_INDUSTRIES_TO_DISPLAY, --max MAX_INDUSTRIES_TO_DISPLAY Maximum number of industries to display (default: 15) -m MIN_PCT_TO_DISPLAY_INDUSTRY, --min MIN_PCT_TO_DISPLAY_INDUSTRY Minimum percentage to display industry (default: 0.015) -r, --raw Output all raw data (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1250,"href":"/OpenBBTerminal/terminal/stocks/sia/cpis/","title":"Cpis","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: cpis [-M MAX_INDUSTRIES_TO_DISPLAY] [-m MIN_PCT_TO_DISPLAY_INDUSTRY] [-r] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Companies per Industry based on Sector and Market Cap\noptional arguments: -M MAX_INDUSTRIES_TO_DISPLAY, --max MAX_INDUSTRIES_TO_DISPLAY Maximum number of industries to display (default: 15) -m MIN_PCT_TO_DISPLAY_INDUSTRY, --min MIN_PCT_TO_DISPLAY_INDUSTRY Minimum percentage to display industry (default: 0.015) -r, --raw Output all raw data (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1251,"href":"/OpenBBTerminal/terminal/stocks/sia/cps/","title":"Cps","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: cps [-M MAX_SECTORS_TO_DISPLAY] [-m MIN_PCT_TO_DISPLAY_SECTOR] [-r] [-h] [--export {csv,json,xlsx,png,jpg,pdf,svg}] Companies per sector in the selected country.\noptional arguments: -M MAX_SECTORS_TO_DISPLAY, --max MAX_SECTORS_TO_DISPLAY Maximum number of sectors to display (default: 15) -m MIN_PCT_TO_DISPLAY_SECTOR, --min MIN_PCT_TO_DISPLAY_SECTOR Minimum percentage to display sector (default: 0.015) -r, --raw Output all raw data (default: False) -h, --help show this help message (default: False) --export {csv,json,xlsx,png,jpg,pdf,svg} Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) "},{"id":1252,"href":"/OpenBBTerminal/terminal/stocks/sia/exchange/","title":"Exchange","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: exchange [-h] Swap the exclude international exchanges flag.\noptional arguments: -h, --help show this help message (default: False) "},{"id":1253,"href":"/OpenBBTerminal/terminal/stocks/sia/industry/","title":"Industry","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: industry [-n NAME [NAME ...]] [-h] See existing industries, or set industry if arg specified\noptional arguments: -n NAME [NAME ...], --name NAME [NAME ...] industry to select (default: None) -h, --help show this help message (default: False) Available Industries to select:\nAerospace \u0026amp; Defense Aerospace Defense - Major Diversified Aerospace Defense Products \u0026amp; Services Agricultural Chemicals Agricultural Inputs Air Delivery \u0026amp; Freight Services Airlines Airports \u0026amp; Air Services Aluminum Apparel Manufacturing Apparel Retail Apparel Stores Asset Management Auto \u0026amp; Truck Dealerships Auto Dealerships Auto Manufacturers Auto Manufacturers - Major Auto Parts Banks - Diversified Banks - Regional Beverages - Brewers Beverages - Non-Alcoholic Beverages - Soft Drinks Beverages - Wineries \u0026amp; Distilleries Beverages - Wineries \u0026amp; Distillers Biotechnology Broadcasting Broadcasting - TV Building Materials Building Products \u0026amp; Equipment Business Equipment Business Equipment \u0026amp; Supplies Business Services Business Software \u0026amp; Services Capital Markets Chemicals Chemicals - Major Diversified Cigarettes Closed-End Fund - Equity Coking Coal Communication Equipment Computer Based Systems Computer Hardware Confectioners Conglomerates Consulting Services Consumer Electronics Copper Credit Services Department Stores Diagnostics \u0026amp; Research Discount Stores Discount, Variety Stores Diversified Computer Systems Diversified Electronics Diversified Investments Diversified Machinery Diversified Utilities Drug Manufacturers - General Drug Manufacturers - Major Drug Manufacturers - Other Drug Manufacturers - Specialty \u0026amp; Generic Drugs - Generic Education \u0026amp; Training Services Electric Utilities Electrical Equipment \u0026amp; Parts Electronic Components Electronic Equipment Electronic Gaming \u0026amp; Multimedia Electronics \u0026amp; Computer Distribution Electronics Wholesale Engineering \u0026amp; Construction Entertainment Entertainment - Diversified Farm \u0026amp; Construction Machinery Farm \u0026amp; Heavy Construction Machinery Farm Products Financial Conglomerates Financial Data \u0026amp; Stock Exchanges Food - Major Diversified Food Distribution Food Wholesale Footwear \u0026amp; Accessories Furnishings, Fixtures \u0026amp; Appliances Gambling Gaming Activities General Building Materials General Contractors Gold Grocery Stores Health Care Plans Health Information Services Healthcare Information Services Healthcare Plans Heavy Construction Home Furnishings \u0026amp; Fixtures Home Improvement Retail Hospitals Household \u0026amp; Personal Products Independent Oil \u0026amp; Gas Industrial Distribution Industrial Equipment Wholesale Industrial Metals \u0026amp; Minerals Information Technology Services Infrastructure Operations Insurance - Diversified Insurance - Life Insurance - Property \u0026amp; Casualty Insurance - Reinsurance Insurance - Specialty Insurance Brokers Integrated Freight \u0026amp; Logistics Internet Content \u0026amp; Information Internet Information Providers Internet Retail Internet Service Providers Internet Software \u0026amp; Services Investment Brokerage - National Jewelry Stores Leisure Life Insurance Lodging Long Distance Carriers Lumber \u0026amp; Wood Production Lumber, Wood Production Luxury Goods Machine Tools \u0026amp; Accessories Major Airlines Major Integrated Oil \u0026amp; Gas Marine Shipping Marketing Services Medical Appliances \u0026amp; Equipment Medical Care Facilities Medical Devices Medical Distribution Medical Instruments \u0026amp; Supplies Medical Laboratories \u0026amp; Research Metal Fabrication Money Center Banks Mortgage Finance Mortgage Investment Multimedia \u0026amp; Graphics Software Networking \u0026amp; Communication Devices Nonmetallic Mineral Mining Oil \u0026amp; Gas Drilling Oil \u0026amp; Gas Drilling \u0026amp; Exploration Oil \u0026amp; Gas E\u0026amp;P Oil \u0026amp; Gas Equipment \u0026amp; Services Oil \u0026amp; Gas Integrated Oil \u0026amp; Gas Midstream Oil \u0026amp; Gas Pipelines Oil \u0026amp; Gas Refining \u0026amp; Marketing Other Industrial Metals \u0026amp; Mining Other Precious Metals \u0026amp; Mining Packaged Foods Packaging \u0026amp; Containers Paper \u0026amp; Paper Products Personal Products Personal Services Pharmaceutical Retailers Pollution \u0026amp; Treatment Controls Printed Circuit Boards Processed \u0026amp; Packaged Goods Property \u0026amp; Casualty Insurance Property Management Publishing Publishing - Newspapers REIT - Diversified REIT - Healthcare Facilities REIT - Hotel \u0026amp; Motel REIT - Industrial REIT - Mortgage REIT - Office REIT - Residential REIT - Retail REIT - Specialty Railroads Real Estate - Development Real Estate - Diversified Real Estate Development Real Estate Services Recreational Goods, Other Recreational Vehicles Regional - Mid-Atlantic Banks Rental \u0026amp; Leasing Services Research Services Residential Construction Resorts \u0026amp; Casinos Restaurants Rubber \u0026amp; Plastics Scientific \u0026amp; Technical Instruments Security \u0026amp; Protection Services Security Software \u0026amp; Services Semiconductor - Broad Line Semiconductor Equipment \u0026amp; Materials Semiconductor- Memory Chips Semiconductors Shell Companies Shipping Silver Software - Application Software - Infrastructure Solar Specialized Health Services Specialty Business Services Specialty Chemicals Specialty Industrial Machinery Specialty Retail Specialty Retail, Other Staffing \u0026amp; Employment Services Staffing \u0026amp; Outsourcing Services Steel Steel \u0026amp; Iron Technical \u0026amp; System Software Telecom Services Textile - Apparel Clothing Textile - Apparel Footwear \u0026amp; Accessories Textile Industrial Textile Manufacturing Thermal Coal Tobacco Tobacco Products, Other Tools \u0026amp; Accessories Travel Services Trucking Trucks \u0026amp; Other Vehicles Uranium Utilities - Diversified Utilities - Independent Power Producers Utilities - Regulated Electric Utilities - Regulated Gas Utilities - Regulated Water Utilities - Renewable Waste Management Water Utilities Wireless Communications "},{"id":1254,"href":"/OpenBBTerminal/terminal/stocks/sia/load/","title":"Load","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: load [-t TICKER] [-h] Load stock ticker and alter the industry, sector, country and market cap accordingly for this ticker.\noptional arguments: -t TICKER, --ticker TICKER Stock ticker (default: None) -h, --help show this help message (default: False) "},{"id":1255,"href":"/OpenBBTerminal/terminal/stocks/sia/metric/","title":"Metric","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: metric [-m {roa,roe,cr,qr,de,tc,tcs,tr,rps,rg,eg,pm,gp,gm,ocf,om,fcf,td,ebitda,ebitdam,rec,mc,fte,er,bv,ss,pb,beta,fs,peg,ev,fpe}] [-l LIMIT] [-r] [-h] [--export EXPORT] Visualize a particular metric with the filters selected optional arguments: -m {roa,roe,cr,qr,de,tc,tcs,tr,rps,rg,eg,pm,gp,gm,ocf,om,fcf,td,ebitda,ebitdam,rec,mc,fte,er,bv,ss,pb,beta,fs,peg,ev,fpe}, \u0026ndash;metric {roa,roe,cr,qr,de,tc,tcs,tr,rps,rg,eg,pm,gp,gm,ocf,om,fcf,td,ebitda,ebitdam,rec,mc,fte,er,bv,ss,pb,beta,fs,peg,ev,fpe} Metric to visualize (default: None) -l LIMIT, \u0026ndash;limit LIMIT Limit number of companies to display (default: 10) -r, \u0026ndash;raw Output all raw data (default: False) -h, \u0026ndash;help show this help message (default: False) \u0026ndash;export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: )\n Return on Equity example: │ Industry : Software - Infrastructure │ │ Sector : Technology │ │ Country : United States │ │ Market Cap : Large │ │ Exclude Exchanges : True │ │ Period : Annual\n2022 Mar 21, 09:51 (✨) /stocks/sia/ $ metric roe\n![metric roe](https://user-images.githubusercontent.com/46355364/159276031-ad84d153-9cb3-440e-9771-090aa6c467c4.png) Full Time Employees example: │ Industry : Financial Data \u0026amp; Stock Exchanges │ │ Sector : Financial Services │ │ Country : United States │ │ Market Cap : Large │ │ Exclude Exchanges : True │ │ Period : Annual\n2022 Mar 21, 09:55 (✨) /stocks/sia/ $ metric fte\n![metric fte](https://user-images.githubusercontent.com/46355364/159276335-d0ecb16f-eac2-421f-b69e-3bbffe126bd1.png) "},{"id":1256,"href":"/OpenBBTerminal/terminal/stocks/sia/mktcap/","title":"Mktcap","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: mktcap [-n {Nano,Micro,Small,Mid,Large,Mega,nano,micro,small,mid,large,mega}] [-h] Set mktcap to nano, micro, small, mid, large or mega.\noptional arguments: -n {Nano,Micro,Small,Mid,Large,Mega,nano,micro,small,mid,large,mega}, --name {Nano,Micro,Small,Mid,Large,Mega,nano,micro,small,mid,large,mega} market cap to select (default: None) -h, --help show this help message (default: False) "},{"id":1257,"href":"/OpenBBTerminal/terminal/stocks/sia/period/","title":"Period","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: period [-n {Annual,Quarterly,Trailing,annual,quarterly,trailing}] [-h] Set period between annual, quarterly and trailing\noptional arguments: -n {Annual,Quarterly,Trailing,annual,quarterly,trailing}, --name {Annual,Quarterly,Trailing,annual,quarterly,trailing} period to select (default: None) -h, --help show this help message (default: False) "},{"id":1258,"href":"/OpenBBTerminal/terminal/stocks/sia/sector/","title":"Sector","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: sector [-n NAME [NAME ...]] [-h] See existing sectors, or set the sector using the -n argument.\noptional arguments: -n NAME [NAME ...], --name NAME [NAME ...] sector to select (default: None) -h, --help show this help message (default: False) Available sectors:\nBasic Materials Communication Services Conglomerates Consumer Cyclical Consumer Defensive Consumer Goods Energy Financial Financial Services Healthcare Industrial Goods Industrials Real Estate Services Technology Utilities "},{"id":1259,"href":"/OpenBBTerminal/terminal/stocks/sia/vis/","title":"Vis","parent":"Sector \u0026 Industry Analysis (SIA)","content":"usage: vis [-m {ce,sti,cce,rec,inv,oca,tca,ppe,lti,gai,olta,tlta,ta,ap,dr,cd,ocl,tcl,ltd,oltl,tltl,tl,ret,ci,se,tle,ninc,da,sbc,ooa,ocf,cex,acq,cii,oia,icf,dp,si,di,ofa,fcf,ncf,re,cr,gp,sga,rd,ooe,oi,ie,oe,it,ni,pd}] [-p PERIOD] [-c CURRENCY] [-h] [--export EXPORT] [--raw] [-l LIMIT] Visualize a particular metric with the filters selected\noptional arguments: -m {ce,sti,cce,rec,inv,oca,tca,ppe,lti,gai,olta,tlta,ta,ap,dr,cd,ocl,tcl,ltd,oltl,tltl,tl,ret,ci,se,tle,ninc,da,sbc,ooa,ocf,cex,acq,cii,oia,icf,dp,si,di,ofa,fcf,ncf,re,cr,gp,sga,rd,ooe,oi,ie,oe,it,ni,pd}, --metric {ce,sti,cce,rec,inv,oca,tca,ppe,lti,gai,olta,tlta,ta,ap,dr,cd,ocl,tcl,ltd,oltl,tltl,tl,ret,ci,se,tle,ninc,da,sbc,ooa,ocf,cex,acq,cii,oia,icf,dp,si,di,ofa,fcf,ncf,re,cr,gp,sga,rd,ooe,oi,ie,oe,it,ni,pd} Metric to visualize (default: None) -p PERIOD, --period PERIOD Limit number of periods to display (default: 12) -c CURRENCY, --currency CURRENCY Convert the currency of the chosen country to a specified currency. By default, this is set to USD (US Dollars). (default: USD) -h, --help show this help message (default: False) --export EXPORT Export raw data into csv, json, xlsx and figure into png, jpg, pdf, svg (default: ) --raw Flag to display raw data (default: False) -l LIMIT, --limit LIMIT Number of entries to show in data. (default: 10) "},{"id":1260,"href":"/OpenBBTerminal/terminal/stocks/th/all/","title":"All","parent":"Introduction to Trading Hours","content":"usage: all\nAll markets\n"},{"id":1261,"href":"/OpenBBTerminal/terminal/stocks/th/closed/","title":"Closed","parent":"Introduction to Trading Hours","content":"usage: closed\nClosed markets\n"},{"id":1262,"href":"/OpenBBTerminal/terminal/stocks/th/exchange/","title":"Exchange","parent":"Introduction to Trading Hours","content":"usage: exchange IOB\nExchange info\n"},{"id":1263,"href":"/OpenBBTerminal/terminal/stocks/th/open/","title":"Open","parent":"Introduction to Trading Hours","content":"usage: open\nOpen markets\n"},{"id":1264,"href":"/OpenBBTerminal/terminal/stocks/th/symbol/","title":"Symbol","parent":"Introduction to Trading Hours","content":"usage: symbol [-n --name SYMBOL]\nLoad symbol for open market checkup.\n"},{"id":1265,"href":"/OpenBBTerminal/terminal/stocks/tob/","title":"Tob","parent":"Introduction to Stocks","content":"usage: quote [-t S_TICKER] [-e {BZX,EDGX,BYX,EDGA}] [-h] Get top of book for loaded ticker from selected exchange\noptional arguments: -t S_TICKER, --ticker S_TICKER Ticker to get data for (default: None) -e {BZX,EDGX,BYX,EDGA}, --exchange {BZX,EDGX,BYX,EDGA} -h, --help show this help message (default: False) For more information and examples, use \u0026lsquo;about quote\u0026rsquo; to access the related guide.\n"},{"id":1266,"href":"/OpenBBTerminal/SDK/alt/","title":"alt","parent":"OpenBB Python SDK","content":""},{"id":1267,"href":"/OpenBBTerminal/SDK/stocks/ba/","title":"ba","parent":"Introduction to the Stocks Menu","content":""},{"id":1268,"href":"/OpenBBTerminal/SDK/stocks/ca/","title":"ca","parent":"Introduction to the Stocks Menu","content":""},{"id":1269,"href":"/OpenBBTerminal/categories/","title":"Categories","parent":"OpenBB Terminal Documentation","content":""},{"id":1270,"href":"/OpenBBTerminal/SDK/common/","title":"common","parent":"OpenBB Python SDK","content":""},{"id":1271,"href":"/OpenBBTerminal/terminal/common/","title":"Common Menus","parent":"Terminal","content":"There are several sub-menus containing features that can be applied across all asset classes. These are grouped in the directory trees under, common.\n Introduction to the Behavioural Analysis Menu Introduction to the Quantitative Analysis Menu Introduction to the Technical Analysis Menu Introduction to the Forecast Menu  "},{"id":1272,"href":"/OpenBBTerminal/SDK/alt/covid/","title":"covid","parent":"alt","content":""},{"id":1273,"href":"/OpenBBTerminal/SDK/crypto/","title":"crypto","parent":"OpenBB Python SDK","content":""},{"id":1274,"href":"/OpenBBTerminal/SDK/crypto/dd/","title":"dd","parent":"crypto","content":""},{"id":1275,"href":"/OpenBBTerminal/SDK/stocks/dd/","title":"dd","parent":"Introduction to the Stocks Menu","content":""},{"id":1276,"href":"/OpenBBTerminal/SDK/crypto/defi/","title":"defi","parent":"crypto","content":""},{"id":1277,"href":"/OpenBBTerminal/SDK/crypto/disc/","title":"disc","parent":"crypto","content":""},{"id":1278,"href":"/OpenBBTerminal/SDK/etf/disc/","title":"disc","parent":"etf","content":""},{"id":1279,"href":"/OpenBBTerminal/SDK/stocks/disc/","title":"disc","parent":"Introduction to the Stocks Menu","content":""},{"id":1280,"href":"/OpenBBTerminal/SDK/stocks/dps/","title":"dps","parent":"Introduction to the Stocks Menu","content":""},{"id":1281,"href":"/OpenBBTerminal/SDK/econometrics/","title":"econometrics","parent":"OpenBB Python SDK","content":""},{"id":1282,"href":"/OpenBBTerminal/SDK/economy/","title":"economy","parent":"OpenBB Python SDK","content":""},{"id":1283,"href":"/OpenBBTerminal/SDK/etf/","title":"etf","parent":"OpenBB Python SDK","content":""},{"id":1284,"href":"/OpenBBTerminal/SDK/stocks/fa/","title":"fa","parent":"Introduction to the Stocks Menu","content":""},{"id":1285,"href":"/OpenBBTerminal/SDK/forecast/","title":"forecast","parent":"OpenBB Python SDK","content":""},{"id":1286,"href":"/OpenBBTerminal/SDK/forex/","title":"forex","parent":"OpenBB Python SDK","content":""},{"id":1287,"href":"/OpenBBTerminal/SDK/funds/","title":"funds","parent":"OpenBB Python SDK","content":""},{"id":1288,"href":"/OpenBBTerminal/SDK/futures/","title":"futures","parent":"OpenBB Python SDK","content":""},{"id":1289,"href":"/OpenBBTerminal/SDK/stocks/gov/","title":"gov","parent":"Introduction to the Stocks Menu","content":""},{"id":1290,"href":"/OpenBBTerminal/SDK/stocks/options/hedge/","title":"hedge","parent":"options","content":""},{"id":1291,"href":"/OpenBBTerminal/SDK/stocks/ins/","title":"ins","parent":"Introduction to the Stocks Menu","content":""},{"id":1292,"href":"/OpenBBTerminal/terminal/crypto/","title":"Introduction to Cryptocurrency","parent":"Terminal","content":"The Cryptocurrency menu allows you to discover trending cryptocurrency (disc). Additionally, you can also perform research of a specific coin (dd), NFT (nft) or most lucrative Defi project (defi). It does so by handing you tools to (among other things) perform technical analysis (ta), quantitative analysis (qa), and give you access to onchain information (onchain).\nHow to use    The Cryptocurrency menu is called upon by typing crypto which opens the following menu:\nYou have the ability to search a coin with find based on its name or symbol. An example:\nAs a result, you can see a list of coins matching your search criteria. Once you identify the coin you are looking for, next step is to load it. See the example below:\nTo view the candle chart for the loaded crypto, you can call candle. This will show you the coin\u0026rsquo;s historical prices and volume, as follows: In case you want to adjust the default period, you can do so by specifying the number of days to go back in time.\nYou might be wondering, how can I know about all possible options? You can type in command_name -h or load -h in this case. Here you will find available optional arguments that you can play with.\nLastly, by calling ? or help or h, the crypto menu will be re-populated. Here you can see that several menus have turned blue, which mean you can enter any of them now. In order to use these menus, you are required to first load a coin.\nSub-menus available    The Cryptocurrency menu has an extensive list of available sub-menus ranging from due diligence to NFT to onchain analysis. To find more information about each menu, you can click on one of the following:\n Introduction to Cryptocurrency Discovery: discovers top trending, top gainers or losers coins, as well as top NFTs, dApps and exchanges based on prices. Introduction to Cryptocurrency Overview: gives the overview of the cryptocurrency market, including global Defi market, stablecoins, exchanges as well as latest news. Introduction to Cryptocurrency Onchain: provides information on different blockchains, whales transaction and traded volumes on certain crypto pair. You can also specify a Ethereum address and look up past transactions and balance history. Introduction to Cryptocurrency Decentralized Finance (DeFi): explore the decentralized finance market through a variety of indicators and data, from lending interests, staking ratio, Uniswap pools to top Defi dApps. Introduction to Cryptocurrency Tools: gives you the tool to calculate crypto metrics, such as impermanent loss and converting APR to APY. Introduction to Non Fungible Tokens (NFTs): Discover latest NFT drops and OpenSea\u0026rsquo;s NFT Collection statistics. Introduction to Cryptocurrency Due Diligence: performs due diligence on a chosen coin based on, among other things, tokenomics, roadmaps, news, and community. Introduction to Technical Analysis: analyzes the chosen coin\u0026rsquo;s historical data extensively with moving averages and momentum, trend, volatility and volume indicators. Introduction to Forecasting Menu: applies advanced AI and Machine Learning models to form prediction of future stock prices including Recurrent Neural Network (RNN), Autoregressive Integrated Moving Average (ARIMA) and Monte Carlo forecasting  Examples    When entering the crypto menu, you would typically want to load in a coin. Let\u0026rsquo;s go with Ethereum. You can do this by specifying its symbol: load eth\nLet\u0026rsquo;s checkout its sentiments from major headlines news by typing: headlines\nTo perform further analysis, the best menu to enter is dd:\n2022 Jun 29, 08:58 (🦋) /crypto/ $ dd ╭────────────────────────────────────────────────────────────────────────────────────────────── Crypto - Due Diligence ──────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ load load a specific cryptocurrency for analysis │ │ │ │ Coin: eth │ │ Source: │ │ │ │ Overview: │ │ info basic information about loaded coin [CoinGecko] │ │ basic basic information about loaded coin [CoinPaprika] │ │ ath all time high related stats for loaded coin [CoinGecko] │ │ atl all time low related stats for loaded coin [CoinGecko] │ │ web found websites for loaded coin e.g forum, homepage [CoinGecko] │ │ pi project information e.g. technology details, public repos, audits, vulns [Messari] │ │ gov governance details [Messari] │ │ stats coin stats [Coinbase] │ │ bc links to blockchain explorers for loaded coin [CoinGecko] │ │ Market: │ │ market market stats about loaded coin [CoinGecko] │ │ mkt all markets for loaded coin [CoinPaprika] │ │ binbook order book [Binance] │ │ balance coin balance [Binance] │ │ cbbook order book [Coinbase] │ │ trades last trades [Coinbase] │ │ ex all exchanges where loaded coin is listed [CoinPaprika] │ │ oi open interest per exchange [Coinglass] │ │ eb total balance held on exchanges (in percentage and units) [Glassnode] │ │ Metrics: │ │ mcapdom market cap dominance [Messari] │ │ active active addresses [Glassnode] │ │ nonzero addresses with non-zero balances [Glassnode] │ │ change 30d change of supply held on exchange wallets [Glassnode] │ │ ps price and supply related metrics for loaded coin [CoinPaprika] │ │ mt messari timeseries e.g. twitter followers, circ supply, etc [Messari] │ │ Contributors and Investors: │ │ team contributors (individuals and organizations) [Messari] │ │ inv investors (individuals and organizations) [Messari] │ │ Tokenomics: │ │ tk tokenomics e.g. circulating/max/total supply, emission type, etc [Messari] │ │ fr fundraising details e.g. treasury accounts, sales rounds, allocation [Messari] │ │ Roadmap and News: │ │ rm roadmap [Messari] │ │ events events related to loaded coin [CoinPaprika] │ │ news loaded coin's most recent news [CryptoPanic] │ │ Activity and Community: │ │ links links e.g. whitepaper, github, twitter, youtube, reddit, telegram [Messari] │ │ social social portals urls for loaded coin, e.g reddit, twitter [CoinGecko] │ │ twitter tweets for loaded coin [CoinPaprika] │ │ score different kind of scores for loaded coin, e.g developer score, sentiment score [CoinGecko] │ │ dev github, bitbucket coin development statistics [CoinGecko] │ │ gh github activity over time [Santiment] │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal v1.5.0 (https://openbb.co) ─╯ We can check out the project\u0026rsquo;s roadmap and its effect to historical price, by typing rm\nOnce you have finished analyzing a specific coin, you would want to get a good understanding of the overall crypto market. To do that, head over to ov by typing ../ov.\n Hint: .. basically took you back to the previous menu. Instead of performing 2 separate commands, you can combine them together using /. As such ../ov will take us back to previous menu, and then enter the ov menu.\n Bitcoin has such a big influence on the entire crypto market. So seeing whether we are in a Bitcoin season or a Altcoin season will be useful to your investment decisions. altindex is a great command for this purpose.\n"},{"id":1293,"href":"/OpenBBTerminal/terminal/crypto/defi/","title":"Introduction to Cryptocurrency Decentralized Finance (DeFi)","parent":"Introduction to Cryptocurrency","content":"The Cryptocurrency Decentralized Finance (DeFi) menu gives the user the ability to delve deeper into Uniswap statistics (tokens, stats and pairs), information about dApps (gdapps and stvl) as well as information about terra blockchain (sreturn) and luna (lcsc).\nHow to use    The Cryptocurrency Decentralized Finance (DeFi) menu is called upon by typing defi, while inside the crypto menu, which opens the following menu:\nAlternatively, you can also type /crypto/defi. Within the Cryptocurrency Decentralized Finance (DeFi) menu you can find features that delve deeper in the world of decentralized finance.\nExamples    Delving deeper in Uniswap, we can start bij looking at the tokens trade-able with tokens:\n2022 Jul 19, 11:04 (🦋) /crypto/defi/ $ tokens UniSwarp DEX Trade-able Tokens ┏━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━┓ ┃ index ┃ symbol ┃ name ┃ tradeVolumeUSD ┃ totalLiquidity ┃ txCount ┃ ┡━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━┩ │ 0 │ BID │ TopBidder │ 23.5M │ 1.9M │ 2736 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 1 │ CHI │ Chi Gastoken by 1inch │ 19.4M │ 19.9K │ 76000 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 2 │ XDEX │ XDEFI Governance Token │ 18.7M │ 7.7M │ 4449 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 3 │ TUSD │ TrueUSD │ 176.2M │ 42K │ 47439 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 4 │ LON │ Tokenlon │ 522.3M │ 2M │ 59116 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 5 │ dDai │ Dharma Dai │ 0 │ 4 │ 1 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 6 │ STRIP │ StripInu2 │ 0 │ 0 │ 614 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 7 │ GST2 │ Gastoken.io │ 2.1M │ 127 │ 10912 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 8 │ XGME │ GameStonk.online │ 0 │ 35.7K │ 65 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 9 │ SHKOOBYSHNAX │ SHKOOBY INU SHNAX │ 0 │ 0 │ 47 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 10 │ PORN │ Porn DAO │ 2.3M │ 1.9K │ 321 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 11 │ TGBP │ TrueGBP │ 24.1K │ 4K │ 791 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 12 │ $STEALTH │ Stealth Standard │ 9.2M │ 193.4M │ 1623 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 13 │ ADIDAS │ Adidas Originals Metaverse │ 4.5M │ 0 │ 488 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 14 │ Nike │ Nike RTFKT Studio │ 75.8K │ 0 │ 15 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 15 │ DLTA │ delta.theta │ 3.1M │ 4.2M │ 3015 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 16 │ Nike │ Nike Metaverse │ 4.5M │ 0 │ 669 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 17 │ Nike │ Nike RTFKT Studio │ 131.6K │ 0 │ 35 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 18 │ PRADA │ Prada Metaverse │ 894.8K │ 0 │ 196 │ ├───────┼──────────────┼────────────────────────────┼────────────────┼────────────────┼─────────┤ │ 19 │ TCAD │ TrueCAD │ 6.5K │ 650 │ 142 │ └───────┴──────────────┴────────────────────────────┴────────────────┴────────────────┴─────────┘ Furthermore, we can also look at the recently added pairs with pairs:\n2022 Jul 19, 11:03 (🦋) /crypto/defi/ $ pairs Latest Added Pairs on Uniswap DEX ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ created ┃ pair ┃ token0 ┃ token1 ┃ volumeUSD ┃ txCount ┃ totalSupply ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━┩ │ 2022-07-18 18:53:14 │ SFMOON/USDC │ SuperFullMoon │ USD//C │ 2M │ 740 │ 5.7K │ ├─────────────────────┼──────────────┼───────────────┼────────────────┼───────────┼─────────┼─────────────┤ │ 2022-07-17 06:53:05 │ WETH/FTP │ Wrapped Ether │ For The People │ 609.4K │ 222 │ 1.2M │ ├─────────────────────┼──────────────┼───────────────┼────────────────┼───────────┼─────────┼─────────────┤ │ 2022-07-15 13:29:40 │ WETH/MJOLNIR │ Wrapped Ether │ Bull Machine │ 365.3K │ 1091 │ 128.5K │ ├─────────────────────┼──────────────┼───────────────┼────────────────┼───────────┼─────────┼─────────────┤ │ 2022-07-15 01:02:28 │ GOOSE/WETH │ Goose Coin │ Wrapped Ether │ 4.3M │ 2267 │ 656.1K │ ├─────────────────────┼──────────────┼───────────────┼────────────────┼───────────┼─────────┼─────────────┤ │ 2022-07-12 12:16:52 │ icc/USDT │ ICC │ Tether USD │ 59.4K │ 783 │ 0 │ ├─────────────────────┼──────────────┼───────────────┼────────────────┼───────────┼─────────┼─────────────┤ │ 2022-07-11 21:21:08 │ MEME/WETH │ MEME COIN │ Wrapped Ether │ 218.1K │ 2935 │ 20.3K │ ├─────────────────────┼──────────────┼───────────────┼────────────────┼───────────┼─────────┼─────────────┤ │ 2022-07-11 13:16:51 │ BOI/WETH │ Yellow Boi │ Wrapped Ether │ 233.1K │ 2397 │ 0 │ ├─────────────────────┼──────────────┼───────────────┼────────────────┼───────────┼─────────┼─────────────┤ │ 2022-07-10 20:09:26 │ WOW/WETH │ LongDoge │ Wrapped Ether │ 350.2K │ 1928 │ 316 │ └─────────────────────┴──────────────┴───────────────┴────────────────┴───────────┴─────────┴─────────────┘ When interested in dApps, it is possible to find the top DeFI dApps grouped by chain with gdapps:\nIncluding a list of recent dApps with ldapps:\n2022 Jul 19, 11:01 (🦋) /crypto/defi/ $ ldapps ┏━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━┓ ┃ Name ┃ Symbol ┃ Category ┃ Chains ┃ Change 1H ┃ Change 1D (%) ┃ Change 7D ┃ TVL ($) ┃ ┃ ┃ ┃ ┃ ┃ (%) ┃ ┃ (%) ┃ ┃ ┡━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━┩ │ MakerDAO │ MKR │ CDP │ Ethereum │ 0.19 │ 2.21 │ 15.17 │ 8.538 B │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ Polygon │ MATIC │ Chain │ Polygon │ 0.29 │ 2.51 │ 28.58 │ 7.445 B │ │ Bridge \u0026amp; │ │ │ │ │ │ │ │ │ Staking │ │ │ │ │ │ │ │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ Lido │ LDO │ Liquid │ Ethereum, │ -0.16 │ 5.06 │ 45.24 │ 6.750 B │ │ │ │ Staking │ Solana, │ │ │ │ │ │ │ │ │ Moonriver, │ │ │ │ │ │ │ │ │ Terra │ │ │ │ │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ Uniswap │ UNI │ Dexes │ Ethereum, │ -0.34 │ 1.64 │ 21.93 │ 5.905 B │ │ │ │ │ Polygon, │ │ │ │ │ │ │ │ │ Arbitrum, │ │ │ │ │ │ │ │ │ Optimism, │ │ │ │ │ │ │ │ │ Celo │ │ │ │ │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ Curve │ CRV │ Dexes │ Ethereum, │ 0.03 │ 1.87 │ 15.60 │ 5.852 B │ │ │ │ │ Polygon, │ │ │ │ │ │ │ │ │ Avalanche, │ │ │ │ │ │ │ │ │ Fantom, │ │ │ │ │ │ │ │ │ Arbitrum, │ │ │ │ │ │ │ │ │ xDai, │ │ │ │ │ │ │ │ │ Moonbeam, │ │ │ │ │ │ │ │ │ Optimism, │ │ │ │ │ │ │ │ │ Harmony, │ │ │ │ │ │ │ │ │ Aurora │ │ │ │ │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ WBTC │ WBTC │ Bridge │ Ethereum │ 1.54 │ 1.52 │ 7.59 │ 5.339 B │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ AAVE V2 │ AAVE │ Lending │ Ethereum, │ 0.62 │ 2.22 │ 15.62 │ 4.993 B │ │ │ │ │ Polygon, │ │ │ │ │ │ │ │ │ Avalanche │ │ │ │ │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ Convex │ CVX │ Yield │ Ethereum │ -0.08 │ 4.28 │ 17.98 │ 3.909 B │ │ Finance │ │ │ │ │ │ │ │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ JustLend │ JST │ Lending │ Tron │ -0.44 │ -0.18 │ 3.43 │ 3.311 B │ ├──────────────┼────────┼──────────────┼───────────────┼──────────────┼───────────────┼──────────────┼─────────┤ │ PancakeSwap │ CAKE │ Dexes │ Binance │ 0.02 │ 0.90 │ 5.93 │ 2.996 B │ └──────────────┴────────┴──────────────┴───────────────┴──────────────┴───────────────┴──────────────┴─────────┘ "},{"id":1294,"href":"/OpenBBTerminal/terminal/crypto/disc/","title":"Introduction to Cryptocurrency Discovery","parent":"Introduction to Cryptocurrency","content":"The Cryptocurrency Discovery menu provides the option to look into a wide selection of trending coins (trending), gainers and losers (gainers and losers) as well as NFTs (nft) and decentralized apps (dex).\nHow to use    The Cryptocurrency Discovery menu is called upon by typing disc, while inside the crypto menu, which opens the following menu:\nAlternatively, you can also type /crypto/disc. Within the Cryptocurrency Discovery menu you have a variety of options to find that information about a coin, a NFT, a specific blockchain game, decentralized app or exchange. E.g. we can look into the top coins by typing top which returns the following table:\n2022 Jul 12, 05:06 (🦋) /crypto/disc/ $ top ┏━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Volume [$] ┃ Market Cap ┃ Market Cap Rank ┃ 7D Change [%] ┃ 24H Change [%] ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ btc │ Bitcoin │ 21.1B │ 377.6B │ 1 │ -2.38 │ -3.83 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ eth │ Ethereum │ 11.4B │ 127.7B │ 2 │ -7.47 │ -6.85 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ usdt │ Tether │ 46.4B │ 66B │ 3 │ 0.02 │ -0.03 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ usdc │ USD Coin │ 4.5B │ 55.5B │ 4 │ -0.06 │ -0.08 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ bnb │ BNB │ 633.4M │ 36.5B │ 5 │ -3.59 │ -3.30 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ busd │ Binance USD │ 4.9B │ 18B │ 6 │ -0.20 │ -0.12 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ xrp │ XRP │ 895.6M │ 15.1B │ 7 │ -4.81 │ -3.58 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ ada │ Cardano │ 672.3M │ 14.6B │ 8 │ -7.89 │ -5.16 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ sol │ Solana │ 786.6M │ 11.6B │ 9 │ -8.54 │ -4.66 │ ├────────┼─────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ doge │ Dogecoin │ 271.8M │ 8.2B │ 10 │ -11.58 │ -5.68 │ └────────┴─────────────┴────────────┴────────────┴─────────────────┴───────────────┴────────────────┘ Examples    It is possible to delve deeper into a specific country by defining this for top. For example, you can look at stable coins by typing top stablecoins which returns the following:\n2022 Jul 12, 05:13 (🦋) /crypto/disc/ $ top stablecoins ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Volume [$] ┃ Market Cap ┃ Market Cap Rank ┃ 7D Change [%] ┃ 24H Change [%] ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ usdt │ Tether │ 46.5B │ 66B │ 3.00 │ 0.10 │ 0.04 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ usdc │ USD Coin │ 4.5B │ 55.6B │ 4.00 │ 0.00 │ 0.08 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ busd │ Binance USD │ 4.9B │ 18B │ 6.00 │ -0.14 │ 0.00 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ dai │ Dai │ 198.5M │ 6.5B │ 12.00 │ 0.20 │ 0.07 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ frax │ Frax │ 4.6M │ 1.4B │ 40.00 │ 0.13 │ -0.04 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ tusd │ TrueUSD │ 71M │ 1.2B │ 44.00 │ 0.16 │ 0.18 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ usdp │ Pax Dollar │ 6.9M │ 848.7M │ 56.00 │ 0.15 │ 0.32 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ usdn │ Neutrino USD │ 2.7M │ 750.3M │ 60.00 │ 0.14 │ 0.10 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ usdd │ USDD │ 79.2M │ 722.1M │ 63.00 │ 0.42 │ 0.16 │ ├────────┼─────────────────┼────────────┼────────────┼─────────────────┼───────────────┼────────────────┤ │ ustc │ TerraClassicUSD │ 52.8M │ 434.6M │ 91.00 │ -30.88 │ -11.03 │ └────────┴─────────────────┴────────────┴────────────┴─────────────────┴───────────────┴────────────────┘ Furthermore, we can also look into NFTs by calling nft where we can apply sorting by using the --sort flag and selecting one of the options (using the arrow keys). For example:\n2022 Jul 12, 05:16 (🦋) /crypto/disc/ $ nft --sort Avg Price [$] Top NFT collections ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Name ┃ Protocols ┃ Floor Price [$] ┃ Avg Price [$] ┃ Market Cap [$] ┃ Volume [$] ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Bored Ape Yacht Club │ ethereum │ 106.7K │ 123.9K │ 1.1B │ 1.1M │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ CryptoPunks │ ethereum │ 80K │ 111K │ 800.1M │ 1.2M │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Moonbirds │ ethereum │ 28.8K │ 33.5K │ 288M │ 200.8K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Mutant Ape Yacht Club │ ethereum │ 20.7K │ 23.6K │ 402M │ 920.1K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Doodles V4 │ ethereum │ 14.9K │ 16.7K │ 149.4M │ 384.3K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ CLONE X - X TAKASHI MURAKAMI │ ethereum │ 12K │ 14.8K │ 232.1M │ 326.7K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Azuki │ ethereum │ 13.3K │ 14.7K │ 133.3M │ 205.7K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Bored Ape Kennel Club │ ethereum │ 8.6K │ 10.8K │ 83M │ 118.8K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Space Doodles │ ethereum │ 16K │ 10K │ 89M │ 10K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ VeeFriends │ ethereum │ 9.2K │ 8.8K │ 94.1M │ 35.4K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Meebits │ ethereum │ 6.4K │ 8.7K │ 128M │ 1.1M │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Otherdeed for Otherside │ ethereum │ 3.1K │ 5.9K │ 306.1M │ 562.6K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Fluf World │ ethereum │ 11.3K │ 5K │ 113.2M │ 25.2K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ Cyber Kongz │ ethereum │ 22.9K │ 3.1K │ 114.7M │ 3.1K │ ├──────────────────────────────┼───────────┼─────────────────┼───────────────┼────────────────┼────────────┤ │ SandVegasCasinoClub Official │ ethereum │ -1 │ 336 │ 49.9M │ 3.7K │ └──────────────────────────────┴───────────┴─────────────────┴───────────────┴────────────────┴────────────┘ Lastly, we can obtain the top 5 decentralized applications, sorted by daily user by using dapps which returns the following:\n2022 Jul 12, 05:19 (🦋) /crypto/disc/ $ dapps -l 5 Top Decentralized Applications ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓ ┃ Name ┃ Category ┃ Protocols ┃ Daily Users ┃ Daily Volume [$] ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩ │ Splinterlands │ games │ hive,wax │ 305.1K │ 8K │ ├───────────────┼──────────┼─────────────────────────┼─────────────┼──────────────────┤ │ PancakeSwap │ defi │ binance-smart-chain │ 289.3K │ 223.7M │ ├───────────────┼──────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Alien Worlds │ games │ wax,binance-smart-chain │ 235.6K │ 759.2K │ ├───────────────┼──────────┼─────────────────────────┼─────────────┼──────────────────┤ │ Farmers World │ games │ wax │ 111.7K │ 2.3K │ ├───────────────┼──────────┼─────────────────────────┼─────────────┼──────────────────┤ │ AtomicAssets │ other │ wax,eos │ 108.9K │ 226.3K │ └───────────────┴──────────┴─────────────────────────┴─────────────┴──────────────────┘ "},{"id":1295,"href":"/OpenBBTerminal/terminal/crypto/dd/","title":"Introduction to Cryptocurrency Due Diligence","parent":"Introduction to Cryptocurrency","content":"The Cryptocurrency Due Diligence menu gives the user the ability to delve deeper into the coin of choice. To be able to do this, the menu offers basic information about the loaded coin (info and basic), information about the project, technology details, audits etcetera (pi), insights into the coin balance and order book (balance and cbbook), the tokenomics and fundraising details (tk and fr) and lastly, social media activity (mt, twitter and dev).\nHow to use    The Cryptocurrency Due Diligence menu is called upon by typing dd (after loading a coin), while inside the crypto menu, which opens the following menu:\nThis menu requires you to load a coin with the load command. Thus, alternatively, you can also type /crypto/load BTC/dd. Within the Cryptocurrency Due Diligence menu you can find features examining an extensive amount of metrics about the loaded coin. As an example, you can see the latest trades done on the loaded coin with trades:\n2022 Jul 13, 07:42 (🦋) /crypto/dd/ $ trades ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━┓ ┃ time ┃ price ┃ size ┃ side ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━┩ │ 2022-07-13T11:42:29.451817Z │ 19832.40000000 │ 0.00100000 │ buy │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:42:04.137456Z │ 19831.63000000 │ 0.00298698 │ buy │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:41:28.752991Z │ 19843.96000000 │ 0.00006215 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:40:24.579004Z │ 19850.63000000 │ 0.05000000 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:40:14.66834Z │ 19848.15000000 │ 0.15000000 │ buy │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:39:39.203275Z │ 19854.85000000 │ 0.00006226 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:39:31.308755Z │ 19860.14000000 │ 0.06606458 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:39:31.308755Z │ 19857.07000000 │ 0.00000379 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:39:21.693412Z │ 19857.07000000 │ 0.00027000 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:38:56.195803Z │ 19848.41000000 │ 0.00100108 │ buy │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:38:46.766487Z │ 19848.72000000 │ 0.00127984 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:38:46.766487Z │ 19848.71000000 │ 0.00057219 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:38:46.766487Z │ 19848.70000000 │ 0.00108236 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:38:46.766487Z │ 19848.69000000 │ 0.00077974 │ sell │ ├─────────────────────────────┼────────────────┼────────────┼──────┤ │ 2022-07-13T11:38:46.766487Z │ 19848.68000000 │ 0.00082548 │ sell │ └─────────────────────────────┴────────────────┴────────────┴──────┘ Examples    To get an understanding of the coin we are looking at, it is possible to look into some basic information with basic:\n2022 Jul 13, 07:45 (🦋) /crypto/dd/ $ basic Basic Coin Information ┏━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Metric ┃ Value ┃ ┡━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ id │ btc-bitcoin │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ name │ Bitcoin │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ symbol │ BTC │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ rank │ 1 │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ type │ coin │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ description │ Bitcoin is a cryptocurrency and worldwide payment system. It is the first │ │ │ decentralized digital currency, as the system works without a central bank or │ │ │ single administrator. │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ proof_type │ Proof of Work │ ├─────────────┼───────────────────────────────────────────────────────────────────────────────┤ │ tags │ Segwit, Cryptocurrency, Proof Of Work, Payments, Sha256, Mining, Lightning │ │ │ Network │ └─────────────┴───────────────────────────────────────────────────────────────────────────────┘ Then, we have the option to look into the project information with pi. Note that this requires an API Key from Messari which you can find more information about here. This command returns the following:\n2022 Jul 13, 07:51 (🦋) /crypto/dd/ $ pi BTC General Info ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Metric ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Project Details │ Bitcoin is the first distributed consensus-based censorship-resistant, permissionless, peer-to-peer payment settlement network with a provably scarce, programmable, native currency. │ │ │ Bitcoin (BTC), the native asset of the Bitcoin blockchain, is the world's first digital currency without a central bank or administrator. The Bitcoin network is an emergent decentralized monetary institution that exists through the interplay │ │ │ between full nodes, miners, and developers. It is set by a social contract that is created and opted into by the users of the network and hardened │ │ │ through \u0026gt;game theory and cryptography. Bitcoin is the first, oldest, and largest cryptocurrency in the world. │ ├────────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Technology Details │ \u0026quot;Bitcoin\u0026quot; is a label used for a protocol and a currency. │ │ │ │ │ │ Bitcoin, the currency, is bits of data usable outside the limitations of the protocol using second-layer solutions like \u0026lt;a href=\u0026quot;https://messari.io/resource/lightning-network\u0026quot;\u0026gt;Lightning Network\u0026lt;/a\u0026gt; payment channels. │ │ │ │ │ │ Bitcoin, the protocol, is a distributed, time-stamped ledger of \u0026lt;a href=\u0026quot;https://messari.io/resource/utxo\u0026quot;\u0026gt;unspent transaction output\u0026lt;/a\u0026gt; (UTXO) transfers stored in an append-only chain of 1MB data blocks. A network of mining and economic \u0026lt;a │ │ │ href=\u0026quot;https://messari.io/resource/node\u0026quot;\u0026gt;nodes\u0026lt;/a\u0026gt; maintains this ledger by validating, propagating, and fighting to include \u0026lt;a href=\u0026quot;https://messari.io/resource/mempool\u0026quot;\u0026gt;mempool\u0026lt;/a\u0026gt; transactions in new blocks. Economic nodes (aka \u0026quot;full nodes\u0026quot;) │ │ │ receive transactions from other network participants, validate them against network consensus rules and double-spend vectors, and propagate the transactions to other full nodes that also validate and propagate. Valid transactions are sent to the │ │ │ network's mempool waiting for mining nodes to confirm them via inclusion in the next block. │ │ │ │ │ │ Mining nodes work to empty the mempool usually in a highest-to-lowest fee order by picking transactions to include in the next block and racing against each other to generate a hash less than the target number set by Bitcoin's difficulty │ │ │ adjustment algorithm. Bitcoin uses a Proof-of-Work (PoW) consensus mechanism to establish the chain of blocks with the most accumulated “work” (a.k.a., energy spent on solved hashes) as the valid chain. Other network peers can cheaply verify the │ │ │ chain’s work. │ │ │ │ │ │ Mining difficulty regularly adjusts to maintain Bitcoin's average ten-minute block schedule. Mining nodes add new blocks to whatever chain has the largest accumulated proof of work maintained by a network of economic nodes with downloaded copies │ │ │ of the same chain. │ │ │ │ │ │ Learn More: │ │ │ Bitcoin Developer's Guide │ │ │ Mastering Bitcoin │ └────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ BTC Public Repositories ┏━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ Name ┃ Link ┃ License_type ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ Bitcoin Core Repository │ https://github.com/bitcoin/bitcoin │ MIT License │ └─────────────────────────┴────────────────────────────────────┴──────────────┘ BTC Vulnerabilities ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Title ┃ Date ┃ Type ┃ Details ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Value Overflow Incident │ 2010-08-06 04:00:00+00:00 │ Inflation │ On 6 August 2010, a major vulnerability in the bitcoin protocol was spotted. Transactions weren't properly verified before they were included in the transaction log or blockchain, which let │ │ │ │ │ users bypass bitcoin's economic restrictions and create an indefinite number of bitcoins. On 15 August, the vulnerability was exploited; over 184 billion bitcoins were generated in a transaction │ │ │ │ │ and sent to two addresses on the network. Within hours, the transaction was spotted and erased from the transaction log after the bug was fixed and the network forked to an updated version of │ │ │ │ │ the bitcoin protocol. This was the only major security flaw found and exploited in bitcoin's history. │ ├─────────────────────────────────┼───────────────────────────┼───────────┼────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Denial of Service Vulnerability │ 2018-09-20 04:00:00+00:00 │ Inflation │ On September 17, Bitcoin Core developers discovered that older versions of Bitcoin Core will crash if they try to process a block containing a transaction that attempts to spend the same input │ │ │ │ │ twice. Such blocks are invalid, so they can only be created by a miner willing to sacrifice their allowed income for creating a block of at least 12.5 BTC (about $80,000 USD as of this writing). │ │ │ │ │ │ │ │ │ │ Soon after discovering the DDoS attack vulnerability, Bitcoin Core developers also discovered an inflation bug which they quickly determined had the same root cause and fix. They decided to │ │ │ │ │ disclose the DDoS vulnerability immediately while keeping the inflation bug quiet. This provided developers time to reach out to miners, businesses, and other affected systems about upgrading │ │ │ │ │ their software, while also providing additional time to fix the exploit. │ │ │ │ │ │ │ │ │ │ https://bitcoincore.org/en/2018/09/18/release-0.16.3/ │ │ │ │ │ https://bitcoincore.org/en/2018/09/20/notice/ │ └─────────────────────────────────┴───────────────────────────┴───────────┴────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ Looking ahead, we can use the command (coming from the same source) rm which discusses plans for the future. E.g. if we load in ETH with load ETH and use rm we receive the following:\n2022 Jul 13, 07:57 (🦋) /crypto/dd/ $ rm ETH Roadmap ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Title ┃ Date ┃ Type ┃ Details ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Serenity Phase 0 │ 2020-12-01 │ Network Launch │ Serenity Phase 0 marks Ethereum's initial transition to Ethereum 2.0. This initial phase will introduce the Beacon Chain, which will serve as the backbone for Ethereum 2.0's sharded network │ │ │ │ │ architecture. As opposed to Ethereum's current Proof-of-Work (PoW) blockchain, the Beacon Chain will use Casper FFG, a specific variation of Proof-of-Stake (PoS), and a system of validators │ │ │ │ │ to confirm transactions and inhibit Sybil attacks. │ │ │ │ │ │ │ │ │ │ Ethereum core developers split the Serenity upgrade into three phases to optimize the development process and limit deployment risks. The specifications for this first phase include: │ │ │ │ │ Beacon Chain is the core of the Ethereum 2.0 system; it manages the PoS protocol for itself and all of the individual shard chains. The Beacon chain will use Casper the Friendly Finality │ │ │ │ │ Gadget (Casper FFG) to ensure transaction finality. │ │ │ │ │ Fork Choice enables validators' clients to automatically select the right chain when the Phase 0 Serenity fork is initiated │ │ │ │ │ Deposit Contract allows Ethereum stakeholders to transfer funds from ETH 1.0 to ETH 2.0 and claim rights to a validator role on the new PoS chain │ │ │ │ │ Honest Validator dictates the expected behavior of an \u0026quot;honest validator and slashing specifications with respect to Phase 0 of ETH 2.0 │ │ │ │ │ │ │ │ │ │ It is essential to note the launch of Phase 0 will not immediately replace Ethereum 1.0 (also known as Ethereum 1.x). The two chains will coexist for at least until Serenity Phase 1.5 │ │ │ │ │ arrives, which marks when the current Ethereum chain will merge into the Ethereum 2.0 system a shard within the network. Running the legacy and future chains in parallel may cause ETH │ │ │ │ │ inflation to increase as both chains will simultaneously mint new tokens. │ ├───────────────────────────────────────────┼────────────┼───────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Muir Glacier │ 2020-01-02 │ Hard Fork Upgrade │ The Muir Glacier hard fork activated at block 9,200,000, which arrived on Jan. 2, 2020. The upgrade only included EIP-2384, which delayed Ethereum's inherent \u0026quot;Difficulty Bomb\u0026quot; for another │ │ │ │ │ 4,000,000 blocks (approximately 611 days) to prevent block times from increasing (and usability plummeting). Muir Glacier's abrupt arrival, less than a month after Istanbul, marked the third │ │ │ │ │ time Ethereum core developers opted to delay the Difficulty Bomb (aka Ice Age). │ │ │ │ │ │ │ │ │ │ Learn more: │ │ │ │ │ Ethereum Muir Glacier Upgrade by the Ethereum Cat Herders │ ├───────────────────────────────────────────┼────────────┼───────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Istanbul (Phase I) │ 2019-12-07 │ Hard Fork Upgrade │ The first phase of Istanbul is set to activate at block 9,069,000, almost two months after its initially scheduled launch (Oct. 16, 2019). Istanbul Phase I intends to introduce six new EIPs │ │ │ │ │ upon activation to help optimize opcode computational costs, improve denial-of-service attack security, and enhance the performance of layer-2 solutions using a │ │ │ │ │ href=\u0026quot;https://messari.io/article/zk-snark\u0026quot;ZK-SNARKs/a or a href=\u0026quot;https://messari.io/article/zk-stark\u0026quot;ZK-STARKs/a, among other advancements. The accepted EIPs include: │ │ │ │ │ EIP-152 adds the ability to verify Zcash-to-Ethereum atomic swaps │ │ │ │ │ EIP-1108 reduces the costs for ZK-SNARKs │ │ │ │ │ EIP-1344 improves smart contract ability, especially those used by layer-2 solutions, to track the correct base chain during a hard fork │ │ │ │ │ EIP-1844 restructures the costs of specific a href=\u0026quot;https://messari.io/article/ethereum-virtual-machine\u0026quot;Ethereum Virtual Machine (EVM)/a opcodes to deter spamming attacks and to match each │ │ │ │ │ operation with its required level of computation │ │ │ │ │ EIP-2028 reduces the cost of calling data within transactions and the fees associated with ZK-SNARKs and ZK-STARKs │ │ │ │ │ EIP-2200 alters the cost of storage in the EVM and allows smart contracts to generate more creative functions │ │ │ │ │ │ ├───────────────────────────────────────────┼────────────┼───────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Metropolis: Constantinople/St. Petersburg │ 2019-02-28 │ Hard Fork Upgrade │ Constantinople, the second phase of Metropolis, was initially scheduled to go live at block 7,080,000 (January 16, 2019). But on January 15, 2019, security auditing firm ChainSecurity │ │ │ │ │ discovered a vulnerability in one of the accepted EIPs that would enable a reentrancy attack (i.e., the opportunity for an attacker to steal user funds similar to The DAO hack). Core Ethereum │ │ │ │ │ developers and some projects running on the network voted to delay Constantinople until the developers closed the security loophole. │ │ │ │ │ │ │ │ │ │ After a month-long delay, Constantinople and its security patch, St. Petersburg, went live at block 7,280,000, introducing five new code changes to the network: │ │ │ │ │ EIP-145 added Bitwise shifting instructions to the EVM, making the execution of shifts in smart contracts significantly cheaper │ │ │ │ │ EIP-1052 expedited inter-smart contract verification (smart contract can verify each other via a hash rather than the entire code set) │ │ │ │ │ EIP-1014 improved state channel integrations to facilitate the connection to off-chain scaling solutions │ │ │ │ │ EIP-1283 reduced costs for executing multiple updates within a single transaction (aka the SSTORE opcode) │ │ │ │ │ EIP-1234 delayed the difficulty bomb for another year and reduced the mining reward from three to two ETH per block (the reduction is also known as the \u0026quot;Thirdening\u0026quot;) │ │ │ │ │ │ ├───────────────────────────────────────────┼────────────┼───────────────────┼─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ Metropolis: Byzantium │ 2017-10-16 │ Hard Fork Upgrade │ Byzantium was the first phase of the proposed Metropolis upgrade and activated at block 4,370,000. The Byzantium hard fork included nine EIPs, with EIP-100, EIP-658, and EIP-649, introducing │ │ │ │ │ the most significant code changes. │ │ │ │ │ EIP-100 adjusted the difficulty formula to stabilize the ETH issuance rate │ │ │ │ │ EIP-658 added a new field to transaction receipts to indicate success or failure │ │ │ │ │ EIP-649 delayed the difficulty bomb (i.e., the Ethereum \u0026quot;ice age\u0026quot;) by one year and reduced the block subsidy from five to three ETH │ │ │ │ │ Details on the remaining Byzantium EIPs are available here. │ │ │ │ │ │ └───────────────────────────────────────────┴────────────┴───────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ As well as a graph that depicts price movements after these announcements.\nLastly, keeping the ETH coin loaded, we can also look at some sentiment analysis by acquiring the different sentiment scores with score as follows:\n2022 Jul 13, 08:00 (🦋) /crypto/dd/ $ score Different Scores for Loaded Coin ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Metric ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Coingecko Rank │ 2.00 │ ├─────────────────────────────────┼────────────┤ │ Coingecko Score │ 75.87 │ ├─────────────────────────────────┼────────────┤ │ Developer Score │ 97.43 │ ├─────────────────────────────────┼────────────┤ │ Community Score │ 58.56 │ ├─────────────────────────────────┼────────────┤ │ Liquidity Score │ 96.88 │ ├─────────────────────────────────┼────────────┤ │ Sentiment Votes Up Percentage │ 58.29 │ ├─────────────────────────────────┼────────────┤ │ Sentiment Votes Down Percentage │ 41.71 │ ├─────────────────────────────────┼────────────┤ │ Public Interest Score │ 0.31 │ ├─────────────────────────────────┼────────────┤ │ Facebook Likes │ │ ├─────────────────────────────────┼────────────┤ │ Twitter Followers │ 2673876.00 │ ├─────────────────────────────────┼────────────┤ │ Reddit Average Posts 48H │ 3.11 │ ├─────────────────────────────────┼────────────┤ │ Reddit Average Comments 48H │ 71.44 │ ├─────────────────────────────────┼────────────┤ │ Reddit Subscribers │ 1340239.00 │ ├─────────────────────────────────┼────────────┤ │ Reddit Accounts Active 48H │ 972.00 │ ├─────────────────────────────────┼────────────┤ │ Telegram Channel User Count │ │ ├─────────────────────────────────┼────────────┤ │ Alexa Rank │ 8793.00 │ ├─────────────────────────────────┼────────────┤ │ Bing Matches │ │ └─────────────────────────────────┴────────────┘ "},{"id":1296,"href":"/OpenBBTerminal/terminal/crypto/onchain/","title":"Introduction to Cryptocurrency Onchain","parent":"Introduction to Cryptocurrency","content":"The Cryptocurrency Onchain menu provides access to features that determine market sentiment by leveraging data from a blockchain ledger. This can be, among other things, blockchain hashrates (hr), confirmed transactions (btcct) and top traded crypto pairs (ttcp).\nHow to use    The Cryptocurrency Onchain menu is called upon by typing onchain, while inside the crypto menu, which opens the following menu:\nAlternatively, you can also type /crypto/onchain. Within the Cryptocurrency Onchain menu you can find features examining transaction data and crypto wallet balances, both of which are helpful when deciding whether to invest. E.g. we can look into the top ERC20 token by typing top which returns the following table:\n2022 Jul 12, 08:45 (🦋) /crypto/onchain/ $ top Top ERC20 Tokens ┏━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ rank ┃ name ┃ symbol ┃ price ┃ txsCount ┃ transfersCount ┃ holdersCount ┃ twitter ┃ coingecko ┃ ┡━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ 1 │ WETH │ WETH │ 1067.34 │ 6.9M │ 106.4M │ 540.4K │ │ weth │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 2 │ Tether USD │ USDT │ 1.00 │ 128.5M │ 151.1M │ 4.6M │ Tether_to │ tether │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 3 │ USD Coin │ USDC │ 1.00 │ 23.4M │ 43.8M │ 1.5M │ │ usd-coin │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 4 │ Dai │ DAI │ 1.00 │ 4.2M │ 14.6M │ 480.3K │ MakerDAO │ dai │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 5 │ Shiba Inu │ SHIB │ 0.00 │ 5.5M │ 7.9M │ 1.2M │ Shibtoken │ shiba-inu │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 6 │ Wrapped Bitcoin │ WBTC │ 19756.87 │ 648.1K │ 3.7M │ 50.1K │ │ wrapped-bitcoin │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 7 │ Chainlink │ LINK │ 6.16 │ 5.9M │ 11.5M │ 679.8K │ chainlink │ chainlink │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 8 │ Curve DAO Token │ CRV │ 0.90 │ 732.2K │ 2.5M │ 74.6K │ curvefinance │ curve-dao-token │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 9 │ Matic Network │ MATIC │ 0.57 │ 3.5M │ 4.3M │ 460.2K │ maticnetwork │ matic-network │ ├──────┼─────────────────┼─────────┼──────────┼──────────┼────────────────┼──────────────┼──────────────┼─────────────────┤ │ 10 │ SAITAMA │ SAITAMA │ 0.00 │ 9K │ 139K │ 121.3K │ │ │ └──────┴─────────────────┴─────────┴──────────┴──────────┴────────────────┴──────────────┴──────────────┴─────────────────┘ Examples    To access much of the Ethereum features, an ethereum address needs to be entered. As an example this can be 0x71C7656EC7ab88b098defB751B7401B5f6d8976F which can be entered within the address command as follows:\n2022 Jul 12, 08:48 (🦋) /crypto/onchain/ $ address 0x71C7656EC7ab88b098defB751B7401B5f6d8976F Which allows you to see the balance and hist which returns the following for balance:\n2022 Jul 12, 08:53 (🦋) /crypto/onchain/ $ balance Blockchain Token Information ┏━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┓ ┃ index ┃ tokenName ┃ tokenSymbol ┃ tokenAddress ┃ balance ┃ ┡━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━┩ │ 1 │ Ethereum │ ETH │ 0x0000000000000000000000000000000000000000 │ 32.65 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 2 │ FUCKtoken │ FUCK │ None │ 2.00 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 3 │ DABcoin │ DAB │ None │ 2.00 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 4 │ Link Platform │ LNK │ None │ 29.00 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 5 │ ASStoken │ ASS │ None │ 10.00 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 6 │ Blowjob │ BJ │ None │ 51.00 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 7 │ FinallyUsableCryptoKarma │ FUCK │ None │ 2.00 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 8 │ WeTrust │ TRST │ None │ 0.18 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 9 │ Edgeless │ EDG │ None │ 1.00 │ ├───────┼───────────────────────────────────────────────┼─────────────┼────────────────────────────────────────────┼─────────┤ │ 10 │ Cryptonex (CNX) - Global Blockchain Acquiring │ CNX │ None │ 1000.00 │ └───────┴───────────────────────────────────────────────┴─────────────┴────────────────────────────────────────────┴─────────┘ And hist returns the following:\n 2022 Jul 12, 08:53 (🦋) /crypto/onchain/ $ hist Historical Transactions Information ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┓ ┃ timestamp ┃ transactionHash ┃ token ┃ value ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━┩ │ 2021-10-09 15:43:04 │ 0xddd8796647a24ccfbf0f0d9b2a762dd12424d4cb60fd38d8098fb9b1b7fb8683 │ Kuma Inu │ 1.8B │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-04 22:04:48 │ 0xf6ddcad5ccf24988d7c2ad9884cf00b857a13f805045bb568123eafb206a1c0e │ Tux │ 100.00 │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-06 10:35:44 │ 0x6022c79ad9591491a66774553e7c175be75f5cd7d0c6db38b07af5825a0a2785 │ Ankr │ 1974.35 │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-09 00:56:43 │ 0xfaa7fe13cb1263eb52495c83c3e4d212c68289eac6473a169820f592cde60580 │ Ethereum Name Service │ 46.3K │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-09 13:22:11 │ 0x06c1f99a2f592a79d3ec3d0c281c6530aed36e42b04afb3907630503dea294a3 │ Ethereum Name Service │ 345.00 │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-09 13:22:11 │ 0x06c1f99a2f592a79d3ec3d0c281c6530aed36e42b04afb3907630503dea294a3 │ Ethereum Name Service │ 1955.00 │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-09 16:15:57 │ 0xd13c39ade2ff2f792e97874beaca9bfaa48298e5136e97bb33f49eafd0b1cffd │ Ethereum Name Service │ 2500.00 │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-09 18:49:13 │ 0x0c4bf722f477dbceda0ca4ac9f02adbd813b2f80e4b613069265de5b12861115 │ Ethereum Name Service │ 1800.00 │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-09 18:49:13 │ 0x0c4bf722f477dbceda0ca4ac9f02adbd813b2f80e4b613069265de5b12861115 │ USD Coin │ 73.1K │ ├─────────────────────┼────────────────────────────────────────────────────────────────────┼───────────────────────┼─────────┤ │ 2021-11-09 18:49:13 │ 0x0c4bf722f477dbceda0ca4ac9f02adbd813b2f80e4b613069265de5b12861115 │ USD Coin │ 7977.07 │ └─────────────────────┴────────────────────────────────────────────────────────────────────┴───────────────────────┴─────────┘ "},{"id":1297,"href":"/OpenBBTerminal/terminal/crypto/ov/","title":"Introduction to Cryptocurrency Overview","parent":"Introduction to Cryptocurrency","content":"The Cryptocurrency Overview menu provides, among other things, the option to obtain a complete overview of the Cryptocurrency market (global), find cryptocurrency indices and derivatives (indices and derivatives), news feeds (news) and fees (wf and ewf)\nHow to use    The Cryptocurrency Overview menu is called upon by typing ov, while inside the crypto menu, which opens the following menu:\nAlternatively, you can also type /crypto/ov. Within the Cryptocurrency Overview menu you have a variety of options to get an understanding of the global market, derivatives, heatmaps, a full list of exchanges, news, fees and borrow rates. Taking one of these as an example, derivatives returns a Futures table:\n2022 Jul 12, 05:36 (🦋) /crypto/ov/ $ derivatives Crypto Derivatives ┏━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ Rank ┃ Market ┃ Symbol ┃ Price ┃ Pct_Change_24h ┃ Contract_Type ┃ Basis ┃ Spread ┃ Funding_Rate ┃ Volume_24h ┃ ┡━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ 1 │ Binance (Futures) │ BTCUSDT │ 19722.03 │ -4.18 │ perpetual │ 0.06 │ 0.01 │ 0.01 │ 11370297355.07 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 2 │ Bitget Futures │ BTCUSDT_UMCBL │ 19715.02 │ -4.17 │ perpetual │ 0.07 │ 0.02 │ 0.01 │ 4910676135.12 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 3 │ Prime XBT │ BTC/USD │ 19694.00 │ -5.48 │ perpetual │ 0.00 │ 0.05 │ 0.00 │ 134783821.74 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 4 │ FTX (Derivatives) │ BTC-PERP │ 19654.00 │ -4.35 │ perpetual │ -0.06 │ 0.02 │ 0.00 │ 2328667027.58 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 5 │ MEXC Global (Futures) │ BTC_USDT │ 19722.53 │ -4.18 │ perpetual │ 0.04 │ 0.02 │ 0.01 │ 1654510913.53 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 6 │ Binance (Futures) │ ETHUSDT │ 1064.51 │ -7.23 │ perpetual │ 0.06 │ 0.01 │ 0.00 │ 5128358417.55 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 7 │ Gate.io (Futures) │ BTC_USDT │ 19645.60 │ -4.43 │ perpetual │ 0.09 │ 0.01 │ 0.01 │ 705316184.77 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 8 │ BTSE (Futures) │ BTCPFC │ 19646.00 │ -4.39 │ perpetual │ 0.08 │ 0.01 │ 0.00 │ 158634600.30 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 9 │ Bybit │ BTCUSDT │ 19722.03 │ -4.15 │ perpetual │ 0.04 │ 0.01 │ 0.01 │ 3686219405.65 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 10 │ AAX Futures │ BTCUSDTFP │ 19763.02 │ -4.17 │ perpetual │ 0.20 │ 0.03 │ -0.01 │ 1194276523.61 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 11 │ FTX (Derivatives) │ ETH-PERP │ 1058.30 │ -7.59 │ perpetual │ 0.30 │ 0.02 │ -0.02 │ 1512491402.22 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 12 │ MEXC Global (Futures) │ ETH_USDT │ 1064.54 │ -7.22 │ perpetual │ 0.05 │ 0.01 │ -0.00 │ 1270564698.45 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 13 │ Phemex (Futures) │ ADAUSD │ 0.43 │ -5.79 │ perpetual │ -0.14 │ 0.02 │ -0.27 │ 35078161.49 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 14 │ C-Trade │ BTCUSD │ 19666.00 │ -4.22 │ perpetual │ 0.04 │ 0.01 │ 0.01 │ 18040581.08 │ ├──────┼───────────────────────┼───────────────┼──────────┼────────────────┼───────────────┼───────┼────────┼──────────────┼────────────────┤ │ 15 │ BTCEX (Futures) │ BTC-30DEC22 │ 19965.61 │ -4.28 │ perpetual │ -1.04 │ 0.02 │ 0.01 │ 1162961049.26 │ └──────┴───────────────────────┴───────────────┴──────────┴────────────────┴───────────────┴───────┴────────┴──────────────┴────────────────┘ Examples    We can start by looking at some general information about the Cryptocurrency market by using global:\n2022 Jul 12, 05:38 (🦋) /crypto/ov/ $ global Global Statistics ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ Metric ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ Active Cryptocurrencies │ 13421.00 │ ├──────────────────────────────────────┼──────────┤ │ Upcoming Icos │ 0.00 │ ├──────────────────────────────────────┼──────────┤ │ Ongoing Icos │ 49.00 │ ├──────────────────────────────────────┼──────────┤ │ Ended Icos │ 3376.00 │ ├──────────────────────────────────────┼──────────┤ │ Markets │ 525.00 │ ├──────────────────────────────────────┼──────────┤ │ Market Cap Change Percentage 24H Usd │ -4.22 │ ├──────────────────────────────────────┼──────────┤ │ Btc Market Cap In Pct │ 41.14 │ ├──────────────────────────────────────┼──────────┤ │ Eth Market Cap In Pct │ 13.92 │ ├──────────────────────────────────────┼──────────┤ │ Altcoin Market Cap In Pct │ 44.94 │ └──────────────────────────────────────┴──────────┘ To find an overview of all coins without segregating between different types of coins, we can use info which returns the following table:\n2022 Jul 12, 05:40 (🦋) /crypto/ov/ $ info Displaying data vs USD Basic Coin Information ┏━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ rank ┃ name ┃ symbol ┃ price ┃ volume_24h ┃ circulating_supply ┃ total_supply ┃ max_supply ┃ market_cap ┃ beta_value ┃ ath_price ┃ ┡━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━┩ │ 1 │ Bitcoin │ BTC │ 19.766 K │ 21.133 B │ 19.092 M │ 19.092 M │ 21 M │ 377.373 B │ 0.963 │ 68.692 K │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 2 │ Ethereum │ ETH │ 1.067 K │ 10.759 B │ 121.514 M │ 121.514 M │ 0 │ 129.669 B │ 1.159 │ 4.864 K │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 3 │ Tether │ USDT │ 1.000 │ 47.657 B │ 65.991 B │ 66.153 B │ 0 │ 66.022 B │ 0.000 │ 1.215 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 4 │ USD Coin │ USDC │ 1.001 │ 2.416 B │ 55.547 B │ 55.547 B │ 0 │ 55.607 B │ -0.005 │ 1.906 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 5 │ Binance Coin │ BNB │ 223.176 │ 629.264 M │ 163.277 M │ 163.293 M │ 200 M │ 36.439 B │ 1.004 │ 2.467 K │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 6 │ Binance USD │ BUSD │ 1.001 │ 3.342 B │ 17.547 B │ 17.547 B │ 0 │ 17.573 B │ -0.007 │ 1.176 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 7 │ XRP │ XRP │ 0.312 │ 646.071 M │ 48.343 B │ 99.990 B │ 100 B │ 15.087 B │ 1.072 │ 3.842 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 8 │ Cardano │ ADA │ 0.432 │ 471.728 M │ 33.739 B │ 34.513 B │ 45 B │ 14.655 B │ 1.217 │ 3.095 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 9 │ Solana │ SOL │ 33.542 │ 503.995 M │ 345.442 M │ 511.617 M │ 0 │ 11.587 B │ 1.327 │ 259.705 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 10 │ HEX │ HEX │ 0.035 │ 4.927 M │ 290.634 B │ 642.305 B │ 0 │ 10.133 B │ 0.756 │ 0.511 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 11 │ Dogecoin │ DOGE │ 0.061 │ 227.352 M │ 132.671 B │ 132.671 B │ 0 │ 8.138 B │ 1.095 │ 0.753 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 12 │ Dai │ DAI │ 1.001 │ 123.388 M │ 6.479 B │ 6.479 B │ 0 │ 6.486 B │ 0.001 │ 1.367 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 13 │ TRON │ TRX │ 0.065 │ 427.247 M │ 92.480 B │ 92.480 B │ 0 │ 6.014 B │ 0.822 │ 0.300 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 14 │ Polkadot │ DOT │ 6.444 │ 189.289 M │ 852.648 M │ 1.103 B │ 0 │ 5.494 B │ 1.358 │ 55.004 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 15 │ LEO Token │ LEO │ 5.364 │ 1.269 M │ 1 B │ 1 B │ 0 │ 5.364 B │ 0.248 │ 8.115 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 16 │ Shiba Inu │ SHIB │ 0.000 │ 166.721 M │ 489.560 T │ 1 P │ 1 P │ 5.025 B │ 1.198 │ 0.000 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 17 │ Avalanche │ AVAX │ 17.573 │ 136.784 M │ 283.385 M │ 377.752 M │ 0 │ 4.980 B │ 1.547 │ 145.665 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 18 │ Wrapped Bitcoin │ WBTC │ 19.746 K │ 127.008 M │ 249.980 K │ 249.980 K │ 0 │ 4.936 B │ 0.967 │ 68.706 K │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 19 │ Polygon │ MATIC │ 0.565 │ 495.777 M │ 8.007 B │ 10 B │ 0 │ 4.525 B │ 1.501 │ 2.915 │ ├──────┼───────────────────┼────────┼──────────┼────────────┼────────────────────┼──────────────┼────────────┼────────────┼────────────┼───────────┤ │ 20 │ Lido Staked Ether │ STETH │ 1.038 K │ 5.260 M │ 4.243 M │ 4.243 M │ 0 │ 4.402 B │ 1.179 │ 4.824 K │ └──────┴───────────────────┴────────┴──────────┴────────────┴────────────────────┴──────────────┴────────────┴────────────┴────────────┴───────────┘ And lastly, it is also possible to look at the stable coins in the market instead of the entire Cryptocurrency investment universe. This can be done with stables which returns the following:\n2022 Jul 12, 05:40 (🦋) /crypto/ov/ $ stables First 15 stablecoins have a total 152.551 B dollars of market cap. Stablecoin Data ┏━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Symbol ┃ Name ┃ Price [$] ┃ Market Cap [$] ┃ Market Cap Rank ┃ Change 24h [%] ┃ Change 7d [%] ┃ Volume [$] ┃ Percentage [%] of top 15 ┃ ┡━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ usdt │ Tether │ 0.998 │ 66.029 B │ 3 │ -0.156 │ -0.198 │ 46.723 B │ 43.283 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ usdc │ USD Coin │ 1.000 │ 55.508 B │ 4 │ -0.226 │ -0.099 │ 4.496 B │ 36.387 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ busd │ Binance USD │ 0.997 │ 17.992 B │ 6 │ -0.675 │ -0.378 │ 4.832 B │ 11.794 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ dai │ Dai │ 0.999 │ 6.461 B │ 12 │ -0.245 │ -0.264 │ 199.489 M │ 4.235 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ frax │ Frax │ 0.998 │ 1.367 B │ 40 │ -0.020 │ -0.168 │ 4.640 M │ 0.896 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ tusd │ TrueUSD │ 0.999 │ 1.223 B │ 44 │ -0.195 │ -0.237 │ 71.185 M │ 0.802 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ usdp │ Pax Dollar │ 1 │ 847.988 M │ 56 │ -0.161 │ -0.065 │ 6.917 M │ 0.556 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ usdn │ Neutrino USD │ 0.988 │ 750.373 M │ 60 │ -0.130 │ -0.172 │ 2.744 M │ 0.492 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ usdd │ USDD │ 0.995 │ 722.389 M │ 63 │ 0.276 │ -0.034 │ 79.218 M │ 0.474 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ ustc │ TerraClassicUSD │ 0.043 │ 433.211 M │ 92 │ -32.270 │ -12.660 │ 52.919 M │ 0.284 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ xaut │ Tether Gold │ 1.734 K │ 428.213 M │ 93 │ -5.792 │ -0.093 │ 1.371 M │ 0.281 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ eurt │ Euro Tether │ 1.005 │ 207.418 M │ 151 │ -3.514 │ -0.862 │ 791.006 K │ 0.136 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ fei │ Fei USD │ 0.990 │ 199.375 M │ 156 │ -0.955 │ 0.560 │ 2.072 M │ 0.131 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ mim │ Magic Internet Money │ 0.993 │ 195.438 M │ 158 │ -0.106 │ -0.487 │ 3.705 M │ 0.128 │ ├────────┼──────────────────────┼───────────┼────────────────┼─────────────────┼────────────────┼───────────────┼────────────┼──────────────────────────┤ │ alusd │ Alchemix USD │ 0.986 │ 185.661 M │ 163 │ -0.115 │ -0.288 │ 16.159 K │ 0.122 │ └────────┴──────────────────────┴───────────┴────────────────┴─────────────────┴────────────────┴───────────────┴────────────┴──────────────────────────┘ "},{"id":1298,"href":"/OpenBBTerminal/terminal/stocks/dps/","title":"Introduction to Dark Pools \u0026 Short Data","parent":"Introduction to Stocks","content":"Dark Pools and short selling are both, controversial and mysterious, subjects. The lack of disclosure for short sales and dark pool trades makes a lot of guess-work. It is a good idea to read through some research on the topic available from the SEC:\n Alternative Trading Systems: Description of ATS Trading in National Market System Stocks Shedding Light on Dark Pools Staff Papers and Analyses  The purpose of this menu is to provide the user with tools for gauging the level of short interest, FTD rate, and off-exchange volume in a NMS security. There are also commands for looking at market as a whole. Enter the submenu from the Stocks menu by typing, dps, and hitting ENTER (⏎).\n\nTo use every feature in the Dark Pools menu, an API key for Quandl must be obtained (for free) and authorized on the local installation. See the Getting Started Guide for help setting up the API keys in the OpenBB Terminal. The four commands at the bottom of the menu rely on a loaded ticker while the six above do not.\nHow to use    The commands which are not ticker-specific provide screener-like utility. A list of the most-shorted stocks, according to Yahoo Finance, is displayed with the shorted command. It should be noted that this menu is only able to provide data for SEC-regulated equities.\n\nhsi is another source for the same list. There will be slight variations between the two.\n\nprom performs a linear regression to scan for tickers with growing trade activity on ATS tapes, reported to FINRA.\n(🦋) /stocks/dps/ $ prom -n 50 -l 5 -t T1 Processing Tier T1 ... Processing regression on 50 promising tickers ... \nTier 2 NMS Tickers:\n(🦋) /stocks/dps/ $ prom -n 50 -l 5 -t T2 Processing Tier T2 ... Processing regression on 50 promising tickers ... \nTier 3 OTCE Tickers:\n(🦋) /stocks/dps/ $ prom -n 50 -l 5 -t OTCE Processing Tier OTCE ... Processing regression on 50 promising tickers ... \npos provides a summary for the last reported trading day (information is updated in the early evening). Position represents a rolling twenty-day total and directional trends can be identified by watching the changes over time. Adding the -a flag will sort the list from the bottom up - the most negative - and creates a fuller picture when watching in tandom with the positive side of the ledger. Monitor the rate of change in position sizes, or a reversal in directional flow. This white paper, written by SqueezeMetrics, sheds some light on the trading activity reported here.\n(🦋) /stocks/dps/ $ pos -l 25 \nThe other end of the spectrum:\n(🦋) /stocks/dps/ $ pos -l 25 -a \nCall on the help dialogue for every command by attaching, -h to the command. The optional arguments give the user flexibility to sort the columns, print the raw data, or export to a file.\nExamples    The cost-to-borrow is used as a proxy-measurement for an equity\u0026rsquo;s specialness. ctb shows the most expensive equities to short, and the number shares available to short, on Interactive Brokers.\n(🦋) /stocks/dps/ $ ctb \nHow many tickers have a borrow rate above 100%? Set the limit to a high number and export the data to a spreadsheet.\n(🦋) /stocks/dps/ $ ctb -n 5000 --export xlsx Saved file: /exports/20220530_130058_stocks_dark_pool_shorts_cost_to_borrow.xlsx As of writing, there are 158 securities with a cost-to-borrow rate above 100%.\n\nCross reference that list with the sidtc command. Days-to-cover is the approximate number of days it would take to cover those shorts if the amount and proportion of volume were to remain constant. Use the optional arguments to sort the columns.\n\nLoad AAPL and request a 1-year chart of the net short volume and position. This provides the individual ticker data corresponding with the pos command.\n(🦋) /stocks/dps/ $ load AAPL Loading Daily AAPL stock with starting period 2019-05-28 for analysis. Datetime: 2022 May 30 14:59 Timezone: America/New_York Currency: USD Market: CLOSED Company: Apple Inc. (🦋) /stocks/dps/ $ spos \nProlonged periods where the net short volume is above 50% are notable.\n(🦋) /stocks/dps/ $ psi \nSee the aggregate sum total of fail-to-delivers, with the historical price, with the ftd command.\n(🦋) /stocks/dps/ $ ftd -s 2020-05-30 \nThe data from dpotc, statistics for individual NMS tickers, shows weekly OTC and ATS trade volume with the average lot size, which is reported on a lagging schedule.\n(🦋) /stocks/dps/ $ dpotc \nRun a live demo of these features by entering exe routines/darkpool_demo.openbb into the Terminal from the home screen.\n"},{"id":1299,"href":"/OpenBBTerminal/terminal/econometrics/","title":"Introduction to Econometrics","parent":"Terminal","content":"The Econometrics menu\u0026rsquo;s purpose is to provide the user the ability to perform statistical research on custom datasets. The menu allows the user to load in his/her own dataset(s), modify the data by (for example) adding columns or setting indices, apply statistical tests (e.g. Breusch-Godfrey autocorrelation tests) as well as OLS regressions and Panel regressions (e.g. Random Effects and Fixed Effects)\nTable of Contents    Accessing the Econometrics menu Working with Time Series data Working with Panel data Scripts \u0026amp; Routines     Accessing the Econometrics menu    The Econometrics menu is called upon by typing econometrics which opens the following menu:\nYou have the ability to load in your own custom datasets but there is also the option to use example datasets which are used within this guide as well. These datasets can be found by using the load command and typing load --examples. See below:\n2022 Jun 20, 04:33 (🦋) /econometrics/ $ load --examples Examples from Statsmodels ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ file name ┃ description ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ anes96 │ American National Election Survey 1996 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ cancer │ Breast Cancer Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ ccard │ Bill Greene’s credit scoring data. │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ cancer_china │ Smoking and lung cancer in eight cities in China. │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ co2 │ Mauna Loa Weekly Atmospheric CO2 Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ committee │ First 100 days of the US House of Representatives 1995 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ copper │ World Copper Market 1951-1975 Dataset │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ cpunish │ US Capital Punishment dataset. │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ danish_data │ Danish Money Demand Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ elnino │ El Nino - Sea Surface Temperatures │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ engel │ Engel (1857) food expenditure data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ fair │ Affairs dataset │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ fertility │ World Bank Fertility Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ grunfeld │ Grunfeld (1950) Investment Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ heart │ Transplant Survival Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ interest_inflation │ (West) German interest and inflation rate 1972-1998 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ longley │ Longley dataset │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ macrodata │ United States Macroeconomic data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ modechoice │ Travel Mode Choice │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ nile │ Nile River flows at Ashwan 1871-1970 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ randhie │ RAND Health Insurance Experiment Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ scotland │ Taxation Powers Vote for the Scottish Parliament 1997 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ spector │ Spector and Mazzeo (1980) - Program Effectiveness Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ stackloss │ Stack loss data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ star98 │ Star98 Educational Dataset │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ statecrim │ Statewide Crime Data 2009 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ strikes │ U.S. Strike Duration Data │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ sunspots │ Yearly sunspots data 1700-2008 │ ├────────────────────┼───────────────────────────────────────────────────────────┤ │ wage_panel │ Veila and M. Verbeek (1998): Whose Wages Do Unions Raise? │ └────────────────────┴───────────────────────────────────────────────────────────┘ As there is a clear difference between time series data, which is 1-dimensional data (e.g. a single company over time) and panel data, which is 2-dimensional data (e.g. multiple companies over time) both use-cases are provided.\nWorking with Time Series data    To demonstrate the usage of the menu, the longley dataset is loaded in. This can be done by load longley as shown below:\n2022 Jun 20, 04:36 (🦋) /econometrics/ $ load longley 2022 Jun 20, 04:38 (🦋) /econometrics/ $ ? ╭─────────────────────────────────────────────────────────────────────────────────────────────────── Econometrics ───────────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ Looking for data in: │ │ │ │ /Users/jeroenbouma/Documents/OpenBB Terminal/custom_imports │ │ │ │ load load a dataset (also works with StatsModels datasets) │ │ remove remove one of the loaded datasets │ │ │ │ Loaded files and data columns: │ │ longley : totemp, gnpdefl, gnp, unemp, armed, pop, year │ │ │ │ Exploration: │ │ show show a portion of a loaded dataset │ │ plot plot data from a dataset │ │ type change types of the columns or display their types │ │ desc show descriptive statistics of a dataset │ │ index set (multi) index based on columns │ │ clean clean a dataset by filling or dropping NaNs │ │ add Add columns to dataset with option to use formulas │ │ delete Delete columns from dataset │ │ combine Combine columns from different datasets │ │ rename Rename column from dataset │ │ export export a processed dataset │ │ Tests: │ │ norm perform normality tests on a column of a dataset │ │ root perform unitroot tests (ADF \u0026amp; KPSS) on a column of a dataset │ │ granger Granger causality tests on two columns │ │ coint co-integration test on a multitude of columns │ │ Regression: │ │ ols fit a (multi) linear regression model │ │ panel estimate model based on various regression techniques │ │ compare compare results of all estimated models │ │ Regression Tests: │ │ dwat Durbin-Watson autocorrelation test on the residuals of the regression │ │ bgod Breusch-Godfrey autocorrelation tests with lags on the residuals of the regression │ │ bpag Breusch-Pagan heteroscedasticity test on the residuals of the regression │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal v1.3.0 (https://openbb.co) ─╯ Beneath Loaded files and data columns you can find the longley dataset and its columns. You can create an alias for this dataset with the -a argument as shown within the ols command. To see a portion of this dataset, the show command can be used as shown below:\n2022 Jun 20, 04:38 (🦋) /econometrics/ $ show Dataset longley | Showing 10 of 16 rows ┏━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┓ ┃ ┃ totemp ┃ gnpdefl ┃ gnp ┃ unemp ┃ armed ┃ pop ┃ year ┃ ┡━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━┩ │ 0 │ 60323.00 │ 83.00 │ 234289.00 │ 2356.00 │ 1590.00 │ 107608.00 │ 1947.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 1 │ 61122.00 │ 88.50 │ 259426.00 │ 2325.00 │ 1456.00 │ 108632.00 │ 1948.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 2 │ 60171.00 │ 88.20 │ 258054.00 │ 3682.00 │ 1616.00 │ 109773.00 │ 1949.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 3 │ 61187.00 │ 89.50 │ 284599.00 │ 3351.00 │ 1650.00 │ 110929.00 │ 1950.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 4 │ 63221.00 │ 96.20 │ 328975.00 │ 2099.00 │ 3099.00 │ 112075.00 │ 1951.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 5 │ 63639.00 │ 98.10 │ 346999.00 │ 1932.00 │ 3594.00 │ 113270.00 │ 1952.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 6 │ 64989.00 │ 99.00 │ 365385.00 │ 1870.00 │ 3547.00 │ 115094.00 │ 1953.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 7 │ 63761.00 │ 100.00 │ 363112.00 │ 3578.00 │ 3350.00 │ 116219.00 │ 1954.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 8 │ 66019.00 │ 101.20 │ 397469.00 │ 2904.00 │ 3048.00 │ 117388.00 │ 1955.00 │ ├───┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 9 │ 67857.00 │ 104.60 │ 419180.00 │ 2822.00 │ 2857.00 │ 118734.00 │ 1956.00 │ └───┴──────────┴─────────┴───────────┴─────────┴─────────┴───────────┴─────────┘ This can be extended by also showing the descriptive statistics, this can be done with the desc command and including the longley dataset. This command also allows descriptive statistics for individual columns to be displayed (e.g. desc longley.totemp)\n2022 Jun 20, 04:44 (🦋) /econometrics/ $ desc longley Statistics for dataset: 'longley' ┏━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━┓ ┃ ┃ totemp ┃ gnpdefl ┃ gnp ┃ unemp ┃ armed ┃ pop ┃ year ┃ ┡━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━┩ │ count │ 16.00 │ 16.00 │ 16.00 │ 16.00 │ 16.00 │ 16.00 │ 16.00 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ mean │ 65317.00 │ 101.68 │ 387698.44 │ 3193.31 │ 2606.69 │ 117424.00 │ 1954.50 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ std │ 3511.97 │ 10.79 │ 99394.94 │ 934.46 │ 695.92 │ 6956.10 │ 4.76 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ min │ 60171.00 │ 83.00 │ 234289.00 │ 1870.00 │ 1456.00 │ 107608.00 │ 1947.00 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 25% │ 62712.50 │ 94.53 │ 317881.00 │ 2348.25 │ 2298.00 │ 111788.50 │ 1950.75 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 50% │ 65504.00 │ 100.60 │ 381427.00 │ 3143.50 │ 2717.50 │ 116803.50 │ 1954.50 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ 75% │ 68290.50 │ 111.25 │ 454085.50 │ 3842.50 │ 3060.75 │ 122304.00 │ 1958.25 │ ├───────┼──────────┼─────────┼───────────┼─────────┼─────────┼───────────┼─────────┤ │ max │ 70551.00 │ 116.90 │ 554894.00 │ 4806.00 │ 3594.00 │ 130081.00 │ 1962.00 │ └───────┴──────────┴─────────┴───────────┴─────────┴─────────┴───────────┴─────────┘ It is possible to check for a variety of assumptions, e.g. normality, unit root, granger and co-integration. The commands norm and root are shown below. Note that due to the small size of the dataset, many of these tests are not statistically significant.\n2022 Jun 20, 04:49 (🦋) /econometrics/ $ norm longley.gnp Normality test from dataset 'longley' of 'gnp' ┏━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Kurtosis ┃ Skewness ┃ Jarque-Bera ┃ Shapiro-Wilk ┃ Kolmogorov-Smirnov ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━┩ │ Statistic │ -1.19 │ 0.05 │ 0.84 │ 0.96 │ 1.00 │ ├───────────┼──────────┼──────────┼─────────────┼──────────────┼────────────────────┤ │ p-value │ 0.23 │ 0.96 │ 0.66 │ 0.71 │ 0.00 │ └───────────┴──────────┴──────────┴─────────────┴──────────────┴────────────────────┘ 2022 Jun 20, 04:49 (🦋) /econometrics/ $ root longley.pop Unitroot from dataset 'longley of 'pop' ┏━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━┓ ┃ ┃ ADF ┃ KPSS ┃ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━┩ │ Test Statistic │ 2.35 │ 0.64 │ ├────────────────┼────────┼──────┤ │ P-Value │ 1.00 │ 0.02 │ ├────────────────┼────────┼──────┤ │ NLags │ 6.00 │ 2.00 │ ├────────────────┼────────┼──────┤ │ Nobs │ 9.00 │ 0.00 │ ├────────────────┼────────┼──────┤ │ ICBest │ 113.05 │ 0.00 │ └────────────────┴────────┴──────┘ The longley dataset is known for the ability to create an OLS regression that results in a R-squared of 1.0 due to the fact that the US macroeconomic variables are known to be highly collinear. See the following regression performed with the ols command:\n2022 Jun 20, 04:56 (🦋) /econometrics/ $ ols -d longley.totemp -i longley.gnpdefl,longley.gnp,longley.unemp,longley.armed,longley.pop,longley.year OLS Regression Results ======================================================================================= Dep. Variable: longley.totemp R-squared (uncentered): 1.000 Model: OLS Adj. R-squared (uncentered): 1.000 Method: Least Squares F-statistic: 5.052e+04 Date: Mon, 20 Jun 2022 Prob (F-statistic): 8.20e-22 Time: 10:56:10 Log-Likelihood: -117.56 No. Observations: 16 AIC: 247.1 Df Residuals: 10 BIC: 251.8 Df Model: 6 Covariance Type: nonrobust =================================================================================== coef std err t P\u0026gt;|t| [0.025 0.975] ----------------------------------------------------------------------------------- longley.gnpdefl -52.9936 129.545 -0.409 0.691 -341.638 235.650 longley.gnp 0.0711 0.030 2.356 0.040 0.004 0.138 longley.unemp -0.4235 0.418 -1.014 0.335 -1.354 0.507 longley.armed -0.5726 0.279 -2.052 0.067 -1.194 0.049 longley.pop -0.4142 0.321 -1.289 0.226 -1.130 0.302 longley.year 48.4179 17.689 2.737 0.021 9.003 87.832 ============================================================================== Omnibus: 1.443 Durbin-Watson: 1.277 Prob(Omnibus): 0.486 Jarque-Bera (JB): 0.605 Skew: 0.476 Prob(JB): 0.739 Kurtosis: 3.031 Cond. No. 4.56e+05 ============================================================================== Notes: [1] R² is computed without centering (uncentered) since the model does not contain a constant. [2] Standard Errors assume that the covariance matrix of the errors is correctly specified. [3] The condition number is large, 4.56e+05. This might indicate that there are strong multicollinearity or other numerical problems. Warnings: kurtosistest only valid for n\u0026gt;=20 ... continuing anyway, n=16 The argument -d refers to the dependent variable, in this example longley.totemp, and the argument -i refers to the independent variables, in this example this is longley.gnpdefl,longley.gnp,longley.unemp,longley.armed,longley.pop,longley.year.\nAfter running the regression estimation, it is possible to perform tests on the residuals of the model. E.g. for autocorrelation and heteroscedasity as shown below with the bgod and bpag commands.\n2022 Jun 20, 05:00 (🦋) /econometrics/ $ bgod Breusch-Godfrey autocorrelation test [Lags: 3] ┏━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓ ┃ ┃ Breusch-Godfrey ┃ ┡━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩ │ LM-stat │ 10.35 │ ├──────────┼─────────────────┤ │ p-value │ 0.02 │ ├──────────┼─────────────────┤ │ f-stat │ 0.10 │ ├──────────┼─────────────────┤ │ fp-value │ 0.96 │ └──────────┴─────────────────┘ The result 0.02 indicates no existence of autocorrelation. 2022 Jun 20, 05:00 (🦋) /econometrics/ $ bpag Breusch-Pagan heteroscedasticity test ┏━━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ ┃ Breusch-Pagan ┃ ┡━━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ lm-stat │ 7.90 │ ├──────────┼───────────────┤ │ p-value │ 0.16 │ ├──────────┼───────────────┤ │ f-stat │ 1.63 │ ├──────────┼───────────────┤ │ fp-value │ 0.24 │ └──────────┴───────────────┘ The result 0.16 indicates the existence of heteroscedasticity. Consider taking the log or a rate for the dependent variable. Working with Panel data    Within the examples of load --examples there is one panel dataset available named wage_panel. This is a dataset from the paper by Vella and M. Verbeek (1998), “Whose Wages Do Unions Raise? A Dynamic Model of Unionism and Wage Rate Determination for Young Men,” Journal of Applied Econometrics 13, 163-183. This is a well-known dataset also used within Chapter 14 of Introduction to Econometrics by Jeffrey Wooldridge.\nHere, the dataset is loaded in and an alias is used by using the -a argument. The available columns are displayed under Loaded files and data columns.\n2022 Jun 20, 05:13 (🦋) /econometrics/ $ load wage_panel -a wp 2022 Jun 20, 05:13 (🦋) /econometrics/ $ ? ╭─────────────────────────────────────────────────────────────────────────────────────────────────── Econometrics ───────────────────────────────────────────────────────────────────────────────────────────────────╮ │ │ │ Looking for data in: │ │ │ │ /Users/jeroenbouma/Documents/OpenBB Terminal/custom_imports │ │ │ │ load load a dataset (also works with StatsModels datasets) │ │ remove remove one of the loaded datasets │ │ │ │ Loaded files and data columns: │ │ wp : nr, year, black, exper, hisp, hours, married, educ, union, lwage, expersq, occupation │ │ │ │ Exploration: │ │ show show a portion of a loaded dataset │ │ plot plot data from a dataset │ │ type change types of the columns or display their types │ │ desc show descriptive statistics of a dataset │ │ index set (multi) index based on columns │ │ clean clean a dataset by filling or dropping NaNs │ │ add Add columns to dataset with option to use formulas │ │ delete Delete columns from dataset │ │ combine Combine columns from different datasets │ │ rename Rename column from dataset │ │ export export a processed dataset │ │ Tests: │ │ norm perform normality tests on a column of a dataset │ │ root perform unitroot tests (ADF \u0026amp; KPSS) on a column of a dataset │ │ granger Granger causality tests on two columns │ │ coint co-integration test on a multitude of columns │ │ Regression: │ │ ols fit a (multi) linear regression model │ │ panel estimate model based on various regression techniques │ │ compare compare results of all estimated models │ │ Regression Tests: │ │ dwat Durbin-Watson autocorrelation test on the residuals of the regression │ │ bgod Breusch-Godfrey autocorrelation tests with lags on the residuals of the regression │ │ bpag Breusch-Pagan heteroscedasticity test on the residuals of the regression │ │ │ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── OpenBB Terminal v1.3.0 (https://openbb.co) ─╯ To run panel regressions with panel it is important to define both entity (e.g. company) and time (e.g. year). Trying to run the panel command would right now result in the following:\n2022 Jun 20, 05:17 (🦋) /econometrics/ $ panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.expersq,wp.married,wp.educ,wp.union,wp.year The column 'lwage' from the dataset 'wp' is not a MultiIndex. Make sure you set the index correctly with the index (e.g. index wp -i lwage,nr) command where the first level is the entity (e.g. Tesla Inc.) and the second level the date (e.g. 2021-03-31) To see the effect of defining a MultiIndex, first a portion of the data is shown with the show command as seen below:\n2022 Jun 20, 05:22 (🦋) /econometrics/ $ show Dataset wp | Showing 10 of 4360 rows ┏━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ 0 │ 13.00 │ 1980.00 │ 0.00 │ 1.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 1 │ 13.00 │ 1981.00 │ 0.00 │ 2.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 2 │ 13.00 │ 1982.00 │ 0.00 │ 3.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 3 │ 13.00 │ 1983.00 │ 0.00 │ 4.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 4 │ 13.00 │ 1984.00 │ 0.00 │ 5.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 5 │ 13.00 │ 1985.00 │ 0.00 │ 6.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 6 │ 13.00 │ 1986.00 │ 0.00 │ 7.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 7 │ 13.00 │ 1987.00 │ 0.00 │ 8.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 8 │ 17.00 │ 1980.00 │ 0.00 │ 4.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├───┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ 9 │ 17.00 │ 1981.00 │ 0.00 │ 5.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └───┴───────┴─────────┴───────┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ Within this dataset the nr and year columns define the entity and time. To allow panel regression estimations, it is important that this is defined accordingly with the index command. This can be done with the following (and showing the changed dataset afterwards):\n2022 Jun 20, 05:22 (🦋) /econometrics/ $ index wp -i nr,year Successfully updated 'wp' index to be 'nr, year' 2022 Jun 20, 05:27 (🦋) /econometrics/ $ show Dataset wp | Showing 10 of 4360 rows ┏━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ nr ┃ year ┃ black ┃ exper ┃ hisp ┃ hours ┃ married ┃ educ ┃ union ┃ lwage ┃ expersq ┃ occupation ┃ ┡━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━┩ │ (13, 1980) │ 13.00 │ 1980.00 │ 0.00 │ 1.00 │ 0.00 │ 2672.00 │ 0.00 │ 14.00 │ 0.00 │ 1.20 │ 1.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1981) │ 13.00 │ 1981.00 │ 0.00 │ 2.00 │ 0.00 │ 2320.00 │ 0.00 │ 14.00 │ 1.00 │ 1.85 │ 4.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1982) │ 13.00 │ 1982.00 │ 0.00 │ 3.00 │ 0.00 │ 2940.00 │ 0.00 │ 14.00 │ 0.00 │ 1.34 │ 9.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1983) │ 13.00 │ 1983.00 │ 0.00 │ 4.00 │ 0.00 │ 2960.00 │ 0.00 │ 14.00 │ 0.00 │ 1.43 │ 16.00 │ 9.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1984) │ 13.00 │ 1984.00 │ 0.00 │ 5.00 │ 0.00 │ 3071.00 │ 0.00 │ 14.00 │ 0.00 │ 1.57 │ 25.00 │ 5.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1985) │ 13.00 │ 1985.00 │ 0.00 │ 6.00 │ 0.00 │ 2864.00 │ 0.00 │ 14.00 │ 0.00 │ 1.70 │ 36.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1986) │ 13.00 │ 1986.00 │ 0.00 │ 7.00 │ 0.00 │ 2994.00 │ 0.00 │ 14.00 │ 0.00 │ -0.72 │ 49.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (13, 1987) │ 13.00 │ 1987.00 │ 0.00 │ 8.00 │ 0.00 │ 2640.00 │ 0.00 │ 14.00 │ 0.00 │ 1.67 │ 64.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (17, 1980) │ 17.00 │ 1980.00 │ 0.00 │ 4.00 │ 0.00 │ 2484.00 │ 0.00 │ 13.00 │ 0.00 │ 1.68 │ 16.00 │ 2.00 │ ├────────────┼───────┼─────────┼───────┼───────┼──────┼─────────┼─────────┼───────┼───────┼───────┼─────────┼────────────┤ │ (17, 1981) │ 17.00 │ 1981.00 │ 0.00 │ 5.00 │ 0.00 │ 2804.00 │ 0.00 │ 13.00 │ 0.00 │ 1.52 │ 25.00 │ 2.00 │ └────────────┴───────┴─────────┴───────┴───────┴──────┴─────────┴─────────┴───────┴───────┴───────┴─────────┴────────────┘ The columns nr and year still exists within the dataset and could have been dropped with the -d argument if desired. However, in this case the year column is relevant for generating time effects in Pooled OLS, Fixed Effects and Random Effects estimations. To be able to do this, the type of the year column needs to be changed accordingly. The type of the columns can be displayed with the type command as follows:\n2022 Jun 20, 05:27 (🦋) /econometrics/ $ type wp wp ┏━━━━━━━━━━━━┳━━━━━━━━━┓ ┃ column ┃ dtype ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━┩ │ nr │ int64 │ ├────────────┼─────────┤ │ year │ int64 │ ├────────────┼─────────┤ │ black │ int64 │ ├────────────┼─────────┤ │ exper │ int64 │ ├────────────┼─────────┤ │ hisp │ int64 │ ├────────────┼─────────┤ │ hours │ int64 │ ├────────────┼─────────┤ │ married │ int64 │ ├────────────┼─────────┤ │ educ │ int64 │ ├────────────┼─────────┤ │ union │ int64 │ ├────────────┼─────────┤ │ lwage │ float64 │ ├────────────┼─────────┤ │ expersq │ int64 │ ├────────────┼─────────┤ │ occupation │ int64 │ └────────────┴─────────┘ The dtype int64 refers to numbers without decimals (e.g. 1, 2, 3) while the dtype float64 refers to numbers with decimals (e.g. 1.5, 10.23, 0.01). There are a few options within the type command:\n int: refers to integers, the same as int64. float: refers to floats, the same as float64. str: refers to words, e.g. \u0026lsquo;New York\u0026rsquo;. bool: refers to booleans, these are either True or False, commonly depicted as 1 or 0 respectively and often also referred to as dummy variables. category: refers to categorical data, usually a limited selection of variables e.g. a list of countries or years. date: refers to dates and converts the relevant column to dates.  For the panel regressions, it can be beneficial to see time effects from year. Therefore, the type of the year column should be altered to category. This can be done with the following command:\n2022 Jun 20, 05:33 (🦋) /econometrics/ $ type wp.year --format category Update 'wp.year' with type 'category' 2022 Jun 20, 05:40 (🦋) /econometrics/ $ type wp ┏━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ column ┃ dtype ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━┩ │ nr │ int64 │ ├────────────┼──────────┤ │ year │ category │ ├────────────┼──────────┤ │ black │ int64 │ ├────────────┼──────────┤ │ exper │ int64 │ ├────────────┼──────────┤ │ hisp │ int64 │ ├────────────┼──────────┤ │ hours │ int64 │ ├────────────┼──────────┤ │ married │ int64 │ ├────────────┼──────────┤ │ educ │ int64 │ ├────────────┼──────────┤ │ union │ int64 │ ├────────────┼──────────┤ │ lwage │ float64 │ ├────────────┼──────────┤ │ expersq │ int64 │ ├────────────┼──────────┤ │ occupation │ int64 │ └────────────┴──────────┘ The dataset is now properly configured to allow for proper panel regressions. This can be done with the panel command. On the panel page all regressions are performed that are available within the OpenBB Terminal. This can be either:\n -r pols (Pooled OLS) -r re (Random Effects) -r bols (Between OLS) -r fe (Fixed Effects) -r fdols (First Difference OLS).  As an example, a Random Effects regression is performed. Here, the column after the -d argument refers to the dependent variable and the columns after the -i argument refer to the independent variables.\n2022 Jun 20, 05:51 (🦋) /econometrics/ $ panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.expersq,wp.married,wp.educ,wp.union,wp.year -r re RandomEffects Estimation Summary ================================================================================ Dep. Variable: wp.lwage R-squared: 0.1806 Estimator: RandomEffects R-squared (Between): 0.1853 No. Observations: 4360 R-squared (Within): 0.1799 Date: Mon, Jun 20 2022 R-squared (Overall): 0.1828 Time: 11:52:47 Log-likelihood -1622.5 Cov. Estimator: Unadjusted F-statistic: 68.409 Entities: 545 P-value 0.0000 Avg Obs: 8.0000 Distribution: F(14,4345) Min Obs: 8.0000 Max Obs: 8.0000 F-statistic (robust): 68.409 P-value 0.0000 Time periods: 8 Distribution: F(14,4345) Avg Obs: 545.00 Min Obs: 545.00 Max Obs: 545.00 Parameter Estimates ================================================================================ Parameter Std. Err. T-stat P-value Lower CI Upper CI -------------------------------------------------------------------------------- const 0.0234 0.1514 0.1546 0.8771 -0.2735 0.3203 wp.black -0.1394 0.0480 -2.9054 0.0037 -0.2334 -0.0453 wp.hisp 0.0217 0.0428 0.5078 0.6116 -0.0622 0.1057 wp.exper 0.1058 0.0154 6.8706 0.0000 0.0756 0.1361 wp.expersq -0.0047 0.0007 -6.8623 0.0000 -0.0061 -0.0034 wp.married 0.0638 0.0168 3.8035 0.0001 0.0309 0.0967 wp.educ 0.0919 0.0107 8.5744 0.0000 0.0709 0.1129 wp.union 0.1059 0.0179 5.9289 0.0000 0.0709 0.1409 wp.year.1981 0.0404 0.0247 1.6362 0.1019 -0.0080 0.0889 wp.year.1982 0.0309 0.0324 0.9519 0.3412 -0.0327 0.0944 wp.year.1983 0.0202 0.0417 0.4840 0.6284 -0.0616 0.1020 wp.year.1984 0.0430 0.0515 0.8350 0.4037 -0.0580 0.1440 wp.year.1985 0.0577 0.0615 0.9383 0.3482 -0.0629 0.1782 wp.year.1986 0.0918 0.0716 1.2834 0.1994 -0.0485 0.2321 wp.year.1987 0.1348 0.0817 1.6504 0.0989 -0.0253 0.2950 ================================================================================ Scripts \u0026amp; Routines    Doing research both as a student or professor for a university or as a professional often requires the findings to be easily replicated. Furthermore, as many steps could be required it can be very beneficial to have the ability to make small adjustments without needing to re-do every single step again. This is where .openbb files play an important role.\nBy going to the main menu as depicted below, the exe command can be used. With this command you can run .openbb scripts that automatically run a set of commands similarly to that of the Stata do-files and SPSS syntax files. These scripts are located where the application is located inside the routines folder.\nThis demo file has the following contents:\n# Go into the econometrics context econometrics # Load the wage_panel dataset and include an alias load wage_panel -a wp # Set the MultiIndex, allowing for Panel regressions to be performed index wp -i nr,year # Change the type of the year column so it can be included as time effects within the regressions type wp.year --format category # Perform a Pooled OLS, Random Effects and Fixed Effects estimation panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.expersq,wp.married,wp.educ,wp.union,wp.year panel -d wp.lwage -i wp.black,wp.hisp,wp.exper,wp.expersq,wp.married,wp.educ,wp.union,wp.year -r re panel -d wp.lwage -i wp.expersq,wp.union,wp.married,wp.year -r fe # Compare the results obtained from these regressions compare Everything after the # on the same line refers to comments and will not be executed. All other commands will be. This ultimately leads to a comparison of three models and takes less than a few seconds to execute. See below for the comparison result, obtained via the compare command:\n022 Jun 20, 06:52 (🦋) /econometrics/ $ compare Model Comparison =============================================================== POLS RE FE --------------------------------------------------------------- Dep. Variable wp.lwage wp.lwage wp.lwage Estimator PooledOLS RandomEffects PanelOLS No. Observations 4360 4360 4360 Cov. Est. Unadjusted Unadjusted Unadjusted R-squared 0.1893 0.1806 0.1246 R-Squared (Within) 0.1692 0.1799 0.1646 R-Squared (Between) 0.2066 0.1853 0.0902 R-Squared (Overall) 0.1893 0.1828 0.1246 F-statistic 72.459 68.409 61.920 P-value (F-stat) 0.0000 0.0000 0.0000 ===================== ============ =============== ============ const 0.0921 0.0234 1.3454 (1.1761) (0.1546) (60.606) wp.black -0.1392 -0.1394 (-5.9049) (-2.9054) wp.hisp 0.0160 0.0217 (0.7703) (0.5078) wp.exper 0.0672 0.1058 (4.9095) (6.8706) wp.expersq -0.0024 -0.0047 -0.0021 (-2.9413) (-6.8623) (-7.5081) wp.married 0.1083 0.0638 0.1521 (6.8997) (3.8035) (9.5417) wp.educ 0.0913 0.0919 (17.442) (8.5744) wp.union 0.1825 0.1059 0.1768 (10.635) (5.9289) (10.032) wp.year.1981 0.0583 0.0404 0.1187 (1.9214) (1.6362) (3.9144) wp.year.1982 0.0628 0.0309 0.1843 (1.8900) (0.9519) (6.0168) wp.year.1983 0.0620 0.0202 0.2431 (1.6915) (0.4840) (7.7581) wp.year.1984 0.0905 0.0430 0.3322 (2.2566) (0.8350) (10.236) wp.year.1985 0.1092 0.0577 0.4112 (2.5200) (0.9383) (12.048) wp.year.1986 0.1420 0.0918 0.5039 (3.0580) (1.2834) (13.806) wp.year.1987 0.1738 0.1348 0.5952 (3.5165) (1.6504) (15.026) --------------------------------------------------------------- T-stats reported in parentheses "},{"id":1300,"href":"/OpenBBTerminal/terminal/economy/","title":"Introduction to Economy","parent":"Terminal","content":"The Economy menu enables you to obtain market overviews (overview and futures), see yield curves of any country (ycrv) and discover sector, industry and country performance (performance). Next to that, the databases of EconDB, FRED and Yahoo Finance can be accessed via macro, fred and index respectively. All of this can also be further analysed with Forecasting menu (forecast) and Quantitative Techniques (qa).\nHow to use    The Economy menu is called upon by typing economy which opens the following menu:\nWithin the Economy menu you have a variety of options ranging from treasury rates to population growth to country financial performance. As this is quite extensive, the guide has two sections. The first section will discuss valuations and performance and the second section discusses the databases.\nPerformance and valuations    By using overview we can look into market overviews from the perspective of indices (indices), bonds (usbonds and glbonds), currencies (currencies) and in general. E.g. let\u0026rsquo;s look at global bond performance by adding the -t argument:\n2022 Jun 29, 09:56 (🦋) /economy/ $ overview -t glbonds Global Bonds ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ ┃ Rate (%) ┃ Yld (%) ┃ Yld Chg (%) ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━━┩ │ U.S. 10 Year Treasury Note │ 2.875 │ 3.164 │ -0.016 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ Germany 10 Year Government Bond │ 0.000 │ 1.582 │ -0.046 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ U.K. 10 Year Gilt │ 4.250 │ 2.440 │ -0.028 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ Japan 10 Year Government Bond │ 0.200 │ 0.232 │ -0.002 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ Australia 10 Year Government Bond │ 1.000 │ 3.703 │ -0.041 │ ├───────────────────────────────────┼──────────┼─────────┼─────────────┤ │ China 10 Year Government Bond │ 2.760 │ 2.851 │ -0.010 │ └───────────────────────────────────┴──────────┴─────────┴─────────────┘ Next to that, to better understand the current commodity market we can look into the futures of a variety of commodities. For example, let\u0026rsquo;s look at a general overview:\n 2022 Jun 29, 09:58 (🦋) /economy/ $ futures Futures/Commodities [Source: Wall St. Journal] ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━┓ ┃ ┃ Price ┃ Chg ┃ %Chg ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━┩ │ Crude Oil Futures │ 113.10 │ 1.34 │ 1.20 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Brent Crude Futures │ 115.24 │ 1.44 │ 1.27 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Gold Futures │ 1823.50 │ 2.30 │ 0.13 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Silver Futures │ 20.690 │ -0.116 │ -0.56 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Natural Gas Futures │ 6.738 │ 0.187 │ 2.85 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Unleaded Gasoline Futures │ 3.8239 │ -0.0203 │ -0.53 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Copper Futures │ 3.7905 │ 0.0105 │ 0.28 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Corn Futures │ 653.75 │ -5.50 │ -0.83 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Wheat Futures │ 938.25 │ 2.25 │ 0.24 │ ├───────────────────────────┼─────────┼─────────┼───────┤ │ Bloomberg Commodity Index │ 123.95 │ 1.25 │ 1.02 │ └───────────────────────────┴─────────┴─────────┴───────┘ Furthermore, we can look into yield curves of any country, by default this is set to the United States, but it can be any:\nWhich then returns the following plot:\nLastly, we can also show industry, sector and country performance with performance. For example, looking at the sectors returns the following:\n2022 Jun 29, 10:03 (🦋) /economy/ $ performance -g sector Group Performance Data ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ Name ┃ Week ┃ Month ┃ 3Month ┃ 6Month ┃ 1Year ┃ YTD ┃ Recom ┃ AvgVolume [1M] ┃ RelVolume ┃ Change ┃ Volume [1M] ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━━┩ │ Utilities │ 0.04 │ -0.08 │ -0.07 │ -0.03 │ 0.06 │ -0.04 │ 2.37 │ 171.85 │ 0.50 │ -0.00 │ 8.05 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Technology │ 0.01 │ -0.10 │ -0.25 │ -0.31 │ -0.22 │ -0.31 │ 2.00 │ 1660.00 │ 1.08 │ -0.01 │ 168.13 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Real Estate │ 0.01 │ -0.06 │ -0.15 │ -0.21 │ -0.24 │ -0.22 │ 2.21 │ 396.36 │ 0.68 │ -0.02 │ 25.29 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Industrials │ 0.01 │ -0.09 │ -0.18 │ -0.20 │ -0.17 │ -0.20 │ 2.26 │ 656.49 │ 0.99 │ -0.01 │ 61.12 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Healthcare │ 0.03 │ -0.04 │ -0.10 │ -0.14 │ -0.12 │ -0.14 │ 2.07 │ 1530.00 │ 3.02 │ -0.00 │ 434.03 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Financial │ 0.01 │ -0.10 │ -0.19 │ -0.18 │ -0.16 │ -0.17 │ 2.26 │ 1010.00 │ 0.67 │ -0.00 │ 63.28 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Energy │ 0.04 │ -0.12 │ -0.03 │ 0.24 │ 0.29 │ 0.26 │ 2.21 │ 851.32 │ 0.82 │ 0.00 │ 65.35 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Consumer Defensive │ 0.02 │ -0.04 │ -0.08 │ -0.08 │ -0.05 │ -0.09 │ 2.28 │ 384.26 │ 0.84 │ -0.00 │ 30.44 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Consumer Cyclical │ 0.00 │ -0.07 │ -0.26 │ -0.31 │ -0.32 │ -0.31 │ 2.12 │ 1390.00 │ 1.25 │ -0.01 │ 163.60 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Communication Services │ 0.01 │ -0.05 │ -0.22 │ -0.28 │ -0.28 │ -0.28 │ 1.90 │ 745.84 │ 0.77 │ -0.01 │ 53.75 │ ├────────────────────────┼───────┼───────┼────────┼────────┼───────┼───────┼───────┼────────────────┼───────────┼────────┼─────────────┤ │ Basic Materials │ -0.00 │ -0.15 │ -0.20 │ -0.13 │ -0.13 │ -0.13 │ 2.26 │ 529.64 │ 0.76 │ -0.01 │ 37.97 │ └────────────────────────┴───────┴───────┴────────┴────────┴───────┴───────┴───────┴────────────────┴───────────┴────────┴─────────────┘ Economic Databases    Starting with the EconDB database (via macro) a large selection of Economic data can be obtained. What can be obtained is easily found by typing macro --show parameters which returns the following:\n2022 Jun 29, 10:16 (🦋) /economy/ $ macro --show parameters ┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Parameter ┃ Name ┃ Period ┃ Description ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ RGDP │ Real gross domestic product │ Quarterly │ Inflation-adjusted measure that reflects the value of all goods and services produced by an economy in a given year (chain-linked │ │ │ │ │ series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RPRC │ Real private consumption │ Quarterly │ All purchases made by consumers adjusted by inflation (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RPUC │ Real public consumption │ Quarterly │ All purchases made by the government adjusted by inflation (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RGFCF │ Real gross fixed capital formation │ Quarterly │ The acquisition of produced assets adjusted by inflation (chain-linked series). │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ REXP │ Real exports of goods and services │ Quarterly │ Transactions in goods and services from residents to non-residents adjusted for inflation (chain-linked series) │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RIMP │ Real imports of goods and services │ Quarterly │ Transactions in goods and services to residents from non-residents adjusted for inflation (chain-linked series) │ ├───────────┼─────────────────────────────────────────────────────┼───────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ \u0026lt;continues\u0026gt; As well as the available countries with macro --show countries:\n2022 Jun 29, 10:16 (🦋) /economy/ $ macro --show countries ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ Country ┃ Currency ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ Albania │ ALL │ ├────────────────────────┼──────────┤ │ Argentina │ ARS │ ├────────────────────────┼──────────┤ │ Australia │ AUD │ ├────────────────────────┼──────────┤ │ Austria │ EUR │ ├────────────────────────┼──────────┤ │ Azerbaijan │ AZN │ ├────────────────────────┼──────────┤ │ Bangladesh │ BDT │ ├────────────────────────┼──────────┤ │ Belarus │ BYR │ ├────────────────────────┼──────────┤ │ Belgium │ EUR │ ├────────────────────────┼──────────┤ \u0026lt;continues\u0026gt; Then, with these parameters and countries, you can now plot macroeconomic data. For example, we can look at unemployment rate (URATE) of the Netherlands, Germany and France with the following:\n2022 Jun 29, 10:18 (🦋) /economy/ $ macro --countries Netherlands Germany France --parameters URATE This returns the following graph:\nThe FRED database similarly has a lot of macroeconomic data, do note that you need an API key to do this which is explained in more detail in the Accessing other sources of data via API keys section.\nYou have the ability to query the entire FRED database with the -q argument. For example, down below we look for datasets that are centered around inflation. The -l argument is set to show a maximum of 10 datasets:\n022 Jun 29, 10:23 (🦋) /economy/ $ fred -q inflation -l 10 Search results for inflation ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Series ID ┃ Title ┃ Description ┃ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ T10YIE │ 10-Year Breakeven Inflation Rate │ The breakeven inflation rate represents a measure of expected inflation derived from 10-Year │ │ │ │ Treasury Constant Maturity Securities (BC_10YEAR) and 10-Year Treasury Inflation-Indexed Constant │ │ │ │ Maturity Securities (TC_10YEAR). The latest value implies what market participants expect inflation │ │ │ │ to be in the next 10 years, on average. Starting with the update on June 21, 2019, the Treasury bond │ │ │ │ data used in calculating interest rate spreads is obtained directly from the U.S. Treasury │ │ │ │ Department (https://www.treasury.gov/resource-center/data-chart-center/interest- │ │ │ │ rates/Pages/TextView.aspx?data=yield). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ DFII10 │ Market Yield on U.S. Treasury Securities at │ For further information regarding treasury constant maturity data, please refer to the H.15 │ │ │ 10-Year Constant Maturity, Quoted on an Investment │ Statistical Release notes (https://www.federalreserve.gov/releases/h15/default.htm) and the Treasury │ │ │ Basis, Inflation-Indexed │ Yield Curve Methodology (https://home.treasury.gov/policy-issues/financing-the-government/interest- │ │ │ │ rate-statistics/treasury-yield-curve-methodology). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ T10YIEM │ 10-Year Breakeven Inflation Rate │ The breakeven inflation rate represents a measure of expected inflation derived from 10-Year │ │ │ │ Treasury Constant Maturity Securities (BC_10YEARM) and 10-Year Treasury Inflation-Indexed Constant │ │ │ │ Maturity Securities (TC_10YEARM). The latest value implies what market participants expect inflation │ │ │ │ to be in the next 10 years, on average. Starting with the update on June 21, 2019, the Treasury bond │ │ │ │ data used in calculating interest rate spreads is obtained directly from the U.S. Treasury │ │ │ │ Department (https://www.treasury.gov/resource-center/data-chart-center/interest- │ │ │ │ rates/Pages/TextView.aspx?data=yield). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ FII10 │ Market Yield on U.S. Treasury Securities at │ For further information regarding treasury constant maturity data, please refer to the H.15 │ │ │ 10-Year Constant Maturity, Quoted on an Investment │ Statistical Release notes (https://www.federalreserve.gov/releases/h15/default.htm) and the Treasury │ │ │ Basis, Inflation-Indexed │ Yield Curve Methodology (https://home.treasury.gov/policy-issues/financing-the-government/interest- │ │ │ │ rate-statistics/treasury-yield-curve-methodology). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ WFII10 │ Market Yield on U.S. Treasury Securities at │ For further information regarding treasury constant maturity data, please refer to the H.15 │ │ │ 10-Year Constant Maturity, Quoted on an Investment │ Statistical Release notes (https://www.federalreserve.gov/releases/h15/default.htm) and the Treasury │ │ │ Basis, Inflation-Indexed │ Yield Curve Methodology (https://home.treasury.gov/policy-issues/financing-the-government/interest- │ │ │ │ rate-statistics/treasury-yield-curve-methodology). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ RIFLGFCY10XIINA │ Market Yield on U.S. Treasury Securities at │ Averages of daily figures. For further information regarding treasury constant maturity data, │ │ │ 10-Year Constant Maturity, Quoted on an Investment │ please refer to the H.15 Statistical release notes │ │ │ Basis, Inflation-Indexed │ (https://www.federalreserve.gov/releases/h15/default.htm) and the Treasury Yield Curve Methodology │ │ │ │ (https://home.treasury.gov/policy-issues/financing-the-government/interest-rate-statistics/treasury- │ │ │ │ yield-curve-methodology). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ T5YIFR │ 5-Year, 5-Year Forward Inflation Expectation Rate │ This series is a measure of expected inflation (on average) over the five-year period that begins │ │ │ │ five years from today. This series is constructed as: (((((1+((BC_10YEAR- │ │ │ │ TC_10YEAR)/100))^10)/((1+((BC_5YEAR-TC_5YEAR)/100))^5))^0.2)-1)*100 where BC10_YEAR, TC_10YEAR, │ │ │ │ BC_5YEAR, and TC_5YEAR are the 10 year and 5 year nominal and inflation adjusted Treasury │ │ │ │ securities. All of those are the actual series IDs in FRED. Starting with the update on June 21, │ │ │ │ 2019, the Treasury bond data used in calculating interest rate spreads is obtained directly from the │ │ │ │ U.S. Treasury Department (https://www.treasury.gov/resource-center/data-chart-center/interest- │ │ │ │ rates/Pages/TextView.aspx?data=yield). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ T5YIE │ 5-Year Breakeven Inflation Rate │ The breakeven inflation rate represents a measure of expected inflation derived from 5-Year Treasury │ │ │ │ Constant Maturity Securities (BC_5YEAR) and 5-Year Treasury Inflation-Indexed Constant Maturity │ │ │ │ Securities (TC_5YEAR). The latest value implies what market participants expect inflation to be in │ │ │ │ the next 5 years, on average. Starting with the update on June 21, 2019, the Treasury bond data used │ │ │ │ in calculating interest rate spreads is obtained directly from the U.S. Treasury Department │ │ │ │ (https://www.treasury.gov/resource-center/data-chart-center/interest- │ │ │ │ rates/Pages/TextView.aspx?data=yield). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ T5YIFRM │ 5-Year, 5-Year Forward Inflation Expectation Rate │ This series is a measure of expected inflation (on average) over the five-year period that begins │ │ │ │ five years from today. This series is constructed as: (((((1+((BC_10YEAR- │ │ │ │ TC_10YEAR)/100))^10)/((1+((BC_5YEAR-TC_5YEAR)/100))^5))^0.2)-1)*100 where BC10_YEAR, TC_10YEAR, │ │ │ │ BC_5YEAR, and TC_5YEAR are the 10 year and 5 year nominal and inflation adjusted Treasury │ │ │ │ securities. All of those are the actual series IDs in FRED. Starting with the update on June 21, │ │ │ │ 2019, the Treasury bond data used in calculating interest rate spreads is obtained directly from the │ │ │ │ U.S. Treasury Department (https://www.treasury.gov/resource-center/data-chart-center/interest- │ │ │ │ rates/Pages/TextView.aspx?data=yield). │ ├─────────────────┼────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ T5YIEM │ 5-Year Breakeven Inflation Rate │ The breakeven inflation rate represents a measure of expected inflation derived from 5-Year Treasury │ │ │ │ Constant Maturity Securities (BC_5YEAR) and 5-Year Treasury Inflation-Indexed Constant Maturity │ │ │ │ Securities (TC_5YEAR). The latest value implies what market participants expect inflation to be in │ │ │ │ the next 5 years, on average. Starting with the update on June 21, 2019, the Treasury bond data used │ │ │ │ in calculating interest rate spreads is obtained directly from the U.S. Treasury Department │ │ │ │ (https://www.treasury.gov/resource-center/data-chart-center/interest- │ │ │ │ rates/Pages/TextView.aspx?data=yield). │ └─────────────────┴────────────────────────────────────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────┘ With this information, we can now plot datasets, e.g. the 5-year, 10-year, 20-year and 30-year break-even inflation rates, with the following. Note that I added some additional series not in the above table. This is because you can recognise the structure relatively easy of the break-even inflation rates, the number after the T refers to the amount of years.\n2022 Jun 29, 10:27 (🦋) /economy/ $ fred T5YIEM,T10YIEM,T20YIEM,T30YIEM Which returns the following graph:\nFurthermore, understanding the influence macroeconomic trends have to indices, the index command can be used. This has a large set of pre-configured indices but has the possibility to add your own if you enter the ticker.\nWhich plots the following:\nThis then all comes together within the plot command where you can combine the datasets from the above commands into one graph. For example, it seems there is a relationship between the inflation rates and the unemployment rate (source) which we can graphically show with:\n2022 Jun 29, 10:38 (🦋) /economy/ $ macro -p URATE -s 2010-01-01 2022 Jun 29, 10:39 (🦋) /economy/ $ fred T5YIEM -s 2010-01-01 2022 Jun 29, 10:39 (🦋) /economy/ $ plot --y1 United_States_URATE --y2 T5YIEM Resulting in the following graph:\nSub-menus available    The Economy menu has a few sub-menus available to delve further into a specific macroeconomic indicator. To find more information about each menu, click on one of the following:\n Introduction to Forecasting menu: apply advanced AI and Machine Learning models to form prediction of future macroeconomic indicators including Recurrent Neural Network (RNN), Autoregressive Integrated Moving Average (ARIMA) and Monte Carlo forecasting. Introduction to Quantitative Analysis: analyse the macroeconomic indicators extensively for seasonality, rolling windows and statistical techniques.  Examples    Starting off, let\u0026rsquo;s looking at current performance of energy futures with futures.\n2022 Jun 30, 05:39 (🦋) /economy/ $ futures energy Future Table [Source: FinViz] ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ prevClose ┃ last ┃ change (%) ┃ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━━┩ │ Ethanol │ 2.16 │ 2.22 │ 2.78 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Gasoline RBOB │ 3.72 │ 3.66 │ -1.82 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Crude Oil Brent │ 116.26 │ 112.73 │ -3.04 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Natural Gas │ 6.50 │ 6.50 │ 0.03 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Heating Oil │ 3.96 │ 4.00 │ 1.06 │ ├─────────────────┼───────────┼────────┼────────────┤ │ Crude Oil WTI │ 109.78 │ 110.02 │ 0.22 │ └─────────────────┴───────────┴────────┴────────────┘ This gives insights in the current future contracts and their (relative) performance. Here, we take a closer look at Crude Oil Brent by querying the FRED database, with fred, for a dataset that is relevant:\n2022 Jun 30, 05:43 (🦋) /economy/ $ fred -q oil index Search results for oil index ┏━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Series ID ┃ Title ┃ Description ┃ ┡━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ OVXCLS │ CBOE Crude Oil ETF Volatility Index │ Exchange Traded Funds (ETFs) are shares of trusts that hold portfolios of stocks designed to closely │ │ │ │ track the price performance and yield of specific indices. Copyright, 2016, Chicago Board Options │ │ │ │ Exchange, Inc. Reprinted with permission. │ ├─────────────────┼───────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ IPG211111CS │ Industrial Production: Mining, Quarrying, and Oil │ The industrial production (IP) index measures the real output of all relevant establishments located │ │ │ and Gas Extraction: Crude Oil (NAICS = 211111pt.) │ in the United States, regardless of their ownership, but not those located in U.S. territories. │ │ │ │ NAICS = 211111pt. Source Code: IP.G211111C.S │ ├─────────────────┼───────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ PCU333132333132 │ Producer Price Index by Industry: Oil and Gas │ No description provided. │ │ │ Field Machinery and Equipment Manufacturing │ │ ├─────────────────┼───────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ IPG211111CN │ Industrial Production: Mining, Quarrying, and Oil │ The industrial production (IP) index measures the real output of all relevant establishments located │ │ │ and Gas Extraction: Crude Oil (NAICS = 211111pt.) │ in the United States, regardless of their ownership, but not those located in U.S. territories. │ │ │ │ NAICS = 211111pt. Source Code: IP.G211111C.N │ ├─────────────────┼───────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────┤ │ IPG211111CSQ │ Industrial Production: Mining, Quarrying, and Oil │ The industrial production (IP) index measures the real output of all relevant establishments located │ │ │ and Gas Extraction: Crude Oil (NAICS = 211111pt.) │ in the United States, regardless of their ownership, but not those located in U.S. territories. │ │ │ │ NAICS = 211111pt. Source Code: IP.G211111C.S │ └─────────────────┴───────────────────────────────────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────┘ Here, we take the CBOE Crude OIL ETF Volatility Index to get some understanding of how volatile oil is. Here, a period is defined from 2008 to 2015, showing the influence of the Financial Crisis of 2008.\n2022 Jun 30, 06:22 (🦋) /economy/ $ fred OVXCLS -s 2008-01-01 -e 2015-01-01 This plots the following graph:\nA hypothesis could be that the more volatile the price of oil is, the lower the confidence of the consumers is. It is possible to visually depict this. First, let\u0026rsquo;s plot the consumer confidence of Germany.\n2022 Jun 30, 07:59 (🦋) /economy/ $ macro -p CONF -c Germany -s 2008-01-01 -e 2015-01-01 Now, combine these two graphs with the plot command. This helps in visually depicting a (negative) relationship.\n2022 Jun 30, 08:00 (🦋) /economy/ $ plot --y1 Germany_CONF --y2 OVXCLS "},{"id":1301,"href":"/OpenBBTerminal/terminal/etf/","title":"Introduction to ETFs","parent":"Terminal","content":"The ETF menu enables you to lookup any ETF (ln and ld) and obtain an overview, holdings, weights and news about the chosen ETF. Furthermore, sub-menus reside in this menu that can be used to compare companies within the ETF, discover gainers and losers within discovery and apply advanced technical indicators and Forecasting menu. Lastly, it also has the option to export multiple ETFs to Excel with pir.\nHow to use    The ETF menu is called upon by typing etf which opens the following menu:\nYou have the ability to look up any ETF (ln and ld). With the example below, the ld command is used that searches the description of the ETFs. Then the search query is entered with is 500. Lastly, the -l argument is included which refers to limit and is maxed to 15 ETFs.\n2022 Jun 21, 09:14 (🦋) /etf/ $ ld 500 -l 15 ETFs by Total Assets ┏━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Name ┃ Family ┃ Category ┃ Total Assets [M] ┃ ┡━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩ │ VOO │ Vanguard S\u0026amp;P 500 ETF │ Vanguard │ Large Blend │ 705316.98 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SPY │ SPDR S\u0026amp;P 500 ETF Trust │ SPDR State Street Global Advisors │ Large Blend │ 363964.50 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ IVV │ iShares Core S\u0026amp;P 500 ETF │ iShares │ Large Blend │ 248764.65 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ ITOT │ iShares Core S\u0026amp;P Total U.S. Stock Market ETF │ iShares │ Large Blend │ 38539.13 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ IVW │ iShares S\u0026amp;P 500 Growth ETF │ iShares │ Large Growth │ 30874.18 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ RSP │ Invesco S\u0026amp;P 500 Equal Weight ETF │ Invesco │ Large Blend │ 26551.87 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SCHB │ Schwab U.S. Broad Market ETF │ Schwab ETFs │ Large Blend │ 20675.03 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ IVE │ iShares S\u0026amp;P 500 Value ETF │ iShares │ Large Value │ 19373.45 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SDY │ SPDR S\u0026amp;P Dividend ETF │ SPDR State Street Global Advisors │ Large Value │ 17140.94 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SCHP │ Schwab U.S. TIPS ETF │ Schwab ETFs │ Inflation-Protected Bond │ 16553.40 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SCHA │ Schwab U.S. Small-Cap ETF │ Schwab ETFs │ Small Blend │ 15301.01 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SPYV │ SPDR Portfolio S\u0026amp;P 500 Value ETF │ SPDR State Street Global Advisors │ Large Value │ 11590.81 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SPYG │ SPDR Portfolio S\u0026amp;P 500 Growth ETF │ SPDR State Street Global Advisors │ Large Growth │ 10514.91 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SPLG │ SPDR Portfolio S\u0026amp;P 500 ETF │ SPDR State Street Global Advisors │ Large Blend │ 9850.30 │ ├──────┼──────────────────────────────────────────────┼───────────────────────────────────┼──────────────────────────┼──────────────────┤ │ SPLV │ Invesco S\u0026amp;P 500 Low Volatility ETF │ Invesco │ Large Blend │ 7922.23 │ └──────┴──────────────────────────────────────────────┴───────────────────────────────────┴──────────────────────────┴──────────────────┘ This results in a selection of tickers, name, family, category and total assets (estimation). With this information, you can load in one of the tickers into the menu. This can be done with load. See the following example:\n2022 Jun 21, 09:22 (🦋) /etf/ $ load VOO Top company holdings found: AAPL, MSFT, AMZN, GOOGL, TSLA To then view the stock chart, you can call candle which shows a candle chart for the defined period (by default set to a year by load):\nBy calling ? or help the ETF menu re-appears. Here you can see that multiple commands menus have turned blue. Because of loading a ticker, these menus can now be used in combination with the chosen ticker.\nFor example, the ETF\u0026rsquo;s weights can now be depicted with the following:\n2022 Jun 21, 09:45 (🦋) /etf/ $ weights Which shows the following graph:\nSub-menus available    The ETF menu has a few sub-menus available to delve further into a specific ETF or screen multiple ETFs at the same time. To find more information about each menu, click on one of the following:\n Introduction to Comparison Analysis: have the ability to compare companies within the ETF based on, among other things, correlation, financial statements, sentiment, valuations and performance. Introduction to ETF Discovery: discover trending ETF based on their returns (gainers and decliners) as well as activity. Introduction to ETF Screener: provides the ability to screen companies within the ETF based on a preset as well as the ability to screen by category. Introduction to Technical Analysis: analysis the chosen ETF\u0026rsquo;s historical data extensively with moving averages and momentum, trend, volatility and volume indicators. Introduction to Forecasting menu: apply advanced AI and Machine Learning models to form prediction of future ETF prices including Recurrent Neural Network (RNN), Autoregressive Integrated Moving Average (ARIMA) and Monte Carlo forecasting.  Examples    If we want to learn more about a total market ETF, we can do the following, starting from the etf menu and using the ld command where we specify with -l we wish to see 15 ETFs max.\n2022 Jun 21, 10:08 (🦋) /etf/ $ ld total market -l 15 ETFs by Total Assets ┏━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Name ┃ Family ┃ Category ┃ Total Assets [M] ┃ ┡━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━┩ │ VTI │ Vanguard Total Stock Market Index Fund ETF Shares │ Vanguard │ Large Blend │ 1169855.61 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ ITOT │ iShares Core S\u0026amp;P Total U.S. Stock Market ETF │ iShares │ Large Blend │ 38539.13 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ XBI │ SPDR S\u0026amp;P Biotech ETF │ SPDR State Street Global Advisors │ Health │ 7845.92 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ HYLB │ Xtrackers USD High Yield Corporate Bond ETF │ Xtrackers │ High Yield Bond │ 6760.46 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ KRE │ SPDR S\u0026amp;P Regional Banking ETF │ SPDR State Street Global Advisors │ Financial │ 5101.42 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ XOP │ SPDR S\u0026amp;P Oil \u0026amp; Gas Exploration \u0026amp; Production ETF │ SPDR State Street Global Advisors │ Equity Energy │ 3828.98 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ XHB │ SPDR S\u0026amp;P Homebuilders ETF │ SPDR State Street Global Advisors │ Consumer Cyclical │ 2095.61 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ XME │ SPDR S\u0026amp;P Metals and Mining ETF │ SPDR State Street Global Advisors │ Natural Resources │ 1876.30 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ SCHK │ Schwab 1000 ETF │ Schwab ETFs │ Large Blend │ 1782.93 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ XAR │ SPDR S\u0026amp;P Aerospace \u0026amp; Defense ETF │ SPDR State Street Global Advisors │ Industrials │ 1364.05 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ FPXI │ First Trust International Equity Opportunities ETF │ First Trust │ Foreign Large Growth │ 1124.12 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ XSD │ SPDR S\u0026amp;P Semiconductor ETF │ SPDR State Street Global Advisors │ Technology │ 976.82 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ XHE │ SPDR S\u0026amp;P Health Care Equipment ETF │ SPDR State Street Global Advisors │ Health │ 802.28 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ XRT │ SPDR S\u0026amp;P Retail ETF │ SPDR State Street Global Advisors │ Consumer Cyclical │ 781.05 │ ├──────┼────────────────────────────────────────────────────┼───────────────────────────────────┼───────────────────────────┼──────────────────┤ │ UWM │ ProShares Ultra Russell2000 │ ProShares │ Trading--Leveraged Equity │ 746.08 │ └──────┴────────────────────────────────────────────────────┴───────────────────────────────────┴───────────────────────────┴──────────────────┘ It seems Vanguard Total Stock Market Index Fund ETF Shares (VTI) is by far the largest ETF in this list so let\u0026rsquo;s load it in. Also, a larger period is chosen by using -s as shown in the documentation:\n2022 Jun 21, 10:08 (🦋) /etf/ $ load VTI -s 2010-01-01 Top company holdings found: AAPL, MSFT, AMZN, GOOGL, TSLA We can now plot the corresponding ETF chart with candle which shows the company\u0026rsquo;s historical data from 2010-01-01 until the current date. We are also adding in trendlines with -t.\n2022 Jun 21, 10:13 (🦋) /etf/ $ candle -t Now we can go ahead and explore more about the ETF by running holdings and weights using the --raw argument for weights to display a table instead of a graph.\n2022 Jun 21, 10:16 (🦋) /etf/ $ holdings ETF Holdings ┏━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┓ ┃ ┃ % Of Etf ┃ Shares ┃ ┡━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━┩ │ AAPL │ 5.58% │ 454,234,952 │ ├───────┼──────────┼─────────────┤ │ MSFT │ 4.93% │ 219,650,708 │ ├───────┼──────────┼─────────────┤ │ AMZN │ 2.51% │ 12,672,230 │ ├───────┼──────────┼─────────────┤ │ GOOGL │ 1.67% │ 8,869,298 │ ├───────┼──────────┼─────────────┤ │ TSLA │ 1.52% │ 24,224,503 │ ├───────┼──────────┼─────────────┤ │ GOOG │ 1.47% │ 7,802,130 │ ├───────┼──────────┼─────────────┤ │ BRK.B │ 1.30% │ 49,671,912 │ ├───────┼──────────┼─────────────┤ │ JNJ │ 1.14% │ 77,035,899 │ ├───────┼──────────┼─────────────┤ │ UNH │ 1.13% │ 27,566,141 │ ├───────┼──────────┼─────────────┤ │ META │ 1.08% │ 67,655,143 │ └───────┴──────────┴─────────────┘ 2022 Jun 21, 10:16 (🦋) /etf/ $ weights --raw Sector holdings of VTI Sector Weightings Allocation ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ % of holdings in the sector ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Technology │ 23.55 │ ├────────────────────────┼─────────────────────────────┤ │ Healthcare │ 13.97 │ ├────────────────────────┼─────────────────────────────┤ │ Financial Services │ 13.42 │ ├────────────────────────┼─────────────────────────────┤ │ Consumer Cyclical │ 10.61 │ ├────────────────────────┼─────────────────────────────┤ │ Industrials │ 9.00 │ ├────────────────────────┼─────────────────────────────┤ │ Communication Services │ 7.98 │ ├────────────────────────┼─────────────────────────────┤ │ Consumer Defensive │ 6.35 │ ├────────────────────────┼─────────────────────────────┤ │ Energy │ 4.81 │ ├────────────────────────┼─────────────────────────────┤ │ Real Estate │ 3.78 │ ├────────────────────────┼─────────────────────────────┤ │ Basic Materials │ 2.69 │ ├────────────────────────┼─────────────────────────────┤ │ Utilities │ 2.29 │ └────────────────────────┴─────────────────────────────┘ "},{"id":1302,"href":"/OpenBBTerminal/terminal/forecast/","title":"Introduction to Forecast","parent":"Terminal","content":"The forecasting menu is a machine learning toolkit that provides practitioners with high-level components that can quickly provide state-of-the-art results, be it with with classical or deep learning models, while also providing researchers with low-level components that can be mixed, matched and fine tuned to build new approaches and custom tuned models. Bring in multiple datasets and train machine learning models with unlimited external factors to see how underlying data may change future forecasting predictions and accuracy.\nAccessing the Forecast menu    The Forecast menu is called upon by typing forecast which opens the following menu:\n(🦋) / $ forecast How to Use    To begin any machine learning, you must first load in data. The menu supports importing both terminal datasets found in stocks and cryptocurrency, along with external datasets in the form of .csv that can be placed in the following location: ~/OpenBBUserData/custom_imports/forecast/\nIt is important to note, if you ever have troubles on running a command, please read the help commands to guide you on what is available. You can do this by trailing any command with a -h\n(🦋) /forecast/ $ \u0026lt;command\u0026gt; -h Loading Data    Importing data from within the terminal can be simply done as follows:\n(🦋) / $ stocks (🦋) /stocks/ $ load AAPL (🦋) /stocks/ $ forecast The menu can support loading in unlimited datasets. Once the first one is loaded, the menu options should turn blue to allow you to begin working through the menu options.\nTo load external data in the form as .csv, please place them into the folder shown within your terminal menu and then load them in as follows:\n(🦋) / $ forecast (🦋) /forecast/ $ load msft.csv (🦋) /forecast/ $ load btc.csv Understanding the structure of the menu    The menu is broken up into three distinct sections. These sections represent the typical order of operations a machine learning professional would have to take in order to complete a project.\nOnce data is loaded in, begin with Exploration.\nExploration: Explore the datasets loaded into the menu to further understand your data and create unique new datasets by combining and analyzing features. Functions to note: plot, combine, desc, corr Feature Engineering: Manuipulate datasets (addition, deletion, combination, mutation) of your data set to potentially improve machine learning model training, by providing new features and covariates that may leading to better performance and greater accuracy. TimeSeries Forecasting: Train state of the art models on custom datasets and experiment tuning hyperparameters. For more information on specific model implementations, please see Darts Models for in depth documentation. Sample workflow #1 (beginner)    Let\u0026rsquo;s begin by using one of the datasets we loaded in previously : AAPL\nWe will be forecasting 5 Business days ahead for the remaider of these workflows unless specified.\nNote: All models automatically perform Historical backtesting on the test split before providing a prediction.\nNote: MAPE = mean average percentage error. We use MAPE as it is quite convenient and scale independent since it calculates error as a percentage instead of an absolute value. THere are many more metrics to compare time series. The metrics will compare only common slices of series when the two series are not aligned, and parallelize computation over a large number of pairs of series. More metrics will be released in future versions of the menu.\n(🦋) /forecast/ $ plot AAPL.close (🦋) /forecast/ $ desc AAPL Showing Descriptive Statistics for Dataset AAPL ┏━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━━━┓ ┃ ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━━━┩ │ count │ 758.00 │ 758.00 │ 758.00 │ 758.00 │ 758.00 │ 758.00 │ ├───────┼────────┼────────┼────────┼────────┼───────────┼──────────────┤ │ mean │ 121.57 │ 123.07 │ 120.15 │ 121.68 │ 120.72 │ 113864153.69 │ ├───────┼────────┼────────┼────────┼────────┼───────────┼──────────────┤ │ std │ 36.37 │ 36.74 │ 35.95 │ 36.34 │ 36.61 │ 56098731.72 │ ├───────┼────────┼────────┼────────┼────────┼───────────┼──────────────┤ │ min │ 53.47 │ 54.11 │ 52.77 │ 53.54 │ 52.38 │ 41000000.00 │ ├───────┼────────┼────────┼────────┼────────┼───────────┼──────────────┤ │ 25% │ 83.10 │ 86.41 │ 83.04 │ 84.16 │ 83.00 │ 77032650.00 │ ├───────┼────────┼────────┼────────┼────────┼───────────┼──────────────┤ │ 50% │ 128.18 │ 129.64 │ 126.63 │ 127.86 │ 126.70 │ 98135650.00 │ ├───────┼────────┼────────┼────────┼────────┼───────────┼──────────────┤ │ 75% │ 149.05 │ 150.38 │ 147.69 │ 149.14 │ 148.50 │ 131152875.00 │ ├───────┼────────┼────────┼────────┼────────┼───────────┼──────────────┤ │ max │ 182.63 │ 182.94 │ 179.12 │ 182.01 │ 181.26 │ 426510000.00 │ └───────┴────────┴────────┴────────┴────────┴───────────┴──────────────┘ Let\u0026rsquo;s use a simple Probabilistic Exponential Smoothing Model to predict the close price. Keep in mind all models are perform automatic historical backtesting before providing future forecasts.\nNote: All models forecaste close by default.\n(🦋) /forecast/ $ expo AAPL 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:17\u0026lt;00:00, 6.44it/s] Exponential smoothing obtains MAPE: 3.86% Actual price: 157.37 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-09-12 │ 157.99 │ ├────────────┼────────────┤ │ 2022-09-13 │ 157.89 │ ├────────────┼────────────┤ │ 2022-09-14 │ 158.32 │ ├────────────┼────────────┤ │ 2022-09-15 │ 158.25 │ ├────────────┼────────────┤ │ 2022-09-16 │ 158.52 │ └────────────┴────────────┘ That looks great, but we might want to see it a little more up close. Lets set the flag for --forecast-only.\nWe can also play with some models that are bit more advanced. As we go down the list, models begin to become larger in parameter size and complexity. This will play a key role later on when we want to train models with past_covariates (aka. external factors).\nThis time lets test with a Recurrent Neural Network which by default uses an LSTM backbone. We can also choose to test out a GRU backbone to experiment. Let\u0026rsquo;s do both and see if we can improve our accuracy and reduce the overall MAPE.\n(🦋) /forecast/ $ rnn AAPL --forecast-only Epoch 193: 100%|███████████████████████████████████████████████████████████| 25/25 [00:00\u0026lt;00:00, 129.49it/s, loss=-2.74, train_loss=-2.75, val_loss=-2.22] Predicting RNN for 5 days 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:01\u0026lt;00:00, 86.89it/s] RNN model obtains MAPE: 3.69% Actual price: 157.37 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-09-12 │ 155.71 │ ├────────────┼────────────┤ │ 2022-09-13 │ 155.42 │ ├────────────┼────────────┤ │ 2022-09-14 │ 155.11 │ ├────────────┼────────────┤ │ 2022-09-15 │ 154.81 │ ├────────────┼────────────┤ │ 2022-09-16 │ 154.51 │ └────────────┴────────────┘ Seems like we improved the performance and reduced MAPE!\nNow for the second task, we would like to change the model type from LSTM \u0026ndash;\u0026gt; GRU. Use the -h flag to understand the particular parameters one can change for RNN. (Please note that the parameters are different for each model).\n(🦋) /forecast/ $ rnn -h usage: rnn [--hidden-dim HIDDEN_DIM] [--training_length TRAINING_LENGTH] [--naive] [-d {AAPL,msft}] [-c TARGET_COLUMN] [-n N_DAYS] [-t TRAIN_SPLIT] [-i INPUT_CHUNK_LENGTH] [--force-reset FORCE_RESET] [--save-checkpoints SAVE_CHECKPOINTS] [--model-save-name MODEL_SAVE_NAME] [--n-epochs N_EPOCHS] [--model-type MODEL_TYPE] [--dropout DROPOUT] [--batch-size BATCH_SIZE] [--end S_END_DATE] [--start S_START_DATE] [--learning-rate LEARNING_RATE] [--residuals] [--forecast-only] [-h] [--export EXPORT] Perform RNN forecast (Vanilla RNN, LSTM, GRU) optional arguments: --hidden-dim HIDDEN_DIM Size for feature maps for each hidden RNN layer (h_n) (default: 20) --training_length TRAINING_LENGTH The length of both input (target and covariates) and output (target) time series used during training. Generally speaking, training_length should have a higher value than input_chunk_length because otherwise during training the RNN is never run for as many iterations as it will during training. (default: 20) --naive Show the naive baseline for a model. (default: False) -d {AAPL,msft}, --target-dataset {AAPL,msft} The name of the dataset you want to select (default: None) -c TARGET_COLUMN, --target-column TARGET_COLUMN The name of the specific column you want to use (default: close) -n N_DAYS, --n-days N_DAYS prediction days. (default: 5) -t TRAIN_SPLIT, --train-split TRAIN_SPLIT Start point for rolling training and forecast window. 0.0-1.0 (default: 0.85) -i INPUT_CHUNK_LENGTH, --input-chunk-length INPUT_CHUNK_LENGTH Number of past time steps for forecasting module at prediction time. (default: 14) --force-reset FORCE_RESET If set to True, any previously-existing model with the same name will be reset (all checkpoints will be discarded). (default: True) --save-checkpoints SAVE_CHECKPOINTS Whether to automatically save the untrained model and checkpoints. (default: True) --model-save-name MODEL_SAVE_NAME Name of the model to save. (default: rnn_model) --n-epochs N_EPOCHS Number of epochs over which to train the model. (default: 300) --model-type MODEL_TYPE Either a string specifying the RNN module type (\u0026quot;RNN\u0026quot;, \u0026quot;LSTM\u0026quot; or \u0026quot;GRU\u0026quot;) (default: LSTM) --dropout DROPOUT Fraction of neurons afected by Dropout. (default: 0) --batch-size BATCH_SIZE Number of time series (input and output) used in each training pass (default: 32) --end S_END_DATE The end date (format YYYY-MM-DD) to select for testing (default: None) --start S_START_DATE The start date (format YYYY-MM-DD) to select for testing (default: None) --learning-rate LEARNING_RATE Learning rate during training. (default: 0.001) --residuals Show the residuals for the model. (default: False) --forecast-only Do not plot the hisotorical data without forecasts. (default: False) -h, --help show this help message (default: False) --export EXPORT Export figure into png, jpg, pdf, svg (default: ) Lets change the --model-type parameter to GRU and rerun.\n(🦋) /forecast/ $ rnn AAPL --model-type GRU --forecast-only Epoch 35: 100%|████████████████████████████████████████████████████████████| 25/25 [00:00\u0026lt;00:00, 125.85it/s, loss=-2.72, train_loss=-2.74, val_loss=-2.13] Predicting RNN for 5 days 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:01\u0026lt;00:00, 85.14it/s] RNN model obtains MAPE: 3.64% Actual price: 157.37 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-09-12 │ 155.28 │ ├────────────┼────────────┤ │ 2022-09-13 │ 155.02 │ ├────────────┼────────────┤ │ 2022-09-14 │ 154.65 │ ├────────────┼────────────┤ │ 2022-09-15 │ 154.30 │ ├────────────┼────────────┤ │ 2022-09-16 │ 153.96 │ └────────────┴────────────┘ Looks like we squeezed out a little bit more accuracy! Good work.\nThe take away for this is that all models should work out of the box when forecasting for a particular Timeseries. One can switch the target by specifying a -c for TARGET_COLUMN and test out performance with multiple different models with a single command.\nSample workflow #2 (advanced)    To build successful models and improve accuracy over time, it is important to capture external data related to the timeseries you are training on. This can be seen in everyday applications:\n Observed rainfalls and known weather forecasts can help to predict hydro and solar electricity production Recently-observed activity on an e-commerce website can help predict future sales. Making the model aware of up-coming holidays can help sales forecasting.  In fact, more often than not, strictly relying on the history of a time series to predict its future is missing a lot of valuable information.\nPast covariates are time series whose past values are known at prediction time. Those series often contain values that have to be observed to be known.\nIf you would like to explore this topic more, please read the blog post written by the authors of Darts.\nNote: Only the following models can handle past_covariates: BlockRNNModel, NBEATSModel, TCNModel, TransformerModel, RegressionModel (incl. LinearRegressionModel), Temporal Fusion Transformer\nIn this work flow lets do the following:\n add in some correlation analysis combine datasets perform feature engineering train models with past_covariates  Let\u0026rsquo;s begin by loading in our datasets of AAPL and MSFT once again. In this work flow we are going to test if close price of MSFT is at all affected by the close of AAPL.\nFor a refresher, we will grab data from the stocks menu found on the terminal.\n(🦋) / $ stocks (🦋) /stocks/ $ load AAPL (🦋) /stocks/ $ forecast (🦋) /forecast/ $ .. (🦋) /stocks/ $ load MSFT (🦋) /stocks/ $ forecast Before we go combining them, let\u0026rsquo;s train a simple Block RNN model on MSFT close price to see how to use past_covariates\nMake sure to always check your current data set to know the column names:\n(🦋) /forecast/ $ show MSFT MSFT dataset has shape (row, column): (759, 7) Dataset MSFT | Showing 10 of 759 rows ┏━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ ┡━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━┩ │ 0 │ 2019-09-10 00:00:00 │ 136.80 │ 136.89 │ 134.51 │ 136.08 │ 132.22 │ 28903400 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 1 │ 2019-09-11 00:00:00 │ 135.91 │ 136.27 │ 135.09 │ 136.12 │ 132.26 │ 24726100 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 2 │ 2019-09-12 00:00:00 │ 137.85 │ 138.42 │ 136.87 │ 137.52 │ 133.62 │ 27010000 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 3 │ 2019-09-13 00:00:00 │ 137.78 │ 138.06 │ 136.57 │ 137.32 │ 133.42 │ 23363100 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 4 │ 2019-09-16 00:00:00 │ 135.83 │ 136.70 │ 135.66 │ 136.33 │ 132.46 │ 16731400 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 5 │ 2019-09-17 00:00:00 │ 136.96 │ 137.52 │ 136.43 │ 137.39 │ 133.49 │ 17814200 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 6 │ 2019-09-18 00:00:00 │ 137.36 │ 138.67 │ 136.53 │ 138.52 │ 134.59 │ 23982100 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 7 │ 2019-09-19 00:00:00 │ 140.30 │ 142.37 │ 140.07 │ 141.07 │ 137.07 │ 35772100 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 8 │ 2019-09-20 00:00:00 │ 141.01 │ 141.65 │ 138.25 │ 139.44 │ 135.48 │ 39167300 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┤ │ 9 │ 2019-09-23 00:00:00 │ 139.23 │ 139.63 │ 138.44 │ 139.14 │ 135.19 │ 17139300 │ └───┴─────────────────────┴────────┴────────┴────────┴────────┴───────────┴──────────┘ Without any covariates:\n(🦋) /forecast/ $ brnn MSFT --forecast-only Epoch 87: 100%|█████████████████████████████████████████████████████████████| 25/25 [00:00\u0026lt;00:00, 33.84it/s, loss=-2.06, train_loss=-2.27, val_loss=-1.82] Predicting Block RNN for 5 days 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:06\u0026lt;00:00, 18.76it/s] Block RNN model obtains MAPE: 4.62% Actual price: 251.99 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-09-14 │ 258.52 │ ├────────────┼────────────┤ │ 2022-09-15 │ 258.01 │ ├────────────┼────────────┤ │ 2022-09-16 │ 258.95 │ ├────────────┼────────────┤ │ 2022-09-19 │ 257.20 │ ├────────────┼────────────┤ │ 2022-09-20 │ 257.66 │ └────────────┴────────────┘ With covariates:\nTo use any covariates, you have 2 options:\n specify specific columns with --past-covariates specify all columns as past covariates except the one you are forecasting --all-past-covariates  (🦋) /forecast/ $ brnn MSFT --forecast-only --past-covariates volume Covariate #0: volume Epoch 37: 100%|████████████████████████████████████████████████████████████| 25/25 [00:00\u0026lt;00:00, 149.03it/s, loss=-2.16, train_loss=-2.08, val_loss=-1.44] Predicting Block RNN for 5 days 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:01\u0026lt;00:00, 88.94it/s] Block RNN model obtains MAPE: 5.10% Actual price: 251.99 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-09-14 │ 257.02 │ ├────────────┼────────────┤ │ 2022-09-15 │ 255.82 │ ├────────────┼────────────┤ │ 2022-09-16 │ 260.13 │ ├────────────┼────────────┤ │ 2022-09-19 │ 258.32 │ ├────────────┼────────────┤ │ 2022-09-20 │ 258.52 │ └────────────┴────────────┘ You can see here that adding in the external variable of volume negatively affected the accuracy.\nLet\u0026rsquo;s add in all remaining columns from our dataset as covariates and see what happens to the accuracy.\n(🦋) /forecast/ $ brnn MSFT --forecast-only --all-past-covariates Covariate #0: open Covariate #1: high Covariate #2: low Covariate #3: adj_close Covariate #4: volume Epoch 50: 100%|████████████████████████████████████████████████████████████| 25/25 [00:00\u0026lt;00:00, 149.29it/s, loss=-2.41, train_loss=-2.53, val_loss=-1.71] Predicting Block RNN for 5 days 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:01\u0026lt;00:00, 89.43it/s] Block RNN model obtains MAPE: 4.26% Actual price: 251.99 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-09-14 │ 259.28 │ ├────────────┼────────────┤ │ 2022-09-15 │ 259.13 │ ├────────────┼────────────┤ │ 2022-09-16 │ 259.42 │ ├────────────┼────────────┤ │ 2022-09-19 │ 257.73 │ ├────────────┼────────────┤ │ 2022-09-20 │ 258.64 │ └────────────┴────────────┘ Final Result: Using open, high, low, adj_close, volume as past_covariates improved MAPE from 4.62 \u0026ndash;\u0026gt; 4.26.\nNow that we know how to use covariates and understand their effect, why don\u0026rsquo;t we also use AAPL\u0026rsquo;s ticker data as past_covariates to check whether this correlates and improves our forecasting accuracy.\nRemember: You can use unlimited number of past_covariates but they must all be combined into a single dataframe with the target forecast timeseries before training.\nWe will combine MSFT and AAPL.\n(🦋) /forecast/ $ combine MSFT -c AAPL (🦋) /forecast/ $ show MSFT MSFT dataset has shape (row, column): (759, 13) Dataframe has more than 10 columns. Please export to see all of the data. Dataset MSFT | Showing 10 of 759 rows ┏━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ date ┃ open ┃ high ┃ low ┃ close ┃ adj_close ┃ volume ┃ AAPL_open ┃ AAPL_high ┃ AAPL_low ┃ ┡━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━┩ │ 0 │ 2019-09-10 00:00:00 │ 136.80 │ 136.89 │ 134.51 │ 136.08 │ 132.22 │ 28903400 │ 53.47 │ 54.19 │ 52.93 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 1 │ 2019-09-11 00:00:00 │ 135.91 │ 136.27 │ 135.09 │ 136.12 │ 132.26 │ 24726100 │ 54.52 │ 55.93 │ 54.43 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 2 │ 2019-09-12 00:00:00 │ 137.85 │ 138.42 │ 136.87 │ 137.52 │ 133.62 │ 27010000 │ 56.20 │ 56.60 │ 55.72 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 3 │ 2019-09-13 00:00:00 │ 137.78 │ 138.06 │ 136.57 │ 137.32 │ 133.42 │ 23363100 │ 55.00 │ 55.20 │ 54.26 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 4 │ 2019-09-16 00:00:00 │ 135.83 │ 136.70 │ 135.66 │ 136.33 │ 132.46 │ 16731400 │ 54.43 │ 55.03 │ 54.39 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 5 │ 2019-09-17 00:00:00 │ 136.96 │ 137.52 │ 136.43 │ 137.39 │ 133.49 │ 17814200 │ 54.99 │ 55.21 │ 54.78 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 6 │ 2019-09-18 00:00:00 │ 137.36 │ 138.67 │ 136.53 │ 138.52 │ 134.59 │ 23982100 │ 55.26 │ 55.71 │ 54.86 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 7 │ 2019-09-19 00:00:00 │ 140.30 │ 142.37 │ 140.07 │ 141.07 │ 137.07 │ 35772100 │ 55.50 │ 55.94 │ 55.09 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 8 │ 2019-09-20 00:00:00 │ 141.01 │ 141.65 │ 138.25 │ 139.44 │ 135.48 │ 39167300 │ 55.35 │ 55.64 │ 54.37 │ ├───┼─────────────────────┼────────┼────────┼────────┼────────┼───────────┼──────────┼───────────┼───────────┼──────────┤ │ 9 │ 2019-09-23 00:00:00 │ 139.23 │ 139.63 │ 138.44 │ 139.14 │ 135.19 │ 17139300 │ 54.74 │ 54.96 │ 54.41 │ └───┴─────────────────────┴────────┴────────┴────────┴────────┴───────────┴──────────┴───────────┴───────────┴──────────┘ Now we can run the same BRNN model with all past_covariates of both tickers. The output will show the model grabbing all covariates to bring into training to predict close of MSFT.\n(🦋) /forecast/ $ brnn MSFT --forecast-only --all-past-covariates Covariate #0: open Covariate #1: high Covariate #2: low Covariate #3: adj_close Covariate #4: volume Covariate #5: AAPL_open Covariate #6: AAPL_high Covariate #7: AAPL_low Covariate #8: AAPL_close Covariate #9: AAPL_adj_close Covariate #10: AAPL_volume Epoch 116: 100%|████████████████████████████████████████████████████████████| 25/25 [00:00\u0026lt;00:00, 149.26it/s, loss=-2.5, train_loss=-2.61, val_loss=-1.93] Predicting Block RNN for 5 days 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 115/115 [00:01\u0026lt;00:00, 90.26it/s] Block RNN model obtains MAPE: 3.93% Actual price: 251.99 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-09-14 │ 259.78 │ ├────────────┼────────────┤ │ 2022-09-15 │ 258.15 │ ├────────────┼────────────┤ │ 2022-09-16 │ 261.44 │ ├────────────┼────────────┤ │ 2022-09-19 │ 257.57 │ ├────────────┼────────────┤ │ 2022-09-20 │ 257.99 │ └────────────┴────────────┘ For one last experiment, we can perform some other feature engineering on MSFT and add it to our past_covariates to train on.\nIn this case, let\u0026rsquo;s add in Momentum over past 10 days of MSFT and append it to our past_covariates\n(🦋) /forecast/ $ mom MSFT Successfully added 'Momentum_10' to 'MSFT' dataset (🦋) /forecast/ $ brnn MSFT --forecast-only --all-past-covariates The data contains inf or nan values. They will be removed. Covariate #0: open Covariate #1: high Covariate #2: low Covariate #3: adj_close Covariate #4: volume Covariate #5: AAPL_open Covariate #6: AAPL_high Covariate #7: AAPL_low Covariate #8: AAPL_close Covariate #9: AAPL_adj_close Covariate #10: AAPL_volume Covariate #11: Momentum_10 Epoch 71: 100%|████████████████████████████████████████████████████████████| 24/24 [00:00\u0026lt;00:00, 147.87it/s, loss=-2.52, train_loss=-2.57, val_loss=-1.82] Predicting Block RNN for 5 days 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 114/114 [00:01\u0026lt;00:00, 90.05it/s] Block RNN model obtains MAPE: 3.72% Actual price: 251.99 ┏━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Datetime ┃ Prediction ┃ ┡━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2022-09-14 │ 255.14 │ ├────────────┼────────────┤ │ 2022-09-15 │ 256.20 │ ├────────────┼────────────┤ │ 2022-09-16 │ 256.67 │ ├────────────┼────────────┤ │ 2022-09-19 │ 258.63 │ ├────────────┼────────────┤ │ 2022-09-20 │ 256.62 │ └────────────┴────────────┘ There we have it. Bringing in another ticker has allowed us to further improve the model accuracy. Furthermore, adding in a new feature to the dataset allowed us to improve the accuracy further.\nMAPE = 4.62% (no past covariates)\nMAPE = 4.26% (open,high,low,adj_close,volume)\nMAPE = 3.93% (open,high,low,adj_close,volume,AAPL_open,AAPL_high,APPL_low,APPL_adj_close,APPL_volume,APPL_close)\nMAPE = 3.72% (open,high,low,adj_close,volume,AAPL_open,AAPL_high,APPL_low,APPL_adj_close,APPL_volume,APPL_close,Momentum_10)\nMore workflows coming soon!\nIf you have any questions or would like to request for new feature engineering or model additions, please join us on discord. Happy hacking!\n"},{"id":1303,"href":"/OpenBBTerminal/terminal/forex/","title":"Introduction to Forex","parent":"Terminal","content":"The Forex menu enables you to load any combination of currencies (e.g. USDEUR or JPYGBP), show current quote and historical data (candle) as well as forward rates (fwd). Furthermore, the menu has the ability to also apply Technical Analysis and Forecasting menu while also having an integration with Oanda.\nHow to use    The Forex menu is called upon by typing forex which opens the following menu:\nYou have the ability to load any currency pair with load as follows:\nWhen you do so, a lot of commands turn Blue. These can now be used to analyse the selected currency pair.\nFor example, you are able to show the quote of the currency pair by using the quote command:\n2022 Jun 29, 07:04 (🦋) /forex/ $ quote USD/EUR Quote ┏━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ ┃ Realtime Currency Exchange Rate ┃ ┡━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ From_Currency Code │ USD │ ├────────────────────┼─────────────────────────────────┤ │ To_Currency Code │ EUR │ ├────────────────────┼─────────────────────────────────┤ │ Last Refreshed │ 2022-06-29 11:08:00 │ ├────────────────────┼─────────────────────────────────┤ │ Exchange Rate │ 0.94960000 │ ├────────────────────┼─────────────────────────────────┤ │ Bid Price │ 0.94960000 │ ├────────────────────┼─────────────────────────────────┤ │ Ask Price │ 0.94960000 │ └────────────────────┴─────────────────────────────────┘ Or show the historical data on the currency pair with candle as follows:\n2022 Jun 29, 07:09 (🦋) /forex/ $ candle Which returns the following:\nLastly, insights in the forward valuations can also be given with fwd.\n2022 Jun 29, 07:19 (🦋) /forex/ $ fwd Forward rates for USD/EUR ┏━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━━┓ ┃ Expirations ┃ Ask ┃ Bid ┃ Mid ┃ Points ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━━┩ │ Overnight │ 0.9499 │ 0.9498 │ 0.9499 │ -0.5750 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Tomorrow Next │ 0.9499 │ 0.9498 │ 0.9498 │ -0.7250 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Spot Next │ 0.9497 │ 0.9496 │ 0.9497 │ -2.3450 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ One Week │ 0.9495 │ 0.9495 │ 0.9495 │ -4.1550 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Two Weeks │ 0.9491 │ 0.9491 │ 0.9491 │ -8.2600 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Three Weeks │ 0.9487 │ 0.9486 │ 0.9487 │ -12.4150 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ One Month │ 0.9481 │ 0.9480 │ 0.9480 │ -18.8850 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Two Months │ 0.9459 │ 0.9458 │ 0.9458 │ -40.8200 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Three Months │ 0.9436 │ 0.9435 │ 0.9436 │ -63.4650 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Four Months │ 0.9415 │ 0.9414 │ 0.9415 │ -84.5500 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Five Months │ 0.9394 │ 0.9392 │ 0.9393 │ -106.2650 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Six Months │ 0.9361 │ 0.9360 │ 0.9360 │ -138.8800 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Seven Months │ 0.9342 │ 0.9340 │ 0.9341 │ -158.3750 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Eight Months │ 0.9323 │ 0.9322 │ 0.9322 │ -176.9850 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Nine Months │ 0.9302 │ 0.9300 │ 0.9301 │ -198.1200 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Ten Months │ 0.9284 │ 0.9283 │ 0.9284 │ -215.5000 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Eleven Months │ 0.9268 │ 0.9267 │ 0.9268 │ -231.6250 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ One Year │ 0.9252 │ 0.9250 │ 0.9251 │ -248.6650 │ ├───────────────┼────────┼────────┼────────┼───────────┤ │ Two Years │ 0.9111 │ 0.9106 │ 0.9109 │ -390.6350 │ └───────────────┴────────┴────────┴────────┴───────────┘ Furthermore, the ability exists to take the currency pair to the Technical Analysis menu by typing ta:\nExamples    First, let\u0026rsquo;s start with looking at the currency pair USD and GBP. These are the U.S. Dollars and the Pound sterling. This is done by using the load command as follows with the addition that the -s command is used to change the start date:\n2022 Jun 29, 07:16 (🦋) /forex/ $ load USDGBP -s 2015-01-01 USD-GBP loaded. Then, let\u0026rsquo;s see how this currency pair has changed over the last years with candle also adding in the --ma 60,120 argument:\nNow it\u0026rsquo;s time to take this to the Quantitative Analysis menu by typing qa. This returns the following:\nWithin this menu we can show some rolling statistics, for example show the rolling values for the mean and standard deviation of the currency pair:\nLastly, more advanced techniques can also be applied regarding seasonality with decompose:\n2022 Jun 29, 07:26 (🦋) /forex/qa/ $ decompose Time-Series Level is 0.75 Strength of Trend: 421.7107 Strength of Seasonality: 0.0031 "},{"id":1304,"href":"/OpenBBTerminal/terminal/funds/","title":"Introduction to Funds","parent":"Terminal","content":"The Funds menu enables you to lookup any fund based on the selected country by using overview and search. Then, there is the ability to load in the symbol with load. This opens up options to look into fund information, sector holdings and equity holdings as well as plot the historical data.\nHow to use    The Funds menu is called upon by typing funds which opens the following menu:\nYou have the ability to look up any fund (overview or search). With the example below, the search command is used that searches the name and description of the fund. Then the search query is entered which is total market. Lastly, the -l argument is included which refers to limit and is maxed to 10 funds.\n2022 Jun 22, 04:20 (🦋) /funds/ $ search total market -l 10 Mutual Funds with name matching total market ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ name ┃ symbol ┃ issuer ┃ isin ┃ asset_class ┃ currency ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ State Street U.s. Total Market Index Non-lending Series Fund Class A │ 0P0000RT44 │ State Street Global Advisors │ US85744U4022 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ Nh Unique College Investing Plan Total Market Index Portfolio │ 0P0000O6ZV │ Fidelity Investments │ US37N9946965 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ Ma U.fund College Investing Plan Spartan Total Market Index Portfolio │ 0P0000O6ML │ Fidelity Investments │ US10W99R2702 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ Fidelity Zero Total Market Index Fund │ FZROX │ Fidelity Investments │ US31635T7081 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ Fidelity Total Market Index Fund Class F │ FFSMX │ Fidelity Investments │ US3159117767 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ Fidelity Total Market Index Fund │ FSKAX │ Fidelity Investments │ US3159116934 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ De College Investment Plan Spartan Total Market Index Portfolio │ 0P0000O6T1 │ Fidelity Investments │ US37Q99B3259 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ Blackrock Advantage U.s. Total Market Fund, Inc.investor C Shares │ MCSPX │ BlackRock │ US09252L3078 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ Blackrock Advantage U.s. Total Market Fund, Inc.investor A Shares │ MDSPX │ BlackRock │ US09252L1098 │ equity │ USD │ ├───────────────────────────────────────────────────────────────────────┼────────────┼──────────────────────────────┼──────────────┼─────────────┼──────────┤ │ Blackrock Advantage U.s. Total Market Fund, Inc.institutional Shares │ MASPX │ BlackRock │ US09252L5057 │ equity │ USD │ └───────────────────────────────────────────────────────────────────────┴────────────┴──────────────────────────────┴──────────────┴─────────────┴──────────┘ This results in a selection of funds with their name, symbol, issuer, isin, asset class and currency. With this information, you can load in one of the symbols into the menu. This can be done with load. See the following example:\n2022 Jun 22, 04:30 (🦋) /funds/ $ load MDSPX Name: Blackrock Advantage U.S. Total Market Fund, Inc.Investor A Shares found for MDSPX in country: United States. To then view the stock chart, you can call plot which shows a chart for the defined period (by default set to a year by load):\nBy calling ? or help the Funds menu re-appears. Here you can see that multiple commands have turned blue. Because of loading a symbol, these commands can now be used in combination with the chosen symbol as seen above.\nFor example, the Fund\u0026rsquo;s general statistics can now be depicted with the following:\n2022 Jun 22, 04:34 (🦋) /funds/ $ info Blackrock Advantage U.S. Total Market Fund, Inc.Investor A Shares Information ┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Info ┃ Value ┃ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Fund Name │ blackrock advantage u.s. total market fund, inc.investor a shares │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ 1-Year Change │ - 25.21% │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ TTM Yield │ 0.98% │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ ROE │ 14.91% │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ Turnover │ 71% │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ ROA │ 4.94% │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ Inception Date │ 34628.00 │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ Total Assets │ 181230000.00 │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ Expenses │ 0.73% │ ├────────────────┼───────────────────────────────────────────────────────────────────┤ │ Market Cap │ 6380000000.00 │ └────────────────┴───────────────────────────────────────────────────────────────────┘ Examples    If we want to learn more about a bond fund, we can do the following, starting from the funds menu and using the search command where we specify with -l we wish to see 15 funds max.\n2022 Jun 22, 04:40 (🦋) /funds/ $ search bond fund -l 15 Mutual Funds with name matching bond fund ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ name ┃ symbol ┃ issuer ┃ isin ┃ asset_class ┃ currency ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ Wilmington Short-term Bond Fund Institutional Class │ MVSTX │ Wilmington Funds │ US97181C5976 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Wilmington Municipal Bond Fund Class Institutional │ WTAIX │ Wilmington Funds │ US97181C4565 │ equity │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Wilmington Intermediate-term Bond Fund Institutional Class │ ARIFX │ Wilmington Funds │ US97181C8459 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Wilmington Broad Market Bond Fund Institutional Class │ ARKIX │ Wilmington Funds │ US97181C8111 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Short-term Bond Fund Class Is │ LWSTX │ Legg Mason │ US52468A7312 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Intermediate Bond Fund Class Is │ WABSX │ Legg Mason │ US9576636107 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Intermediate Bond Fund Class I │ WATIX │ Legg Mason │ US9576637014 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Inflation Indexed Plus Bond Fund Class Is │ WAFSX │ Legg Mason │ US9576635455 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Global High Yield Bond Fund Class Is │ LWGSX │ Legg Mason │ US52468A7239 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Global High Yield Bond Fund Class A │ SAHYX │ Legg Mason │ US52469F4651 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Corporate Bond Fund Class P │ 0P0000JCKF │ Legg Mason │ US52469L6609 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Corporate Bond Fund Class I │ 0P00002OJN │ Legg Mason │ US52469F2754 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Corporate Bond Fund Class C1 │ 0P00002Q4W │ Legg Mason │ US52469F2838 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Corporate Bond Fund Class A │ SIGAX │ Legg Mason │ US52469F3174 │ bond │ USD │ ├────────────────────────────────────────────────────────────┼────────────┼──────────────────┼──────────────┼─────────────┼──────────┤ │ Western Asset Core Bond Fund Class R │ 0P0000VORL │ Legg Mason │ US9576634797 │ bond │ USD │ └────────────────────────────────────────────────────────────┴────────────┴──────────────────┴──────────────┴─────────────┴──────────┘ Here, we decide to grab a corporate bond fund, Western Asset Corporate Bond Fund Class A (SIGAX) by loading in the data with load. Also, a larger period is chosen by using -s as shown in the documentation:\n2022 Jun 22, 04:58 (🦋) /funds/ $ load SIGAX -s 2015-01-01 Name: Western Asset Corporate Bond Fund Class A found for SIGAX in country: United States. We can now plot the corresponding funds chart with plot which shows the company\u0026rsquo;s historical data from 2015-01-01 until the current date.\n2022 Jun 22, 04:58 (🦋) /funds/ $ plot Now we can go ahead and explore more about the fund by running info. This provides some general statistics about the fund.\n2022 Jun 22, 05:00 (🦋) /funds/ $ info Western Asset Corporate Bond Fund Class A Information ┏━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Info ┃ Value ┃ ┡━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩ │ Fund Name │ western asset corporate bond fund class a │ ├────────────────┼───────────────────────────────────────────┤ │ 1-Year Change │ - 18.06% │ ├────────────────┼───────────────────────────────────────────┤ │ TTM Yield │ 2.76% │ ├────────────────┼───────────────────────────────────────────┤ │ ROE │ 8.87% │ ├────────────────┼───────────────────────────────────────────┤ │ Turnover │ 63% │ ├────────────────┼───────────────────────────────────────────┤ │ ROA │ 6.18% │ ├────────────────┼───────────────────────────────────────────┤ │ Inception Date │ 33914.00 │ ├────────────────┼───────────────────────────────────────────┤ │ Total Assets │ 268590000.00 │ ├────────────────┼───────────────────────────────────────────┤ │ Expenses │ 0.87% │ ├────────────────┼───────────────────────────────────────────┤ │ Market Cap │ 6070000000.00 │ └────────────────┴───────────────────────────────────────────┘ "},{"id":1305,"href":"/OpenBBTerminal/terminal/futures/","title":"Introduction to Futures","parent":"Terminal","content":"The Futures menu provides historical prices and the current term structure for an asset. This menu is accessible from the Main menu by typing futures and pressing the enter key. How to Use    There are three basic functions within this menu:\n Search Historical Curve  Search allows the user to find which instruments are supported, and can be searched by the description. For example, searching for silver will return these results:\nsearch -d silver To view an entire category, attach the --category flag to the function and select using the arrow keys.\nsearch --category currency Both curve and historical use the ticker symbol shown by the search function, for example, to see a chart of the current Eurodollar Futures term structure, simply enter:\n`curve GE` The raw data can be printed as a table or exported to a file, by attaching the optional arguments: --raw, or, --export {filetype}. For example, Global Emissions Offset Futures:\ncurve GEO --raw The continuous chart is displayed with the historical command + the symbol. To see the optional arguments available for the command, deploy the -h flag. For example, the Eurodollar Futures contract for December 2024 expiry is displayed with:\nhistorical GE -s 2015-01-01 -e 2024-12 Multiple continuous charts can be plotted on the same chart by using a comma-separated list:\nhistorical GE,ZQ -s 2007-01-01 "},{"id":1306,"href":"/OpenBBTerminal/terminal/crypto/nft/","title":"Introduction to Non Fungible Token (NFT)","parent":"Introduction to Cryptocurrency","content":"The Non Fungible Token (NFT) menu gives the user the ability to dive into certain NFTs (stats).\nHow to use    The Non Fungible Token (NFT) menu is called upon by typing nft, while inside the crypto menu, which opens the following menu:\nAlternatively, you can also type /crypto/nft. Within the Non Fungible Token (NFT) menu you can explore the statistics of specific NFTs you are interested in.\nWe can look into the statistics of a specific NFT once you know the slug (e.g. mutant-ape-yacht-club) with stats as follows:\n2022 Jul 13, 08:10 (🦋) /crypto/nft/ $ stats mutant-ape-yacht-club Collection Stats ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┓ ┃ Metric ┃ Value ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━┩ │ Name │ Mutant Ape Yacht Club │ ├────────────────────────────────┼───────────────────────┤ │ Floor Price (ETH) │ 19.70 │ ├────────────────────────────────┼───────────────────────┤ │ Number of Owners │ 13029.00 │ ├────────────────────────────────┼───────────────────────┤ │ Market Cap (ETH) │ 404479.49 │ ├────────────────────────────────┼───────────────────────┤ │ Average Price ETH │ 12.91 │ ├────────────────────────────────┼───────────────────────┤ │ One day volume (ETH) │ 300.75 │ ├────────────────────────────────┼───────────────────────┤ │ One day change (%) │ -36.10 │ ├────────────────────────────────┼───────────────────────┤ │ One day sales (ETH) │ 14.00 │ ├────────────────────────────────┼───────────────────────┤ │ One day average price (ETH) │ 21.48 │ ├────────────────────────────────┼───────────────────────┤ │ Thirty day volume (ETH) │ 18341.20 │ ├────────────────────────────────┼───────────────────────┤ │ Thirty day change (%) │ 18.40 │ ├────────────────────────────────┼───────────────────────┤ │ Thirty day sales (ETH) │ 959.00 │ ├────────────────────────────────┼───────────────────────┤ │ Thirty day average price (ETH) │ 19.13 │ ├────────────────────────────────┼───────────────────────┤ │ Total Supply (ETH) │ 19424.00 │ ├────────────────────────────────┼───────────────────────┤ │ Total Sales (ETH) │ 33412.00 │ ├────────────────────────────────┼───────────────────────┤ │ Total Volume (ETH) │ 431381.31 │ ├────────────────────────────────┼───────────────────────┤ │ Creation Date │ Aug 29, 2021 │ ├────────────────────────────────┼───────────────────────┤ │ URL │ - │ └────────────────────────────────┴───────────────────────┘ "},{"id":1307,"href":"/OpenBBTerminal/terminal/portfolio/","title":"Introduction to Portfolio","parent":"Terminal","content":"The Portfolio menu, and its sub-menus, are dedicated to properly explaining and optimizing your own portfolio. With features to load your own orderbook (transactions) it is possible to compare your results to that of a benchmark. For example, you are able to load both your portfolio and a benchmark (load and bench), then have the option to look into the performance compared to the benchmark asking the question \u0026ldquo;What if I invested all my money in the benchmark instead?\u0026rdquo; (perf) as well as see a wide variety of statistics and metrics (rsharpe, distr, var and metric). Next to that, with these findings you can apply optimization techniques to your portfolio through the Portfolio Optimization menu.\nHow to use    The Portfolio menu is called upon by typing portfolio which opens the following menu:\nThe first step in using this menu is loading a portfolio with load. Here, we provide an example titled \u0026ldquo;Public_Equity_Orderbook.xlsx\u0026rdquo; which can be loaded in. This file also serves as a template when you wish to fill in your own orders. This results in the following:\n2022 Jul 19, 10:03 (🦋) /portfolio/ $ load Public_Equity_Orderbook.xlsx Preprocessing orderbook: .......... Loading price data: . Calculating returns: . Portfolio: Public_Equity_Orderbook.xlsx Risk Free Rate: 0 Note that the Excel sheet requires the following columns:\n Date - The date the trade occurred Name - The name of the security Type - The type of the security. Use Cash/Stock/Crypto/ETF as appropriate Price - The price the security was added or removed at, on a per-unit basis Quantity - How much of the security in question was added or removed Side - Whether you bought or sold. Use Buy/Deposit/1 to add to the portfolio or Sell/Withdrawal/0 to remove from the portfolio a search criteria, country, sector or industry.  Furthermore, the chosen Excel sheet above also has additional columns but these are optional. The OpenBB Terminal can figure out by itself what industry, sector, country and region belongs to the loaded in equity. You can see this in action by loading in the \u0026ldquo;Public_Equity_Orderbook_No_Categorization.xlsx\u0026rdquo; Excel sheet.\nWith the show command we can show how the data has been loaded in:\n2022 Jul 19, 10:03 (🦋) /portfolio/ $ show ┏━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━┳━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━┳━━━━━━━━━━┓ ┃ Date ┃ Ticker ┃ Type ┃ Sector ┃ Industry ┃ Country ┃ Region ┃ Price ┃ Quantity ┃ Fees ┃ Premium ┃ Investment ┃ Side ┃ Currency ┃ ┡━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━╇━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━╇━━━━━━━━━━┩ │ 2010-05-03 00:00:00 │ GOOGL │ STOCK │ Communication Services │ Internet Content \u0026amp; Information │ United States │ North America │ 13.27 │ 2 │ 5 │ 6 │ 21.54 │ 1 │ USD │ ├─────────────────────┼────────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2010-07-06 00:00:00 │ AMZN │ STOCK │ Technology │ Internet Retail │ United States │ North America │ 5.50 │ 5 │ 3 │ 3 │ 24.50 │ 1 │ USD │ ├─────────────────────┼────────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2011-08-06 00:00:00 │ AAPL │ STOCK │ Technology │ Consumer Electronics │ United States │ North America │ 12.61 │ 3 │ 1 │ 0 │ 36.83 │ 1 │ USD │ ├─────────────────────┼────────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2011-12-12 00:00:00 │ APTV │ STOCK │ Consumer Cyclical │ Auto Parts │ United States │ North America │ 18.02 │ 5 │ 0 │ 2 │ 90.10 │ 1 │ USD │ ├─────────────────────┼────────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-02-03 00:00:00 │ ASML │ STOCK │ Technology │ Semiconductor Equipment \u0026amp; Materials │ Netherlands │ Europe │ 59.17 │ 7 │ 0 │ 4 │ 414.19 │ 1 │ USD │ ├─────────────────────┼────────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-05-04 00:00:00 │ NKE │ STOCK │ Consumer Cyclical │ Footwear \u0026amp; Accessories │ Germany │ Europe │ 27.95 │ 3 │ 0 │ 0 │ 83.85 │ 1 │ USD │ ├─────────────────────┼────────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-08-04 00:00:00 │ TSM │ STOCK │ Technology │ Semiconductors │ Taiwan │ Asia │ 14.24 │ 50 │ 0 │ 0 │ 712.00 │ 1 │ USD │ ├─────────────────────┼────────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ │ 2012-10-12 00:00:00 │ DGX │ STOCK │ Healthcare │ Diagnostics \u0026amp; Research │ United States │ North America │ 63.39 │ 6 │ 10 │ 0 │ 370.34 │ 1 │ USD │ ├─────────────────────┼────────┼───────┼────────────────────────┼─────────────────────────────────────┼───────────────┼───────────────┼────────┼──────────┼──────┼─────────┼────────────┼──────┼──────────┤ \u0026lt;continues\u0026gt; After loading in the portfolio, it is time to select a benchmark. This is important to be able to properly compare if your decision to trade actively or deviate from an index have actually been fruitful. For example, let\u0026rsquo;s load in the SPDR S\u0026amp;P 500 ETF Trust (SPY) with the bench command as follows:\n2022 Jul 19, 10:14 (🦋) /portfolio/ $ bench SPDR S\u0026amp;P 500 ETF Trust (SPY) Benchmark: SPDR S\u0026amp;P 500 ETF Trust (SPY) (SPY) 2022 Jul 19, 10:16 (🦋) /portfolio/ $ Note that the bench command has a large selection of products you can choose from. Instead of taking the index directly, an ETF product is used to represent something that you could have actually invested in. By using the DOWN (⌄) arrow and pressing ENTER (⏎) you can select a different benchmark.\nAfter defining both the portfolio and the benchmark, a lot more options become available:\nFor example, with perf, we can see how the portfolio performed compared to if you invested the same amount of money into the benchmark instead. This reflects the capabilities of you, as an investor, to outperform a passive strategy.\n2022 Jul 20, 08:26 (🦋) /portfolio/ $ perf Portfolio vs. Benchmark - Totals in period: all ┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Total Investment │ 47665.95 │ 47665.95 │ - │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total Value │ 59961.16 │ 60038.37 │ -77.21 │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total % Return │ 25.79% │ 25.96% │ -0.16% │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total Abs Return │ 12295.21 │ 12372.42 │ -77.21 │ └──────────────────┴───────────┴───────────┴────────────┘ Compliment this by showing the volatility of the portfolio for different time periods with metric as follows:\n2022 Jul 20, 08:27 (🦋) /portfolio/ $ metric volatility Volatility for Portfolio and Benchmark ┏━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓ ┃ ┃ Portfolio [%] ┃ Benchmark [%] ┃ ┡━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩ │ mtd │ 8.185 │ 4.210 │ ├─────┼───────────────┼───────────────┤ │ qtd │ 8.185 │ 4.210 │ ├─────┼───────────────┼───────────────┤ │ ytd │ 31.497 │ 18.220 │ ├─────┼───────────────┼───────────────┤ │ 3m │ 22.340 │ 14.436 │ ├─────┼───────────────┼───────────────┤ │ 6m │ 30.879 │ 17.912 │ ├─────┼───────────────┼───────────────┤ │ 1y │ 35.816 │ 20.128 │ ├─────┼───────────────┼───────────────┤ │ 3y │ 54.981 │ 41.174 │ ├─────┼───────────────┼───────────────┤ │ 5y │ 64.408 │ 45.647 │ ├─────┼───────────────┼───────────────┤ │ 10y │ 78.014 │ 53.200 │ ├─────┼───────────────┼───────────────┤ │ all │ 93.956 │ 60.885 │ └─────┴───────────────┴───────────────┘ Examples    Instead of loading the \u0026ldquo;Public_Equity_Orderbook.xlsx\u0026rdquo; file, we now load in \u0026ldquo;Public_Equity_Orderbook_No_Categorization.xlsx\u0026rdquo; which does not include categorization of the stocks by industry, sector, country and region. Therefore, we let the OpenBB Terminal figure this out. This takes a bit longer to load.\n2022 Jul 21, 04:43 (🦋) /portfolio/ $ load Public_Equity_Orderbook_No_Categorization.xlsx Preprocessing orderbook: .......... Loading company data: .......... Loading price data: . Calculating returns: . Portfolio: Public_Equity_Orderbook_No_Categorization.xlsx Risk Free Rate: 0 Then we load in a benchmark again with bench where we select the Vanguard Total Stock Market ETF (VTI).\n2022 Jul 21, 04:44 (🦋) /portfolio/ $ bench Vanguard Total Stock Market ETF (VTI) Benchmark: Vanguard Total Stock Market ETF (VTI) (VTI) Then, we can show our performance compared to that of the benchmark with perf as well as show the rolling beta with rbeta.\n2022 Jul 21, 04:45 (🦋) /portfolio/ $ perf Portfolio vs. Benchmark - Totals in period: all ┏━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Total Investment │ 47665.95 │ 47665.95 │ - │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total Value │ 60815.22 │ 58901.42 │ 1913.79 │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total % Return │ 27.59% │ 23.57% │ 4.02% │ ├──────────────────┼───────────┼───────────┼────────────┤ │ Total Abs Return │ 13149.27 │ 11235.47 │ 1913.79 │ └──────────────────┴───────────┴───────────┴────────────┘ 2022 Jul 21, 04:46 (🦋) /portfolio/ $ rbeta This helps in understanding that, even though you achieved a superior return, this also came at a greater risk compared to that of the benchmark. With the available functionalities you can further look into these results, e.g. by looking at the summary statistics:\n2022 Jul 21, 04:46 (🦋) /portfolio/ $ summary Summary of Portfolio vs Benchmark for all period ┏━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓ ┃ ┃ Portfolio ┃ Benchmark ┃ ┡━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━┩ │ Volatility │ 0.02 │ 0.01 │ ├───────────────────┼───────────┼───────────┤ │ Skew │ -1.65 │ -0.58 │ ├───────────────────┼───────────┼───────────┤ │ Kurtosis │ 32.89 │ 12.12 │ ├───────────────────┼───────────┼───────────┤ │ Maximum Drawdowwn │ -0.42 │ -0.35 │ ├───────────────────┼───────────┼───────────┤ │ Sharpe ratio │ 0.04 │ 0.05 │ ├───────────────────┼───────────┼───────────┤ │ Sortino ratio │ 0.05 │ 0.06 │ ├───────────────────┼───────────┼───────────┤ │ R2 Score │ 0.50 │ 0.50 │ └───────────────────┴───────────┴───────────┘ As well as look into how the allocations differ per sector and country with alloc. This shows that there is a clear difference in how the benchmark and the portfolio are constructed implying the Total Market ETF might not be the best benchmark for your portfolio.\n2022 Jul 21, 04:52 (🦋) /portfolio/ $ alloc sectors Portfolio vs. Benchmark - Top 4 Sectors Allocation ┏━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Sectors ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Technology │ 58.26% │ 23.37% │ 34.89% │ ├────────────────────────┼───────────┼───────────┼────────────┤ │ Consumer Cyclical │ 30.26% │ 10.30% │ 19.96% │ ├────────────────────────┼───────────┼───────────┼────────────┤ │ Healthcare │ 9.98% │ 14.85% │ -4.87% │ ├────────────────────────┼───────────┼───────────┼────────────┤ │ Communication Services │ 1.50% │ 7.98% │ -6.48% │ └────────────────────────┴───────────┴───────────┴────────────┘ 2022 Jul 21, 04:52 (🦋) /portfolio/ $ alloc countries Portfolio vs. Benchmark - Top 5 Countries Allocation ┏━━━━━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ Countries ┃ Portfolio ┃ Benchmark ┃ Difference ┃ ┡━━━━━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Netherlands │ 38.06% │ - │ 38.06% │ ├───────────────┼───────────┼───────────┼────────────┤ │ United States │ 29.69% │ 99.10% │ -69.41% │ ├───────────────┼───────────┼───────────┼────────────┤ │ Taiwan │ 14.66% │ 0.01% │ 14.65% │ ├───────────────┼───────────┼───────────┼────────────┤ │ China │ 11.11% │ - │ 11.11% │ ├───────────────┼───────────┼───────────┼────────────┤ │ Ireland │ 6.47% │ - │ 6.47% │ └───────────────┴───────────┴───────────┴────────────┘ "},{"id":1308,"href":"/OpenBBTerminal/terminal/portfolio/po/","title":"Introduction to Portfolio Optimization","parent":"Introduction to Portfolio","content":"The Portfolio Optimization menu allows the user to apply advanced optimization techniques to a portfolio of any type and of any size. It does so by introducing a multitude of optimization techniques ranging from mean-variance optimization to risk parity models and hierarchical clustering models. By providing Excel templates, the user can make sense of the vast array of parameters that each command has. E.g. think of the historic period you wish to use or which of the more than 10 risk measures and covariance methods should be used? These are questions the templates make easier to answer.\nHow to use    The portfolio optimization menu can be reached by visiting the portfolio menu and typing po (or alternatively, typing /portfolio/po from any location). This opens the following menu:\n\nThis menu requires the usage of the Excel templates to work properly. As there is a lot of complexity involved around these techniques, these templates allow the user to understand what values for each parameter are actually used and allow for an easy way to define the allocation.\nFor this there are two templates that need to be set:\n OpenBB Parameters Template: found in the OpenBB Terminal directory within OpenBB Terminal/OpenBB/portfolio/parameters OpenBB Portfolio Template: found in the OpenBB Terminal directory within OpenBB Terminal/OpenBB/portfolio/allocation  If this location does not exist, use this link to download the most recent versions and place the contents inside a folder named portfolio within the OpenBB Terminal/OpenBB directory.\nOpenBB Parameters Template    This template provides the user with the ability to set define values for each parameter based on the optimization technique that is deployed. E.g. if you select riskparity for the technique parameter, you will notice that some parameters turn grey. This means that the parameter is irrelevant for the selected method.\nThe OpenBB Terminal does, however, allow the user to run any model despite the technique you selected. Therefore, if you are interested in running multiple models, consider removing the value for technique. Do note that this makes it more difficult to understand which values are used for which model.\n\nOnce you have defined the parameters, save the template and load it inside the terminal by using the file command. If done correctly, the parameters file should show automatically after typing file and pressing SPACE. Then, by using the DOWN KEY (⌄) you can select the file by pressing ENTER (⏎) which will then be loaded into the terminal:\n2022 May 02, 06:51 (🦋) /portfolio/po/ $ file OpenBB_Parameters_Template v1.0.0.xlsx Parameters: historic_period : 3y log_returns : 0 return_frequency : d max_nan : 0.05 threshold_value : 0.3 nan_fill_method : time risk_free : 0.003 significance_level : 0.05 risk_measure : MV target_return : -1 target_risk : -1 expected_return : hist covariance : hist smoothing_factor_ewma : 0.94 long_allocation : 1 short_allocation : 0 OpenBB Portfolio Template    This template hands the user a format to work with it to define the portfolio. Here, categorization is applied based on asset class, sector, industry, country and currency. By using the dropdown menus within this Excel, you are able to apply the proper categorization. This is based on the same methodology as found in other areas of the terminal.\n\nYou can load in the portfolio template by using the load command:\n2022 Apr 26, 01:35 (🦋) /portfolio/po/ $ load OpenBB_Portfolio_Template_v1.0.0.xlsx 2022 Apr 26, 02:15 (🦋) /portfolio/po/ $ show Current Portfolios: None Current Categories: ASSET_CLASS, SECTOR, INDUSTRY, COUNTRY, CURRENT_INVESTED_AMOUNT, CURRENCY Performing optimization    Based on the parameters and allocation the user has set, the optimization process begins. What optimization technique is ideal depends entirely on the user\u0026rsquo;s risk profile and objectives. As an illustration, Risk Parity is presented below via the riskparity command:\n2022 May 30, 05:47 (🦋) /portfolio/po/ $ riskparity Optimization can take time. Please be patient... [3 Years] Risk parity portfolio based on risk budgeting approach using volatility as risk measure Weights ┏━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━━╇━━━━━━━━━━┩ │ AAPL │ 3.27 % │ ├───────┼──────────┤ │ AMZN │ 3.81 % │ ├───────┼──────────┤ │ APTV │ 2.17 % │ ├───────┼──────────┤ │ ASML │ 2.48 % │ ├───────┼──────────┤ │ BABA │ 3.42 % │ ├───────┼──────────┤ │ GOOGL │ 3.54 % │ ├───────┼──────────┤ │ HYG │ 9.40 % │ ├───────┼──────────┤ │ IYR │ 3.98 % │ ├───────┼──────────┤ │ NKE │ 3.66 % │ ├───────┼──────────┤ │ PEX │ 3.88 % │ ├───────┼──────────┤ │ PSP │ 3.49 % │ ├───────┼──────────┤ │ REZ │ 4.08 % │ ├───────┼──────────┤ │ TIP │ 26.61 % │ ├───────┼──────────┤ │ TLT │ 22.86 % │ ├───────┼──────────┤ │ TSM │ 3.35 % │ └───────┴──────────┘ Annual (by 252) expected return: 10.03% Annual (by √252) volatility: 11.62% Sharpe ratio: 0.8373 To understand how this portfolio differs from the original portfolio, the show command can be used. This also shows the allocations to each asset class, sector, industry and currency. Using the optimized portfolio, this generates the following results:\n2022 May 30, 05:47 (🦋) /portfolio/po/ $ show RP_0 Portfolio - RP_0 Category - Asset_Class ┏━━━━━┳━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Asset_Class ┃ Current_Invested_Amount ┃ Current_Weights ┃ Value ┃ ┡━━━━━╇━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ USD │ FIXED INCOME │ 2,550,000 $ │ 30.03 % │ 58.87 % │ ├─────┼────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ PRIVATE EQUITY │ 850,000 $ │ 10.01 % │ 7.37 % │ ├─────┼────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ PUBLIC EQUITY │ 4,242,000 $ │ 49.95 % │ 25.69 % │ ├─────┼────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ REAL ESTATE │ 850,000 $ │ 10.01 % │ 8.07 % │ ├─────┼────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TOTAL USD │ 8,492,000 $ │ 100.00 % │ 100.00 % │ └─────┴────────────────┴─────────────────────────┴─────────────────┴──────────┘ Category - Country ┏━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Country ┃ Current_Invested_Amount ┃ Current_Weights ┃ Value ┃ ┡━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ USD │ CHINA │ 246,000 $ │ 2.90 % │ 3.42 % │ ├─────┼───────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ NETHERLANDS │ 920,000 $ │ 10.83 % │ 2.48 % │ ├─────┼───────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TAIWAN │ 380,000 $ │ 4.47 % │ 3.35 % │ ├─────┼───────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ UNITED STATES │ 6,946,000 $ │ 81.79 % │ 90.76 % │ ├─────┼───────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TOTAL USD │ 8,492,000 $ │ 100.00 % │ 100.00 % │ └─────┴───────────────┴─────────────────────────┴─────────────────┴──────────┘ Category - Sector ┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Sector ┃ Current_Invested_Amount ┃ Current_Weights ┃ Value ┃ ┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ USD │ COMMUNICATION SERVICES │ 636,000 $ │ 7.49 % │ 3.54 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ CONSUMER CYCLICAL │ 1,926,000 $ │ 22.68 % │ 13.06 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ CORPORATE BOND │ 810,000 $ │ 9.54 % │ 9.40 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ FINANCIAL │ 850,000 $ │ 10.01 % │ 7.37 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ GOVERNMENT BOND │ 1,740,000 $ │ 20.49 % │ 49.47 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ REAL ESTATE │ 850,000 $ │ 10.01 % │ 8.07 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TECHNOLOGY │ 1,680,000 $ │ 19.78 % │ 9.09 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TOTAL USD │ 8,492,000 $ │ 100.00 % │ 100.00 % │ └─────┴────────────────────────┴─────────────────────────┴─────────────────┴──────────┘ Category - Industry ┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Industry ┃ Current_Invested_Amount ┃ Current_Weights ┃ Value ┃ ┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ USD │ AUTO PARTS \u0026amp; EQUIPMENT │ 429,000 $ │ 5.05 % │ 2.17 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ FINANCIAL SERVICES │ 850,000 $ │ 10.01 % │ 7.37 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ FOOTWEAR \u0026amp; ACCESSORIES │ 505,000 $ │ 5.95 % │ 3.66 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ HIGH YIELD BOND │ 810,000 $ │ 9.54 % │ 9.40 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ INFLATION-PROTECTED BOND │ 890,000 $ │ 10.48 % │ 26.61 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ INTERACTIVE MEDIA \u0026amp; SERVICES │ 636,000 $ │ 7.49 % │ 3.54 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ INTERNET \u0026amp; DIRECT MARKETING RETAIL │ 992,000 $ │ 11.68 % │ 7.23 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ LONG GOVERNMENT │ 850,000 $ │ 10.01 % │ 22.86 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ RESIDENTIAL │ 280,000 $ │ 3.30 % │ 4.08 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ SEMICONDUCTORS │ 1,300,000 $ │ 15.31 % │ 5.82 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TECHNOLOGY HARDWARE, STORAGE \u0026amp; PERIPHERALS │ 380,000 $ │ 4.47 % │ 3.27 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TOTAL MARKET │ 570,000 $ │ 6.71 % │ 3.98 % │ ├─────┼────────────────────────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TOTAL USD │ 8,492,000 $ │ 100.00 % │ 100.00 % │ └─────┴────────────────────────────────────────────┴─────────────────────────┴─────────────────┴──────────┘ It is possible to use the commands without loading in the parameters template or by using the parameters template but changing some arguments directly into the terminal. For example, using the same method as described above, the risk measure is changed to Conditional Value at Risk (CVaR) and the used historic period is increased to 10 years (keeping all other parameters unchanged):\n2022 May 30, 05:47 (🦋) /portfolio/po/ $ riskparity -rm CVaR -p 10y Optimization can take time. Please be patient... [10 Years] Risk parity portfolio based on risk budgeting approach using conditional value at risk (CVaR) as risk measure Weights ┏━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━━╇━━━━━━━━━━┩ │ AAPL │ 3.78 % │ ├───────┼──────────┤ │ AMZN │ 3.55 % │ ├───────┼──────────┤ │ APTV │ 3.06 % │ ├───────┼──────────┤ │ ASML │ 3.11 % │ ├───────┼──────────┤ │ GOOGL │ 3.80 % │ ├───────┼──────────┤ │ HYG │ 11.68 % │ ├───────┼──────────┤ │ IYR │ 4.68 % │ ├───────┼──────────┤ │ NKE │ 4.31 % │ ├───────┼──────────┤ │ PSP │ 4.54 % │ ├───────┼──────────┤ │ REZ │ 4.91 % │ ├───────┼──────────┤ │ TIP │ 29.23 % │ ├───────┼──────────┤ │ TLT │ 19.69 % │ ├───────┼──────────┤ │ TSM │ 3.66 % │ └───────┴──────────┘ Annual (by 252) expected return: 9.70% Annual (by √252) volatility: 8.34% Sharpe ratio: 1.1275 Annual (by √252) conditional value at risk (CVaR) : 19.84% Return / conditional value at risk (CVaR) ratio: 0.4738 Examples    To demonstrate the capabilities of the Portfolio Optimization menu, the entire S\u0026amp;P 500 index (as of 30th of May 2022) is used and optimized and analysed in a variety of ways. Starting by loading in the dataset, which is visible when you type load as it resides in the same directory as the earlier mentioned template:\n\nIt is possible to load the parameters template here but this is not necessary as each parameter has a default value set regardless. However, because the Excel file provides a more structured way of presenting the choices, the template is loaded in:\n2022 May 30, 06:15 (🦋) /portfolio/po/ $ file OpenBB_Parameters_Template_v1.0.0.xlsx Parameters: historic_period : 3y log_returns : 0 return_frequency : d max_nan : 0.05 threshold_value : 0.3 nan_fill_method : time risk_free : 0.003 significance_level : 0.05 risk_measure : MV target_return : -1 target_risk : -1 expected_return : hist covariance : hist smoothing_factor_ewma : 0.94 long_allocation : 1 short_allocation : 0 Then, the Hierarchical Risk Parity technique is applied by running the hrp command. This results in the following (the result is edited, as it would show 500 tickers, to prevent flooding this page):\n2022 May 30, 06:22 (🦋) /portfolio/po/ $ hrp Optimization can take time. Please be patient... [3 Years] Hierarchical risk parity portfolio using pearson codependence, single linkage and volatility as risk measure Weights ┏━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Value ┃ ┡━━━━━━━╇━━━━━━━━━━┩ │ A │ 0.23 % │ ├───────┼──────────┤ │ AAL │ 0.04 % │ ├───────┼──────────┤ │ AAP │ 0.21 % │ ├───────┼──────────┤ │ AAPL │ 0.15 % │ ├───────┼──────────┤ │ ABBV │ 0.41 % │ ├───────┼──────────┤ │ ABC │ 0.18 % │ ├───────┼──────────┤ \u0026lt;continues\u0026gt; Annual (by 252) expected return: 19.65% Annual (by √252) volatility: 21.64% Sharpe ratio: 0.8943 This optimization process is then compared with the current holdings. To keep things manageable, only the sector allocations are compared between the unoptimized and optimized portfolio which is done with the show command:\n2022 May 31, 03:31 (🦋) /portfolio/po/ $ show HRP_0 -ct SECTOR Category - Sector ┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┓ ┃ ┃ Sector ┃ Current_Invested_Amount ┃ Current_Weights ┃ Value ┃ ┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━┩ │ USD │ COMMUNICATION SERVICES │ 14,934,743 $ │ 5.89 % │ 6.07 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ CONSUMER DISCRETIONARY │ 31,210,119 $ │ 12.31 % │ 9.58 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ CONSUMER STAPLES │ 15,957,911 $ │ 6.29 % │ 11.93 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ ENERGY │ 9,582,634 $ │ 3.78 % │ 1.97 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ FINANCIALS │ 30,165,029 $ │ 11.89 % │ 8.93 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ HEALTH CARE │ 31,802,164 $ │ 12.54 % │ 17.35 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ INDUSTRIALS │ 38,183,932 $ │ 15.06 % │ 14.04 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ INFORMATION TECHNOLOGY │ 37,669,554 $ │ 14.85 % │ 12.95 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ MATERIALS │ 14,155,430 $ │ 5.58 % │ 5.49 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ REAL ESTATE │ 17,137,343 $ │ 6.76 % │ 4.82 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ UTILITIES │ 12,808,749 $ │ 5.05 % │ 6.87 % │ ├─────┼────────────────────────┼─────────────────────────┼─────────────────┼──────────┤ │ USD │ TOTAL USD │ 253,607,608 $ │ 100.00 % │ 100.00 % │ └─────┴────────────────────────┴─────────────────────────┴─────────────────┴──────────┘ This table shows how the portfolio changed and how much is allocated to each sector. It is possible to delve further into these findings with the plot command. This gives the ability to visually depict allocations, e.g. below the sector allocation is visually depicted.\n2022 May 31, 03:39 (🦋) /portfolio/po/ $ plot HRP_0 -ct SECTOR -pi \nFurther analysis can be done by looking at the portfolio\u0026rsquo;s returns histogram which also includes a variety of risk measures as well as the portfolio\u0026rsquo;s drawdowns.\n2022 May 31, 03:39 (🦋) /portfolio/po/ $ plot HRP_0 -ct SECTOR -hi -dd  \nNext to that, to delve deeper in the underlying conclusions the HRP method has drawn. Here, a closer look can be given to the assets cluster map, which links certain categories to each other. The linkage process is done per asset basis but here it is grouped per sector. Based on these results, the user can identify whether the optimization techniques also logically makes sense.\n2022 May 31, 03:45 (🦋) /portfolio/po/ $ plot HRP_0 -ct SECTOR -rc -he  \n"},{"id":1309,"href":"/OpenBBTerminal/terminal/stocks/","title":"Introduction to Stocks","parent":"Terminal","content":"The Stocks menu enables you to perform an evaluation of a particular company, a sector or a market as whole by performing various techniques including fundamental, technical and behavioural analysis. It does so by handing you tools to (among other things) evaluate company news (news), display historic quarterly results (income), determine future cash flows (dcf), show analyst recommendations (pt), evaluate an entire sector or industry (sia), and show the historical prices, correlations and sentiment between similar companies (correlation).\nHow to use    The Stocks menu is called upon by typing stocks which opens the following menu:\nYou have the ability to search a stock based on a search criteria, country, sector or industry. An example:\n2022 May 17, 08:45 (🦋) /stocks/ $ search facebook Companies found on term facebook ┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ ┃ Name ┃ Country ┃ Sector ┃ Industry ┃ Exchange ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ FB.BA │ Facebook, Inc. │ United States │ Communication Services │ Internet Content \u0026amp; Information │ Argentina │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB.MI │ Facebook, Inc. │ United States │ Communication Services │ Internet Content \u0026amp; Information │ Italy │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB.MX │ Facebook, Inc. │ United States │ Communication Services │ Internet Content \u0026amp; Information │ Mexico │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB │ Facebook, Inc. │ United States │ Communication Services │ Internet Content \u0026amp; Information │ USA │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB.SN │ Facebook, Inc. │ United States │ │ │ Chile │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB.VI │ Facebook, Inc. │ United States │ Communication Services │ Internet Content \u0026amp; Information │ Austria │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB2.L │ Leverage Shares 2x Facebook ETC A │ None │ None │ None │ United-Kingdom │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB2A.DE │ Facebook, Inc. │ United States │ Communication Services │ Internet Content \u0026amp; Information │ Germany │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB2A.F │ Facebook, Inc. │ United States │ Communication Services │ Internet Content \u0026amp; Information │ Germany │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FB3.L │ Leverage Shares 3x Facebook ETC │ None │ None │ None │ United-Kingdom │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FBOK34.SA │ Facebook, Inc. │ United States │ Communication Services │ Internet Content \u0026amp; Information │ Brazil │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ FBS.L │ Leverage Shares -1x Facebook ETC │ None │ None │ None │ United-Kingdom │ ├───────────┼───────────────────────────────────┼───────────────┼────────────────────────┼────────────────────────────────┼────────────────┤ │ SFB.L │ Leverage Shares -1x Facebook ETC │ None │ None │ None │ United-Kingdom │ └───────────┴───────────────────────────────────┴───────────────┴────────────────────────┴────────────────────────────────┴────────────────┘ This results in a selection of stock tickers and their corresponding exchange. With this information, you can load in one of the stock tickers into the menu. This can be done with load. See the following example:\n2022 May 17, 08:46 (🦋) /stocks/ $ load FB Loading Daily FB stock with starting period 2019-05-13 for analysis. Datetime: 2022 May 17 08:49 Timezone: America/New_York Currency: USD Market: OPEN Company: Meta Platforms, Inc. FB Performance ┏━━━━━━━┳━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ 1 Day ┃ 1 Week ┃ 1 Month ┃ 1 Year ┃ YTD ┃ Volatility (1Y) ┃ Volume (10D avg) ┃ Last Price ┃ ┡━━━━━━━╇━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 4.6 % │ 1.95 % │ -4.82 % │ -36.59 % │ -40.91 % │ 38.04 % │ 39.8 M │ 200.04 │ └───────┴────────┴─────────┴──────────┴──────────┴─────────────────┴──────────────────┴────────────┘ To then view the stock chart, you can call candle which shows a candle chart for the defined period:\nBy calling ? or help the stocks menu re-appears. Here you can see that multiple menus have turned blue. Because of loading a stock ticker, these menus can now be used in combination with the chosen stock.\nSub-menus available    The Stock menu has an extensive list of available sub-menus ranging from fundamental analysis to sector analysis to advanced prediction techniques. To find more information about each menu, click on one of the following:\n Introduction to Trading Hours: discover exchanges that are currently open or closed for a specified ticker. Also find relevant information about each exchange. Introduction to Options: look into available options, option spreads, open interest and binomial valuation models. Introduction to Stock Discovery: discover trending stocks based on return metrics, revenue and earnings growth, penny stocks and based on upcoming earnings release dates. Introduction to Sector \u0026amp; Industry Analysis: analyse companies that reside in the same industry, sector and/or country and share a similar market cap to determine potential under- and out performance of each company. Introduction to Dark Pools: discover companies that have enormous shorting pressure, obtain information about dark pool positions and find out about shares that failed to deliver. Introduction to Stock Screener: provides the ability to screen companies that share a similar characteristic, for example unusual volumes, overbought or that include analyst upgrades, and be able to compare valuations and performance. Introduction to Insider Trading: explains what large insiders, e.g. a CEO of a company, is buying the chosen company and insider trading activity for the chosen company. Introduction to Government: gives insights in what the House of Congress is trading and the corporate lobbying that is performed. Introduction to Behavioural Analysis: gives the abilities to discover how different social media platforms view the chosen company and what is written about them. Introduction to Comparison Analysis: have the ability to compare companies based on, among other things, correlation, financial statements, sentiment, valuations and performance. Introduction to Fundamental Analysis: look into the fundamentals of a chosen company including financial statements, SEC filings, investing scores, discounted cash flow analysis (DCF), sustainability scores and key ratios. Introduction to Due Diligence: explore analyst recommendations, ratings over time, price targets and quarterly and yearly earnings estimates. Introduction to Strategy Backtesting: explore back testing strategies based on technical indicators. Introduction to Technical Analysis: analysis the chosen company\u0026rsquo;s historical data extensively with moving averages and momentum, trend, volatility and volume indicators. Introduction to Quantitative Analysis: delve deeper in the historical data with quantitative methods including cumulative distribution function (CDF), (conditional) Value at Risk and rolling ratios. Introduction to Forecasting menu: apply advanced AI and Machine Learning models to form prediction of future stock prices including Recurrent Neural Network (RNN), Autoregressive Integrated Moving Average (ARIMA) and Monte Carlo forecasting.  Examples    If we want to a look at the historical data and fundamentals of Microsoft, we can do the following, starting from the stocks menu:\nFirst, load in the ticker of Microsoft, this is MSFT and can be found with the search command:\n2022 May 18, 05:32 (🦋) /stocks/ $ search microsoft Companies found on term microsoft ┏━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━┓ ┃ ┃ Name ┃ Country ┃ Sector ┃ Industry ┃ Exchange ┃ ┡━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━┩ │ MSF.BR │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ Belgium │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSF.DE │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ Germany │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSF.F │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ Germany │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSF2.L │ Leverage Shares 2x Microsoft ETC A │ None │ None │ None │ United-Kingdom │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSF3.L │ Leverage Shares 3x Microsoft ETC │ None │ None │ None │ United-Kingdom │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSFS.L │ Leverage Shares -1x Microsoft ETC │ None │ None │ None │ United-Kingdom │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSFT.BA │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ Argentina │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSFT.MX │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ Mexico │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSFT │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ USA │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSFT.SN │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ Chile │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSFT.VI │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ Austria │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ MSFT34.SA │ Microsoft Corporation │ United States │ Technology │ Software - Infrastructure │ Brazil │ ├───────────┼────────────────────────────────────┼───────────────┼────────────┼───────────────────────────┼────────────────┤ │ SMSF.L │ Leverage Shares -1x Microsoft ETC │ None │ None │ None │ United-Kingdom │ └───────────┴────────────────────────────────────┴───────────────┴────────────┴───────────────────────────┴────────────────┘ Then, load in the historical data of the company by using the load. We also choose a different starting period by using -s as shown in the documentation:\n2022 May 18, 05:43 (🦋) /stocks/ $ load MSFT -s 2021-01-01 Loading Daily MSFT stock with starting period 2021-01-01 for analysis. Datetime: 2022 May 18 05:43 Timezone: America/New_York Currency: USD Market: OPEN Company: Microsoft Corporation MSFT Performance ┏━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ 1 Day ┃ 1 Week ┃ 1 Month ┃ 1 Year ┃ YTD ┃ Volatility (1Y) ┃ Volume (10D avg) ┃ Last Price ┃ ┡━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ 2.18 % │ -0.99 % │ -4.88 % │ 10.66 % │ -20.13 % │ 24.31 % │ 39.77 M │ 266.82 │ └────────┴─────────┴─────────┴─────────┴──────────┴─────────────────┴──────────────────┴────────────┘ We can now plot the corresponding stock chart with candle which shows the company\u0026rsquo;s historical data from 2021-01-01 until the current date. We are also adding in the 20 and 30 day moving averages (MA).\n2022 May 18, 05:44 (🦋) /stocks/ $ candle --ma 20,30 Now we can go ahead and enter the Fundamental Analysis menu by typing fa. Please see Introduction to Fundamental Analysis for a more detailed guide on this menu. This will open the following:\nWithin this menu, I am now able to present the quarterly income statements over the last 3 years (or any other period) by using income.\n2022 May 18, 05:52 (🦋) /stocks/fa/ $ income -q -l 12 MSFT Income Statement ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ ┃ 2019-06-30 ┃ 2019-09-30 ┃ 2019-12-31 ┃ 2020-03-31 ┃ 2020-06-30 ┃ 2020-09-30 ┃ 2020-12-31 ┃ 2021-03-31 ┃ 2021-06-30 ┃ 2021-09-30 ┃ 2021-12-31 ┃ 2022-03-31 ┃ ┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ Reported Currency │ USD │ USD │ USD │ USD │ USD │ USD │ USD │ USD │ USD │ USD │ USD │ USD │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Gross Profit │ 23.305 B │ 22.649 B │ 24.548 B │ 24.046 B │ 25.694 B │ 26.152 B │ 28.882 B │ 28.661 B │ 32.161 B │ 31.671 B │ 34.768 B │ 33.745 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Total Revenue │ 33.717 B │ 32.428 B │ 36.322 B │ 34.315 B │ 38.033 B │ 36.724 B │ 42.558 B │ 41.059 B │ 45.595 B │ 44.743 B │ 51.228 B │ 48.732 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Cost Of Revenue │ 17.199 B │ 16.363 B │ 18.986 B │ 17.650 B │ 20.161 B │ 16.941 B │ 20.907 B │ 20.070 B │ 22.025 B │ 20.145 B │ 24.433 B │ 23.481 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Costof Goods And Services │ 10.412 B │ 10.406 B │ 12.358 B │ 10.975 B │ 12.339 B │ 11.002 B │ 14.194 B │ 13.045 B │ 13.991 B │ 13.646 B │ 16.960 B │ 15.615 B │ │ Sold │ │ │ │ │ │ │ │ │ │ │ │ │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Operating Income │ 12.405 B │ 12.686 B │ 13.891 B │ 12.975 B │ 13.407 B │ 15.876 B │ 17.897 B │ 17.048 B │ 19.095 B │ 20.238 B │ 22.247 B │ 20.364 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Selling General And │ 6.387 B │ 5.398 B │ 6.054 B │ 6.184 B │ 7.073 B │ 5.350 B │ 6.086 B │ 6.409 B │ 7.379 B │ 5.834 B │ 6.763 B │ 7.075 B │ │ Administrative │ │ │ │ │ │ │ │ │ │ │ │ │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Research And Development │ 4.513 B │ 4.565 B │ 4.603 B │ 4.887 B │ 5.214 B │ 4.926 B │ 4.899 B │ 5.204 B │ 5.687 B │ 5.599 B │ 5.758 B │ 6.306 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Operating Expenses │ 11.300 B │ 10.522 B │ 11.231 B │ 11.562 B │ 13.036 B │ 10.865 B │ 11.612 B │ 12.229 B │ 13.721 B │ 12.098 B │ 13.231 B │ 14.172 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Investment Income Net │ 709 M │ 724 M │ 688 M │ 673 M │ 595 M │ 570 M │ 545 M │ 519 M │ 497 M │ 520 M │ 503 M │ 519 M │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Net Interest Income │ -669 M │ -637 M │ -654 M │ -614 M │ -686 M │ -589 M │ -571 M │ -633 M │ -553 M │ -539 M │ -525 M │ -503 M │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Interest Income │ 321 M │ -139 M │ 281 M │ -153 M │ None │ None │ 545 M │ 519 M │ 497 M │ 520 M │ 503 M │ 519 M │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Interest Expense │ 669 M │ 637 M │ 654 M │ 614 M │ 686 M │ 589 M │ 571 M │ 633 M │ 553 M │ 539 M │ 525 M │ 503 M │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Non Interest Income │ 33.717 B │ 33.065 B │ 36.976 B │ 34.929 B │ 38.033 B │ 37.313 B │ 43.129 B │ 41.692 B │ 46.148 B │ 45.282 B │ 51.753 B │ 49.235 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Other Non Operating Income │ -121 M │ -18 M │ -19 M │ -3 M │ 0 │ 0 │ 70 M │ 6 M │ 22 M │ 6 M │ -4 M │ -11 M │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Depreciation │ None │ None │ None │ None │ None │ None │ None │ None │ None │ None │ None │ None │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Depreciation And │ 400 M │ 559 M │ 574 M │ 491 M │ 588 M │ 589 M │ 627 M │ 616 M │ 655 M │ 665 M │ 710 M │ 791 M │ │ Amortization │ │ │ │ │ │ │ │ │ │ │ │ │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Income Before Tax │ 12.596 B │ 12.686 B │ 14.085 B │ 12.843 B │ 13.422 B │ 16.124 B │ 18.337 B │ 17.236 B │ 19.405 B │ 20.524 B │ 22.515 B │ 20.190 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Income Tax Expense │ -591 M │ 2.008 B │ 2.436 B │ 2.091 B │ 2.220 B │ 2.231 B │ 2.874 B │ 1.779 B │ 2.947 B │ 19 M │ 3.750 B │ 3.462 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Interest And Debt Expense │ 669 M │ 637 M │ 654 M │ 614 M │ 686 M │ 589 M │ 571 M │ 633 M │ 553 M │ 539 M │ 525 M │ 503 M │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Net Income From Continuing │ 12.405 B │ 10.678 B │ 11.649 B │ 10.752 B │ 13.407 B │ 13.893 B │ 15.463 B │ 15.457 B │ 16.458 B │ 20.505 B │ 18.765 B │ 16.728 B │ │ Operations │ │ │ │ │ │ │ │ │ │ │ │ │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Comprehensive Income Net │ 14.112 B │ 10.957 B │ 11.455 B │ 13.683 B │ 11.712 B │ 13.807 B │ 15.720 B │ 13.552 B │ 16.818 B │ 19.966 B │ 17.919 B │ 13.815 B │ │ Of Tax │ │ │ │ │ │ │ │ │ │ │ │ │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Ebit │ 13.265 B │ 13.323 B │ 14.739 B │ 13.457 B │ 14.108 B │ 16.713 B │ 18.908 B │ 17.869 B │ 19.958 B │ 21.063 B │ 23.040 B │ 20.693 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Ebitda │ 13.665 B │ 13.882 B │ 15.313 B │ 13.948 B │ 14.696 B │ 17.302 B │ 19.535 B │ 18.485 B │ 20.613 B │ 21.728 B │ 23.750 B │ 21.484 B │ ├────────────────────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┼────────────┤ │ Net Income │ 13.187 B │ 10.678 B │ 11.649 B │ 10.752 B │ 11.202 B │ 13.893 B │ 15.463 B │ 15.457 B │ 16.458 B │ 20.505 B │ 18.765 B │ 16.728 B │ └────────────────────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┴────────────┘ "},{"id":1310,"href":"/OpenBBTerminal/SDK/stocks/","title":"Introduction to the Stocks Menu","parent":"OpenBB Python SDK","content":"The capabilities of the Stocks menu from the OpenBB Terminal are wrapped into a powerful SDK, enabling users to work with the data in a flexible environment that can be fully customized to meet the needs of any user. Code completion and contextual help makes it easy to use. Navigating is very similar to operating the CLI Terminal Application.\nHow to use    Start a Python script or Notebook file by importing the module:\nfrom openbb_terminal.sdk import openbb\nIn the next cell, code completion will activate after the . is entered, showing the submenus and functions at the root level of the Stocks menu.\nThe contents of the menu is printed by running a cell with: openbb.stocks\nDocstrings for each function are printed using the help() function of Python: help(openbb.stocks.candle)\nAdd %matplotlib inline to the first cell for displaying charts within a Notebook file.\nA candle chart is shown with: openbb.stocks.candle(symbol = 'ticker'). The contextual help provides syntax and arguments for the function.\nExamples    Pass historical price data to a Pandas DataFrame by declaring a name for the DataFrame:\nspy_monthly = openbb.stocks.load(symbol = 'SPY', start_date = '1990-01-01', monthly = True)\nGive the candle chart a custom title:\nopenbb.stocks.candle(data = spy_monthly, symbol = 'SPY - Monthly Candles')\nGet the options data for a specific expiration date:\nSearch for companies with the search function:\nopenbb.stocks.search(sector = 'Energy', country = 'United Kingdom', query = 'oil')\nMake a custom screener for tickers on the most Stocktwits users' watchlists:\nstocktwits = openbb.stocks.ba.trending() stocktwits = pd.DataFrame(stocktwits).sort_values(by = 'Watchlist Count', ascending = False) tickers = list(stocktwits.Ticker) stocktwits.head(5) screener_results = openbb.stocks.ca.screener(similar = tickers, data_type = 'overview') pd.DataFrame(screener_results).sort_values(by = 'Market Cap') "},{"id":1311,"href":"/OpenBBTerminal/SDK/keys/","title":"keys","parent":"OpenBB Python SDK","content":""},{"id":1312,"href":"/OpenBBTerminal/SDK/crypto/nft/","title":"nft","parent":"crypto","content":""},{"id":1313,"href":"/OpenBBTerminal/SDK/forex/oanda/","title":"oanda","parent":"forex","content":""},{"id":1314,"href":"/OpenBBTerminal/SDK/crypto/onchain/","title":"onchain","parent":"crypto","content":""},{"id":1315,"href":"/OpenBBTerminal/SDK/","title":"OpenBB Python SDK","parent":"OpenBB Terminal Documentation","content":"OpenBB SDK gives you direct and programmatic access to all capabilities from OpenBB Terminal. You will have the necessary building blocks to create your own financial tools and applications, whether that be a visualization dashboard or a custom report on Jupyter Notebook.\nWith OpenBB SDK, you can access to normalized financial data from dozens of data providers, without having to develop your own integrations from scratch. On top of financial data feeds, OpenBB SDK also provides you with a toolbox to perform financial analysis on a variety of asset classes, including stocks, crypto, ETFs, funds; the economy as well as your portfolios.\nOpenBB SDK is created and maintained by OpenBB team together with the contributions from hundreds of community members. This gives us an unrivaled speed of development and the ability to maintain stable integrations with numerous third-party data providers. Developing and maintaining an full-blown investment research infrastructure from the ground up takes a lot of time and effort. However, it does not have to be. Take advantage of OpenBB SDK with its out-of-the-box data connectors and financial analysis toolkit. So that you can focus on designing and building your financial reports and applications.\n Setup    1. Import OpenBB SDK    First off, import OpenBB SDK into your python script or Jupyter Notebook with:\nfrom openbb_terminal.sdk import openbb This imports all Terminal commands at once. To see all the available commands, you can press tab in jupyter notebook. Another approach is to check out OpenBB SDK Documentation, where you can explore its capabilities\n2. Customize chart style    With OpenBB SDK, you can customize your chart style. You can switch between dark and light easily using this block of code:\nfrom openbb_terminal.sdk import TerminalStyle theme = TerminalStyle(\u0026#34;light\u0026#34;, \u0026#34;light\u0026#34;, \u0026#34;light\u0026#34;) OR\nfrom openbb_terminal.sdk import TerminalStyle theme = TerminalStyle(\u0026#34;dark\u0026#34;, \u0026#34;dark\u0026#34;, \u0026#34;dark\u0026#34;) 3. Access Documentation    Each and every command of OpenBB SDK has detailed documentation about input parameters and returned outputs. You can access them in multiple ways:\nApproach 1: Press shift + tab This will work out of the box if you\u0026rsquo;re using Jupyter Notebook. In case your IDE is VSCode, you will need to install the Jupyter PowerToys extension.\nApproach 2: Type help(command)\nYou can also type help(command), see example below, to see the command' docstring.\nApproach 3: Use OpenBB SDK Documentation page\nFinally, if you prefer to check documentation on a web browser, OpenBB SDK Documentation will be your best friend. You can browse available commands and search for any specific one that you need.\n4. Set API Keys    You can set your external API keys through OpenBB SDK.\n Single API setup  openbb.keys.fmp(key=\u0026#34;example\u0026#34;) openbb.keys.reddit( client_id=\u0026#34;example\u0026#34;, client_secret=\u0026#34;example\u0026#34;, password=\u0026#34;example\u0026#34;, username=\u0026#34;example\u0026#34;, useragent=\u0026#34;example\u0026#34;)  API key setup with persistence: persist=True means that your key will be saved and can be reused after, otherwise it will be lost when you restart the kernel.  openbb.keys.fmp(key=\u0026#34;example\u0026#34;, persist=True)  Set multiple keys from dictionary  d = { \u0026#34;fed\u0026#34;: { \u0026#34;key\u0026#34;:\u0026#34;XXXXX\u0026#34; }, \u0026#34;binance\u0026#34;: { \u0026#34;key\u0026#34;:\u0026#34;YYYYY\u0026#34;, \u0026#34;secret\u0026#34;:\u0026#34;ZZZZZ\u0026#34; }, } openbb.keys.set_keys(d)  Get info about API setup arguments  openbb.keys.get_keys_info()  Get your defined keys  openbb.keys.mykeys() openbb.keys.mykeys(show=True) Usage    Now, let\u0026rsquo;s explore what OpenBB SDK can do. At a high level, you can break down OpenBB SDK\u0026rsquo;s functionalities into two main buckets: (1) Data layer and (2) Toolbox layer.\n1. Data Layer    Getting financial data from multiple data sources using one single SDK    OpenBB SDK provides you access to normalized financial data from dozens of data sources, without having to built your own integration or relying on multiple third-party packages. Let\u0026rsquo;s explore how we can do that.\nFirst, you will need to load in the desired ticker. If it\u0026rsquo;s not on the top of your mind, make use of our search functionality.\nopenbb.stocks.search(\u0026#34;apple\u0026#34;) We want to load Apple Inc. listed on US exchange, so our ticker should be AAPL. If you want to load Apple Inc. from Brazilian exchange, you should load in AAPL34.SA.\ndf = openbb.stocks.load(\u0026#34;AAPL\u0026#34;) What\u0026rsquo;s extremely powerful about OpenBB SDK is that you can specify the data source. Depending on the asset class, we have a list of available data sources and it\u0026rsquo;s only getting bigger with contributions from our open-source community.\n## From YahooFinance df_yf = openbb.stocks.load(\u0026#34;AAPL\u0026#34;, source=\u0026#39;YahooFinance\u0026#39;) ## From AlphaVantage df_av = openbb.stocks.load(\u0026#34;AAPL\u0026#34;, source=\u0026#39;AlphaVantage\u0026#39;) ## From IEXCloud df_iex = openbb.stocks.load(\u0026#34;AAPL\u0026#34;, source=\u0026#39;IEXCloud\u0026#39;) ## From Polygon df_pol = openbb.stocks.load(\u0026#34;AAPL\u0026#34;, source=\u0026#39;Polygon\u0026#39;) Easy option to switch between obtaining underlying data and charts    Depending on your needs, you can get the outputs in form of data (e.g. pandas dataframe) or charts. If the latter is what you want, simple add chart=True as the last parameter.\n1. Getting underlying data    openbb.economy.index(indices = [\u0026#39;sp500\u0026#39;, \u0026#39;nyse_ny\u0026#39;, \u0026#39;russell1000\u0026#39;], start_date = \u0026#39;2010-01-01\u0026#39;) You might be wondering how to find all the available indices. This type of information should be available in the docstring. Let\u0026rsquo;s give it a try.\nAs mentioned in the docstring, you can access it with the following helper function.\nopenbb.economy.available_indices() 2. Getting charts    openbb.economy.index(indices = [\u0026#39;sp500\u0026#39;, \u0026#39;nyse_ny\u0026#39;, \u0026#39;russell1000\u0026#39;], start_date = \u0026#39;2010-01-01\u0026#39;, chart=True) 2. Toolbox Layer    In addition to financial data, you can also get access to a robust and powerful toolbox to perform analysis on different asset classes and on your portfolio.\nImagine that you would like to leverage existing financial calculations from OpenBB and apply them on your own data. This can be done easily - OpenBB SDK\u0026rsquo;s commands usually accept a dataframe as an input. Here you can load it your data, either via a csv, excel file, or connecting directly with an API or a database. The possibilities are endless.\nLet\u0026rsquo;s go through an example to see how we can do it in a few simple steps. Here we shall see how to use portfolio optimization functionalities from OpenBB SDK.\nStep 1. Loading order book    Here we will use an example orderbook for illustration purposes. You can choose to upload your own orderbook instead.\norder_book_path = \u0026#34;portfolio/allocation/60_40_Portfolio.xlsx\u0026#34; tickers, categories = openbb.portfolio.po.load(excel_file = order_book_path) Step 2. Optimizing portfolio    We provide multiple portfolio optimization techniques. You can utilize basic mean-variance techniques, such as optimizing for the maximum Sharpe ratio, or minimum variance, as well as advanced optimization techniques including Hierarchical Risk Parity and Nested Clustered Optimization.\n## Max Sharpe optimization weights_max_sharpe, data_returns_max_sharpe = openbb.portfolio.po.maxsharpe(tickers) print(\u0026#34;Max Sharpe\u0026#34;) weights_max_sharpe ## Minimum risk optimization weights_min_risk, data_returns_min_risk = openbb.portfolio.po.minrisk(tickers) print(\u0026#34;Min Risk\u0026#34;) weights_min_risk ## Hierarchical Risk Parity optimization weights_hrp, data_returns_hrp = openbb.portfolio.po.hrp(tickers) print(\u0026#34;Hierarchical Risk Parity\u0026#34;) weights_hrp After having obtained the asset allocation outcomes, you can plot a correlation heatmap across tickers, as well as their individual risk contributition.\nopenbb.portfolio.po.plot(data=data_returns_hrp,weights=weights_hrp,heat=True) openbb.portfolio.po.plot(data=data_returns_hrp,weights=weights_hrp,rc_chart=True) These techniques have an extensive list of parameters and thus the optimization outcome is highly dependent on the chosen parameters. For instance, you can refer to the documentation below. This allows us to alter certain assumption which also modify the asset allocation.\nweights_hrp_2, data_returns_hrp_2 = openbb.portfolio.po.hrp( tickers, interval=\u0026#34;5y\u0026#34;, risk_measure=\u0026#34;cVaR\u0026#34;, risk_aversion=0.8 ) pd.DataFrame([weights_hrp, weights_hrp_2], index=[\u0026#34;Basic\u0026#34;, \u0026#34;Extended\u0026#34;]).T The basic method was optimized for variance. The extended method increases the period of historical data, optimizes for conditional Value at Risk and has a lower risk aversion.\nopenbb.portfolio.po.plot(data=data_returns_hrp,weights=weights_hrp,pie=True) openbb.portfolio.po.plot(data=data_returns_hrp_2,weights=weights_hrp_2,pie=True) Useful tips    1. Display matplotlib charts in Jupyter Notebook    To display matplotlib charts inside the Jupyter notebook output cells, you can use the block of code below, and initialize it at the top of the Notebook.\nimport matplotlib.pyplot as plt import matplotlib_inline.backend_inline from openbb_terminal.sdk import openbb %matplotlib inline matplotlib_inline.backend_inline.set_matplotlib_formats(\u0026#34;svg\u0026#34;) 2. Take advantage of external_axes    The code below utilizes the external_axes parameter to get two axis in one chart.\nimport matplotlib.pyplot as plt from openbb_terminal.sdk import openbb fig, (ax1, ax2) = plt.subplots(nrows=2, ncols=1, figsize=(11, 5), dpi=150) openbb.stocks.dps.dpotc( \u0026#34;aapl\u0026#34;, external_axes=[ax1, ax2], chart=True, ) fig.tight_layout() You can also do this to save output charts in a variable for later uses. For more examples, we\u0026rsquo;d recommend checking out our curated Jupyter Notebook reports. They are excellent demonstration on how to use the SDK to its fullest extent\n"},{"id":1316,"href":"/OpenBBTerminal/","title":"OpenBB Terminal Documentation","parent":"","content":"Introduction\nOpenBB is a leading open source investment research software platform for accessing and analyzing financial market data. We represent millions of investors who want to leverage state-of-the-art data science and machine learning technologies to make sense of raw unrefined data. Our mission is to make investment research effective, powerful and accessible to everyone.\n The OpenBB Terminal is Free and Open-Source (FOSS)\n    \n Table of Contents    Accessing the OpenBB Terminal  Installation for Windows Installation for MacOS   Structure of the OpenBB Terminal  Explanation of Menus Explanation of Commands Explanation of Scripts   Importing and Exporting Data in the OpenBB Terminal Accessing other sources of data via API keys Available Menus Within the OpenBB Terminal Customizing the terminal Obtaining support and/or giving feedback     Why Python?    Python is one of the most used programming languages due to its simplified syntax and shallow learning curve. On top of this, it is highly used in data science and academia world (particularly on finance, economics or business related degrees). This is very important, as it is the first time in history that users - regardless of their background - can so easily add features to an investment research platform.  Why Open Source?    An open source product allows for higher quality, lower costs, more transparency, and faster go-to-market due to the strong community created. There is no point in re-inventing the wheel for financial theory that has been around for decades, thus users can adapt the platform to their needs or even build proprietary features on top of our infrastructure.  Why Free?    We believe that everyone should be able to have the same tooling to do investment research. By leveraging free API tiers, we can allow users to have access to a vast range of information for free. On the other hand, we want users that are willing to subscribe to premium API keys from certain data providers to be able to take advantage of that on OpenBB Terminal - this is where we see a monetization opportunity, a revenue share with data providers for connecting our users to their resources.   Importing and Exporting data    The terminal allows for users to import their own proprietary datasets to use on our econometrics menu. In addition, users are allowed to export any type of data to any type of format whether that is raw data in Excel or an image in PNG. This is also ideal for finance content creation.  OpenBB SDK and Customizable notebook reports    Use our OpenBB Terminal environment to access raw data through a Jupyter Notebook and play with it accordingly. Or just create customizable notebook reports for your colleagues and friends doing research on a particular asset or a macroeconomic event impact on said asset. The possibilities are endless.  Advanced user and routines    Navigate through 750+ terminal features using fast shortcuts and leverage auto-complete functionality. Jump from looking into your portfolio to comparing the financials of those companies in a few seconds. Leverage our routines implementation to run analysis while you drink your coffee or tea.   Accessing the OpenBB Terminal    The OpenBB Terminal can be directly installed on your computer via our installation program. Within this section, you are guided through the installation process and how to launch the program. If you are a developer, please have a look here. If you struggle with the installation process, please don\u0026rsquo;t hesitate to reach us on Discord or visit our contact page.\nInstallation for Windows    The process starts off by downloading the installer, see below for how to download the most recent release:\n Go to the OpenBB website. Click on the Download button in the Windows Installer section.  When the file is downloaded, use the following steps to run the OpenBB Terminal:\nStep 1: Double-click the .exe file that got downloaded to your Downloads folder\nYou will most likely receive the error below stating \u0026ldquo;Windows protected your PC\u0026rdquo;. This is because the installer is still in beta phase, and the team has not yet requested verification from Windows.\n\n Step 2: Click on More info and select Run anyway to start the installation process\nProceed by following the steps. Do note that if you wish to install the application to \u0026ldquo;Program Files\u0026rdquo; that you will have to run the resulting application as Administrator.\n\n Step 3: Double-click on the application that appeared on your Desktop, you are now able to run the OpenBB Terminal\nThe first time this takes a bit longer to load, this can take up to a few minutes.\n\n  Installation for MacOS    The process starts off by downloading the installer, see below for how to download the most recent release:\n Go to the OpenBB website. Click on the Download button in the macOS Installer section.  When the DMG file is downloaded, use the following steps to run the OpenBB Terminal:\nStep 1: Open the downloaded OpenBB Terminal.dmg and copy OpenBB Terminal folder into your Applications\nOpen the OpenBB Terminal.dmg file that got saved to your \u0026ldquo;Downloads\u0026rdquo; folder and drag the \u0026ldquo;OpenBB Terminal\u0026rdquo; folder into \u0026ldquo;Applications\u0026rdquo; folder. A link to the Applications folder is presented on the screen. Note that this should take some time as it is extracting the files from the .dmg file.\n Step 2: Open the OpenBB Terminal app in the folder that you have just copied to your Applications.\nDuring first launch if you get a message saying that the application can\u0026rsquo;t be launched, do the following: Right-Click the app and select Open. You will see a message saying that macOS was not able to check whether the application contains malicious software. Click Open to proceed.\n  Troubleshooting: Allow the application to run by going into your settings\nIf you have trouble launching the app because of security settings and the \u0026ldquo;Right-click and Open\u0026rdquo; approach from Step 2 of these instructions doesn\u0026rsquo;t work, go to System Preferences \u0026gt; Security \u0026amp; Privacy \u0026gt; General. You should see a message at the bottom that says that the file \u0026ldquo;was blocked from use because it is not from an identified developer\u0026rdquo;. Click on Allow anyway or Open anyway.\nStructure of the OpenBB Terminal    The OpenBB Terminal is based off the Command Line Interface (CLI) which is installed by default on every computer. By opening the application you have installed via \u0026ldquo;Accessing the OpenBB Terminal\u0026rdquo;, you are greeted with the following interface:\n\nThe OpenBB Terminal is centered around keyboard input. To navigate and perform analysis you will have to type in the name of the command followed by an ENTER (⏎). If you wish to see information about the OpenBB Terminal you can do so by typing about and then press ENTER (⏎). As you are typing, you will notice that you receive suggestions, by using the DOWN (⌄) arrow and pressing ENTER (⏎) you can select the command and execute it.\nThroughout the entire terminal, the same set of colors are used which all share the same representation. This is structured as follows:\n Light Blue: represents commands. Dark Blue: represents menus, also recognizable by the \u0026gt; in front. Orange: represents titles and headers. Yellow: represents descriptions of a parameter or variable. White: represents text, usually in combination with a description that is in Yellow.  Explanation of Menus    Menus, depicted in Dark Blue, take you to a new section of the terminal referred to as a menu. For example, if you wish to view information about stocks, you can do so by typing stocks and pressing ENTER (⏎). This opens a new menu as depicted below.\n\nDepending on the menu you are in, you are presented with a new set of commands (see Explanation of Commands) and menus you can select. There are interactions in place between each menu. For example, when selecting a company within the stocks menu, the terminal will remember your selection when you visit the fa or options menu. See Introduction to Stocks for more information.\n Pro tip: you can quickly jump between menus by using a forward slash (/). For example, if I want to access the options menu, I can type /stocks/options to instantly arrive at this menu. You can do this from any location within the OpenBB Terminal!\n Explanation of Commands    Commands, depicted in Light Blue, execute an action or task. For example, the commands that you are able to use from any menu in the terminal (see Explanation of Menus) are as follows:\n cls: clears the screen, by executing this command you are left with an empty screen. help, h or ?: displays the menu that you are currently on. quit, q or ..: allows for navigation through the menu. E.g. if you type stocks press ENTER (⏎) and then use q and press ENTER (⏎) you return to where you started. Validate this by typing ? and pressing ENTER (⏎). support: allows you to submit bugs, questions and suggestions. about: this opens the related guide, linking to this website. It also has the ability to open a guide to a specific command. For example, within the stocks menu, about candle opens this guide. wiki: search for a given expression on the Wikipedia without leaving the terminal.  Continuing with the example mentioned at quit, revisit the stocks menu and look at the commands. At the top you will see a command named load. To understand what this command can do, you can use load -h followed by ENTER (⏎). The -h stands for help and every command will have this feature. This will return the following:\n2022 May 19, 05:27 (🦋) /stocks/ $ load -h usage: load [-t TICKER] [-s START] [-e END] [-i {1,5,15,30,60}] [-p] [-f FILEPATH] [-m] [-w] [-r {ytd,1y,2y,5y,6m}] [-h] [--source {yf,av,iex,polygon}] Load stock ticker to perform analysis on. When the data source is Yahoo Finance, an Indian ticker can be loaded by using '.NS' at the end, e.g. 'SBIN.NS'. American tickers do not have this addition, e.g. AMZN. optional arguments: -t TICKER, --ticker TICKER Stock ticker (default: None) -s START, --start START The starting date (format YYYY-MM-DD) of the stock (default: 2019-07-01) -e END, --end END The ending date (format YYYY-MM-DD) of the stock (default: 2022-07-05) -i {1,5,15,30,60}, --interval {1,5,15,30,60} Intraday stock minutes (default: 1440) -p, --prepost Pre/After market hours. Only works for 'yf' source, and intraday data (default: False) -f FILEPATH, --file FILEPATH Path to load custom file. (default: None) -m, --monthly Load monthly data (default: False) -w, --weekly Load weekly data (default: False) -r {ytd,1y,2y,5y,6m}, --iexrange {ytd,1y,2y,5y,6m} Range for using the iexcloud api. Note that longer range requires more tokens in account (default: ytd) -h, --help show this help message (default: False) --source {yf,av,iex,polygon} Data source to select from (default: yf) For more information and examples, use 'about load' to access the related guide. This shows you all arguments the command has. These are additional options you can provide to the command. Each default value is also displayed which is used when you do not select this option. For example, if I would use the stock ticker of Amazon (AMZN, which can also be found with search amazon), I can use load AMZN which will return the following:\n2022 May 19, 05:27 (🦋) /stocks/ $ load AMZN Loading Daily AMZN stock with starting period 2019-05-15 for analysis. Datetime: 2022 May 19 05:33 Timezone: America/New_York Currency: USD Market: OPEN Company: Amazon.com, Inc. AMZN Performance ┏━━━━━━━━━┳━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ 1 Day ┃ 1 Week ┃ 1 Month ┃ 1 Year ┃ YTD ┃ Volatility (1Y) ┃ Volume (10D avg) ┃ Last Price ┃ ┡━━━━━━━━━╇━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ -3.34 % │ 1.65 % │ -32.26 % │ -33.71 % │ -37.14 % │ 31.36 % │ 5.51 M │ 2142.25 │ └─────────┴────────┴──────────┴──────────┴──────────┴─────────────────┴──────────────────┴────────────┘ The default values you see within load -h have been inputted here. E.g. the starting period is 2019-05-15. I can decide to change these default values by calling the argument and inputting a different value.\nWhenever you wish to apply an optional argument, you use the related shortcode, e.g. -s or --start. Then, if there is an additional word behind the argument (in this case there is, which is START) it implies the argument expects you to define a value. Within the documentation you can read that the format must be YYYY-MM-DD implying that 2010-01-01 will be valid. If there is not an additional word behind it, it is enough to write down load AMZN -p (which refers to the prepost optional argument)\nLet\u0026rsquo;s change the starting and ending period of the data that is being loaded in by doing the following:\n2022 May 19, 05:38 (🦋) /stocks/ $ load AMZN -s 2005-01-01 -e 2010-01-01 Loading Daily AMZN stock with starting period 2005-01-01 for analysis. Datetime: 2022 May 19 05:43 Timezone: America/New_York Currency: USD Market: OPEN Company: Amazon.com, Inc. AMZN Performance ┏━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━┓ ┃ 1 Day ┃ 1 Week ┃ 1 Month ┃ 1 Year ┃ Period ┃ Volatility (1Y) ┃ Volume (10D avg) ┃ Last Price ┃ ┡━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━┩ │ -3.51 % │ -3.18 % │ -2.87 % │ 162.32 % │ 203.73 % │ 49.78 % │ 8.53 M │ 134.52 │ └─────────┴─────────┴─────────┴──────────┴──────────┴─────────────────┴──────────────────┴────────────┘ We can check that this period has changed by looking into the candle chart with candle. This, again shares the same -h argument. This results in the following which indeed depicts our selected period.\n2022 May 19, 05:44 (🦋) /stocks/ $ candle \nAs mentioned in the Explanation of Menus, some information also transfers over to other menus and this includes the loaded market data from load. So, if you would visit the ta menu (which stands for Technical Analysis) you will see that, by running any command, the selected period above is depicted again. Return to the Stocks menu again by using q and use it again to return to the home screen which can be shown with ?.\n Explanation of Scripts    The .openbb scripts offer the ability to automatically run a set of commands in the form of a routine. Furthermore, the scripts can be adapted, and documented, at any moment giving the user full control over the type of analysis you wish to do (and repeat). This can fundamental research, understanding market movements, finding hidden gems and even doing advanced statistical/econometric research.\nFor a thorough guide on how to setup these files, please see the Scripts \u0026amp; Routines guide.\n Importing and Exporting Data in the OpenBB Terminal    The OpenBBUserData folder\u0026rsquo;s default location is the home of the system user account. The location of this folder can be set by the user from the /settings menu. This folder is where exported files are saved, it is also where files being imported to the Terminal functions are kept. These include all things user-created:\n Screener presets Portfolio files Exported files Files to be imported by various functions Styles and themes Preferred data sources Anonymized usage logs   Accessing other sources of data via API keys    Within this menu you can define your, often free, API key from various platforms like Alpha Vantage, FRED, IEX, Twitter, DeGiro, Binance and Coinglass. API keys are in essence a set of random characters that is unique to you.\nYou can access this menu from the homepage with keys which will open the menu as shown below:\n\nWithin this menu you are able to set your API keys to access the commands that require that key. You can do so by typing the command followed by the API key, for example: fred a215egade08a8d47cfd49c849658a2be. When you press ENTER (⏎) the terminal will test whether this API key works. If it does, you receive the message defined, test passed and if it does not, you receive the message defined, test failed.\nTo figure out where you can obtain the API key, you can enter the command (e.g. av) and press ENTER (⏎) or use the table below. We recommend that you gradually obtain and set keys whenever you wish to use features that require an API key. For example, if you are interested in viewing recent news about a company, you should set the API key from the \u0026lsquo;News API\u0026rsquo;.\n   Command Name URL     av AlphaVantage https://www.alphavantage.co/support/#api-key   fmp Financial Modelling Prep https://site.financialmodelingprep.com/developer/docs/   quandl Quandl https://www.quandl.com   polygon Polygon https://polygon.io   fred Federal Reserve Economic Database (FRED) https://fred.stlouisfed.org   news News API https://newsapi.org/   tradier Tradier https://developer.tradier.com   cmc CoinMarketCap https://coinmarketcap.com/   finnhub Finnhub https://finnhub.io/   iex IEX Cloud https://iexcloud.io/   reddit Reddit https://www.reddit.com/wiki/api   twitter Twitter https://developer.twitter.com   rh Robinhood https://robinhood.com/us/en/   degiro DeGiro https://www.degiro.com/   oanda Oanda https://developer.oanda.com   binance Binance https://binance.com   bitquery Bitquery https://bitquery.io/   si Sentiment Investor https://sentimentinvestor.com   cb Coinbase https://help.coinbase.com/en/exchange/managing-my-account/how-to-create-an-api-key   walert Whale Alert https://docs.whale-alert.io/   glassnode Glassnode https://docs.glassnode.com/basic-api/api-key#how-to-get-an-api-key/   coinglass Coinglass https://coinglass.github.io/API-Reference/#api-key   ethplorer Ethplorer https://github.com/EverexIO/Ethplorer/wiki/Ethplorer-API   smartstake Smartstake https://www.smartstake.io   github GitHub https://docs.github.com/en/rest/guides/getting-started-with-the-rest-api   messari Messari https://messari.io/api/docs   cpanic Crypto Panic https://cryptopanic.com/developers/api/   eodhd EODHD https://eodhistoricaldata.com/   santiment Santiment https://app.santiment.net/   shroom ShroomDK https://sdk.flipsidecrypto.xyz/shroomdk   tokenterminal Token Terminal https://tokenterminal.com/     Available Menus Within the OpenBB Terminal    There is a large collection of (sub) menus available. Here, the asset class and other menus are described. To find a detailed description and explanation of its usage for each menu, click on the corresponding link to visit the introduction page.\nThe asset class menus are as follows:\n Introduction to Stocks: access historical pricing data, options, sector and industry analysis, and overall due diligence. Introduction to Crypto: dive into onchain data, tokenomics, circulation supply, nfts and more. Introduction to ETF: explore exchange traded funds, historical pricing, holdings and screeners. Introduction to Forex: see foreign exchanges, quotes, forward rates for currency pairs and Oanda integration. Introduction to Funds: discover mutual funds, general overviews, holdings and sector weights.  The other menus are as follows:\n Introduction to Economy: explore global macroeconomic data including interest and inflation rates, GDP and its components, futures, yield curves and treasury rates. Introduction to Alternative: explore alternative datasets such as COVID and open source metrics. Introduction to Econometrics: perform (advanced) regression techniques and statistical tests on custom datasets to understand relationships for both time series and panel data. Introduction to Portfolio: understand how your portfolio evolved over time, what assets contributed the most to this performance, compare this to a benchmark and make adjustments via various portfolio optimization techniques. Introduction to Dashboards: see interactive dashboards using voila and jupyter notebooks. Introduction to Reports (Work in Progress): create customizable research reports through jupyter notebooks.   Customizing the terminal    To adjust the lay-out and settings of the OpenBB Terminal you can access the settings menu. This menu allows you to tweak how the terminal behaves. This includes the following:\n dt adds or removes the datetime from the flair (which is next to the emoji). flair allows you to change the emoji that is used. lang gives the ability to change the terminal language. At this moment, the terminal is only available in English. export defines the folder you wish to export data you acquire from the terminal. Use quotes for custom locations. tz allows you to change the timezone if this is incorrectly displayed for you. autoscaling automatically scales plots for you if enabled (when green). pheight sets the percentage height of the plot (graphs) displayed (if autoscaling is enabled). pwidth sets the percentage width of the plot (graphs) displayed (if autoscaling is enabled). height sets the height of the plot (graphs) displayed (if autoscaling is disabled). width sets the width of the plot (graphs) displayed (if autoscaling is disabled). dpi refers to the resolution that is used for the plot (graphs) backend allows you to change the backend that is used for the graphs monitor choose which monitors to scale the plot (graphs) to if applicable source allows you to select a different source file in which the default data sources are written down  Next to that, to enable or disable certain functionalities of the terminal you can use the featflags menu which includes the following:\n retryload whenever you misspell commands, try to use the load command with it first (default is no). tab whether to use tabulate to print DataFrames, to prettify these DataFrames (default is yes). cls whether to clear the command window after each command (default is no). color whether to use colors within the terminal (default is yes). promptkit whether you wish to enable autocomplete and history (default is yes). thoughts whether to receive a thought of the day (default is no). reporthtml whether to open reports as HTML instead of Jupyter Notebooks (default is yes). exithelp whether to automatically print the help message when you use q (default is yes). rcontext whether to remember loaded tickers and similar while switching menus (default is yes). rich whether to apply a colorful rich terminal (default is yes). richpanel whether to apply a colorful rich terminal panel (default is yes). ion whether to enable interactive mode of MATPLOTLIB (default is yes). watermark whether to include the watermark of OpenBB Terminal in figures (default is yes). cmdloc whether the location of the command is displayed in figures (default is yes). tbhint whether usage hints are displayed in the bottom toolbar (default is yes).  Lastly, you can also change the default sources of each command via the sources menu. For example, if you would like to change the default data provider from the load command from the stocks menu you can first run the command get following by stocks_load. This returns the following:\n2022 Jul 25, 16:52 (🦋) /sources/ $ get stocks_load Default : yf Available : yf, iex, av, polygon Then, with set you can change the default data provider. For example, we can change the data provider to iex with the following:\n2022 Jul 25, 16:55 (🦋) /sources/ $ set stocks_load iex The data source was specified successfully. 2022 Jul 25, 16:55 (🦋) /sources/ $ get stocks_load Default : iex Available : iex, yf, av, polygon  Obtaining support and/or giving feedback    Being an open source platform that wishes to tailor to the needs of any type of investor, we highly encourage anyone to share with us their experience and/or how we can further improve the OpenBB Terminal. This can be anything from a very small bug to a new feature to the implementation of a highly advanced Machine Learning model.\nYou are able to directly send us information about a bug or question/suggestion from inside the terminal by using the support command which is available everywhere in the terminal. Here you can select which command you want to report a bug, ask a question or make a suggestion on. When you press ENTER (⏎), you are taken to the Support form which is automatically filled with your input. You are only required to include the type (e.g. bug, suggestion or question) and message in the form although this can also be set directly from inside the terminal (see support -h).\n\nAlternatively, you can contact us via the following routes:\n If you notice that a feature is missing inside the terminal, please fill in the Request a Feature form. If you wish to report a bug, have a question/suggestion or anything else, please fill in the Support form. If you wish to speak to us directly, please contact us via Discord.  "},{"id":1317,"href":"/OpenBBTerminal/SDK/stocks/options/","title":"options","parent":"Introduction to the Stocks Menu","content":""},{"id":1318,"href":"/OpenBBTerminal/SDK/alt/oss/","title":"oss","parent":"alt","content":""},{"id":1319,"href":"/OpenBBTerminal/SDK/crypto/ov/","title":"ov","parent":"crypto","content":""},{"id":1320,"href":"/OpenBBTerminal/SDK/portfolio/po/","title":"po","parent":"portfolio","content":""},{"id":1321,"href":"/OpenBBTerminal/SDK/portfolio/","title":"portfolio","parent":"OpenBB Python SDK","content":""},{"id":1322,"href":"/OpenBBTerminal/SDK/common/qa/","title":"qa","parent":"common","content":""},{"id":1323,"href":"/OpenBBTerminal/SDK/stocks/qa/","title":"qa","parent":"Introduction to the Stocks Menu","content":""},{"id":1324,"href":"/OpenBBTerminal/SDK/etf/scr/","title":"scr","parent":"etf","content":""},{"id":1325,"href":"/OpenBBTerminal/SDK/stocks/options/screen/","title":"screen","parent":"options","content":""},{"id":1326,"href":"/OpenBBTerminal/SDK/stocks/screener/","title":"screener","parent":"Introduction to the Stocks Menu","content":""},{"id":1327,"href":"/OpenBBTerminal/terminal/scripts/","title":"Scripts \u0026 Routines","parent":"Terminal","content":"The .openbb scripts offer the ability to automatically run a set of commands in the form of a routine. Furthermore, the scripts can be adapted, and documented, at any moment giving the user full control over the type of analysis you wish to do (and repeat). This can fundamental research, understanding market movements, finding hidden gems and even doing advanced statistical/econometric research.\nTable of Contents    Explanation of scripts Executing a script  Custom arguments   Create your own script     Explanation of scripts    The script file below is titled stocks_demo.openbb. This file follows the following logic:\n Comments: any text after a # is referred to as a comment. This is used to explain what is happening within the script and is not taking into account when running terminal commands. Commands: any text without a # is being ran inside the OpenBB Terminal. E.g. on the second line it says stocks thus within the OpenBB Terminal the script will enter stocks and run this for you.  These scripts have a 1-to-1 relationship with how you would normally use the terminal. To get a better understanding of how the terminal is used, please see Structure of the OpenBB Terminal.\n# Go into the stocks context stocks # Load a company ticker, e.g. Amazon load AMZN # Show a simple plot of the ticker, adding in any basic indicator. candle --ma 20,30 # Switch over to the due diligence menu dd # Show the price targets of Amazon, both the graph as well as the table pt pt --raw # Show estimates of annual and quarterly earnings as well as quarterly revenue estimates est # Open the comparison analysis menu (ca) ../ca # Pick stocks that are competitors to Amazon add ebay,wmt,tgt,baba,jd # Determine the valuations of each company valuation # Show correlations between each company hcorr # Figure out the sentiment perceived of each company sentiment # Return to home / Executing a script    By going to the main menu as depicted below (accessible with home), the exe command can be used. With this command you can run any .openbb script. These scripts are located where the application is located inside the routines folder.\nThus, using the earlier mentioned script, we can enter exe stocks_demo.openbb which automatically runs all commands within the script file. Thus, it will return a candle chart with moving averages, price targets from Analysts, valuations of related companies, the correlation between these companies and the market sentiment. This results in the following:\nCustom arguments    Next to that, it is also possible to add in custom arguments to your script making the script more interactive and allow you to do the same analysis for multiple companies. This is done in the following script:\n# This script requires you to use arguments. This can be done with the following: # exe example_with_inputs.openbb -i TSLA,AAPL,MSFT # Go to the stocks menu stocks # Load a ticker, given the argument used. E.g. -i TSLA load $ARGV[0] # Enter the Technical Analysis (ta) menu ta # Show the fibonacci retracement levels fib # Enter the comparison analysis (ca) menu ../ca # Set two extra tickers based on the arguments used. E.g. -i TSLA,AAPL,MSFT set $ARGV[1],$ARGV[2] # Plot the historical prices historical # Return to home / This script includes $ARGV[0], $ARGV[1] and $ARGV[2]. This means that the script requires you to submit three arguments. In this case, they refer to stock tickers. Therefore, like the script also says, you can include these arguments with -i followed by three tickers (e.g. exe example_with_inputs.openbb -i TSLA,AAPL,MSFT). This results in the following:\nIt is an incredibly simple script, but it gives an understanding what the possibilities are.\nCreate your own script    Scripts and routines reside in the routines folder and are automatically shown when you type exe from the home screen (home). To create your own, you can use the template.openbb file as a basis but you are free to duplicate one of the demo files.\nWithin this template, some examples are given, and you are free to change the contents and rename the file. As long as the file remains in the same folder, you will be able to find your file automatically as shown below:\n"},{"id":1328,"href":"/OpenBBTerminal/terminal/stocks/sia/","title":"Sector \u0026 Industry Analysis (SIA)","parent":"Introduction to Stocks","content":"A sector analysis is a study of the economic and financial state and prospects of a certain economic sector. An investor can use sector analysis to make a prediction about how well companies in the sector will perform. Investors that specialize in a specific sector or who utilize a top-down or sector rotation approach to investing generally use sector analysis.\nThe most promising sectors are chosen first under the top-down strategy, and then the investor evaluates stocks within that sector to choose which ones will be purchased. Investing in specific equities or using sector-based exchange-traded funds can be used to implement a sector rotation strategy (ETFs).\nAvailable commands    Clear     Country     Cpci     Cpcs     Cpic     Cpis     Cps     Exchange     Industry     Load     Metric     Mktcap     Period     Sector     Vis     "},{"id":1329,"href":"/OpenBBTerminal/SDK/stocks/sia/","title":"sia","parent":"Introduction to the Stocks Menu","content":""},{"id":1330,"href":"/OpenBBTerminal/SDK/common/ta/","title":"ta","parent":"common","content":""},{"id":1331,"href":"/OpenBBTerminal/SDK/stocks/ta/","title":"ta","parent":"Introduction to the Stocks Menu","content":""},{"id":1332,"href":"/OpenBBTerminal/tags/","title":"Tags","parent":"OpenBB Terminal Documentation","content":""},{"id":1333,"href":"/OpenBBTerminal/SDK/stocks/th/","title":"th","parent":"Introduction to the Stocks Menu","content":""},{"id":1334,"href":"/OpenBBTerminal/SDK/crypto/tools/","title":"tools","parent":"crypto","content":""}]