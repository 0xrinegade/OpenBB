"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[41556],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(n),u=l,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,o=new Array(i);o[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[d]="string"==typeof e?e:l,o[1]=r;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},61919:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var a=n(87462),l=(n(67294),n(3905));const i={title:"Installation",sidebar_position:2,description:"The OpenBB SDK provides programmatic access to all Terminal functions. This layer of code allows users to build their own tools and applications on top of the existing architecture. Follow these steps to install on a local machine.",keywords:["installation","installer","install","guide","mac","windows","linux","python","github","macos","how to","explanation","openbb","sdk","api","pip","pypi"]},o=void 0,r={unversionedId:"quickstart/installation",id:"quickstart/installation",title:"Installation",description:"The OpenBB SDK provides programmatic access to all Terminal functions. This layer of code allows users to build their own tools and applications on top of the existing architecture. Follow these steps to install on a local machine.",source:"@site/content/sdk/quickstart/installation.md",sourceDirName:"quickstart",slug:"/quickstart/installation",permalink:"/sdk/quickstart/installation",draft:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/sdk/quickstart/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Installation",sidebar_position:2,description:"The OpenBB SDK provides programmatic access to all Terminal functions. This layer of code allows users to build their own tools and applications on top of the existing architecture. Follow these steps to install on a local machine.",keywords:["installation","installer","install","guide","mac","windows","linux","python","github","macos","how to","explanation","openbb","sdk","api","pip","pypi"]},sidebar:"tutorialSidebar",previous:{title:"Requirements",permalink:"/sdk/quickstart/requirements"},next:{title:"Setting API Keys",permalink:"/sdk/quickstart/api-keys"}},s={},p=[{value:"1. System Preparation",id:"1-system-preparation",level:2},{value:"1.1 Install Miniconda",id:"11-install-miniconda",level:3},{value:"1.2 Install CMake",id:"12-install-cmake",level:3},{value:"2. Create Python Environment",id:"2-create-python-environment",level:2},{value:"2.1 Confirm Conda Base",id:"21-confirm-conda-base",level:3},{value:"2.2 Create the Environment",id:"22-create-the-environment",level:3},{value:"2.3 Activate the Environment",id:"23-activate-the-environment",level:3},{value:"3. Install the OpenBB SDK",id:"3-install-the-openbb-sdk",level:2},{value:"3A. Install From PyPi",id:"3a-install-from-pypi",level:3},{value:"3B. Install via Git Clone",id:"3b-install-via-git-clone",level:3},{value:"3B.1 Clone the Project",id:"3b1-clone-the-project",level:4},{value:"3B.2 CD into OpenBBTerminal",id:"3b2-cd-into-openbbterminal",level:4},{value:"3B.3 Install Remaining Packages",id:"3b3-install-remaining-packages",level:4},{value:"Updating the OpenBB SDK Version",id:"updating-the-openbb-sdk-version",level:2},{value:"A. Updating a PyPi Installation",id:"a-updating-a-pypi-installation",level:3},{value:"B. Updating a Git Clone Installation",id:"b-updating-a-git-clone-installation",level:3},{value:"B.1 Fetch changes to the code",id:"b1-fetch-changes-to-the-code",level:4},{value:"B.2 Run Poetry Install",id:"b2-run-poetry-install",level:4}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The OpenBB SDK provides programmatic access to all Terminal functions. This layer of code allows users to build their own tools and applications on top of the existing architecture. Follow these steps to install on a local machine."),(0,l.kt)("admonition",{title:"NOTE",type:"note"},(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"Make sure you meet all ",(0,l.kt)("a",{parentName:"li",href:"/sdk/quickstart/requirements"},"requirements")," before proceeding."),(0,l.kt)("li",{parentName:"ul"},"If the OpenBB Terminal has already been installed in a virtual Python environment, no additional installations are required."))),(0,l.kt)("h2",{id:"1-system-preparation"},"1. System Preparation"),(0,l.kt)("p",null,"Prepare the system by installing the following items:"),(0,l.kt)("h3",{id:"11-install-miniconda"},"1.1 Install Miniconda"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.conda.io/en/latest/miniconda.html"},"Install Miniconda")),(0,l.kt)("p",null,"Miniconda is a Python environment and package manager. It is required for installing certain dependencies."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Go ",(0,l.kt)("a",{parentName:"p",href:"https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links"},"here")," to find the download for your operating system or use the links below:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Apple-Silicon Systems: ",(0,l.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.pkg"},"Miniconda for MacOS"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Intel-based Mac Systems: ",(0,l.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"},"Miniconda for MacOS"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Linux and WSL Systems: ",(0,l.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"},"Miniconda for Linux"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Raspberry PI Systems: ",(0,l.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh"},"Miniconda for Raspberry PI"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Windows Systems: ",(0,l.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe"},"Miniconda for Windows")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"NOTE for Apple Silicon Users:")," Install Rosetta from the command line: ",(0,l.kt)("inlineCode",{parentName:"p"},"softwareupdate --install-rosetta")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"NOTE for Windows users:")," Install/update Microsoft C++ Build Tools from ",(0,l.kt)("a",{parentName:"p",href:"https://visualstudio.microsoft.com/visual-cpp-build-tools/"},"here"),"."))))),(0,l.kt)("h3",{id:"12-install-cmake"},"1.2 Install CMake"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"CMake is required by several Python modules.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"For Windows:")),(0,l.kt)("p",null,"CMake is installed as a part of Microsoft C++ Build Tools. Skip ahead to the next step."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"For MacOS:")),(0,l.kt)("p",null,"Check if homebrew is installed by running ",(0,l.kt)("inlineCode",{parentName:"p"},"brew --version")),(0,l.kt)("p",null,"If Homebrew is not installed, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\nbrew install cmake\nbrew install gcc\n')),(0,l.kt)("p",null,"If Homebrew is already installed:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"brew install cmake\nbrew install gcc\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"For Linux:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update && sudo apt upgrade\nsudo apt install -y gcc cmake\n")),(0,l.kt)("h2",{id:"2-create-python-environment"},"2. Create Python Environment"),(0,l.kt)("p",null,"The first step is to create the virtual Python environment."),(0,l.kt)("h3",{id:"21-confirm-conda-base"},"2.1 Confirm Conda Base"),(0,l.kt)("p",null,"When a terminal window is opened, if the base Conda environment - look for ",(0,l.kt)("inlineCode",{parentName:"p"},"(base)")," to the left of the cursor on the command line - is not activated automatically, find the path for it by entering:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"conda env list\n")),(0,l.kt)("p",null,"Copy the path which corresponds with ",(0,l.kt)("inlineCode",{parentName:"p"},"base"),", and activate it with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"conda activate REPLACE_WITH_PATH\n")),(0,l.kt)("p",null,"Check which ",(0,l.kt)("inlineCode",{parentName:"p"},"conda")," version is installed by entering:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"conda -V\n")),(0,l.kt)("p",null,"As of writing, the most recent version of ",(0,l.kt)("inlineCode",{parentName:"p"},"Conda")," is, ",(0,l.kt)("inlineCode",{parentName:"p"},"23.1.0"),". If required, update from a lower version with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"conda install -c conda-forge -n base conda=23.1.0\n")),(0,l.kt)("h3",{id:"22-create-the-environment"},"2.2 Create the Environment"),(0,l.kt)("p",null,"Create the environment by copying the code below into the command line:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"conda create -n obb -c conda-forge python=3.10.9 pip pybind11 cmake git cvxpy lightgbm poetry\n")),(0,l.kt)("h3",{id:"23-activate-the-environment"},"2.3 Activate the Environment"),(0,l.kt)("p",null,"After the packages from Step 2 install, activate the newly created environment by entering:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"conda activate obb\n")),(0,l.kt)("h2",{id:"3-install-the-openbb-sdk"},"3. Install the OpenBB SDK"),(0,l.kt)("h3",{id:"3a-install-from-pypi"},"3A. Install From PyPi"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pip install openbb[all]\n")),(0,l.kt)("p",null,"Done! The OpenBB SDK can now be imported to any Python session with the line of code below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"from openbb_terminal.sdk import openbb\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"https://docs.openbb.co/terminal"},"OpenBB Terminal")," is part of the installation, and the application can be launched from the command line by entering:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"openbb\n")),(0,l.kt)("h3",{id:"3b-install-via-git-clone"},"3B. Install via Git Clone"),(0,l.kt)("h4",{id:"3b1-clone-the-project"},"3B.1 Clone the Project"),(0,l.kt)("p",null,"Cloning the GitHub repo will download the source code to the current working directory."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/OpenBB-finance/OpenBBTerminal.git\n")),(0,l.kt)("h4",{id:"3b2-cd-into-openbbterminal"},"3B.2 CD into OpenBBTerminal"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"cd OpenBBTerminal\n")),(0,l.kt)("h4",{id:"3b3-install-remaining-packages"},"3B.3 Install Remaining Packages"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pip install qdldl==0.1.5.post3\npoetry install -E all\n")),(0,l.kt)("p",null,"Done! The OpenBB SDK can now be imported to any Python session with the line of code below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"from openbb_terminal.sdk import openbb\n")),(0,l.kt)("p",null,"The Terminal application is also installed, and it can be launched from the command line at the root ",(0,l.kt)("inlineCode",{parentName:"p"},"OpenBBTerminal")," folder with:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"python terminal.py\n")),(0,l.kt)("h2",{id:"updating-the-openbb-sdk-version"},"Updating the OpenBB SDK Version"),(0,l.kt)("p",null,"Use the code below to check the version number of the OpenBB SDK."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from openbb_terminal.sdk import openbb\nopenbb.__version__\n")),(0,l.kt)("p",null,"Which prints a string similar to: ",(0,l.kt)("inlineCode",{parentName:"p"},"'2.4.1'")),(0,l.kt)("h3",{id:"a-updating-a-pypi-installation"},"A. Updating a PyPi Installation"),(0,l.kt)("p",null,"To upgrade the OpenBB SDK to the latest version, with the ",(0,l.kt)("inlineCode",{parentName:"p"},"obb")," Python environment active, enter:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"pip install -U openbb[all]\n")),(0,l.kt)("h3",{id:"b-updating-a-git-clone-installation"},"B. Updating a Git Clone Installation"),(0,l.kt)("h4",{id:"b1-fetch-changes-to-the-code"},"B.1 Fetch changes to the code"),(0,l.kt)("p",null,"With the ",(0,l.kt)("inlineCode",{parentName:"p"},"obb")," Python environment activated, navigate into the root folder of the cloned project. Then, pull the changes from GitHub:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"git fetch\ngit pull\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," If working from a forked repo, the ",(0,l.kt)("inlineCode",{parentName:"p"},"git pull")," command will need to be adjusted to pull from the desired branch, like ",(0,l.kt)("inlineCode",{parentName:"p"},"origin")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"upstream"),". For example, ",(0,l.kt)("inlineCode",{parentName:"p"},"git pull origin main"),"; ",(0,l.kt)("inlineCode",{parentName:"p"},"git pull origin develop")),(0,l.kt)("h4",{id:"b2-run-poetry-install"},"B.2 Run Poetry Install"),(0,l.kt)("p",null,"Update any changes to the dependencies by running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"poetry install -E all\n")))}m.isMDXComponent=!0}}]);