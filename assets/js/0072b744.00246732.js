"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[63080],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(n),u=o,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||l;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[d]="string"==typeof e?e:o,i[1]=r;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},66018:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>p});var a=n(87462),o=(n(67294),n(3905));const l={title:"Installation",sidebar_position:1,description:"The OpenBB SDK provides programmatic access to all Terminal functions. This layer of code allows users to build their own tools and applications on top of the existing architecture. Follow these steps to install on a local machine.",keywords:["installation","installer","install","guide","mac","windows","linux","python","github","macos","how to","explanation","openbb","sdk","api","pip","pypi"]},i=void 0,r={unversionedId:"sdk/installation",id:"sdk/installation",title:"Installation",description:"The OpenBB SDK provides programmatic access to all Terminal functions. This layer of code allows users to build their own tools and applications on top of the existing architecture. Follow these steps to install on a local machine.",source:"@site/content/sdk/installation.md",sourceDirName:"sdk",slug:"/sdk/installation",permalink:"/sdk/installation",draft:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/sdk/installation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Installation",sidebar_position:1,description:"The OpenBB SDK provides programmatic access to all Terminal functions. This layer of code allows users to build their own tools and applications on top of the existing architecture. Follow these steps to install on a local machine.",keywords:["installation","installer","install","guide","mac","windows","linux","python","github","macos","how to","explanation","openbb","sdk","api","pip","pypi"]},sidebar:"tutorialSidebar",previous:{title:"OpenBB SDK",permalink:"/sdk/"},next:{title:"Basics",permalink:"/sdk/usage/basics/"}},s={},p=[{value:"Create Python Environment",id:"create-python-environment",level:2},{value:"Activate the Environment",id:"activate-the-environment",level:2},{value:"Install the OpenBB SDK",id:"install-the-openbb-sdk",level:2},{value:"Install From PyPi",id:"install-from-pypi",level:3},{value:"Install via Git Clone",id:"install-via-git-clone",level:3},{value:"Updating the OpenBB SDK Version",id:"updating-the-openbb-sdk-version",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The OpenBB SDK provides programmatic access to all Terminal functions. This layer of code allows users to build their own tools and applications on top of the existing architecture. Follow these steps to install on a local machine. ",(0,o.kt)("strong",{parentName:"p"},"If the OpenBB Terminal has already been installed in a virtual Python environment, no additional installations are required.")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Minimum Requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Windows 10,"),(0,o.kt)("li",{parentName:"ul"},"Modern CPU (made in the last 5 years)"),(0,o.kt)("li",{parentName:"ul"},"At least 4GB of RAM"),(0,o.kt)("li",{parentName:"ul"},"At least 5GB of free storage"),(0,o.kt)("li",{parentName:"ul"},"Internet connection (cable or 4G mobile)"))),(0,o.kt)("p",null,"Before continuing with the installation process, make sure the following software is installed:"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Miniconda"),"Miniconda is a Python environment and package manager. It is required for installing certain dependencies.",(0,o.kt)("p",null,"Go ",(0,o.kt)("a",{parentName:"p",href:"https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links"},"here")," to find the download for your operating system or use the links below:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Apple-Silicon Systems: ",(0,o.kt)("a",{parentName:"li",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.pkg"},"Miniconda for MacOS")),(0,o.kt)("li",{parentName:"ul"},"Intel-based Mac Systems: ",(0,o.kt)("a",{parentName:"li",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"},"Miniconda for MacOS")),(0,o.kt)("li",{parentName:"ul"},"Linux and WSL Systems: ",(0,o.kt)("a",{parentName:"li",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"},"Miniconda for Linux")),(0,o.kt)("li",{parentName:"ul"},"Raspberry PI Systems: ",(0,o.kt)("a",{parentName:"li",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh"},"Miniconda for Raspberry PI")),(0,o.kt)("li",{parentName:"ul"},"Windows Systems: ",(0,o.kt)("a",{parentName:"li",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe"},"Miniconda for Windows"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE for Apple Silicon Users:")," Install Rosetta from the command line: ",(0,o.kt)("inlineCode",{parentName:"p"},"softwareupdate --install-rosetta")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE for Windows users:")," Install/update Microsoft C++ Build Tools from ",(0,o.kt)("a",{parentName:"p",href:"https://visualstudio.microsoft.com/visual-cpp-build-tools/"},"here"),".")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"CMake (Mac and Linux only)"),(0,o.kt)("p",null,"If you have a ",(0,o.kt)("strong",{parentName:"p"},"MacBook"),", check if homebrew is installed by running ",(0,o.kt)("inlineCode",{parentName:"p"},"brew --version")),(0,o.kt)("p",null,"If Homebrew is not installed, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\nbrew install cmake\nbrew install gcc\n')),(0,o.kt)("p",null,"If Homebrew is already installed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew install cmake\nbrew install gcc\n")),(0,o.kt)("p",null,"If you have a ",(0,o.kt)("strong",{parentName:"p"},"Linux")," computer, use the following script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update && sudo apt upgrade\nsudo apt install -y gcc cmake\n"))),(0,o.kt)("h2",{id:"create-python-environment"},"Create Python Environment"),(0,o.kt)("p",null,"The first step is to create the virtual Python environment. When a terminal window is opened, if the base Conda environment - look for ",(0,o.kt)("inlineCode",{parentName:"p"},"(base)")," to the left of the cursor on the command line - is not activated automatically, find the path for it by entering:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda env list\n")),(0,o.kt)("p",null,"Copy the path which corresponds with ",(0,o.kt)("inlineCode",{parentName:"p"},"base"),", and activate it with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda activate REPLACE_WITH_PATH\n")),(0,o.kt)("p",null,"Check which ",(0,o.kt)("inlineCode",{parentName:"p"},"conda")," version is installed by entering:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda -V\n")),(0,o.kt)("p",null,"As of writing, the most recent version of ",(0,o.kt)("inlineCode",{parentName:"p"},"Conda")," is, ",(0,o.kt)("inlineCode",{parentName:"p"},"23.1.0"),". If required, update from a lower version with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda install -c conda-forge -n base conda=23.1.0\n")),(0,o.kt)("p",null,"Create the environment by copying the code below into the command line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda create -n obb -c conda-forge python=3.10.9 pip pybind11 cmake git cvxpy lightgbm poetry\n")),(0,o.kt)("h2",{id:"activate-the-environment"},"Activate the Environment"),(0,o.kt)("p",null,"After the packages from Step 2 install, activate the newly created environment by entering:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda activate obb\n")),(0,o.kt)("h2",{id:"install-the-openbb-sdk"},"Install the OpenBB SDK"),(0,o.kt)("p",null,"There are two methods to install the OpenBB SDK. The easiest way is to use PyPi as it requires a single command to be ran. If you would also be looking to make code edits, it can be beneficial to clone the repository."),(0,o.kt)("h3",{id:"install-from-pypi"},"Install From PyPi"),(0,o.kt)("p",null,"Inside any terminal run the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'pip install "openbb[all]"\n')),(0,o.kt)("p",null,"That's it! The OpenBB SDK can now be imported to any Python session with the line of code below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"from openbb_terminal.sdk import openbb\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://docs.openbb.co/terminal"},"OpenBB Terminal")," is part of the installation, and the application can be launched from the command line by entering:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"openbb\n")),(0,o.kt)("h3",{id:"install-via-git-clone"},"Install via Git Clone"),(0,o.kt)("p",null,"From your code editor or command line, browse to the location the OpenBB Terminal source code should live. Make sure you have completed the previous steps."),(0,o.kt)("p",null,"This starts by cloning the GitHub repository. This will download the source code to the current working directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/OpenBB-finance/OpenBBTerminal.git\n")),(0,o.kt)("p",null,"Then, navigate to this folder. This can be done in command line or through the code editor by opening the folder."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"cd OpenBBTerminal\n")),(0,o.kt)("p",null,"There are a few packages that required to be installed. This is done through Poetry, a package manager."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install qdldl==0.1.5.post3\npoetry install -E all\n")),(0,o.kt)("p",null,"Done! The OpenBB SDK can now be imported to any Python session with the line of code below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"from openbb_terminal.sdk import openbb\n")),(0,o.kt)("p",null,"The Terminal application is also installed, and it can be launched from the command line at the root ",(0,o.kt)("inlineCode",{parentName:"p"},"OpenBBTerminal")," folder with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"python terminal.py\n")),(0,o.kt)("h2",{id:"updating-the-openbb-sdk-version"},"Updating the OpenBB SDK Version"),(0,o.kt)("p",null,"To upgrade the OpenBB SDK to the latest version via ",(0,o.kt)("inlineCode",{parentName:"p"},"pypi"),", with the ",(0,o.kt)("inlineCode",{parentName:"p"},"obb")," Python environment active, enter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"pip install -U openbb[all]\n")),(0,o.kt)("p",null,"To update the OpenBB SDK via the Git Clone method with the ",(0,o.kt)("inlineCode",{parentName:"p"},"obb")," Python environment activated, navigate into the root folder of the cloned project. Then, pull the changes from GitHub:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"git fetch\ngit pull\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," If working from a forked repo, the ",(0,o.kt)("inlineCode",{parentName:"p"},"git pull")," command will need to be adjusted to pull from the desired branch, like ",(0,o.kt)("inlineCode",{parentName:"p"},"origin")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"upstream"),". For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"git pull origin main"),"; ",(0,o.kt)("inlineCode",{parentName:"p"},"git pull origin develop")),(0,o.kt)("p",null,"Update any changes to the dependencies by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"poetry install -E all\n")))}m.isMDXComponent=!0}}]);