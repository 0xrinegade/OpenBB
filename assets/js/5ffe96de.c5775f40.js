"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[29409],{66552:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>x,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=n(74848),s=n(28453),d=n(94331);const i={title:"FRED_REGIONAL"},l=void 0,a={id:"excel/reference/economy/fred_regional",title:"FRED_REGIONAL",description:"Query the Geo Fred API for regional economic data by series group. The series group ID is found by using fredsearch and the seriesid parameter.",source:"@site/content/excel/reference/economy/fred_regional.md",sourceDirName:"excel/reference/economy",slug:"/excel/reference/economy/fred_regional",permalink:"/excel/reference/economy/fred_regional",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/excel/reference/economy/fred_regional.md",tags:[],version:"current",frontMatter:{title:"FRED_REGIONAL"},sidebar:"tutorialSidebar",previous:{title:"CPI",permalink:"/excel/reference/economy/cpi"},next:{title:"FRED_SEARCH",permalink:"/excel/reference/economy/fred_search"}},o={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Examples",id:"examples",level:2},{value:"Parameters",id:"parameters",level:2}];function h(e){const r={code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(d.A,{title:"ECONOMY.FRED_REGIONAL | OpenBB Add-in for Excel Docs"}),"\n",(0,t.jsxs)(r.p,{children:["Query the Geo Fred API for regional economic data by series group. The series group ID is found by using ",(0,t.jsx)(r.code,{children:"fred_search"})," and the ",(0,t.jsx)(r.code,{children:"series_id"})," parameter."]}),"\n",(0,t.jsx)(r.h2,{id:"syntax",children:"Syntax"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-excel",children:"=OBB.ECONOMY.FRED_REGIONAL(symbol,[start_date],[end_date],[limit],[provider],[is_series_group],[region_type],[season],[units],[frequency],[aggregation_method],[transform])\n"})}),"\n",(0,t.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-excel",children:'=OBB.ECONOMY.FRED_REGIONAL("NYICLAIMS",,,,"fred")\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-excel",children:'=OBB.ECONOMY.FRED_REGIONAL("NYICLAIMS","2021-01-01","2021-12-31",10,"fred")\n'})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"}),(0,t.jsx)(r.th,{children:"Required"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"symbol"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Text"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Symbol to get data for."})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"True"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"start_date"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsx)(r.td,{children:"Start date of the data, in YYYY-MM-DD format."}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"end_date"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsx)(r.td,{children:"End date of the data, in YYYY-MM-DD format."}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"limit"}),(0,t.jsx)(r.td,{children:"Number"}),(0,t.jsx)(r.td,{children:"The number of data entries to return."}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"provider"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsx)(r.td,{children:"Options: fred, defaults to fred."}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"is_series_group"}),(0,t.jsx)(r.td,{children:"Boolean"}),(0,t.jsx)(r.td,{children:"When True, the symbol provided is for a series_group, else it is for a series ID. (provider: fred)"}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"region_type"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsxs)(r.td,{children:["The type of regional data. Parameter is only valid when ",(0,t.jsx)(r.code,{children:"is_series_group"})," is True. (provider: fred)"]}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"season"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsxs)(r.td,{children:["The seasonal adjustments to the data. Parameter is only valid when ",(0,t.jsx)(r.code,{children:"is_series_group"})," is True. (provider: fred)"]}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"units"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsxs)(r.td,{children:["The units of the data. This should match the units returned from searching by series ID. An incorrect field will not necessarily return an error. Parameter is only valid when ",(0,t.jsx)(r.code,{children:"is_series_group"})," is True. (provider: fred)"]}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"frequency"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsxs)(r.td,{children:["Frequency aggregation to convert high frequency data to lower frequency. Parameter is only valid when ",(0,t.jsx)(r.code,{children:"is_series_group"})," is True. a = Annual sa= Semiannual q = Quarterly m = Monthly w = Weekly d = Daily wef = Weekly, Ending Friday weth = Weekly, Ending Thursday wew = Weekly, Ending Wednesday wetu = Weekly, Ending Tuesday wem = Weekly, Ending Monday wesu = Weekly, Ending Sunday wesa = Weekly, Ending Saturday bwew = Biweekly, Ending Wednesday bwem = Biweekly, Ending Monday (provider: fred)"]}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"aggregation_method"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsxs)(r.td,{children:["A key that indicates the aggregation method used for frequency aggregation. This parameter has no affect if the frequency parameter is not set. Only valid when ",(0,t.jsx)(r.code,{children:"is_series_group"})," is True. avg = Average sum = Sum eop = End of Period (provider: fred)"]}),(0,t.jsx)(r.td,{children:"False"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"transform"}),(0,t.jsx)(r.td,{children:"Text"}),(0,t.jsxs)(r.td,{children:["Transformation type. Only valid when ",(0,t.jsx)(r.code,{children:"is_series_group"})," is True. lin = Levels (No transformation) chg = Change ch1 = Change from Year Ago pch = Percent Change pc1 = Percent Change from Year Ago pca = Compounded Annual Rate of Change cch = Continuously Compounded Rate of Change cca = Continuously Compounded Annual Rate of Change log = Natural Log (provider: fred)"]}),(0,t.jsx)(r.td,{children:"False"})]})]})]}),"\n",(0,t.jsx)(r.hr,{})]})}function x(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},94331:(e,r,n)=>{n.d(r,{A:()=>d});n(96540);var t=n(5260),s=n(74848);function d(e){let{title:r}=e;return(0,s.jsx)(t.A,{children:(0,s.jsx)("title",{children:r})})}},28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>l});var t=n(96540);const s={},d=t.createContext(s);function i(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);