"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87718],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,c=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=d(n),f=c,m=s["".concat(l,".").concat(f)]||s[f]||u[f]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var a=n.length,i=new Array(a);i[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[s]="string"==typeof e?e:c,i[1]=o;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},88828:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(67294),c=n(35742);function a(e){let{title:t}=e;return r.createElement(c.Z,null,r.createElement("title",null,t))}},12368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),c=(n(67294),n(3905)),a=n(88828);const i={title:"check_valid_binance_str",description:"Learn about the check_valid_binance_str Python function from OpenBB. This function checks if symbols are defined in binance. Source code provided.",keywords:["binance","symbol","cryptocurrency","due diligence","check_valid_binance_str"]},o=void 0,l={unversionedId:"sdk/reference/crypto/dd/check_valid_binance_str",id:"sdk/reference/crypto/dd/check_valid_binance_str",title:"check_valid_binance_str",description:"Learn about the check_valid_binance_str Python function from OpenBB. This function checks if symbols are defined in binance. Source code provided.",source:"@site/content/sdk/reference/crypto/dd/check_valid_binance_str.md",sourceDirName:"sdk/reference/crypto/dd",slug:"/sdk/reference/crypto/dd/check_valid_binance_str",permalink:"/sdk/reference/crypto/dd/check_valid_binance_str",draft:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/sdk/reference/crypto/dd/check_valid_binance_str.md",tags:[],version:"current",lastUpdatedBy:"montezdesousa",lastUpdatedAt:1709158151,formattedLastUpdatedAt:"Feb 28, 2024",frontMatter:{title:"check_valid_binance_str",description:"Learn about the check_valid_binance_str Python function from OpenBB. This function checks if symbols are defined in binance. Source code provided.",keywords:["binance","symbol","cryptocurrency","due diligence","check_valid_binance_str"]},sidebar:"tutorialSidebar",previous:{title:"candle",permalink:"/sdk/reference/crypto/dd/candle"},next:{title:"coin",permalink:"/sdk/reference/crypto/dd/coin"}},d={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}],s={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,c.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)(a.Z,{title:"crypto.dd.check_valid_binance_str - Reference | OpenBB SDK Docs",mdxType:"HeadTitle"}),(0,c.kt)("p",null,"Check if symbol is in defined binance. ","[Source: Binance]"),(0,c.kt)("p",null,"Source Code: [",(0,c.kt)("a",{parentName:"p",href:"https://github.com/OpenBB-finance/OpenBBTerminal/tree/main/openbb_terminal/cryptocurrency/due_diligence/binance_model.py#L102"},"link"),"]"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python",metastring:"wordwrap",wordwrap:!0},"openbb.crypto.dd.check_valid_binance_str(symbol: str)\n")),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"parameters"},"Parameters"),(0,c.kt)("p",null,"This function does not take any parameters."),(0,c.kt)("hr",null),(0,c.kt)("h2",{id:"returns"},"Returns"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null},"Type"),(0,c.kt)("th",{parentName:"tr",align:null},"Description"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"str"),(0,c.kt)("td",{parentName:"tr",align:null},"Symbol")))),(0,c.kt)("hr",null))}f.isMDXComponent=!0}}]);