"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[89284],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(t),m=l,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(k,i(i({ref:n},c),{},{components:t})):a.createElement(k,i({ref:n},c))}));function k(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,i=new Array(o);i[0]=m;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[d]="string"==typeof e?e:l,i[1]=r;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},20033:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>k,frontMatter:()=>r,metadata:()=>p,toc:()=>d});var a=t(87462),l=t(67294),o=t(3905);function i(e){let{href:n,label:t,type:a}=e;return l.createElement("a",{href:n,className:"button button--primary !no-underline inline-flex gap-4 h-10 items-center",rel:"noreferrer noopener",target:"_blank"},"windows"===a?l.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",className:"w-4",height:88,width:88,viewBox:"0 0 88 88"},l.createElement("path",{d:"m0 12.402 35.687-4.86.016 34.423-35.67.203zm35.67 33.529.028 34.453L.028 75.48.026 45.7zm4.326-39.025L87.314 0v41.527l-47.318.376zm47.329 39.349-.011 41.34-47.318-6.678-.066-34.739z",fill:"currentColor"})):l.createElement("svg",{className:"w-4 -mt-1",xmlns:"http://www.w3.org/2000/svg",xmlSpace:"preserve",width:814,height:1e3,viewBox:"0 0 814 1000"},l.createElement("path",{fill:"currentColor",d:"M788.1 340.9c-5.8 4.5-108.2 62.2-108.2 190.5 0 148.4 130.3 200.9 134.2 202.2-.6 3.2-20.7 71.9-68.7 141.9-42.8 61.6-87.5 123.1-155.5 123.1s-85.5-39.5-164-39.5c-76.5 0-103.7 40.8-165.9 40.8s-105.6-57-155.5-127C46.7 790.7 0 663 0 541.8c0-194.4 126.4-297.5 250.8-297.5 66.1 0 121.2 43.4 162.7 43.4 39.5 0 101.1-46 176.3-46 28.5 0 130.9 2.6 198.3 99.2zm-234-181.5c31.1-36.9 53.1-88.1 53.1-139.3 0-7.1-.6-14.3-1.9-20.1-50.6 1.9-110.8 33.7-147.1 75.8-28.5 32.4-55.1 83.6-55.1 135.5 0 7.8 1.3 15.6 1.9 18.1 3.2.6 8.4 1.3 13.6 1.3 45.4 0 102.5-30.4 135.5-71.3z"})),t)}const r={title:"Installation",sidebar_position:2,description:"The OpenBB Terminal can be directly installed on a Mac or Windows machine via the installer packages below. While not available for Linux is currently available, it can be installed from the command line in a virtual Python environment.",keywords:["installation","installer","install","guide","mac","windows","linux","python","github","macos","how to","explanation","openbb terminal"]},s=void 0,p={unversionedId:"quickstart/installation",id:"quickstart/installation",title:"Installation",description:"The OpenBB Terminal can be directly installed on a Mac or Windows machine via the installer packages below. While not available for Linux is currently available, it can be installed from the command line in a virtual Python environment.",source:"@site/content/terminal/quickstart/installation.md",sourceDirName:"quickstart",slug:"/quickstart/installation",permalink:"/terminal/quickstart/installation",draft:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/terminal/quickstart/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Installation",sidebar_position:2,description:"The OpenBB Terminal can be directly installed on a Mac or Windows machine via the installer packages below. While not available for Linux is currently available, it can be installed from the command line in a virtual Python environment.",keywords:["installation","installer","install","guide","mac","windows","linux","python","github","macos","how to","explanation","openbb terminal"]},sidebar:"tutorialSidebar",previous:{title:"Requirements",permalink:"/terminal/quickstart/requirements"},next:{title:"Settings API Keys",permalink:"/terminal/quickstart/api-keys"}},c={},d=[{value:"Installer Packages",id:"installer-packages",level:2},{value:"A. Windows Installer",id:"a-windows-installer",level:3},{value:"1. Download",id:"1-download",level:4},{value:"2. Run Installer",id:"2-run-installer",level:4},{value:"3. Follow Prompts",id:"3-follow-prompts",level:4},{value:"4. Launch",id:"4-launch",level:4},{value:"B. MacOS Installer",id:"b-macos-installer",level:3},{value:"1.  Download",id:"1--download",level:4},{value:"2. Mount DMG",id:"2-mount-dmg",level:4},{value:"3. Drag Folder",id:"3-drag-folder",level:4},{value:"4. Unmount DMG",id:"4-unmount-dmg",level:4},{value:"5. Launch",id:"5-launch",level:4},{value:"Source Code",id:"source-code",level:2},{value:"1. System Preparation",id:"1-system-preparation",level:3},{value:"1.1 Install Miniconda",id:"11-install-miniconda",level:4},{value:"1.2 Install CMake",id:"12-install-cmake",level:4},{value:"1.3 Linux and WSL Only",id:"13-linux-and-wsl-only",level:4},{value:"2. Create Environment",id:"2-create-environment",level:3},{value:"2.1 Confirm Conda Base",id:"21-confirm-conda-base",level:4},{value:"2.2 Create the Environment",id:"22-create-the-environment",level:4},{value:"3. Activate Environment",id:"3-activate-environment",level:3},{value:"4. Install OpenBB Terminal",id:"4-install-openbb-terminal",level:3},{value:"4.1 Clone the Project",id:"41-clone-the-project",level:4},{value:"4.2 Navigate to OpenBBTerminal",id:"42-navigate-to-openbbterminal",level:4},{value:"4.3 Install Remaining Packages",id:"43-install-remaining-packages",level:4},{value:"4.4 Launch OpenBB Terminal",id:"44-launch-openbb-terminal",level:4},{value:"Docker",id:"docker",level:2},{value:"1. Windows",id:"1-windows",level:3},{value:"1.1. Install Docker Desktop",id:"11-install-docker-desktop",level:4},{value:"1.2. Start Docker",id:"12-start-docker",level:4},{value:"1.3. Install VcXsrv",id:"13-install-vcxsrv",level:4},{value:"1.4. Pull and run the container",id:"14-pull-and-run-the-container",level:4},{value:"2. MacOS",id:"2-macos",level:3},{value:"2.1. Install and run Docker Desktop",id:"21-install-and-run-docker-desktop",level:4},{value:"2.2. Install XQuartz",id:"22-install-xquartz",level:4},{value:"2.3. Get Docker IP",id:"23-get-docker-ip",level:4},{value:"2.4. Pull and run the container",id:"24-pull-and-run-the-container",level:4},{value:"3. Linux",id:"3-linux",level:3},{value:"3.1. Install and run Docker Desktop",id:"31-install-and-run-docker-desktop",level:4},{value:"3.2. Pull and run the container",id:"32-pull-and-run-the-container",level:4},{value:"4. Advanced",id:"4-advanced",level:3},{value:"Without Docker Compose",id:"without-docker-compose",level:4},{value:"Advanced Installation",id:"advanced-installation",level:2}],u={toc:d},m="wrapper";function k(e){let{components:n,...t}=e;return(0,o.kt)(m,(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The OpenBB Terminal can be directly installed on a Mac or Windows machine via the installer packages below. While not available for Linux is currently available, it can be installed from the command line in a virtual Python environment. Having trouble? Reach us on ",(0,o.kt)("a",{parentName:"p",href:"https://openbb.co/discord"},"Discord")," or visit our ",(0,o.kt)("a",{parentName:"p",href:"https://openbb.co/contact"},"contact page"),"."),(0,o.kt)("p",null,"Follow along with the instructions for the preferred installation method:"),(0,o.kt)("h2",{id:"installer-packages"},"Installer Packages"),(0,o.kt)("h3",{id:"a-windows-installer"},"A. Windows Installer"),(0,o.kt)("p",null,"Install the OpenBB Terminal on Windows (10 or greater):"),(0,o.kt)("h4",{id:"1-download"},"1. Download"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1:")," Download the file by clicking on the button."),(0,o.kt)(i,{type:"windows",href:"https://github.com/OpenBB-finance/OpenBBTerminal/releases/download/v2.5.1/Windows.OpenBB.Terminal.v2.5.1.exe",label:"Windows Installer",mdxType:"InstallerButton"}),(0,o.kt)("h4",{id:"2-run-installer"},"2. Run Installer"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2:")," Open the downloaded file by double-clicking on it"),(0,o.kt)("h4",{id:"3-follow-prompts"},"3. Follow Prompts"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3:")," Follow the prompts to complete the installation process"),(0,o.kt)("h4",{id:"4-launch"},"4. Launch"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4:")," Launch the Terminal by double-clicking on the application shortcut added to the desktop."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:")," The first launch may take up to a few minutes, subsequent launches will be quicker."),(0,o.kt)("h3",{id:"b-macos-installer"},"B. MacOS Installer"),(0,o.kt)("p",null,"Install the OpenBB Terminal on MacOS (Big Sur or later). There are two versions of the installers available for MacOS, Apple Silicon (M1) and Intel-based. Apple Silicon users will need to install Rosetta prior to installation. Install Rosetta from the command line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"softwareupdate --install-rosetta\n")),(0,o.kt)("p",null,(0,o.kt)(i,{href:"https://github.com/OpenBB-finance/OpenBBTerminal/releases/download/v2.5.1/x86.64.MacOS.OpenBB.Terminal.v2.5.1.dmg",label:"Mac Intel Installer",mdxType:"InstallerButton"}),"  ",(0,o.kt)(i,{href:"https://github.com/OpenBB-finance/OpenBBTerminal/releases/download/v2.5.1/ARM64.MacOS.OpenBB.Terminal.v2.5.1.dmg",label:"Mac M1 Installer",mdxType:"InstallerButton"})),(0,o.kt)("h4",{id:"1--download"},"1.  Download"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 1:")," Download the DMG file from the links above."),(0,o.kt)("h4",{id:"2-mount-dmg"},"2. Mount DMG"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 2:")," Mount the downloaded DMG file by double-clicking on it."),(0,o.kt)("h4",{id:"3-drag-folder"},"3. Drag Folder"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 3:")," Click and drag the OpenBB Terminal folder and hold it over the Applications shortcut. This opens a new Finder window, then drag the OpenBB Terminal folder into the Applications folder."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/11668535/173027899-9b25ae4f-1eef-462c-9dc9-86086e9cf197.png",alt:"MacOS Installation"})),(0,o.kt)("h4",{id:"4-unmount-dmg"},"4. Unmount DMG"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 4:"),' Unmount the installer, by "Ejecting OpenBB Terminal" from, locations, in Finder.'),(0,o.kt)("h4",{id:"5-launch"},"5. Launch"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Step 5:")," Launch the application by double-clicking on the ",(0,o.kt)("inlineCode",{parentName:"p"},"OpenBB Terminal")," application."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note:"),' During the first launch, a warning message may appear. Click, "Open".'),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/85772166/220201620-1c42bbd4-7509-41fc-8df8-389f34fde58a.png",alt:"MacOS Installation"})),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"source-code"},"Source Code"),(0,o.kt)("p",null,"The following instructions are for installing the OpenBB Terminal source code."),(0,o.kt)("h3",{id:"1-system-preparation"},"1. System Preparation"),(0,o.kt)("p",null,"Prepare the system by installing the following items:"),(0,o.kt)("h4",{id:"11-install-miniconda"},"1.1 Install Miniconda"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.conda.io/en/latest/miniconda.html"},"Install Miniconda")),(0,o.kt)("p",null,"Miniconda is a Python environment and package manager. It is required for installing certain dependencies."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Go ",(0,o.kt)("a",{parentName:"p",href:"https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links"},"here")," to find the download for your operating system or use the links below:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Apple-Silicon Systems: ",(0,o.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.pkg"},"Miniconda for MacOS"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Intel-based Mac Systems: ",(0,o.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"},"Miniconda for MacOS"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Linux and WSL Systems: ",(0,o.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh"},"Miniconda for Linux"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Raspberry PI Systems: ",(0,o.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh"},"Miniconda for Raspberry PI"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Windows Systems: ",(0,o.kt)("a",{parentName:"p",href:"https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe"},"Miniconda for Windows")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"NOTE for Apple Silicon Users:")," Install Rosetta from the command line: ",(0,o.kt)("inlineCode",{parentName:"p"},"softwareupdate --install-rosetta")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"NOTE for Windows users:")," Install/update Microsoft C++ Build Tools from ",(0,o.kt)("a",{parentName:"p",href:"https://visualstudio.microsoft.com/visual-cpp-build-tools/"},"here"),"."))))),(0,o.kt)("h4",{id:"12-install-cmake"},"1.2 Install CMake"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"CMake is required by several Python modules.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For Windows:")),(0,o.kt)("p",null,"CMake is installed as a part of Microsoft C++ Build Tools. Skip ahead to the next step."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For MacOS:")),(0,o.kt)("p",null,"Check if homebrew is installed by running ",(0,o.kt)("inlineCode",{parentName:"p"},"brew --version")),(0,o.kt)("p",null,"If Homebrew is not installed, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\nbrew install cmake\nbrew install gcc\n')),(0,o.kt)("p",null,"If Homebrew is already installed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew install cmake\nbrew install gcc\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For Linux:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update && sudo apt upgrade\nsudo apt install -y gcc cmake\n")),(0,o.kt)("h4",{id:"13-linux-and-wsl-only"},"1.3 Linux and WSL Only"),(0,o.kt)("p",null,"Since a WSL installation is headless by default (i.e., there is only access to a terminal running a Linux distribution) there are additional steps required to display visualizations. A more detailed tutorial is found, ",(0,o.kt)("a",{parentName:"p",href:"https://medium.com/@shaoyenyu/make-matplotlib-works-correctly-with-x-server-in-wsl2-9d9928b4e36a"},"here"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Dynamically export the DISPLAY environment variable in WSL2:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"# add to the end of ~/.bashrc file\nexport DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0\n# source the file\nsource ~/.bashrc\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Download and install ",(0,o.kt)("a",{parentName:"li",href:"https://sourceforge.net/projects/vcxsrv/"},"VcXsrv")),(0,o.kt)("li",{parentName:"ul"},'When running the program is important to check "Disable access control"')),(0,o.kt)("p",null,"After this, ",(0,o.kt)("inlineCode",{parentName:"p"},"VcXsrv")," should be running successfully, and the machine is ready to proceed with the terminal installation."),(0,o.kt)("p",null,"Alternatives to ",(0,o.kt)("inlineCode",{parentName:"p"},"VcXsrv")," include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://opticos.github.io/gwsl/"},"GWSL")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://xming.en.softonic.com/"},"Xming")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://wayland.freedesktop.org/docs/html/"},"Wayland"))),(0,o.kt)("h3",{id:"2-create-environment"},"2. Create Environment"),(0,o.kt)("p",null,"The first step is to create the virtual Python environment."),(0,o.kt)("h4",{id:"21-confirm-conda-base"},"2.1 Confirm Conda Base"),(0,o.kt)("p",null,"When a terminal window is opened, if the base Conda environment - look for ",(0,o.kt)("inlineCode",{parentName:"p"},"(base)")," to the left of the cursor on the command line - is not activated automatically, find the path for it by entering:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda env list\n")),(0,o.kt)("p",null,"Copy the path which corresponds with ",(0,o.kt)("inlineCode",{parentName:"p"},"base"),", and activate it with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda activate REPLACE_WITH_PATH\n")),(0,o.kt)("p",null,"Check which ",(0,o.kt)("inlineCode",{parentName:"p"},"conda")," version is installed by entering:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda -V\n")),(0,o.kt)("p",null,"As of writing, the most recent version of ",(0,o.kt)("inlineCode",{parentName:"p"},"Conda")," is, ",(0,o.kt)("inlineCode",{parentName:"p"},"23.1.0"),". If required, update from a lower version with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda install -c conda-forge -n base conda=23.1.0\n")),(0,o.kt)("h4",{id:"22-create-the-environment"},"2.2 Create the Environment"),(0,o.kt)("p",null,"Create the environment by copying the code below into the command line:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda create -n obb -c conda-forge python=3.10.9 pip pybind11 cmake git cvxpy lightgbm poetry\n")),(0,o.kt)("h3",{id:"3-activate-environment"},"3. Activate Environment"),(0,o.kt)("p",null,"After the packages from Step 2 install, activate the newly created environment by entering:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"conda activate obb\n")),(0,o.kt)("h3",{id:"4-install-openbb-terminal"},"4. Install OpenBB Terminal"),(0,o.kt)("p",null,"From the command line, navigate into a folder where the installation should live. Do not continue without completing steps 1-3."),(0,o.kt)("h4",{id:"41-clone-the-project"},"4.1 Clone the Project"),(0,o.kt)("p",null,"Cloning the GitHub repo will download the source code to the current working directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"git clone https://github.com/OpenBB-finance/OpenBBTerminal.git\n")),(0,o.kt)("h4",{id:"42-navigate-to-openbbterminal"},"4.2 Navigate to OpenBBTerminal"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"cd OpenBBTerminal\n")),(0,o.kt)("h4",{id:"43-install-remaining-packages"},"4.3 Install Remaining Packages"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install qdldl==0.1.5.post3\npoetry install -E all\n")),(0,o.kt)("h4",{id:"44-launch-openbb-terminal"},"4.4 Launch OpenBB Terminal"),(0,o.kt)("p",null,"Start the terminal by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python terminal.py\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE:")," When a terminal is re-opened, the Python environment will need to be activated again - ",(0,o.kt)("inlineCode",{parentName:"p"},"conda activate obb")," - and the current working directory should be the ",(0,o.kt)("inlineCode",{parentName:"p"},"OpenBBTerminal")," folder where the source code was cloned."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"TROUBLESHOOTING:")," Having difficulty getting through the installation, or encountering errors? Check out the ",(0,o.kt)("a",{parentName:"p",href:"/terminal/quickstart/troubleshooting"},"troubleshooting page"),", or reach out to our ",(0,o.kt)("a",{parentName:"p",href:"https://discord.gg/Up2QGbMKHY"},"Discord")," community for help."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"docker"},"Docker"),(0,o.kt)("p",null,"Installing the OpenBB Terminal via Docker supports both Windows and Unix systems (Linux + MacOS). Installation differs a bit between operating system (Windows, macOS and Linux). Please select the section matching to your OS."),(0,o.kt)("h3",{id:"1-windows"},"1. Windows"),(0,o.kt)("h4",{id:"11-install-docker-desktop"},"1.1. Install Docker Desktop"),(0,o.kt)("p",null,"You can find ",(0,o.kt)("inlineCode",{parentName:"p"},"Docker Desktop")," for Windows here: ",(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com/products/docker-desktop"},"Download Docker Desktop")),(0,o.kt)("h4",{id:"12-start-docker"},"1.2. Start Docker"),(0,o.kt)("p",null,"Execute the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"docker info\n")),(0,o.kt)("p",null,"If you have something like this, it means you haven't started Docker:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"docker info\nServer:\nERROR: Cannot connect to the Docker daemon at unix:///var/run/docker.sock.\nIs the docker daemon running?\n")),(0,o.kt)("p",null,"Start Docker, this is how the right output looks like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"docker info\nClient:\n Context:    default\n Debug Mode: false\n\nServer:\n Containers: 14\n  Running: 2\n  Paused: 1\n  Stopped: 10\n")),(0,o.kt)("h4",{id:"13-install-vcxsrv"},"1.3. Install VcXsrv"),(0,o.kt)("p",null,"To display charts with your container, you need : VcXsrv."),(0,o.kt)("p",null,"You can download VcXsrv here : ",(0,o.kt)("a",{parentName:"p",href:"https://sourceforge.net/projects/vcxsrv"},"Download VcXsrv")),(0,o.kt)("p",null,"When running VcXsrv program check the option: ",(0,o.kt)("inlineCode",{parentName:"p"},"Disable access control")),(0,o.kt)("h4",{id:"14-pull-and-run-the-container"},"1.4. Pull and run the container"),(0,o.kt)("p",null,"Execute this commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"curl -o docker-compose.yaml https://raw.githubusercontent.com/OpenBB-finance/OpenBBTerminal/main/build/docker/docker-compose.yaml\n\ndocker compose run openbb\n")),(0,o.kt)("p",null,"This will download and run the file: ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")),(0,o.kt)("p",null,"This file contents the settings to pull and run OpenBB Terminal Docker image."),(0,o.kt)("h3",{id:"2-macos"},"2. MacOS"),(0,o.kt)("h4",{id:"21-install-and-run-docker-desktop"},"2.1. Install and run Docker Desktop"),(0,o.kt)("p",null,"Install and run Docker Desktop as describe above in this document."),(0,o.kt)("h4",{id:"22-install-xquartz"},"2.2. Install XQuartz"),(0,o.kt)("p",null,"You can download XQuartz here: ",(0,o.kt)("a",{parentName:"p",href:"https://www.xquartz.org"},"Download XQuartz")),(0,o.kt)("p",null,"Open X Quartz."),(0,o.kt)("p",null,"Then on ",(0,o.kt)("inlineCode",{parentName:"p"},"Preferences > Security"),"."),(0,o.kt)("p",null,"Make sure both of these options are enabled:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Authenticate connections")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Allow connections from network clients"))),(0,o.kt)("p",null,"It should look like this:\n",(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/18151143/132548605-235d774b-9aa6-4a45-afcf-58fb775d376a.png",alt:"Screen Shot 2021-09-08 at 12 21 48 PM"})),(0,o.kt)("h4",{id:"23-get-docker-ip"},"2.3. Get Docker IP"),(0,o.kt)("p",null,"To get Docker IP you can use this command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'IP=$(ifconfig | grep inet | grep -v "127.0.0.1" | awk \'$1=="inet" {print $2}\')\n')),(0,o.kt)("h4",{id:"24-pull-and-run-the-container"},"2.4. Pull and run the container"),(0,o.kt)("p",null,"Execute this commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"curl -o docker-compose.yaml https://raw.githubusercontent.com/OpenBB-finance/OpenBBTerminal/main/build/docker/docker-compose.yaml\n\nxhost +$IP\ndocker compose run -e DISPLAY=$IP:0 openbb\n")),(0,o.kt)("p",null,"This will download and run the file: ",(0,o.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")),(0,o.kt)("p",null,"This file contents the settings to pull and run OpenBB Terminal Docker image."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"xhost +$IP")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"DISPLAY=$IP:0")," parts are there to allow charts display."),(0,o.kt)("h3",{id:"3-linux"},"3. Linux"),(0,o.kt)("h4",{id:"31-install-and-run-docker-desktop"},"3.1. Install and run Docker Desktop"),(0,o.kt)("p",null,"Install and run Docker Desktop as describe above in this document."),(0,o.kt)("h4",{id:"32-pull-and-run-the-container"},"3.2. Pull and run the container"),(0,o.kt)("p",null,"Execute this commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"curl -o docker-compose.yaml https://raw.githubusercontent.com/OpenBB-finance/OpenBBTerminal/main/build/docker/docker-compose.yaml\n\nxhost +local:\ndocker compose run openbb\n")),(0,o.kt)("p",null,"Note: if you're using remote docker host, you can connect with ",(0,o.kt)("inlineCode",{parentName:"p"},"ssh -X <FQDN/IP>"),"."),(0,o.kt)("h3",{id:"4-advanced"},"4. Advanced"),(0,o.kt)("h4",{id:"without-docker-compose"},"Without Docker Compose"),(0,o.kt)("p",null,"To run directly the docker image you can use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"docker run --rm -it \\\n  -v ~/.openbb_terminal/:/home/python/.openbb_terminal \\\n  -v ~/OpenBBUserData:/home/python/OpenBBUserData \\\n  ghcr.io/openbb-finance/openbbterminal/openbb:latest\n")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"advanced-installation"},"Advanced Installation"),(0,o.kt)("p",null,"By default we advise using ",(0,o.kt)("inlineCode",{parentName:"p"},"conda")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"poetry")," for environment setup and dependency management. Conda ships binaries for packages like ",(0,o.kt)("inlineCode",{parentName:"p"},"numpy")," so these dependencies are not built from source locally by ",(0,o.kt)("inlineCode",{parentName:"p"},"pip"),". Poetry solves the dependency tree in a way that the dependencies of dependencies of dependencies use versions that are compatible with each other."),(0,o.kt)("p",null,"For ",(0,o.kt)("inlineCode",{parentName:"p"},"Conda")," environments, the ",(0,o.kt)("inlineCode",{parentName:"p"},"build/conda")," folder contains multiple ",(0,o.kt)("inlineCode",{parentName:"p"},".yaml")," configuration files to choose from."),(0,o.kt)("p",null,"When using other python distributions we highly recommend a virtual environment like ",(0,o.kt)("inlineCode",{parentName:"p"},"virtualenv")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"pyenv")," for installing the terminal dependency libraries."),(0,o.kt)("p",null,"Requirements files that are found in the project root:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"requirements.txt")," list all the dependencies without Machine Learning libraries"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"requirements-full.txt")," list all the dependencies with Machine Learning libraries")),(0,o.kt)("p",null,"They can be installed with ",(0,o.kt)("inlineCode",{parentName:"p"},"pip"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install -r requirements.txt\n")),(0,o.kt)("p",null,"The dependency tree is solved by poetry."),(0,o.kt)("p",null,"Note: The libraries specified in the requirements files have been tested and work for the purpose of this project, however, these may be older versions. Hence, it is recommended for the user to set up a virtual python environment prior to installing these. This allows to keep dependencies required by different projects in separate places."))}k.isMDXComponent=!0}}]);