"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53034],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||r;return n?o.createElement(h,i(i({ref:t},d),{},{components:n})):o.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88828:(e,t,n)=>{n.d(t,{Z:()=>r});var o=n(67294),a=n(35742);function r(e){let{title:t}=e;return o.createElement(a.Z,null,o.createElement("title",null,t))}},9904:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=n(87462),a=(n(67294),n(3905)),r=n(88828);const i={title:"How To Add Toolkit Extensions",sidebar_position:4,description:"This guide outlines the process for adding a new toolkit extension and router path to the OpenBB Platform.",keywords:["OpenBB Platform","Open source","contribution","contributing","community","toolkit","code","provider","endpoint","router","openbb-provider","openbb-core","how to","new","template"]},l=void 0,s={unversionedId:"platform/development/how-to/add_toolkit_extension",id:"platform/development/how-to/add_toolkit_extension",title:"How To Add Toolkit Extensions",description:"This guide outlines the process for adding a new toolkit extension and router path to the OpenBB Platform.",source:"@site/content/platform/development/how-to/add_toolkit_extension.md",sourceDirName:"platform/development/how-to",slug:"/platform/development/how-to/add_toolkit_extension",permalink:"/platform/development/how-to/add_toolkit_extension",draft:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/platform/development/how-to/add_toolkit_extension.md",tags:[],version:"current",lastUpdatedBy:"montezdesousa",lastUpdatedAt:1713966587,formattedLastUpdatedAt:"Apr 24, 2024",sidebarPosition:4,frontMatter:{title:"How To Add Toolkit Extensions",sidebar_position:4,description:"This guide outlines the process for adding a new toolkit extension and router path to the OpenBB Platform.",keywords:["OpenBB Platform","Open source","contribution","contributing","community","toolkit","code","provider","endpoint","router","openbb-provider","openbb-core","how to","new","template"]},sidebar:"tutorialSidebar",previous:{title:"How To Add Data Provider Extensions",permalink:"/platform/development/how-to/add_data_provider_extension"},next:{title:"How To Add OBBject Extensions",permalink:"/platform/development/how-to/add_obbject_extension"}},p={},d=[{value:"What Is A Toolkit?",id:"what-is-a-toolkit",level:2},{value:"Provider",id:"provider",level:3},{value:"Core",id:"core",level:3},{value:"Folder Structure",id:"folder-structure",level:2},{value:"How To Create A Router Extension",id:"how-to-create-a-router-extension",level:2},{value:"Create Folder",id:"create-folder",level:3},{value:"Add Dependencies",id:"add-dependencies",level:3},{value:"Build and Install Package",id:"build-and-install-package",level:2},{value:"Add Router Commands",id:"add-router-commands",level:2}],c={toc:d},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(r.Z,{title:"How To Add Toolkit Extensions - How-To - Development | OpenBB Platform Docs",mdxType:"HeadTitle"}),(0,a.kt)("p",null,"This page will summarize some of the differences between toolkit and provider extensions,\nand then walk through adding a new toolkit extension and router path to the OpenBB Platform using a supplied template."),(0,a.kt)("h2",{id:"what-is-a-toolkit"},"What Is A Toolkit?"),(0,a.kt)("p",null,"Toolkits are a generalized category of functionality for performing operations beyond the scope of any provider fetcher.\nThe possibilities are virtually unlimited, and each component (",(0,a.kt)("inlineCode",{parentName:"p"},"equity"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"etf"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"index"),", etc.) can be installed or removed independently.\nA toolkit might even be extending another extension, which itself is an extension of an extension."),(0,a.kt)("p",null,"An easy example to understand is, ",(0,a.kt)("inlineCode",{parentName:"p"},"openbb-technical"),".\nIt has its own router where all functions are configured as a ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," request, with data being sent by the user as a serialized JSON in the body.\nCalculations are performed using the supplied data and parameters, returning a new instance of the OBBject class."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"pyproject.toml")," defining the extension is nearly nearly identical to a Provider.\nInstead of registering the plugin as a provider extension, it is an ",(0,a.kt)("inlineCode",{parentName:"p"},"openbb_core")," extension."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"openbb-devtools")," is an extension with no router entry points or added functionality. Its only purpose is to install a collection of Python packages.")),(0,a.kt)("h3",{id:"provider"},"Provider"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[tool.poetry.plugins."openbb_provider_extension"]\n')),(0,a.kt)("h3",{id:"core"},"Core"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[tool.poetry.plugins."openbb_core_extension"]\n')),(0,a.kt)("p",null,"Below is the contents of the ",(0,a.kt)("inlineCode",{parentName:"p"},"pyproject.toml")," file that defines the ",(0,a.kt)("inlineCode",{parentName:"p"},"openbb-technincal")," extension."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[tool.poetry]\nname = "openbb-technical"\nversion = "1.1.3"\ndescription = "Technical Analysis extension for OpenBB"\nauthors = ["OpenBB Team <hello@openbb.co>"]\nreadme = "README.md"\npackages = [{ include = "openbb_technical" }]\n\n[tool.poetry.dependencies]\npython = ">=3.8,<3.12"  # scipy forces python <4.0 explicitly\nscipy = "^1.10.1"\nstatsmodels = "^0.14.0"\nscikit-learn = "^1.3.1"\npandas-ta = "^0.3.14b"\nopenbb-core = "^1.1.2"\n\n[build-system]\nrequires = ["poetry-core"]\nbuild-backend = "poetry.core.masonry.api"\n\n[tool.poetry.plugins."openbb_core_extension"]\ntechnical = "openbb_technical.technical_router:router"\n')),(0,a.kt)("p",null,"On ",(0,a.kt)("a",{parentName:"p",href:"add_data_provider_extension"},"this page"),", we created a data provider extension using a template ZIP file.\nThe structure is familiar, but let's take a look at some subtle differences."),(0,a.kt)("p",null,"For convenience, a template router extension ZIP file can be downloaded ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenBB-finance/OpenBBTerminal/files/14542427/dashboards.zip"},"here")," to follow along with."),(0,a.kt)("h2",{id:"folder-structure"},"Folder Structure"),(0,a.kt)("p",null,"A couple of notable differences between a provider and toolkit extension are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In the OpenBB GitHub repo, extensions are all located under:",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-console"},"~/OpenBBTerminal/openbb_platform/extensions\n"))),(0,a.kt)("li",{parentName:"ul"},"An additional folder housing integration tests, with the ",(0,a.kt)("inlineCode",{parentName:"li"},"tests")," folder staying empty."),(0,a.kt)("li",{parentName:"ul"},"There is a ",(0,a.kt)("inlineCode",{parentName:"li"},"router")," file, and there can be sub-folders with additional routers."),(0,a.kt)("li",{parentName:"ul"},"Utility functions don't need their own sub-folder."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"__init__.py")," files are all empty.")),(0,a.kt)("h2",{id:"how-to-create-a-router-extension"},"How To Create A Router Extension"),(0,a.kt)("p",null,"Let's create an extension which defines a new router entry point at the base of the ",(0,a.kt)("inlineCode",{parentName:"p"},"obb")," namespace.\nIt's going to be called, ",(0,a.kt)("inlineCode",{parentName:"p"},"openbb-dashboards"),", and will serve as an empty router for various dashboard packages to populate ",(0,a.kt)("strong",{parentName:"p"},"future")," endpoints with.\nBy itself, it might not have any functions. Some other extension will name it as a dependency, using it as an entry point."),(0,a.kt)("p",null,"We'll use the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenBB-finance/OpenBBTerminal/files/14542427/dashboards.zip"},"ZIP file")," template as a starting point, renaming everything as the first step."),(0,a.kt)("h3",{id:"create-folder"},"Create Folder"),(0,a.kt)("p",null,"The folder does not have to be kept with the OpenBB code, and could be its own GitHub repo.\nFor demonstration purposes, we'll unpack the ZIp file template with the rest of the OpenBB extensions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"~/OpenBBTerminal/openbb_platform/extensions/dashboards\n")),(0,a.kt)("h3",{id:"add-dependencies"},"Add Dependencies"),(0,a.kt)("p",null,"This extension will be agnostic as to the type of components that might populate this space in the future - Plotly Dash, Streamlit, etc.\nThe only addition to the dependencies will be ",(0,a.kt)("inlineCode",{parentName:"p"},"openbb-charting"),".\nThis will provide a Plotly charting library and custom backend with PyWry for window creation."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[tool.poetry]\nname = "openbb-dashboards"\nversion = "1.0.0"\ndescription = "Dashboards Extension for OpenBB"\nauthors = ["OpenBB Team <hello@openbb.co>"]\nreadme = "README.md"\npackages = [{ include = "openbb_dashboards" }]\n\n[tool.poetry.dependencies]\npython = ">=3.8,<3.12"  # scipy forces python <4.0 explicitly\nopenbb-core = "^1.1.2"\nopenbb-charting = "^2.0.0"\n\n[build-system]\nrequires = ["poetry-core"]\nbuild-backend = "poetry.core.masonry.api"\n\n[tool.poetry.plugins."openbb_core_extension"]\ndashboards = "openbb_dashboards.dashboards_router:router"\n')),(0,a.kt)("h2",{id:"build-and-install-package"},"Build and Install Package"),(0,a.kt)("p",null,"Open a Terminal and navigate into the folder where the extension is, then enter:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"poetry lock\n\npip install -e .\n")),(0,a.kt)("h2",{id:"add-router-commands"},"Add Router Commands"),(0,a.kt)("p",null,"To demonstrate this extension, we'll make a simple function for creating and returning a line chart. This adds one endpoint to the new namespace, ",(0,a.kt)("inlineCode",{parentName:"p"},"obb.dashboards.line_chart()"),"."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"After creating a new function, remember to rebuild the Python interface and static assets."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import openbb\nopenbb.build()\nexit()\n"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'"""Dashboards Router."""\n\n# pylint: disable = unused-argument\n\nfrom typing import List, Optional, Union\n\nfrom openbb_charting import charting_router\nfrom openbb_charting.core.openbb_figure import OpenBBFigure\nfrom openbb_core.app.model.charts.chart import Chart\nfrom openbb_core.app.model.obbject import OBBject\nfrom openbb_core.app.router import Router\nfrom openbb_core.app.utils import basemodel_to_df, df_to_basemodel\nfrom openbb_core.provider.abstract.data import Data\n\nrouter = Router(prefix="")\n\n\n@router.command(\n    methods=["POST"],\n)\ndef line_chart(\n    data: Union[Data, List[Data]],\n    x: Optional[str] = None,\n    y: Optional[Union[str, List[str]]] = None,\n    layout_kwargs: Optional[dict] = None,\n    scatter_kwargs: Optional[dict] = None,\n) -> OBBject:\n    """Create a line chart."""\n    index = "date" if x is None else x\n    df = basemodel_to_df(data, index=index)\n\n    y = y.split(",") if isinstance(y, str) else y\n    if y is None:\n        y = df.columns.to_list()\n\n    if scatter_kwargs is None:\n        scatter_kwargs = {}\n\n    fig = OpenBBFigure(create_backend=True)\n    for col in y:\n        fig = fig.add_scatter(\n            x=df.index,\n            y=df[col],\n            name=col,\n            hovertemplate=\n            "<b>%{fullData.name}</b>: " +\n            "%{y:.2f}" +\n            "<extra></extra>",\n            hoverlabel=dict(font_size=10),\n            **scatter_kwargs,\n        )\n\n    if layout_kwargs is None:\n        layout_kwargs = {}\n\n    fig.update_layout(\n        hovermode="x unified",\n        **layout_kwargs,\n    )\n\n    results = OBBject(results=df_to_basemodel(df))\n\n    results.chart = Chart(\n        fig=fig,\n        content=fig.show(external=True).to_plotly_json(),\n        format=charting_router.CHART_FORMAT\n    )\n\n    return results\n')),(0,a.kt)("p",null,"An example syntax for use is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'data = obb.equity.price.historical("AAPL", provider="yfinance")\nchart = obb.dashboards.line_chart(\n    data.results, y=["high", "low"],\n    scatter_kwargs = {"showlegend": False},\n    layout_kwargs={"template":"plotly_white"}\n)\nchart.show()\n')),(0,a.kt)("p",null,"This is demonstration is not meant to represent a finished product, only a path to explore while getting started.\nWe hope you enjoy the journey and look forward to seeing what you build!"))}m.isMDXComponent=!0}}]);