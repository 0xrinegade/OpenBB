"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[81346],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88828:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(67294),r=n(35742);function i(e){let{title:t}=e;return o.createElement(r.Z,null,o.createElement("title",null,t))}},67846:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905)),i=n(88828);const a={title:"Building Extensions for OpenBB Platform",sidebar_position:2,description:"This guide provides a comprehensive walkthrough on how to create custom extensions for the OpenBB Platform. It covers the process from generating the extension structure to sharing it with the community.",keywords:["OpenBB Platform","Custom extension","Python development","Data integration","Community contribution"]},l=void 0,s={unversionedId:"platform/development/developer-guidelines/build_openbb_extensions",id:"platform/development/developer-guidelines/build_openbb_extensions",title:"Building Extensions for OpenBB Platform",description:"This guide provides a comprehensive walkthrough on how to create custom extensions for the OpenBB Platform. It covers the process from generating the extension structure to sharing it with the community.",source:"@site/content/platform/development/developer-guidelines/build_openbb_extensions.md",sourceDirName:"platform/development/developer-guidelines",slug:"/platform/development/developer-guidelines/build_openbb_extensions",permalink:"/platform/development/developer-guidelines/build_openbb_extensions",draft:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/platform/development/developer-guidelines/build_openbb_extensions.md",tags:[],version:"current",lastUpdatedBy:"teh_coderer",lastUpdatedAt:1700872066,formattedLastUpdatedAt:"Nov 25, 2023",sidebarPosition:2,frontMatter:{title:"Building Extensions for OpenBB Platform",sidebar_position:2,description:"This guide provides a comprehensive walkthrough on how to create custom extensions for the OpenBB Platform. It covers the process from generating the extension structure to sharing it with the community.",keywords:["OpenBB Platform","Custom extension","Python development","Data integration","Community contribution"]},sidebar:"tutorialSidebar",previous:{title:"Expectations for Developers",permalink:"/platform/development/developer-guidelines/expecations_for_developers"},next:{title:"Add a Data Point",permalink:"/platform/development/developer-guidelines/add_data_point"}},p={},c=[{value:"Best Practices",id:"best-practices",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{title:"Build OpenBB Extensions - Developer Guidelines - Development | OpenBB Platform Docs",mdxType:"HeadTitle"}),(0,r.kt)("p",null,"We have a ",(0,r.kt)("strong",{parentName:"p"},"Cookiecutter")," template that will help you get started. It serves as a jumpstart for your extension development, so you can focus on the data and not on the boilerplate."),(0,r.kt)("p",null,"Please refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenBB-finance/openbb-cookiecutter"},"Cookiecutter template")," and follow the instructions there."),(0,r.kt)("p",null,"This document will walk you through the steps of adding a new extension to the OpenBB Platform."),(0,r.kt)("p",null,"The high level steps are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Generate the extension structure"),(0,r.kt)("li",{parentName:"ul"},"Install your dependencies"),(0,r.kt)("li",{parentName:"ul"},"Install your new package"),(0,r.kt)("li",{parentName:"ul"},"Use your extension (either from Python or the API interface)"),(0,r.kt)("li",{parentName:"ul"},"QA your extension"),(0,r.kt)("li",{parentName:"ul"},"Share your extension with the community")),(0,r.kt)("h2",{id:"best-practices"},"Best Practices"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Review Platform Dependencies"),": Before adding any dependency, ensure it aligns with the Platform's existing dependencies."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Use Loose Versioning"),": If possible, specify a range to maintain compatibility. E.g., ",(0,r.kt)("inlineCode",{parentName:"li"},">=1.4,<1.5"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Testing"),": Test your extension with the Platform's core to avoid conflicts. Both unit and integration tests are recommended."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Document Dependencies"),": Use ",(0,r.kt)("inlineCode",{parentName:"li"},"pyproject.toml")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"poetry.lock")," for clear, up-to-date records.")))}m.isMDXComponent=!0}}]);