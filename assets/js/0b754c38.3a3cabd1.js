"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[572],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=s(r),u=a,f=m["".concat(l,".").concat(u)]||m[u]||p[u]||o;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[m]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},62872:(e,t,r)=>{r.d(t,{Z:()=>c});var n=r(39960),a=r(67294),o=r(86010),i=r(16550);function c(e){let{title:t,url:r,description:c,command:l}=e;const{pathname:s}=(0,i.TH)();return a.createElement(n.Z,{className:(0,o.Z)("rounded border-2 !no-underline border-grey-600 p-6 cursor-pointer relative overflow-hidden hover:shadow-2xl hover:-translate-y-2 transform transition-all duration-300 ease-in-out font-bold shadow-2xl",{header_docs_terminal:s.startsWith("/terminal"),"bg-gradient-to-r from-[#541c12] to-[rgba(84, 29, 19, 1)]":s.startsWith("/sdk"),"bg-gradient-to-r from-grey-800 to-purple-800":s.startsWith("/bot"),header_docs:!s.startsWith("/terminal")&&!s.startsWith("/sdk")&&!s.startsWith("/bot")}),to:r},a.createElement("div",{className:"absolute top-0 right-0 left-0 bottom-0 bg-gradient-to-t from-black to-transparent"}),a.createElement("p",{className:"py-2 font-bold text-lg my-0"},t,""),c?a.createElement("p",{className:"text-grey-200 text-xs mt-2 mb-0"},c):null)}},79607:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(87462),a=(r(67294),r(3905)),o=r(62872);const i={},c="Covid",l={unversionedId:"terminal/reference/alt/covid/index",id:"terminal/reference/alt/covid/index",title:"Covid",description:"<ReferenceCard",source:"@site/content/terminal/reference/alt/covid/index.mdx",sourceDirName:"terminal/reference/alt/covid",slug:"/terminal/reference/alt/covid/",permalink:"/terminal/reference/alt/covid/",draft:!1,editUrl:"https://github.com/OpenBB-finance/OpenBBTerminal/edit/main/website/content/terminal/reference/alt/covid/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"askobb",permalink:"/terminal/reference/alt/askobb"},next:{title:"askobb",permalink:"/terminal/reference/alt/covid/askobb"}},s={},d=[],m={toc:d},p="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"covid"},"Covid"),(0,a.kt)("ul",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 -ml-6"},(0,a.kt)(o.Z,{title:"askobb",description:"Accept input as a string and return the most appropriate Terminal command",url:"/terminal/reference/alt/covid/askobb",command:"true",mdxType:"ReferenceCard"}),(0,a.kt)(o.Z,{title:"cases",description:"Show historical cases for country.",url:"/terminal/reference/alt/covid/cases",command:"true",mdxType:"ReferenceCard"}),(0,a.kt)(o.Z,{title:"country",description:"Select a country to look at data for.",url:"/terminal/reference/alt/covid/country",command:"true",mdxType:"ReferenceCard"}),(0,a.kt)(o.Z,{title:"deaths",description:"Show historical deaths by country.",url:"/terminal/reference/alt/covid/deaths",command:"true",mdxType:"ReferenceCard"}),(0,a.kt)(o.Z,{title:"ov",description:"Show historical cases and deaths by country.",url:"/terminal/reference/alt/covid/ov",command:"true",mdxType:"ReferenceCard"}),(0,a.kt)(o.Z,{title:"rates",description:"Show historical death/cases rates for a country.",url:"/terminal/reference/alt/covid/rates",command:"true",mdxType:"ReferenceCard"}),(0,a.kt)(o.Z,{title:"slopes",description:"Show countries with highest slopes.",url:"/terminal/reference/alt/covid/slopes",command:"true",mdxType:"ReferenceCard"})))}u.isMDXComponent=!0}}]);